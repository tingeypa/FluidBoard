{"version":3,"file":"static/js/main.2b252150.js","mappings":"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AAW,QAAQ,SAAS,OAAO,SAAS,SAAS,WAAW,UAAU,UAAU,aAAa,WAAW,QAAQ,OAAO,QAAQ,OAAO,QAAQ,QAAQ,cAAc,QAAQ,OAAO,QAAQ,OAAO,SAAS,SAAS,SAAS,QAAQ,OAAO,QAAQ,UAAU,OAAO,SAAS,WAAW,WAAW,SAAS,OAAO,SAAS,OAAO,QAAQ,QAAQ,SAAS,UAAU,SAAS,YAAY,QAAQ,SAAS,SAAS,SAAS,UAAU,QAAQ,WAAW,OAAO,QAAQ,OAAO,SAAS,UAAU,SAAS,OAAO,QAAQ,UAAU,UAAU,UAAU,QAAQ,QAAQ,UAAU,YAAY,OAAO,UAAU,QAAQ,WAAW,UAAU,UAAU,MAAM,QAAQ,QAAQ,QAAQ,MAAM,QAAQ,OAAO,OAAO,SAAS,QAAQ,QAAQ,SAAS,UAAU,QAAQ,MAAM,MAAM,OAAO,SAAS,QAAQ,QAAQ,SAAS,SAAS,OAAO,OAAO,WAAW,UAAU,OAAO,MAAM,OAAO,OAAO,QAAQ,WAAW,cAAc,UAAU,QAAQ,SAAS,SAAS,OAAO,QAAQ,QAAQ,UAAU,QAAQ,SAAS,OAAO,YAAY,YAAY,OAAO,YAAY,OAAO,OAAO,SAAS,OAAO,OAAO,SAAS,QAAQ,SAAS,SAAS,WAAW,UAAU,UAAU,OAAO,UAAU,aAAa,QAAQ,WAAW,OAAO,SAAS,WAAW,SAAS,UAAU,SAAS,QAAQ,OAAO,OAAO,QAAQ,QAAQ,SAAS,SAAS,OAAO,QAAQ,SAAS,OAAO,SAAS,SAAS,QAAQ,UAAU,QAAQ,SAAS,SAAS,QAAQ,OAAO,QAAQ,OAAO,OAAO,OAAO,OAAO,OAAO,QAAQ,QAAQ,SAAS,OAAO,OAAO,MAAM,WAAW,QAAQ,SAAS,OAAO,QAAQ,QAAQ,OAAO,OAAO,QAAQ,UAAU,YAAY,OAAO,YAAY,UAAU,OAAO,UAAU,UAAU,OAAO,WAAW,UAAU,SAAS,WAAW,QAAQ,MAAM,OAAO,UAAU,QAAQ,SAAS,SAAS,QAAQ,QAAQ,SAAS,SAAS,SAAS,OAAO,OAAO,OAAO,QAAQ,UAAU,QAAQ,QAAQ,YAAY,UAAU,QAAQ,SAAS,OAAO,QAAQ,QAAQ,SAAS,OAAO,UAAU,UAAU,OAAO,OAAO,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UAAU,QAAQ,SAAS,UAAU,MAAM,UAAU,UAAU,UAAU,UAAU,OAAO,OAAO,OAAO,QAAQ,UAAU,QAAQ,QAAQ,OAAO,OAAO,SAAS,OAAO,UAAU,QAAQ,QAAQ,QAAQ,OAAO,QAAQ,YAAY,UAAU,QAAQ,QAAQ,OAAO,MAAM,SAAS,QAAQ,UAAU,SAAS,QAAQ,QAAQ,SAAS,SAAS,OAAO,QAAQ,QAAQ,OAAO,MAAM,QAAQ,QAAQ,OAAO,aAAa,OAAO,SAAS,SAAS,MAAM,QAAQ,QAAQ,MAAM,OAAO,QAAQ,QAAQ,MAAM,QAAQ,MAAM,OAAO,OAAO,UAAU,UAAU,OAAO,WAAW,UAAU,SAAS,WAAW,SAAS,SAAS,OAAO,QAAQ,OAAO,QAAQ,UAAU,QAAQ,OAAO,QAAQ,SAAS,OAAO,OAAO,UAAU,SAAS,SAAS,aAAa,SAAS,QAAQ,QAAQ,OAAO,OAAO,SAAS,SAAS,SAAS,SAAS,SAAS,UAAU,WAAW,QAAQ,SAAS,QAAQ,YAAY,UAAU,OAAO,UAAU,OAAO,OAAO,QAAQ,QAAQ,QAAQ,MAAM,SAAS,SAAS,OAAO,QAAQ,MAAM,QAAQ,UAAU,OAAO,SAAS,UAAU,QAAQ,QAAQ,OAAO,QAAQ,OAAO,OAAO,QAAQ,OAAO,OAAO,SAAS,SAAS,QAAQ,OAAO,OAAO,OAAO,QAAQ,QAAQ,OAAO,MAAM,QAAQ,SAAS,QAAQ,SAAS,QAAQ,SAAS,QAAQ,QAAQ,SAAS,QAAQ,QAAQ,UAAU,MAAM,SAAS,QAAQ,UAAU,QAAQ,OAAO,MAAM,SAAS,WAAW,OAAO,SAAS,QAAQ,UAAU,OAAO,UAAU,OAAO,QAAQ,MAAM,QAAQ,QAAQ,OAAO,cAAc,QAAQ,SAAS,QAAQ,SAAS,UAAU,QAAQ,OAAO,QAAQ,SAAS,SAAS,MAAM,SAAS,OAAO,OAAO,SAAS,QAAQ,MAAM,QAAQ,QAAQ,SAAS,MAAM,SAAS,OAAO,QAAQ,SAAS,SAAS,SAAS,QAAQ,QAAQ,OAAO,QAAQ,MAAM,MAAM,MAAM,QAAQ,SAAS,OAAO,OAAO,QAAQ,SAAS,QAAQ,OAAO,QAAQ,OAAO,QAAQ,OAAO,QAAQ,QAAQ,MAAM,OAAO,OAAO,OAAO,OAAO,QAAQ,OAAO,OAAO,QAAQ,SAAS,UAAU,QAAQ,OAAO,OAAO,OAAO,OAAO,OAAO,SAAS,QAAQ,OAAO,SAAS,QAAQ,SAAS,U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","sources":["../node_modules/@fluidframework/container-runtime-definitions/src/containerRuntime.ts","../node_modules/@fluidframework/container-runtime-definitions/src/index.ts","../node_modules/@fluidframework/runtime-definitions/src/dataStoreContext.ts","../node_modules/@fluidframework/runtime-definitions/src/dataStoreFactory.ts","../node_modules/@fluidframework/runtime-definitions/src/dataStoreRegistry.ts","../node_modules/@fluidframework/runtime-definitions/src/garbageCollection.ts","../node_modules/@fluidframework/runtime-definitions/src/index.ts","../node_modules/@fluidframework/runtime-definitions/src/summary.ts","../node_modules/abort-controller/browser.js","../node_modules/axios/index.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/cancel/Cancel.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/core/createError.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/enhanceError.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/defaults/index.js","../node_modules/axios/lib/defaults/transitional.js","../node_modules/axios/lib/env/data.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/utils.js","../node_modules/base64-js/index.js","../node_modules/cross-fetch/dist/browser-ponyfill.js","../node_modules/debug/src/browser.js","../node_modules/debug/src/common.js","../node_modules/double-ended-queue/js/deque.js","../node_modules/events/events.js","../node_modules/json-stringify-safe/stringify.js","../node_modules/jsrsasign/lib/jsrsasign.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_Map.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/_apply.js","../node_modules/lodash/_arrayEach.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_assignMergeValue.js","../node_modules/lodash/_assignValue.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_baseAssign.js","../node_modules/lodash/_baseAssignIn.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_baseClone.js","../node_modules/lodash/_baseCreate.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/_baseIsMap.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_baseIsSet.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_baseKeysIn.js","../node_modules/lodash/_baseMerge.js","../node_modules/lodash/_baseMergeDeep.js","../node_modules/lodash/_baseRest.js","../node_modules/lodash/_baseSetToString.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_cloneArrayBuffer.js","../node_modules/lodash/_cloneBuffer.js","../node_modules/lodash/_cloneDataView.js","../node_modules/lodash/_cloneRegExp.js","../node_modules/lodash/_cloneSymbol.js","../node_modules/lodash/_cloneTypedArray.js","../node_modules/lodash/_copyArray.js","../node_modules/lodash/_copyObject.js","../node_modules/lodash/_copySymbols.js","../node_modules/lodash/_copySymbolsIn.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_createAssigner.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_getAllKeysIn.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_getPrototype.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_getSymbolsIn.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_initCloneArray.js","../node_modules/lodash/_initCloneByTag.js","../node_modules/lodash/_initCloneObject.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/_isIterateeCall.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_nativeKeysIn.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_overRest.js","../node_modules/lodash/_root.js","../node_modules/lodash/_safeGet.js","../node_modules/lodash/_setToString.js","../node_modules/lodash/_shortOut.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/cloneDeep.js","../node_modules/lodash/constant.js","../node_modules/lodash/eq.js","../node_modules/lodash/identity.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/isArrayLikeObject.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/isLength.js","../node_modules/lodash/isMap.js","../node_modules/lodash/isObject.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/isPlainObject.js","../node_modules/lodash/isSet.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/keys.js","../node_modules/lodash/keysIn.js","../node_modules/lodash/merge.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/toPlainObject.js","../node_modules/ms/index.js","../node_modules/path-browserify/index.js","../node_modules/querystring/decode.js","../node_modules/querystring/encode.js","../node_modules/querystring/index.js","../node_modules/querystringify/index.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/requires-port/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/sillyname/index.js","../node_modules/url-parse/index.js","../node_modules/url/node_modules/punycode/punycode.js","../node_modules/url/node_modules/querystring/decode.js","../node_modules/url/node_modules/querystring/encode.js","../node_modules/url/node_modules/querystring/index.js","../node_modules/url/url.js","../node_modules/url/util.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/node module decorator","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/@fluidframework/container-definitions/src/loader.ts","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@fluidframework/common-utils/src/lazy.ts","../node_modules/@fluidframework/telemetry-utils/src/config.ts","../node_modules/@fluidframework/common-utils/src/performanceBrowser.ts","../node_modules/@fluidframework/common-utils/src/logger.ts","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/@fluidframework/telemetry-utils/src/fluidErrorBase.ts","../node_modules/@fluidframework/telemetry-utils/src/errorLogging.ts","../node_modules/@fluidframework/telemetry-utils/src/logger.ts","../node_modules/@fluidframework/telemetry-utils/src/debugLogger.ts","../node_modules/@fluidframework/driver-utils/src/fluidResolvedUrl.ts","../node_modules/@fluidframework/driver-utils/src/multiUrlResolver.ts","../node_modules/@fluidframework/container-definitions/src/runtime.ts","../node_modules/@fluidframework/driver-utils/src/multiDocumentServiceFactory.ts","../node_modules/@fluidframework/common-utils/src/assert.ts","../node_modules/@fluidframework/common-utils/src/unreachable.ts","../node_modules/@fluidframework/container-definitions/src/error.ts","../node_modules/@fluidframework/container-definitions/src/fluidPackage.ts","../node_modules/@fluidframework/container-utils/src/error.ts","../node_modules/@fluidframework/protocol-definitions/src/summary.ts","../node_modules/@fluidframework/driver-utils/src/summaryForCreateNew.ts","../node_modules/@fluidframework/common-utils/src/delay.ts","../node_modules/@fluidframework/driver-definitions/src/driverError.ts","../node_modules/@fluidframework/driver-utils/src/network.ts","../node_modules/@fluidframework/driver-utils/src/packageVersion.ts","../node_modules/@fluidframework/driver-utils/src/runWithRetry.ts","../node_modules/@fluidframework/common-utils/src/bufferBrowser.ts","../node_modules/@fluidframework/protocol-definitions/src/protocol.ts","../node_modules/@fluidframework/driver-utils/src/messageRecognition.ts","../node_modules/@fluidframework/driver-utils/src/readAndParse.ts","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@fluidframework/common-utils/src/typedEventEmitter.ts","../node_modules/@fluidframework/protocol-base/src/quorum.ts","../node_modules/@fluidframework/protocol-base/src/protocol.ts","../node_modules/@fluidframework/telemetry-utils/src/events.ts","../node_modules/@fluidframework/telemetry-utils/src/eventEmitterWithErrorHandling.ts","../node_modules/@fluidframework/container-loader/src/contracts.ts","../node_modules/@fluidframework/container-loader/src/audience.ts","../node_modules/@fluidframework/common-utils/src/promises.ts","../node_modules/@fluidframework/container-loader/src/containerContext.ts","../node_modules/@fluidframework/container-loader/src/deltaQueue.ts","../node_modules/@fluidframework/container-loader/src/deltaManager.ts","../node_modules/@fluidframework/telemetry-utils/src/utils.ts","../node_modules/@fluidframework/common-utils/src/eventForwarder.ts","../node_modules/@fluidframework/container-loader/src/deltaManagerProxy.ts","../node_modules/@fluidframework/container-loader/src/connectionState.ts","../node_modules/@fluidframework/container-loader/src/packageVersion.ts","../node_modules/@fluidframework/common-utils/src/timer.ts","../node_modules/@fluidframework/container-loader/src/connectionStateHandler.ts","../node_modules/@fluidframework/container-loader/src/retriableDocumentStorageService.ts","../node_modules/@fluidframework/container-loader/src/protocolTreeDocumentStorageService.ts","../node_modules/@fluidframework/container-loader/src/containerStorageAdapter.ts","../node_modules/@fluidframework/container-loader/src/utils.ts","../node_modules/@fluidframework/common-utils/src/bufferShared.ts","../node_modules/@fluidframework/common-utils/src/disposal.ts","../node_modules/@fluidframework/container-loader/src/quorum.ts","../node_modules/@fluidframework/container-loader/src/collabWindowTracker.ts","../node_modules/@fluidframework/protocol-definitions/src/scopes.ts","../node_modules/@fluidframework/driver-utils/src/networkUtils.ts","../node_modules/@fluidframework/container-loader/src/connectionManager.ts","../node_modules/@fluidframework/container-loader/src/container.ts","../node_modules/@fluidframework/container-loader/src/loader.ts","../node_modules/@fluidframework/driver-definitions/src/storage.ts","../node_modules/@fluidframework/driver-utils/src/rateLimiter.ts","../node_modules/@fluidframework/common-utils/src/base64Encoding.ts","../node_modules/@fluidframework/server-services-client/src/debug.ts","../node_modules/@fluidframework/server-services-client/src/packageVersion.ts","../node_modules/@fluidframework/server-services-client/src/error.ts","../node_modules/@fluidframework/server-services-client/src/constants.ts","../node_modules/@fluidframework/server-services-client/src/restWrapper.ts","../node_modules/@fluidframework/server-services-client/src/historian.ts","../node_modules/@fluidframework/protocol-definitions/src/storage.ts","../node_modules/@fluidframework/protocol-base/src/blobs.ts","../node_modules/@fluidframework/server-services-client/src/gitManager.ts","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js","../node_modules/@fluidframework/driver-utils/src/parallelRequests.ts","../node_modules/@fluidframework/routerlicious-driver/src/deltaStorageService.ts","../node_modules/@fluidframework/driver-utils/src/documentStorageServiceProxy.ts","../node_modules/@fluidframework/driver-utils/src/prefetchDocumentStorageService.ts","../node_modules/@fluidframework/driver-utils/src/treeUtils.ts","../node_modules/@fluidframework/server-services-client/src/storageUtils.ts","../node_modules/@fluidframework/server-services-client/src/wholeSummaryUploadManager.ts","../node_modules/@fluidframework/routerlicious-driver/src/cache.ts","../node_modules/@fluidframework/routerlicious-driver/src/wholeSummaryDocumentStorageService.ts","../node_modules/@fluidframework/common-utils/src/hashFileBrowser.ts","../node_modules/@fluidframework/server-services-client/src/summaryTreeUploadManager.ts","../node_modules/@fluidframework/routerlicious-driver/src/retriableGitManager.ts","../node_modules/@fluidframework/routerlicious-driver/src/shreddedSummaryDocumentStorageService.ts","../node_modules/@fluidframework/routerlicious-driver/src/documentStorageService.ts","../node_modules/@fluidframework/driver-base/src/packageVersion.ts","../node_modules/@fluidframework/driver-base/src/documentDeltaConnection.ts","../node_modules/@fluidframework/routerlicious-driver/src/packageVersion.ts","../node_modules/@fluidframework/routerlicious-driver/src/errorUtils.ts","../node_modules/@fluidframework/routerlicious-driver/src/documentDeltaConnection.ts","../node_modules/@fluidframework/server-services-client/src/restLessClient.ts","../node_modules/@fluidframework/routerlicious-driver/src/nullBlobStorageService.ts","../node_modules/@fluidframework/routerlicious-driver/src/restWrapper.ts","../node_modules/@fluidframework/routerlicious-driver/src/documentService.ts","../node_modules/@fluidframework/routerlicious-driver/src/createNewUtils.ts","../node_modules/@fluidframework/driver-definitions/src/urlResolver.ts","../node_modules/@fluidframework/routerlicious-driver/src/urlUtils.ts","../node_modules/@fluidframework/routerlicious-driver/src/documentServiceFactory.ts","../node_modules/@fluidframework/tinylicious-driver/src/insecureTinyliciousUrlResolver.ts","../node_modules/@fluidframework/server-services-client/src/generateNames.ts","../node_modules/@fluidframework/tinylicious-driver/src/insecureTinyliciousTokenProvider.ts","../node_modules/@fluidframework/runtime-utils/src/dataStoreHelpers.ts","../node_modules/@fluidframework/fluid-static/src/fluidContainer.ts","../node_modules/@fluidframework/shared-object-base/src/valueType.ts","../node_modules/@fluidframework/runtime-utils/src/dataStoreHandleContextUtils.ts","../node_modules/@fluidframework/common-utils/src/trace.ts","../node_modules/@fluidframework/garbage-collector/src/utils.ts","../node_modules/@fluidframework/runtime-utils/src/summaryUtils.ts","../node_modules/@fluidframework/runtime-utils/src/summarizerNode/summarizerNodeUtils.ts","../node_modules/@fluidframework/runtime-utils/src/summarizerNode/summarizerNode.ts","../node_modules/@fluidframework/runtime-utils/src/summarizerNode/summarizerNodeWithGc.ts","../node_modules/@fluidframework/runtime-utils/src/requestParser.ts","../node_modules/@fluidframework/runtime-utils/src/utils.ts","../node_modules/@fluidframework/container-runtime/src/containerHandleContext.ts","../node_modules/@fluidframework/container-runtime/src/dataStoreRegistry.ts","../node_modules/@fluidframework/container-runtime/src/summarizerClientElection.ts","../node_modules/@fluidframework/datastore/src/fluidHandle.ts","../node_modules/@fluidframework/container-runtime/src/summarizerHandle.ts","../node_modules/@fluidframework/container-runtime/src/summarizerHeuristics.ts","../node_modules/@fluidframework/container-runtime/src/summaryGenerator.ts","../node_modules/@fluidframework/container-runtime/src/summaryManager.ts","../node_modules/@fluidframework/container-runtime/src/runningSummarizer.ts","../node_modules/@fluidframework/container-runtime/src/summarizer.ts","../node_modules/@fluidframework/container-runtime/src/deltaScheduler.ts","../node_modules/@fluidframework/container-runtime/src/connectionTelemetry.ts","../node_modules/@fluidframework/container-runtime/src/pendingStateManager.ts","../node_modules/@fluidframework/container-runtime/src/packageVersion.ts","../node_modules/@fluidframework/container-runtime/src/blobManager.ts","../node_modules/@fluidframework/driver-utils/src/buildSnapshotTree.ts","../node_modules/@fluidframework/driver-utils/src/blobCacheStorageService.ts","../node_modules/@fluidframework/container-runtime/src/dataStoreContexts.ts","../node_modules/@fluidframework/telemetry-utils/src/thresholdCounter.ts","../node_modules/@fluidframework/garbage-collector/src/garbageCollector.ts","../node_modules/@fluidframework/container-runtime/src/garbageCollection.ts","../node_modules/@fluidframework/container-runtime/src/summaryFormat.ts","../node_modules/@fluidframework/container-runtime/src/dataStoreContext.ts","../node_modules/@fluidframework/container-runtime/src/dataStore.ts","../node_modules/@fluidframework/container-runtime/src/summaryCollection.ts","../node_modules/@fluidframework/container-runtime/src/dataStores.ts","../node_modules/@fluidframework/container-runtime/src/containerRuntime.ts","../node_modules/@fluidframework/container-runtime/src/orderedClientElection.ts","../node_modules/@fluidframework/container-runtime/src/throttler.ts","../node_modules/@fluidframework/container-runtime/src/runWhileConnectedCoordinator.ts","../node_modules/@fluidframework/container-runtime/src/batchTracker.ts","../node_modules/@fluidframework/container-runtime/src/serializedSnapshotStorage.ts","../node_modules/@fluidframework/container-runtime/src/opTelemetry.ts","../node_modules/@fluidframework/shared-object-base/src/remoteObjectHandle.ts","../node_modules/@fluidframework/shared-object-base/src/serializer.ts","../node_modules/@fluidframework/shared-object-base/src/handle.ts","../node_modules/@fluidframework/shared-object-base/src/summarySerializer.ts","../node_modules/@fluidframework/shared-object-base/src/sharedObject.ts","../node_modules/@fluidframework/map/src/localValues.ts","../node_modules/@fluidframework/shared-object-base/src/utils.ts","../node_modules/@fluidframework/map/src/packageVersion.ts","../node_modules/@fluidframework/map/src/directory.ts","../node_modules/@fluidframework/map/src/mapKernel.ts","../node_modules/@fluidframework/map/src/map.ts","../node_modules/@fluidframework/request-handler/src/requestHandlers.ts","../node_modules/@fluidframework/aqueduct/src/container-services/containerServices.ts","../node_modules/@fluidframework/aqueduct/src/request-handlers/requestHandlers.ts","../node_modules/@fluidframework/aqueduct/src/data-objects/pureDataObject.ts","../node_modules/@fluidframework/aqueduct/src/data-objects/dataObject.ts","../node_modules/@fluidframework/datastore/src/channelDeltaConnection.ts","../node_modules/@fluidframework/runtime-utils/src/objectstorageutils.ts","../node_modules/@fluidframework/datastore/src/channelStorageService.ts","../node_modules/@fluidframework/datastore/src/channelContext.ts","../node_modules/@fluidframework/datastore/src/localChannelContext.ts","../node_modules/@fluidframework/datastore/src/dataStoreRuntime.ts","../node_modules/@fluidframework/datastore/src/remoteChannelContext.ts","../node_modules/@fluidframework/synthesize/src/IFluidDependencySynthesizer.ts","../node_modules/@fluidframework/synthesize/src/dependencyContainer.ts","../node_modules/@fluidframework/aqueduct/src/data-object-factories/pureDataObjectFactory.ts","../node_modules/@fluidframework/aqueduct/src/data-object-factories/dataObjectFactory.ts","../node_modules/@fluidframework/request-handler/src/runtimeRequestHandlerBuilder.ts","../node_modules/@fluidframework/runtime-utils/src/runtimeFactoryHelper.ts","../node_modules/@fluidframework/aqueduct/src/container-runtime-factories/baseContainerRuntimeFactory.ts","../node_modules/@fluidframework/fluid-static/src/utils.ts","../node_modules/@fluidframework/fluid-static/src/rootDataObject.ts","../node_modules/@fluidframework/tinylicious-client/src/TinyliciousAudience.ts","../node_modules/@fluidframework/fluid-static/src/serviceAudience.ts","../node_modules/@fluidframework/tinylicious-client/src/TinyliciousClient.ts","logo.svg","App.js","reportWebVitals.js","index.js"],"sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IEventProvider } from \"@fluidframework/common-definitions\";\nimport {\n    AttachState,\n    IDeltaManager,\n    ILoaderOptions,\n} from \"@fluidframework/container-definitions\";\nimport {\n    IRequest,\n    IResponse,\n    IFluidRouter,\n    FluidObject,\n} from \"@fluidframework/core-interfaces\";\nimport { IDocumentStorageService } from \"@fluidframework/driver-definitions\";\nimport {\n    IClientDetails,\n    IDocumentMessage,\n    IHelpMessage,\n    ISequencedDocumentMessage,\n} from \"@fluidframework/protocol-definitions\";\nimport {\n    FlushMode,\n    IContainerRuntimeBase,\n    IContainerRuntimeBaseEvents,\n    IDataStore,\n    IFluidDataStoreContextDetached,\n    IProvideFluidDataStoreRegistry,\n} from \"@fluidframework/runtime-definitions\";\n\n/**\n * @deprecated - This will be removed once https://github.com/microsoft/FluidFramework/issues/9127 is fixed.\n */\nexport interface IDataStoreWithBindToContext_Deprecated extends IDataStore {\n    fluidDataStoreChannel?: { bindToContext?(): void; };\n}\n\n/**\n * @deprecated - This will be removed in a later release.\n */\nexport const IContainerRuntime: keyof IProvideContainerRuntime = \"IContainerRuntime\";\n\n/**\n * @deprecated - This will be removed in a later release.\n */\nexport interface IProvideContainerRuntime {\n    /**\n     * @deprecated - This will be removed in a later release.\n     */\n    IContainerRuntime: IContainerRuntime;\n}\n\nexport interface IContainerRuntimeEvents extends IContainerRuntimeBaseEvents {\n    (\n        event: \"dirty\" | \"disconnected\" | \"dispose\" | \"saved\" | \"attached\",\n        listener: () => void);\n    (event: \"connected\", listener: (clientId: string) => void);\n    (event: \"localHelp\", listener: (message: IHelpMessage) => void);\n}\n\nexport type IContainerRuntimeBaseWithCombinedEvents =\n    IContainerRuntimeBase & IEventProvider<IContainerRuntimeEvents>;\n\n/*\n * Represents the runtime of the container. Contains helper functions/state of the container.\n */\nexport interface IContainerRuntime extends\n    IProvideContainerRuntime,\n    IProvideFluidDataStoreRegistry,\n    IContainerRuntimeBaseWithCombinedEvents {\n\n    readonly options: ILoaderOptions;\n    readonly clientId: string | undefined;\n    readonly clientDetails: IClientDetails;\n    readonly connected: boolean;\n    readonly deltaManager: IDeltaManager<ISequencedDocumentMessage, IDocumentMessage>;\n    readonly storage: IDocumentStorageService;\n    readonly flushMode: FlushMode;\n    readonly scope: FluidObject;\n    /**\n     * Indicates the attachment state of the container to a host service.\n     */\n    readonly attachState: AttachState;\n\n    /**\n     * Returns the runtime of the data store.\n     * @param id - Id supplied during creating the data store.\n     * @param wait - True if you want to wait for it.\n     */\n    getRootDataStore(id: string, wait?: boolean): Promise<IFluidRouter>;\n\n    /**\n     * Creates root data store in container. Such store is automatically bound to container, and thus is\n     * attached to storage when/if container is attached to storage. Such stores are never garbage collected\n     * and can be found / loaded by name.\n     * Majority of data stores in container should not be roots, and should be reachable (directly or indirectly)\n     * through one of the roots.\n     * @param pkg - Package name of the data store factory\n     * @param rootDataStoreId - data store ID. Must not contain slashes. IDs naming space is global in container.\n     * If collision on name occurs, it results in container corruption - loading this file after that will always\n     * result in error.\n     * @deprecated - will be removed in an upcoming release. See #9660.\n     */\n    createRootDataStore(pkg: string | string[], rootDataStoreId: string): Promise<IFluidRouter>;\n\n    /**\n     * Creates detached data store context. Data store initialization is considered compete\n     * only after context.attachRuntime() is called.\n     * @param pkg - package path\n     * @param rootDataStoreId - data store ID (unique name). Must not contain slashes.\n     */\n    createDetachedRootDataStore(pkg: Readonly<string[]>, rootDataStoreId: string): IFluidDataStoreContextDetached;\n\n    /**\n     * Returns true of document is dirty, i.e. there are some pending local changes that\n     * either were not sent out to delta stream or were not yet acknowledged.\n     */\n    readonly isDirty: boolean;\n\n    /**\n     * Flushes any ops currently being batched to the loader\n     * @deprecated - This will be removed in a later release. If a more manual flushing process is needed,\n     * move all usage to `IContainerRuntimeBase.orderSequentially` if possible.\n     */\n    flush(): void;\n\n    /**\n     * Get an absolute url for a provided container-relative request.\n     * Returns undefined if the container isn't attached to storage.\n     * @param relativeUrl - A relative request within the container\n     */\n    getAbsoluteUrl(relativeUrl: string): Promise<string | undefined>;\n\n    /**\n     * Resolves handle URI\n     * @param request - request to resolve\n     */\n    resolveHandle(request: IRequest): Promise<IResponse>;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport * from \"./containerRuntime\";\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITelemetryBaseLogger, IDisposable, IEvent, IEventProvider } from \"@fluidframework/common-definitions\";\nimport {\n    IFluidRouter,\n    IProvideFluidHandleContext,\n    IFluidHandle,\n    IRequest,\n    IResponse,\n    FluidObject,\n} from \"@fluidframework/core-interfaces\";\nimport {\n    IAudience,\n    IDeltaManager,\n    AttachState,\n    ILoaderOptions,\n} from \"@fluidframework/container-definitions\";\nimport { IDocumentStorageService } from \"@fluidframework/driver-definitions\";\nimport {\n    IClientDetails,\n    IDocumentMessage,\n    IQuorumClients,\n    ISequencedDocumentMessage,\n    ISnapshotTree,\n} from \"@fluidframework/protocol-definitions\";\nimport { IProvideFluidDataStoreFactory } from \"./dataStoreFactory\";\nimport { IProvideFluidDataStoreRegistry } from \"./dataStoreRegistry\";\nimport {\n    IGarbageCollectionData,\n    IGarbageCollectionDetailsBase,\n    IGarbageCollectionSummaryDetails,\n} from \"./garbageCollection\";\nimport { IInboundSignalMessage } from \"./protocol\";\nimport {\n    CreateChildSummarizerNodeParam,\n    ISummarizerNodeWithGC,\n    ISummaryTreeWithStats,\n    ITelemetryContext,\n    SummarizeInternalFn,\n} from \"./summary\";\n\n/**\n * Runtime flush mode handling\n */\nexport enum FlushMode {\n    /**\n     * In Immediate flush mode the runtime will immediately send all operations to the driver layer.\n     */\n    Immediate,\n\n    /**\n     * When in TurnBased flush mode the runtime will buffer operations in the current turn and send them as a single\n     * batch at the end of the turn. The flush call on the runtime can be used to force send the current batch.\n     */\n    TurnBased,\n}\n\n/**\n * This tells the visibility state of a Fluid object. It basically tracks whether the object is not visible, visible\n * locally within the container only or visible globally to all clients.\n */\nexport const VisibilityState = {\n    /** Indicates that the object is not visible. This is the state when an object is first created. */\n    NotVisible: \"NotVisible\",\n\n    /**\n     * Indicates that the object is visible locally within the container. This is the state when an object is attached\n     * to the container's graph but the container itself isn't globally visible. The object's state goes from not\n     * visible to locally visible.\n     */\n    LocallyVisible: \"LocallyVisible\",\n\n    /**\n     * Indicates that the object is visible globally to all clients. This is the state of an object in 2 scenarios:\n     * 1. It is attached to the container's graph when the container is globally visible. The object's state goes from\n     *    not visible to globally visible.\n     * 2. When a container becomes globally visible, all locally visible objects go from locally visible to globally\n     *    visible.\n     */\n    GloballyVisible: \"GloballyVisible\",\n};\nexport type VisibilityState = typeof VisibilityState[keyof typeof VisibilityState];\n\nexport interface IContainerRuntimeBaseEvents extends IEvent{\n    (event: \"batchBegin\" | \"op\", listener: (op: ISequencedDocumentMessage) => void);\n    (event: \"batchEnd\", listener: (error: any, op: ISequencedDocumentMessage) => void);\n    (event: \"signal\", listener: (message: IInboundSignalMessage, local: boolean) => void);\n}\n\n/**\n * Encapsulates the return codes of the aliasing API.\n *\n * 'Success' - the datastore has been successfully aliased. It can now be used.\n * 'Conflict' - there is already a datastore bound to the provided alias. To acquire a handle to it,\n * use the `IContainerRuntime.getRootDataStore` function. The current datastore should be discarded\n * and will be garbage collected. The current datastore cannot be aliased to a different value.\n * 'Aliasing' (deprecated) - this value is never returned.\n * 'AlreadyAliased' - the datastore has already been previously bound to another alias name.\n */\n export type AliasResult = \"Success\" | \"Conflict\" | \"Aliasing\" | \"AlreadyAliased\";\n\n/**\n * A fluid router with the capability of being assigned an alias\n */\n export interface IDataStore extends IFluidRouter {\n    /**\n     * Attempt to assign an alias to the datastore.\n     * If the operation succeeds, the datastore can be referenced\n     * by the supplied alias and will not be garbage collected.\n     *\n     * @param alias - Given alias for this datastore.\n     */\n    trySetAlias(alias: string): Promise<AliasResult>;\n}\n\n/**\n * A reduced set of functionality of IContainerRuntime that a data store context/data store runtime will need\n * TODO: this should be merged into IFluidDataStoreContext\n */\nexport interface IContainerRuntimeBase extends\n    IEventProvider<IContainerRuntimeBaseEvents>,\n    IProvideFluidHandleContext {\n\n    readonly logger: ITelemetryBaseLogger;\n    readonly clientDetails: IClientDetails;\n\n    /**\n     * Invokes the given callback and guarantees that all operations generated within the callback will be ordered\n     * sequentially. Total size of all messages must be less than maxOpSize.\n     */\n    orderSequentially(callback: () => void): void;\n\n    /**\n     * Sets the flush mode for operations on the document.\n     * @deprecated - Will be removed in 0.60. See #9480.\n     */\n    setFlushMode(mode: FlushMode): void;\n\n    /**\n     * Executes a request against the container runtime\n     */\n    request(request: IRequest): Promise<IResponse>;\n\n    /**\n     * Submits a container runtime level signal to be sent to other clients.\n     * @param type - Type of the signal.\n     * @param content - Content of the signal.\n     */\n    submitSignal(type: string, content: any): void;\n\n    /**\n     * @deprecated 0.16 Issue #1537, #3631\n     * @internal\n     */\n    _createDataStoreWithProps(\n        pkg: string | string[],\n        props?: any,\n        id?: string,\n        isRoot?: boolean,\n    ): Promise<IDataStore>;\n\n    /**\n     * Creates data store. Returns router of data store. Data store is not bound to container,\n     * store in such state is not persisted to storage (file). Storing a handle to this store\n     * (or any of its parts, like DDS) into already attached DDS (or non-attached DDS that will eventually\n     * gets attached to storage) will result in this store being attached to storage.\n     * @param pkg - Package name of the data store factory\n     */\n    createDataStore(pkg: string | string[]): Promise<IDataStore>;\n\n    /**\n     * Creates detached data store context. only after context.attachRuntime() is called,\n     * data store initialization is considered compete.\n     */\n    createDetachedDataStore(pkg: Readonly<string[]>): IFluidDataStoreContextDetached;\n\n    /**\n     * Get an absolute url for a provided container-relative request.\n     * Returns undefined if the container or data store isn't attached to storage.\n     * @param relativeUrl - A relative request within the container\n     */\n    getAbsoluteUrl(relativeUrl: string): Promise<string | undefined>;\n\n    uploadBlob(blob: ArrayBufferLike): Promise<IFluidHandle<ArrayBufferLike>>;\n\n    /**\n     * Returns the current quorum.\n     */\n    getQuorum(): IQuorumClients;\n\n    /**\n     * Returns the current audience.\n     */\n    getAudience(): IAudience;\n}\n\n/**\n * Minimal interface a data store runtime need to provide for IFluidDataStoreContext to bind to control\n *\n * Functionality include attach, snapshot, op/signal processing, request routes,\n * and connection state notifications\n */\nexport interface IFluidDataStoreChannel extends\n    IFluidRouter,\n    IDisposable {\n\n    readonly id: string;\n\n    /**\n     * Indicates the attachment state of the channel to a host service.\n     */\n    readonly attachState: AttachState;\n\n    readonly visibilityState?: VisibilityState;\n\n    /**\n     * @deprecated - This is an internal method that should not be exposed.\n     * Called to bind the runtime to the container.\n     * If the container is not attached to storage, then this would also be unknown to other clients.\n     */\n    bindToContext(): void;\n\n    /**\n     * @deprecated - This will be removed in favor of makeVisibleAndAttachGraph.\n     * Runs through the graph and attaches the bound handles. Then binds this runtime to the container.\n     */\n    attachGraph(): void;\n\n    /**\n     * Makes the data store channel visible in the container. Also, runs through its graph and attaches all\n     * bound handles that represent its dependencies in the container's graph.\n     */\n    makeVisibleAndAttachGraph?(): void;\n\n    /**\n     * Retrieves the summary used as part of the initial summary message\n     */\n    getAttachSummary(telemetryContext?: ITelemetryContext): ISummaryTreeWithStats;\n\n    /**\n     * Processes the op.\n     */\n    process(message: ISequencedDocumentMessage, local: boolean, localOpMetadata: unknown): void;\n\n    /**\n     * Processes the signal.\n     */\n    processSignal(message: any, local: boolean): void;\n\n    /**\n     * Generates a summary for the channel.\n     * Introduced with summarizerNode - will be required in a future release.\n     * @param fullTree - true to bypass optimizations and force a full summary tree.\n     * @param trackState - This tells whether we should track state from this summary.\n     * @param telemetryContext - summary data passed through the layers for telemetry purposes\n     */\n    summarize(\n        fullTree?: boolean,\n        trackState?: boolean,\n        telemetryContext?: ITelemetryContext,\n    ): Promise<ISummaryTreeWithStats>;\n\n    /**\n     * Returns the data used for garbage collection. This includes a list of GC nodes that represent this context\n     * including any of its children. Each node has a list of outbound routes to other GC nodes in the document.\n     * @param fullGC - true to bypass optimizations and force full generation of GC data.\n     */\n    getGCData(fullGC?: boolean): Promise<IGarbageCollectionData>;\n\n    /**\n     * After GC has run, called to notify this channel of routes that are used in it.\n     * @param usedRoutes - The routes that are used in this channel.\n     * @param gcTimestamp - The time when GC was run that generated these used routes. If any node becomes unreferenced\n     * as part of this GC run, this should be used to update the time when it happens.\n     */\n    updateUsedRoutes(usedRoutes: string[], gcTimestamp?: number): void;\n\n    /**\n     * Notifies this object about changes in the connection state.\n     * @param value - New connection state.\n     * @param clientId - ID of the client. It's old ID when in disconnected state and\n     * it's new client ID when we are connecting or connected.\n     */\n    setConnectionState(connected: boolean, clientId?: string);\n\n    /**\n     * Ask the DDS to resubmit a message. This could be because we reconnected and this message was not acked.\n     * @param type - The type of the original message.\n     * @param content - The content of the original message.\n     * @param localOpMetadata - The local metadata associated with the original message.\n     */\n    reSubmit(type: string, content: any, localOpMetadata: unknown);\n\n    applyStashedOp(content: any): Promise<unknown>;\n\n    /**\n     * Revert a local message.\n     * @param type - The type of the original message.\n     * @param content - The content of the original message.\n     * @param localOpMetadata - The local metadata associated with the original message.\n     */\n    rollback?(type: string, content: any, localOpMetadata: unknown): void;\n}\n\nexport type CreateChildSummarizerNodeFn = (\n    summarizeInternal: SummarizeInternalFn,\n    getGCDataFn: (fullGC?: boolean) => Promise<IGarbageCollectionData>,\n    getInitialGCSummaryDetailsFn: () => Promise<IGarbageCollectionSummaryDetails>,\n) => ISummarizerNodeWithGC;\n\nexport interface IFluidDataStoreContextEvents extends IEvent {\n    (event: \"attaching\" | \"attached\", listener: () => void);\n}\n\n/**\n * Represents the context for the data store. It is used by the data store runtime to\n * get information and call functionality to the container.\n */\nexport interface IFluidDataStoreContext extends\n    IEventProvider<IFluidDataStoreContextEvents>,\n    Partial<IProvideFluidDataStoreRegistry>,\n    IProvideFluidHandleContext {\n    readonly id: string;\n    /**\n     * A data store created by a client, is a local data store for that client. Also, when a detached container loads\n     * from a snapshot, all the data stores are treated as local data stores because at that stage the container\n     * still doesn't exists in storage and so the data store couldn't have been created by any other client.\n     * Value of this never changes even after the data store is attached.\n     * As implementer of data store runtime, you can use this property to check that this data store belongs to this\n     * client and hence implement any scenario based on that.\n     */\n    readonly isLocalDataStore: boolean;\n    /**\n     * The package path of the data store as per the package factory.\n     */\n    readonly packagePath: readonly string[];\n    readonly options: ILoaderOptions;\n    readonly clientId: string | undefined;\n    readonly connected: boolean;\n    readonly deltaManager: IDeltaManager<ISequencedDocumentMessage, IDocumentMessage>;\n    readonly storage: IDocumentStorageService;\n    readonly baseSnapshot: ISnapshotTree | undefined;\n    readonly logger: ITelemetryBaseLogger;\n    readonly clientDetails: IClientDetails;\n    /**\n     * Indicates the attachment state of the data store to a host service.\n     */\n    readonly attachState: AttachState;\n\n    readonly containerRuntime: IContainerRuntimeBase;\n\n    /**\n     * @deprecated 0.16 Issue #1635, #3631\n     */\n    readonly createProps?: any;\n\n    /**\n     * Ambient services provided with the context\n     */\n    readonly scope: FluidObject;\n\n    /**\n     * Returns the current quorum.\n     */\n    getQuorum(): IQuorumClients;\n\n    /**\n     * Returns the current audience.\n     */\n    getAudience(): IAudience;\n\n    /**\n     * Submits the message to be sent to other clients.\n     * @param type - Type of the message.\n     * @param content - Content of the message.\n     * @param localOpMetadata - The local metadata associated with the message. This is kept locally and not sent to\n     * the server. This will be sent back when this message is received back from the server. This is also sent if\n     * we are asked to resubmit the message.\n     */\n    submitMessage(type: string, content: any, localOpMetadata: unknown): void;\n\n    /**\n     * Submits the signal to be sent to other clients.\n     * @param type - Type of the signal.\n     * @param content - Content of the signal.\n     */\n    submitSignal(type: string, content: any): void;\n\n    /**\n     * @deprecated - To be removed in favor of makeVisible.\n     * Register the runtime to the container\n     */\n    bindToContext(): void;\n\n    /**\n     * Called to make the data store locally visible in the container. This happens automatically for root data stores\n     * when they are marked as root. For non-root data stores, this happens when their handle is added to a visible DDS.\n     */\n    makeLocallyVisible?(): void;\n\n    /**\n     * Call by IFluidDataStoreChannel, indicates that a channel is dirty and needs to be part of the summary.\n     * @param address - The address of the channel that is dirty.\n     */\n    setChannelDirty(address: string): void;\n\n    /**\n     * Get an absolute url to the container based on the provided relativeUrl.\n     * Returns undefined if the container or data store isn't attached to storage.\n     * @param relativeUrl - A relative request within the container\n     */\n    getAbsoluteUrl(relativeUrl: string): Promise<string | undefined>;\n\n    getCreateChildSummarizerNodeFn(\n        /** Initial id or path part of this node */\n        id: string,\n        /**\n         * Information needed to create the node.\n         * If it is from a base summary, it will assert that a summary has been seen.\n         * Attach information if it is created from an attach op.\n         * If it is local, it will throw unsupported errors on calls to summarize.\n         */\n        createParam: CreateChildSummarizerNodeParam,\n    ): CreateChildSummarizerNodeFn;\n\n    uploadBlob(blob: ArrayBufferLike): Promise<IFluidHandle<ArrayBufferLike>>;\n\n    /**\n     * @deprecated - Renamed to getBaseGCDetails.\n     */\n    getInitialGCSummaryDetails(): Promise<IGarbageCollectionSummaryDetails>;\n\n    /**\n     * Returns the GC details in the initial summary of this data store. This is used to initialize the data store\n     * and its children with the GC details from the previous summary.\n     */\n    getBaseGCDetails?(): Promise<IGarbageCollectionDetailsBase>;\n\n    /**\n     * Called when a new outbound reference is added to another node. This is used by garbage collection to identify\n     * all references added in the system.\n     * @param srcHandle - The handle of the node that added the reference.\n     * @param outboundHandle - The handle of the outbound node that is referenced.\n     */\n    addedGCOutboundReference?(srcHandle: IFluidHandle, outboundHandle: IFluidHandle): void;\n}\n\nexport interface IFluidDataStoreContextDetached extends IFluidDataStoreContext {\n    /**\n     * Binds a runtime to the context.\n     */\n    attachRuntime(\n        factory: IProvideFluidDataStoreFactory,\n        dataStoreRuntime: IFluidDataStoreChannel,\n    ): Promise<void>;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IFluidDataStoreContext, IFluidDataStoreChannel } from \"./dataStoreContext\";\n\nexport const IFluidDataStoreFactory: keyof IProvideFluidDataStoreFactory = \"IFluidDataStoreFactory\";\n\nexport interface IProvideFluidDataStoreFactory {\n    readonly IFluidDataStoreFactory: IFluidDataStoreFactory;\n}\n\n/**\n * IFluidDataStoreFactory create data stores.  It is associated with an identifier (its `type` member)\n * and usually provided to consumers using this mapping through a data store registry.\n */\nexport interface IFluidDataStoreFactory extends IProvideFluidDataStoreFactory {\n    /**\n     * String that uniquely identifies the type of data store created by this factory.\n     */\n    type: string;\n\n    /**\n     * Generates runtime for the data store from the data store context. Once created should be bound to the context.\n     * @param context - Context for the data store.\n     * @param existing - If instantiating from an existing file.\n     */\n    instantiateDataStore(context: IFluidDataStoreContext, existing: boolean): Promise<IFluidDataStoreChannel>;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IProvideFluidDataStoreFactory } from \"./dataStoreFactory\";\n\n/**\n * A single registry entry that may be used to create data stores\n* It has to have either factory or registry, or both.\n */\nexport type FluidDataStoreRegistryEntry =\n    Readonly<Partial<IProvideFluidDataStoreRegistry & IProvideFluidDataStoreFactory>>;\n/**\n * An associated pair of an identifier and registry entry.  Registry entries\n * may be dynamically loaded.\n */\nexport type NamedFluidDataStoreRegistryEntry = [string, Promise<FluidDataStoreRegistryEntry>];\n/**\n * An iterable identifier/registry entry pair list\n */\nexport type NamedFluidDataStoreRegistryEntries = Iterable<NamedFluidDataStoreRegistryEntry>;\n\nexport const IFluidDataStoreRegistry: keyof IProvideFluidDataStoreRegistry = \"IFluidDataStoreRegistry\";\n\nexport interface IProvideFluidDataStoreRegistry {\n    readonly IFluidDataStoreRegistry: IFluidDataStoreRegistry;\n}\n\n/**\n * An association of identifiers to data store registry entries, where the\n * entries can be used to create data stores.\n */\nexport interface IFluidDataStoreRegistry extends IProvideFluidDataStoreRegistry {\n    get(name: string): Promise<FluidDataStoreRegistryEntry | undefined>;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\n// The key to use for storing garbage collection blob in summary.\nexport const gcBlobKey = \"gc\";\n\n/**\n * Garbage collection data returned by nodes in a Container.\n * Used for running GC in the Container.\n */\nexport interface IGarbageCollectionData {\n    /** The GC nodes of a Fluid object in the Container. Each node has an id and a set of routes to other GC nodes. */\n    gcNodes: { [ id: string ]: string[]; };\n}\n\n/**\n * GC details provided to each node during creation.\n */\nexport interface IGarbageCollectionDetailsBase {\n    /** A list of routes to Fluid objects that are used in this node. */\n    usedRoutes?: string[];\n    /** The GC data of this node. */\n    gcData?: IGarbageCollectionData;\n    /** If this node is unreferenced, the time when it was marked as such. */\n    unrefTimestamp?: number;\n}\n\n/**\n * @deprecated - Kept for back-compat. This has been renamed to {@link IGarbageCollectionDetailsBase}.\n */\nexport type IGarbageCollectionSummaryDetails = IGarbageCollectionDetailsBase;\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport * from \"./dataStoreFactory\";\nexport * from \"./dataStoreRegistry\";\nexport * from \"./dataStoreContext\";\nexport * from \"./garbageCollection\";\nexport * from \"./protocol\";\nexport * from \"./summary\";\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { TelemetryEventPropertyType } from \"@fluidframework/common-definitions\";\nimport {\n    SummaryTree,\n    ISummaryTree,\n    ISequencedDocumentMessage,\n    ISnapshotTree,\n    ITree,\n} from \"@fluidframework/protocol-definitions\";\nimport {\n    IGarbageCollectionData,\n    IGarbageCollectionDetailsBase,\n    IGarbageCollectionSummaryDetails,\n} from \"./garbageCollection\";\n\n/**\n * Contains the aggregation data from a Tree/Subtree.\n */\nexport interface ISummaryStats {\n    treeNodeCount: number;\n    blobNodeCount: number;\n    handleNodeCount: number;\n    totalBlobSize: number;\n    unreferencedBlobSize: number;\n}\n\n/**\n * Represents the summary tree for a node along with the statistics for that tree.\n * For example, for a given data store, it contains the data for data store along with a subtree for\n * each of its DDS.\n * Any component that implements IChannelContext, IFluidDataStoreChannel or extends SharedObject\n * will be taking part of the summarization process.\n */\nexport interface ISummaryTreeWithStats {\n    /** Represents an agreggation of node counts and blob sizes associated to the current summary information */\n    stats: ISummaryStats;\n    /**\n     * A recursive data structure that will be converted to a snapshot tree and uploaded\n     * to the backend.\n     */\n    summary: ISummaryTree;\n}\n\n/**\n * Represents a summary at a current sequence number.\n */\nexport interface ISummarizeResult {\n    stats: ISummaryStats;\n    summary: SummaryTree;\n}\n\n/**\n * Contains the same data as ISummaryResult but in order to avoid naming colisions,\n * the data store summaries are wrapped around an array of labels identified by pathPartsForChildren.\n * Ex: id:\"\"\n       pathPartsForChildren: [\"path1\"]\n       stats: ...\n       summary:\n        ...\n            \"path1\":\n */\nexport interface ISummarizeInternalResult extends ISummarizeResult {\n    id: string;\n    /** Additional path parts between this node's ID and its children's IDs. */\n    pathPartsForChildren?: string[];\n}\n\n/** The garbage collection data of each node in the reference graph. */\nexport interface IGarbageCollectionNodeData {\n    /** The set of routes to other nodes in the graph. */\n    outboundRoutes: string[];\n    /** If the node is unreferenced, the timestamp of when it was marked unreferenced. */\n    unreferencedTimestampMs?: number;\n}\n\n/**\n * The garbage collection state of the reference graph. It contains a list of all the nodes in the graph and their\n * GC data.\n */\nexport interface IGarbageCollectionState {\n    gcNodes: { [ id: string ]: IGarbageCollectionNodeData; };\n}\n\nexport type SummarizeInternalFn = (\n    fullTree: boolean,\n    trackState: boolean,\n    telemetryContext?: ITelemetryContext,\n) => Promise<ISummarizeInternalResult>;\n\nexport interface ISummarizerNodeConfig {\n    /**\n     * True to reuse previous handle when unchanged since last acked summary.\n     * Defaults to true.\n     */\n    readonly canReuseHandle?: boolean;\n    /**\n     * True to always stop execution on error during summarize, or false to\n     * attempt creating a summary that is a pointer ot the last acked summary\n     * plus outstanding ops in case of internal summarize failure.\n     * Defaults to false.\n     *\n     * BUG BUG: Default to true while we investigate problem\n     * with differential summaries\n     */\n    readonly throwOnFailure?: true;\n}\n\nexport interface ISummarizerNodeConfigWithGC extends ISummarizerNodeConfig {\n    /**\n     * True if GC is disabled. If so, don't track GC related state for a summary.\n     * This is propagated to all child nodes.\n     */\n    readonly gcDisabled?: boolean;\n}\n\nexport enum CreateSummarizerNodeSource {\n    FromSummary,\n    FromAttach,\n    Local,\n}\nexport type CreateChildSummarizerNodeParam = {\n    type: CreateSummarizerNodeSource.FromSummary;\n} | {\n    type: CreateSummarizerNodeSource.FromAttach;\n    sequenceNumber: number;\n    snapshot: ITree;\n} | {\n    type: CreateSummarizerNodeSource.Local;\n};\n\nexport interface ISummarizerNode {\n    /** Latest successfully acked summary reference sequence number */\n    readonly referenceSequenceNumber: number;\n    /**\n     * Marks the node as having a change with the given sequence number.\n     * @param sequenceNumber - sequence number of change\n     */\n    invalidate(sequenceNumber: number): void;\n    /**\n     * Calls the internal summarize function and handles internal state tracking.\n     * If unchanged and fullTree is false, it will reuse previous summary subtree.\n     * If an error is encountered and throwOnFailure is false, it will try to make\n     * a summary with a pointer to the previous summary + a blob of outstanding ops.\n     * @param fullTree - true to skip optimizations and always generate the full tree\n     * @param trackState - indicates whether the summarizer node should track the state of the summary or not\n     * @param telemetryContext - summary data passed through the layers for telemetry purposes\n     */\n    summarize(\n        fullTree: boolean,\n        trackState?: boolean,\n        telemetryContext?: ITelemetryContext,\n    ): Promise<ISummarizeResult>;\n    /**\n     * Checks if there are any additional path parts for children that need to\n     * be loaded from the base summary. Additional path parts represent parts\n     * of the path between this SummarizerNode and any child SummarizerNodes\n     * that it might have. For example: if datastore \"a\" contains dds \"b\", but the\n     * path is \"/a/.channels/b\", then the additional path part is \".channels\".\n     * @param snapshot - the base summary to parse\n     */\n    loadBaseSummaryWithoutDifferential(snapshot: ISnapshotTree): void;\n    /**\n     * Does all the work of loadBaseSummaryWithoutDifferential. Additionally if\n     * the base summary is a differential summary containing handle + outstanding ops blob,\n     * then this will return the innermost base summary, and update the state by\n     * tracking the outstanding ops.\n     * @param snapshot - the base summary to parse\n     * @param readAndParseBlob - function to read and parse blobs from storage\n     * @returns the base summary to be used\n     */\n    loadBaseSummary(\n        snapshot: ISnapshotTree,\n        readAndParseBlob: <T>(id: string) => Promise<T>,\n    ): Promise<{ baseSummary: ISnapshotTree; outstandingOps: ISequencedDocumentMessage[]; }>;\n    /**\n     * Records an op representing a change to this node/subtree.\n     * @param op - op of change to record\n     */\n    recordChange(op: ISequencedDocumentMessage): void;\n\n    createChild(\n        /** Summarize function */\n        summarizeInternalFn: SummarizeInternalFn,\n        /** Initial id or path part of this node */\n        id: string,\n        /**\n         * Information needed to create the node.\n         * If it is from a base summary, it will assert that a summary has been seen.\n         * Attach information if it is created from an attach op.\n         * If it is local, it will throw unsupported errors on calls to summarize.\n         */\n        createParam: CreateChildSummarizerNodeParam,\n        /** Optional configuration affecting summarize behavior */\n        config?: ISummarizerNodeConfig,\n    ): ISummarizerNode;\n\n    getChild(id: string): ISummarizerNode | undefined;\n}\n\n/**\n * Extends the functionality of ISummarizerNode to support garbage collection. It adds / udpates the following APIs:\n * - usedRoutes - The routes in this node that are currently in use.\n * - getGCData - A new API that can be used to get the garbage collection data for this node.\n * - summarize - Added a trackState flag which indicates whether the summarizer node should track the state of the\n *   summary or not.\n * - createChild - Added the following params:\n *   - getGCDataFn - This gets the GC data from the caller. This must be provided in order for getGCData to work.\n *   - getInitialGCDetailsFn - This gets the initial GC details from the caller.\n * - deleteChild - Deletes a child node.\n * - isReferenced - This tells whether this node is referenced in the document or not.\n * - updateUsedRoutes - Used to notify this node of routes that are currently in use in it.\n */\nexport interface ISummarizerNodeWithGC extends ISummarizerNode {\n    createChild(\n        /** Summarize function */\n        summarizeInternalFn: SummarizeInternalFn,\n        /** Initial id or path part of this node */\n        id: string,\n        /**\n         * Information needed to create the node.\n         * If it is from a base summary, it will assert that a summary has been seen.\n         * Attach information if it is created from an attach op.\n         * If it is local, it will throw unsupported errors on calls to summarize.\n         */\n        createParam: CreateChildSummarizerNodeParam,\n        /** Optional configuration affecting summarize behavior */\n        config?: ISummarizerNodeConfigWithGC,\n        getGCDataFn?: (fullGC?: boolean) => Promise<IGarbageCollectionData>,\n        getInitialGCSummaryDetailsFn?: () => Promise<IGarbageCollectionSummaryDetails>,\n    ): ISummarizerNodeWithGC;\n\n    /**\n     * Delete the child with the given id..\n     */\n    deleteChild(id: string): void;\n\n    getChild(id: string): ISummarizerNodeWithGC | undefined;\n\n    /**\n     * Returns this node's data that is used for garbage collection. This includes a list of GC nodes that represent\n     * this node. Each node has a set of outbound routes to other GC nodes in the document.\n     * @param fullGC - true to bypass optimizations and force full generation of GC data.\n     */\n    getGCData(fullGC?: boolean): Promise<IGarbageCollectionData>;\n\n    /** Tells whether this node is being referenced in this document or not. Unreferenced node will get GC'd */\n    isReferenced(): boolean;\n\n    /**\n     * After GC has run, called to notify this node of routes that are used in it. These are used for the following:\n     * 1. To identify if this node is being referenced in the document or not.\n     * 2. To identify if this node or any of its children's used routes changed since last summary.\n     *\n     * @param usedRoutes - The routes that are used in this node.\n     * @param gcTimestamp - The time when GC was run that generated these used routes. If a node becomes unreferenced\n     * as part of this GC run, this timestamp is used to update the time when it happens.\n     */\n    updateUsedRoutes(usedRoutes: string[], gcTimestamp?: number): void;\n\n    /**\n     * @deprecated - Renamed to getBaseGCDetails.\n     * Returns the GC details that may be added to this node's summary.\n     */\n    getGCSummaryDetails(): IGarbageCollectionSummaryDetails;\n\n    /** Returns the GC details to be added to this node's summary and is used to initialize new nodes' GC state. */\n    getBaseGCDetails?(): IGarbageCollectionDetailsBase;\n}\n\nexport const channelsTreeName = \".channels\";\n\n/**\n * Contains telemetry data relevant to summarization workflows.\n * This object is expected to be modified directly by various summarize methods.\n */\nexport interface ITelemetryContext {\n    /**\n     * Sets value for telemetry data being tracked.\n     * @param prefix - unique prefix to tag this data with (ex: \"fluid:map:\")\n     * @param property - property name of the telemetry data being tracked (ex: \"DirectoryCount\")\n     * @param value - value to attribute to this summary telemetry data\n     */\n    set(prefix: string, property: string, value: TelemetryEventPropertyType): void;\n\n    /**\n     * Get the telemetry data being tracked\n     * @param prefix - unique prefix for this data (ex: \"fluid:map:\")\n     * @param property - property name of the telemetry data being tracked (ex: \"DirectoryCount\")\n     * @returns undefined if item not found\n     */\n    get(prefix: string, property: string): TelemetryEventPropertyType;\n\n    /**\n     * Returns a serialized version of all the telemetry data.\n     * Should be used when logging in telemetry events.\n     */\n    serialize(): string;\n}\n\nexport const blobCountPropertyName = \"BlobCount\";\n\nexport const totalBlobSizePropertyName = \"TotalBlobSize\";\n","/*globals self, window */\n\"use strict\"\n\n/*eslint-disable @mysticatea/prettier */\nconst { AbortController, AbortSignal } =\n    typeof self !== \"undefined\" ? self :\n    typeof window !== \"undefined\" ? window :\n    /* otherwise */ undefined\n/*eslint-enable @mysticatea/prettier */\n\nmodule.exports = AbortController\nmodule.exports.AbortSignal = AbortSignal\nmodule.exports.default = AbortController\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar transitionalDefaults = require('../defaults/transitional');\nvar Cancel = require('../cancel/Cancel');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new Cancel('canceled');\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar normalizeHeaderName = require('../helpers/normalizeHeaderName');\nvar enhanceError = require('../core/enhanceError');\nvar transitionalDefaults = require('./transitional');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('../adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('../adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","module.exports = {\n  \"version\": \"0.26.1\"\n};","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar VERSION = require('../env/data').version;\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return toString.call(val) === '[object FormData]';\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return toString.call(val) === '[object URLSearchParams]';\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Copyright (c) 2013 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\"use strict\";\nfunction Deque(capacity) {\n    this._capacity = getCapacity(capacity);\n    this._length = 0;\n    this._front = 0;\n    if (isArray(capacity)) {\n        var len = capacity.length;\n        for (var i = 0; i < len; ++i) {\n            this[i] = capacity[i];\n        }\n        this._length = len;\n    }\n}\n\nDeque.prototype.toArray = function Deque$toArray() {\n    var len = this._length;\n    var ret = new Array(len);\n    var front = this._front;\n    var capacity = this._capacity;\n    for (var j = 0; j < len; ++j) {\n        ret[j] = this[(front + j) & (capacity - 1)];\n    }\n    return ret;\n};\n\nDeque.prototype.push = function Deque$push(item) {\n    var argsLength = arguments.length;\n    var length = this._length;\n    if (argsLength > 1) {\n        var capacity = this._capacity;\n        if (length + argsLength > capacity) {\n            for (var i = 0; i < argsLength; ++i) {\n                this._checkCapacity(length + 1);\n                var j = (this._front + length) & (this._capacity - 1);\n                this[j] = arguments[i];\n                length++;\n                this._length = length;\n            }\n            return length;\n        }\n        else {\n            var j = this._front;\n            for (var i = 0; i < argsLength; ++i) {\n                this[(j + length) & (capacity - 1)] = arguments[i];\n                j++;\n            }\n            this._length = length + argsLength;\n            return length + argsLength;\n        }\n\n    }\n\n    if (argsLength === 0) return length;\n\n    this._checkCapacity(length + 1);\n    var i = (this._front + length) & (this._capacity - 1);\n    this[i] = item;\n    this._length = length + 1;\n    return length + 1;\n};\n\nDeque.prototype.pop = function Deque$pop() {\n    var length = this._length;\n    if (length === 0) {\n        return void 0;\n    }\n    var i = (this._front + length - 1) & (this._capacity - 1);\n    var ret = this[i];\n    this[i] = void 0;\n    this._length = length - 1;\n    return ret;\n};\n\nDeque.prototype.shift = function Deque$shift() {\n    var length = this._length;\n    if (length === 0) {\n        return void 0;\n    }\n    var front = this._front;\n    var ret = this[front];\n    this[front] = void 0;\n    this._front = (front + 1) & (this._capacity - 1);\n    this._length = length - 1;\n    return ret;\n};\n\nDeque.prototype.unshift = function Deque$unshift(item) {\n    var length = this._length;\n    var argsLength = arguments.length;\n\n\n    if (argsLength > 1) {\n        var capacity = this._capacity;\n        if (length + argsLength > capacity) {\n            for (var i = argsLength - 1; i >= 0; i--) {\n                this._checkCapacity(length + 1);\n                var capacity = this._capacity;\n                var j = (((( this._front - 1 ) &\n                    ( capacity - 1) ) ^ capacity ) - capacity );\n                this[j] = arguments[i];\n                length++;\n                this._length = length;\n                this._front = j;\n            }\n            return length;\n        }\n        else {\n            var front = this._front;\n            for (var i = argsLength - 1; i >= 0; i--) {\n                var j = (((( front - 1 ) &\n                    ( capacity - 1) ) ^ capacity ) - capacity );\n                this[j] = arguments[i];\n                front = j;\n            }\n            this._front = front;\n            this._length = length + argsLength;\n            return length + argsLength;\n        }\n    }\n\n    if (argsLength === 0) return length;\n\n    this._checkCapacity(length + 1);\n    var capacity = this._capacity;\n    var i = (((( this._front - 1 ) &\n        ( capacity - 1) ) ^ capacity ) - capacity );\n    this[i] = item;\n    this._length = length + 1;\n    this._front = i;\n    return length + 1;\n};\n\nDeque.prototype.peekBack = function Deque$peekBack() {\n    var length = this._length;\n    if (length === 0) {\n        return void 0;\n    }\n    var index = (this._front + length - 1) & (this._capacity - 1);\n    return this[index];\n};\n\nDeque.prototype.peekFront = function Deque$peekFront() {\n    if (this._length === 0) {\n        return void 0;\n    }\n    return this[this._front];\n};\n\nDeque.prototype.get = function Deque$get(index) {\n    var i = index;\n    if ((i !== (i | 0))) {\n        return void 0;\n    }\n    var len = this._length;\n    if (i < 0) {\n        i = i + len;\n    }\n    if (i < 0 || i >= len) {\n        return void 0;\n    }\n    return this[(this._front + i) & (this._capacity - 1)];\n};\n\nDeque.prototype.isEmpty = function Deque$isEmpty() {\n    return this._length === 0;\n};\n\nDeque.prototype.clear = function Deque$clear() {\n    var len = this._length;\n    var front = this._front;\n    var capacity = this._capacity;\n    for (var j = 0; j < len; ++j) {\n        this[(front + j) & (capacity - 1)] = void 0;\n    }\n    this._length = 0;\n    this._front = 0;\n};\n\nDeque.prototype.toString = function Deque$toString() {\n    return this.toArray().toString();\n};\n\nDeque.prototype.valueOf = Deque.prototype.toString;\nDeque.prototype.removeFront = Deque.prototype.shift;\nDeque.prototype.removeBack = Deque.prototype.pop;\nDeque.prototype.insertFront = Deque.prototype.unshift;\nDeque.prototype.insertBack = Deque.prototype.push;\nDeque.prototype.enqueue = Deque.prototype.push;\nDeque.prototype.dequeue = Deque.prototype.shift;\nDeque.prototype.toJSON = Deque.prototype.toArray;\n\nObject.defineProperty(Deque.prototype, \"length\", {\n    get: function() {\n        return this._length;\n    },\n    set: function() {\n        throw new RangeError(\"\");\n    }\n});\n\nDeque.prototype._checkCapacity = function Deque$_checkCapacity(size) {\n    if (this._capacity < size) {\n        this._resizeTo(getCapacity(this._capacity * 1.5 + 16));\n    }\n};\n\nDeque.prototype._resizeTo = function Deque$_resizeTo(capacity) {\n    var oldCapacity = this._capacity;\n    this._capacity = capacity;\n    var front = this._front;\n    var length = this._length;\n    if (front + length > oldCapacity) {\n        var moveItemsCount = (front + length) & (oldCapacity - 1);\n        arrayMove(this, 0, this, oldCapacity, moveItemsCount);\n    }\n};\n\n\nvar isArray = Array.isArray;\n\nfunction arrayMove(src, srcIndex, dst, dstIndex, len) {\n    for (var j = 0; j < len; ++j) {\n        dst[j + dstIndex] = src[j + srcIndex];\n        src[j + srcIndex] = void 0;\n    }\n}\n\nfunction pow2AtLeast(n) {\n    n = n >>> 0;\n    n = n - 1;\n    n = n | (n >> 1);\n    n = n | (n >> 2);\n    n = n | (n >> 4);\n    n = n | (n >> 8);\n    n = n | (n >> 16);\n    return n + 1;\n}\n\nfunction getCapacity(capacity) {\n    if (typeof capacity !== \"number\") {\n        if (isArray(capacity)) {\n            capacity = capacity.length;\n        }\n        else {\n            return 16;\n        }\n    }\n    return pow2AtLeast(\n        Math.min(\n            Math.max(16, capacity), 1073741824)\n    );\n}\n\nmodule.exports = Deque;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n","\nvar navigator = {};\nnavigator.userAgent = false;\n\nvar window = {};\n/*\n * jsrsasign(all) 10.5.26 (2022-07-14) (c) 2010-2022 Kenji Urushima | kjur.github.io/jsrsasign/license\n */\n\n/*! CryptoJS v3.1.2 core-fix.js\n * code.google.com/p/crypto-js\n * (c) 2009-2013 by Jeff Mott. All rights reserved.\n * code.google.com/p/crypto-js/wiki/License\n * THIS IS FIX of 'core.js' to fix Hmac issue.\n * https://code.google.com/p/crypto-js/issues/detail?id=84\n * https://crypto-js.googlecode.com/svn-history/r667/branches/3.x/src/core.js\n */\nvar CryptoJS=CryptoJS||(function(e,g){var a={};var b=a.lib={};var j=b.Base=(function(){function n(){}return{extend:function(p){n.prototype=this;var o=new n();if(p){o.mixIn(p)}if(!o.hasOwnProperty(\"init\")){o.init=function(){o.$super.init.apply(this,arguments)}}o.init.prototype=o;o.$super=this;return o},create:function(){var o=this.extend();o.init.apply(o,arguments);return o},init:function(){},mixIn:function(p){for(var o in p){if(p.hasOwnProperty(o)){this[o]=p[o]}}if(p.hasOwnProperty(\"toString\")){this.toString=p.toString}},clone:function(){return this.init.prototype.extend(this)}}}());var l=b.WordArray=j.extend({init:function(o,n){o=this.words=o||[];if(n!=g){this.sigBytes=n}else{this.sigBytes=o.length*4}},toString:function(n){return(n||h).stringify(this)},concat:function(t){var q=this.words;var p=t.words;var n=this.sigBytes;var s=t.sigBytes;this.clamp();if(n%4){for(var r=0;r<s;r++){var o=(p[r>>>2]>>>(24-(r%4)*8))&255;q[(n+r)>>>2]|=o<<(24-((n+r)%4)*8)}}else{for(var r=0;r<s;r+=4){q[(n+r)>>>2]=p[r>>>2]}}this.sigBytes+=s;return this},clamp:function(){var o=this.words;var n=this.sigBytes;o[n>>>2]&=4294967295<<(32-(n%4)*8);o.length=e.ceil(n/4)},clone:function(){var n=j.clone.call(this);n.words=this.words.slice(0);return n},random:function(p){var o=[];for(var n=0;n<p;n+=4){o.push((e.random()*4294967296)|0)}return new l.init(o,p)}});var m=a.enc={};var h=m.Hex={stringify:function(p){var r=p.words;var o=p.sigBytes;var q=[];for(var n=0;n<o;n++){var s=(r[n>>>2]>>>(24-(n%4)*8))&255;q.push((s>>>4).toString(16));q.push((s&15).toString(16))}return q.join(\"\")},parse:function(p){var n=p.length;var q=[];for(var o=0;o<n;o+=2){q[o>>>3]|=parseInt(p.substr(o,2),16)<<(24-(o%8)*4)}return new l.init(q,n/2)}};var d=m.Latin1={stringify:function(q){var r=q.words;var p=q.sigBytes;var n=[];for(var o=0;o<p;o++){var s=(r[o>>>2]>>>(24-(o%4)*8))&255;n.push(String.fromCharCode(s))}return n.join(\"\")},parse:function(p){var n=p.length;var q=[];for(var o=0;o<n;o++){q[o>>>2]|=(p.charCodeAt(o)&255)<<(24-(o%4)*8)}return new l.init(q,n)}};var c=m.Utf8={stringify:function(n){try{return decodeURIComponent(escape(d.stringify(n)))}catch(o){throw new Error(\"Malformed UTF-8 data\")}},parse:function(n){return d.parse(unescape(encodeURIComponent(n)))}};var i=b.BufferedBlockAlgorithm=j.extend({reset:function(){this._data=new l.init();this._nDataBytes=0},_append:function(n){if(typeof n==\"string\"){n=c.parse(n)}this._data.concat(n);this._nDataBytes+=n.sigBytes},_process:function(w){var q=this._data;var x=q.words;var n=q.sigBytes;var t=this.blockSize;var v=t*4;var u=n/v;if(w){u=e.ceil(u)}else{u=e.max((u|0)-this._minBufferSize,0)}var s=u*t;var r=e.min(s*4,n);if(s){for(var p=0;p<s;p+=t){this._doProcessBlock(x,p)}var o=x.splice(0,s);q.sigBytes-=r}return new l.init(o,r)},clone:function(){var n=j.clone.call(this);n._data=this._data.clone();return n},_minBufferSize:0});var f=b.Hasher=i.extend({cfg:j.extend(),init:function(n){this.cfg=this.cfg.extend(n);this.reset()},reset:function(){i.reset.call(this);this._doReset()},update:function(n){this._append(n);this._process();return this},finalize:function(n){if(n){this._append(n)}var o=this._doFinalize();return o},blockSize:512/32,_createHelper:function(n){return function(p,o){return new n.init(o).finalize(p)}},_createHmacHelper:function(n){return function(p,o){return new k.HMAC.init(n,o).finalize(p)}}});var k=a.algo={};return a}(Math));\n/*\nCryptoJS v3.1.2 x64-core-min.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n(function(g){var a=CryptoJS,f=a.lib,e=f.Base,h=f.WordArray,a=a.x64={};a.Word=e.extend({init:function(b,c){this.high=b;this.low=c}});a.WordArray=e.extend({init:function(b,c){b=this.words=b||[];this.sigBytes=c!=g?c:8*b.length},toX32:function(){for(var b=this.words,c=b.length,a=[],d=0;d<c;d++){var e=b[d];a.push(e.high);a.push(e.low)}return h.create(a,this.sigBytes)},clone:function(){for(var b=e.clone.call(this),c=b.words=this.words.slice(0),a=c.length,d=0;d<a;d++)c[d]=c[d].clone();return b}})})();\n\n/*\nCryptoJS v3.1.2 cipher-core.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\nCryptoJS.lib.Cipher||function(u){var g=CryptoJS,f=g.lib,k=f.Base,l=f.WordArray,q=f.BufferedBlockAlgorithm,r=g.enc.Base64,v=g.algo.EvpKDF,n=f.Cipher=q.extend({cfg:k.extend(),createEncryptor:function(a,b){return this.create(this._ENC_XFORM_MODE,a,b)},createDecryptor:function(a,b){return this.create(this._DEC_XFORM_MODE,a,b)},init:function(a,b,c){this.cfg=this.cfg.extend(c);this._xformMode=a;this._key=b;this.reset()},reset:function(){q.reset.call(this);this._doReset()},process:function(a){this._append(a);\nreturn this._process()},finalize:function(a){a&&this._append(a);return this._doFinalize()},keySize:4,ivSize:4,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(a){return{encrypt:function(b,c,d){return(\"string\"==typeof c?s:j).encrypt(a,b,c,d)},decrypt:function(b,c,d){return(\"string\"==typeof c?s:j).decrypt(a,b,c,d)}}}});f.StreamCipher=n.extend({_doFinalize:function(){return this._process(!0)},blockSize:1});var m=g.mode={},t=function(a,b,c){var d=this._iv;d?this._iv=u:d=this._prevBlock;for(var e=\n0;e<c;e++)a[b+e]^=d[e]},h=(f.BlockCipherMode=k.extend({createEncryptor:function(a,b){return this.Encryptor.create(a,b)},createDecryptor:function(a,b){return this.Decryptor.create(a,b)},init:function(a,b){this._cipher=a;this._iv=b}})).extend();h.Encryptor=h.extend({processBlock:function(a,b){var c=this._cipher,d=c.blockSize;t.call(this,a,b,d);c.encryptBlock(a,b);this._prevBlock=a.slice(b,b+d)}});h.Decryptor=h.extend({processBlock:function(a,b){var c=this._cipher,d=c.blockSize,e=a.slice(b,b+d);c.decryptBlock(a,\nb);t.call(this,a,b,d);this._prevBlock=e}});m=m.CBC=h;h=(g.pad={}).Pkcs7={pad:function(a,b){for(var c=4*b,c=c-a.sigBytes%c,d=c<<24|c<<16|c<<8|c,e=[],f=0;f<c;f+=4)e.push(d);c=l.create(e,c);a.concat(c)},unpad:function(a){a.sigBytes-=a.words[a.sigBytes-1>>>2]&255}};f.BlockCipher=n.extend({cfg:n.cfg.extend({mode:m,padding:h}),reset:function(){n.reset.call(this);var a=this.cfg,b=a.iv,a=a.mode;if(this._xformMode==this._ENC_XFORM_MODE)var c=a.createEncryptor;else c=a.createDecryptor,this._minBufferSize=1;\nthis._mode=c.call(a,this,b&&b.words)},_doProcessBlock:function(a,b){this._mode.processBlock(a,b)},_doFinalize:function(){var a=this.cfg.padding;if(this._xformMode==this._ENC_XFORM_MODE){a.pad(this._data,this.blockSize);var b=this._process(!0)}else b=this._process(!0),a.unpad(b);return b},blockSize:4});var p=f.CipherParams=k.extend({init:function(a){this.mixIn(a)},toString:function(a){return(a||this.formatter).stringify(this)}}),m=(g.format={}).OpenSSL={stringify:function(a){var b=a.ciphertext;a=a.salt;\nreturn(a?l.create([1398893684,1701076831]).concat(a).concat(b):b).toString(r)},parse:function(a){a=r.parse(a);var b=a.words;if(1398893684==b[0]&&1701076831==b[1]){var c=l.create(b.slice(2,4));b.splice(0,4);a.sigBytes-=16}return p.create({ciphertext:a,salt:c})}},j=f.SerializableCipher=k.extend({cfg:k.extend({format:m}),encrypt:function(a,b,c,d){d=this.cfg.extend(d);var e=a.createEncryptor(c,d);b=e.finalize(b);e=e.cfg;return p.create({ciphertext:b,key:c,iv:e.iv,algorithm:a,mode:e.mode,padding:e.padding,\nblockSize:a.blockSize,formatter:d.format})},decrypt:function(a,b,c,d){d=this.cfg.extend(d);b=this._parse(b,d.format);return a.createDecryptor(c,d).finalize(b.ciphertext)},_parse:function(a,b){return\"string\"==typeof a?b.parse(a,this):a}}),g=(g.kdf={}).OpenSSL={execute:function(a,b,c,d){d||(d=l.random(8));a=v.create({keySize:b+c}).compute(a,d);c=l.create(a.words.slice(b),4*c);a.sigBytes=4*b;return p.create({key:a,iv:c,salt:d})}},s=f.PasswordBasedCipher=j.extend({cfg:j.cfg.extend({kdf:g}),encrypt:function(a,\nb,c,d){d=this.cfg.extend(d);c=d.kdf.execute(c,a.keySize,a.ivSize);d.iv=c.iv;a=j.encrypt.call(this,a,b,c.key,d);a.mixIn(c);return a},decrypt:function(a,b,c,d){d=this.cfg.extend(d);b=this._parse(b,d.format);c=d.kdf.execute(c,a.keySize,a.ivSize,b.salt);d.iv=c.iv;return j.decrypt.call(this,a,b,c.key,d)}})}();\n\n/*\nCryptoJS v3.1.2 aes.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n(function(){for(var q=CryptoJS,x=q.lib.BlockCipher,r=q.algo,j=[],y=[],z=[],A=[],B=[],C=[],s=[],u=[],v=[],w=[],g=[],k=0;256>k;k++)g[k]=128>k?k<<1:k<<1^283;for(var n=0,l=0,k=0;256>k;k++){var f=l^l<<1^l<<2^l<<3^l<<4,f=f>>>8^f&255^99;j[n]=f;y[f]=n;var t=g[n],D=g[t],E=g[D],b=257*g[f]^16843008*f;z[n]=b<<24|b>>>8;A[n]=b<<16|b>>>16;B[n]=b<<8|b>>>24;C[n]=b;b=16843009*E^65537*D^257*t^16843008*n;s[f]=b<<24|b>>>8;u[f]=b<<16|b>>>16;v[f]=b<<8|b>>>24;w[f]=b;n?(n=t^g[g[g[E^t]]],l^=g[g[l]]):n=l=1}var F=[0,1,2,4,8,\n16,32,64,128,27,54],r=r.AES=x.extend({_doReset:function(){for(var c=this._key,e=c.words,a=c.sigBytes/4,c=4*((this._nRounds=a+6)+1),b=this._keySchedule=[],h=0;h<c;h++)if(h<a)b[h]=e[h];else{var d=b[h-1];h%a?6<a&&4==h%a&&(d=j[d>>>24]<<24|j[d>>>16&255]<<16|j[d>>>8&255]<<8|j[d&255]):(d=d<<8|d>>>24,d=j[d>>>24]<<24|j[d>>>16&255]<<16|j[d>>>8&255]<<8|j[d&255],d^=F[h/a|0]<<24);b[h]=b[h-a]^d}e=this._invKeySchedule=[];for(a=0;a<c;a++)h=c-a,d=a%4?b[h]:b[h-4],e[a]=4>a||4>=h?d:s[j[d>>>24]]^u[j[d>>>16&255]]^v[j[d>>>\n8&255]]^w[j[d&255]]},encryptBlock:function(c,e){this._doCryptBlock(c,e,this._keySchedule,z,A,B,C,j)},decryptBlock:function(c,e){var a=c[e+1];c[e+1]=c[e+3];c[e+3]=a;this._doCryptBlock(c,e,this._invKeySchedule,s,u,v,w,y);a=c[e+1];c[e+1]=c[e+3];c[e+3]=a},_doCryptBlock:function(c,e,a,b,h,d,j,m){for(var n=this._nRounds,f=c[e]^a[0],g=c[e+1]^a[1],k=c[e+2]^a[2],p=c[e+3]^a[3],l=4,t=1;t<n;t++)var q=b[f>>>24]^h[g>>>16&255]^d[k>>>8&255]^j[p&255]^a[l++],r=b[g>>>24]^h[k>>>16&255]^d[p>>>8&255]^j[f&255]^a[l++],s=\nb[k>>>24]^h[p>>>16&255]^d[f>>>8&255]^j[g&255]^a[l++],p=b[p>>>24]^h[f>>>16&255]^d[g>>>8&255]^j[k&255]^a[l++],f=q,g=r,k=s;q=(m[f>>>24]<<24|m[g>>>16&255]<<16|m[k>>>8&255]<<8|m[p&255])^a[l++];r=(m[g>>>24]<<24|m[k>>>16&255]<<16|m[p>>>8&255]<<8|m[f&255])^a[l++];s=(m[k>>>24]<<24|m[p>>>16&255]<<16|m[f>>>8&255]<<8|m[g&255])^a[l++];p=(m[p>>>24]<<24|m[f>>>16&255]<<16|m[g>>>8&255]<<8|m[k&255])^a[l++];c[e]=q;c[e+1]=r;c[e+2]=s;c[e+3]=p},keySize:8});q.AES=x._createHelper(r)})();\n\n/*\nCryptoJS v3.1.2 tripledes-min.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n(function(){function j(b,c){var a=(this._lBlock>>>b^this._rBlock)&c;this._rBlock^=a;this._lBlock^=a<<b}function l(b,c){var a=(this._rBlock>>>b^this._lBlock)&c;this._lBlock^=a;this._rBlock^=a<<b}var h=CryptoJS,e=h.lib,n=e.WordArray,e=e.BlockCipher,g=h.algo,q=[57,49,41,33,25,17,9,1,58,50,42,34,26,18,10,2,59,51,43,35,27,19,11,3,60,52,44,36,63,55,47,39,31,23,15,7,62,54,46,38,30,22,14,6,61,53,45,37,29,21,13,5,28,20,12,4],p=[14,17,11,24,1,5,3,28,15,6,21,10,23,19,12,4,26,8,16,7,27,20,13,2,41,52,31,37,47,\n55,30,40,51,45,33,48,44,49,39,56,34,53,46,42,50,36,29,32],r=[1,2,4,6,8,10,12,14,15,17,19,21,23,25,27,28],s=[{\"0\":8421888,268435456:32768,536870912:8421378,805306368:2,1073741824:512,1342177280:8421890,1610612736:8389122,1879048192:8388608,2147483648:514,2415919104:8389120,2684354560:33280,2952790016:8421376,3221225472:32770,3489660928:8388610,3758096384:0,4026531840:33282,134217728:0,402653184:8421890,671088640:33282,939524096:32768,1207959552:8421888,1476395008:512,1744830464:8421378,2013265920:2,\n2281701376:8389120,2550136832:33280,2818572288:8421376,3087007744:8389122,3355443200:8388610,3623878656:32770,3892314112:514,4160749568:8388608,1:32768,268435457:2,536870913:8421888,805306369:8388608,1073741825:8421378,1342177281:33280,1610612737:512,1879048193:8389122,2147483649:8421890,2415919105:8421376,2684354561:8388610,2952790017:33282,3221225473:514,3489660929:8389120,3758096385:32770,4026531841:0,134217729:8421890,402653185:8421376,671088641:8388608,939524097:512,1207959553:32768,1476395009:8388610,\n1744830465:2,2013265921:33282,2281701377:32770,2550136833:8389122,2818572289:514,3087007745:8421888,3355443201:8389120,3623878657:0,3892314113:33280,4160749569:8421378},{\"0\":1074282512,16777216:16384,33554432:524288,50331648:1074266128,67108864:1073741840,83886080:1074282496,100663296:1073758208,117440512:16,134217728:540672,150994944:1073758224,167772160:1073741824,184549376:540688,201326592:524304,218103808:0,234881024:16400,251658240:1074266112,8388608:1073758208,25165824:540688,41943040:16,58720256:1073758224,\n75497472:1074282512,92274688:1073741824,109051904:524288,125829120:1074266128,142606336:524304,159383552:0,176160768:16384,192937984:1074266112,209715200:1073741840,226492416:540672,243269632:1074282496,260046848:16400,268435456:0,285212672:1074266128,301989888:1073758224,318767104:1074282496,335544320:1074266112,352321536:16,369098752:540688,385875968:16384,402653184:16400,419430400:524288,436207616:524304,452984832:1073741840,469762048:540672,486539264:1073758208,503316480:1073741824,520093696:1074282512,\n276824064:540688,293601280:524288,310378496:1074266112,327155712:16384,343932928:1073758208,360710144:1074282512,377487360:16,394264576:1073741824,411041792:1074282496,427819008:1073741840,444596224:1073758224,461373440:524304,478150656:0,494927872:16400,511705088:1074266128,528482304:540672},{\"0\":260,1048576:0,2097152:67109120,3145728:65796,4194304:65540,5242880:67108868,6291456:67174660,7340032:67174400,8388608:67108864,9437184:67174656,10485760:65792,11534336:67174404,12582912:67109124,13631488:65536,\n14680064:4,15728640:256,524288:67174656,1572864:67174404,2621440:0,3670016:67109120,4718592:67108868,5767168:65536,6815744:65540,7864320:260,8912896:4,9961472:256,11010048:67174400,12058624:65796,13107200:65792,14155776:67109124,15204352:67174660,16252928:67108864,16777216:67174656,17825792:65540,18874368:65536,19922944:67109120,20971520:256,22020096:67174660,23068672:67108868,24117248:0,25165824:67109124,26214400:67108864,27262976:4,28311552:65792,29360128:67174400,30408704:260,31457280:65796,32505856:67174404,\n17301504:67108864,18350080:260,19398656:67174656,20447232:0,21495808:65540,22544384:67109120,23592960:256,24641536:67174404,25690112:65536,26738688:67174660,27787264:65796,28835840:67108868,29884416:67109124,30932992:67174400,31981568:4,33030144:65792},{\"0\":2151682048,65536:2147487808,131072:4198464,196608:2151677952,262144:0,327680:4198400,393216:2147483712,458752:4194368,524288:2147483648,589824:4194304,655360:64,720896:2147487744,786432:2151678016,851968:4160,917504:4096,983040:2151682112,32768:2147487808,\n98304:64,163840:2151678016,229376:2147487744,294912:4198400,360448:2151682112,425984:0,491520:2151677952,557056:4096,622592:2151682048,688128:4194304,753664:4160,819200:2147483648,884736:4194368,950272:4198464,1015808:2147483712,1048576:4194368,1114112:4198400,1179648:2147483712,1245184:0,1310720:4160,1376256:2151678016,1441792:2151682048,1507328:2147487808,1572864:2151682112,1638400:2147483648,1703936:2151677952,1769472:4198464,1835008:2147487744,1900544:4194304,1966080:64,2031616:4096,1081344:2151677952,\n1146880:2151682112,1212416:0,1277952:4198400,1343488:4194368,1409024:2147483648,1474560:2147487808,1540096:64,1605632:2147483712,1671168:4096,1736704:2147487744,1802240:2151678016,1867776:4160,1933312:2151682048,1998848:4194304,2064384:4198464},{\"0\":128,4096:17039360,8192:262144,12288:536870912,16384:537133184,20480:16777344,24576:553648256,28672:262272,32768:16777216,36864:537133056,40960:536871040,45056:553910400,49152:553910272,53248:0,57344:17039488,61440:553648128,2048:17039488,6144:553648256,\n10240:128,14336:17039360,18432:262144,22528:537133184,26624:553910272,30720:536870912,34816:537133056,38912:0,43008:553910400,47104:16777344,51200:536871040,55296:553648128,59392:16777216,63488:262272,65536:262144,69632:128,73728:536870912,77824:553648256,81920:16777344,86016:553910272,90112:537133184,94208:16777216,98304:553910400,102400:553648128,106496:17039360,110592:537133056,114688:262272,118784:536871040,122880:0,126976:17039488,67584:553648256,71680:16777216,75776:17039360,79872:537133184,\n83968:536870912,88064:17039488,92160:128,96256:553910272,100352:262272,104448:553910400,108544:0,112640:553648128,116736:16777344,120832:262144,124928:537133056,129024:536871040},{\"0\":268435464,256:8192,512:270532608,768:270540808,1024:268443648,1280:2097152,1536:2097160,1792:268435456,2048:0,2304:268443656,2560:2105344,2816:8,3072:270532616,3328:2105352,3584:8200,3840:270540800,128:270532608,384:270540808,640:8,896:2097152,1152:2105352,1408:268435464,1664:268443648,1920:8200,2176:2097160,2432:8192,\n2688:268443656,2944:270532616,3200:0,3456:270540800,3712:2105344,3968:268435456,4096:268443648,4352:270532616,4608:270540808,4864:8200,5120:2097152,5376:268435456,5632:268435464,5888:2105344,6144:2105352,6400:0,6656:8,6912:270532608,7168:8192,7424:268443656,7680:270540800,7936:2097160,4224:8,4480:2105344,4736:2097152,4992:268435464,5248:268443648,5504:8200,5760:270540808,6016:270532608,6272:270540800,6528:270532616,6784:8192,7040:2105352,7296:2097160,7552:0,7808:268435456,8064:268443656},{\"0\":1048576,\n16:33555457,32:1024,48:1049601,64:34604033,80:0,96:1,112:34603009,128:33555456,144:1048577,160:33554433,176:34604032,192:34603008,208:1025,224:1049600,240:33554432,8:34603009,24:0,40:33555457,56:34604032,72:1048576,88:33554433,104:33554432,120:1025,136:1049601,152:33555456,168:34603008,184:1048577,200:1024,216:34604033,232:1,248:1049600,256:33554432,272:1048576,288:33555457,304:34603009,320:1048577,336:33555456,352:34604032,368:1049601,384:1025,400:34604033,416:1049600,432:1,448:0,464:34603008,480:33554433,\n496:1024,264:1049600,280:33555457,296:34603009,312:1,328:33554432,344:1048576,360:1025,376:34604032,392:33554433,408:34603008,424:0,440:34604033,456:1049601,472:1024,488:33555456,504:1048577},{\"0\":134219808,1:131072,2:134217728,3:32,4:131104,5:134350880,6:134350848,7:2048,8:134348800,9:134219776,10:133120,11:134348832,12:2080,13:0,14:134217760,15:133152,2147483648:2048,2147483649:134350880,2147483650:134219808,2147483651:134217728,2147483652:134348800,2147483653:133120,2147483654:133152,2147483655:32,\n2147483656:134217760,2147483657:2080,2147483658:131104,2147483659:134350848,2147483660:0,2147483661:134348832,2147483662:134219776,2147483663:131072,16:133152,17:134350848,18:32,19:2048,20:134219776,21:134217760,22:134348832,23:131072,24:0,25:131104,26:134348800,27:134219808,28:134350880,29:133120,30:2080,31:134217728,2147483664:131072,2147483665:2048,2147483666:134348832,2147483667:133152,2147483668:32,2147483669:134348800,2147483670:134217728,2147483671:134219808,2147483672:134350880,2147483673:134217760,\n2147483674:134219776,2147483675:0,2147483676:133120,2147483677:2080,2147483678:131104,2147483679:134350848}],t=[4160749569,528482304,33030144,2064384,129024,8064,504,2147483679],m=g.DES=e.extend({_doReset:function(){for(var b=this._key.words,c=[],a=0;56>a;a++){var f=q[a]-1;c[a]=b[f>>>5]>>>31-f%32&1}b=this._subKeys=[];for(f=0;16>f;f++){for(var d=b[f]=[],e=r[f],a=0;24>a;a++)d[a/6|0]|=c[(p[a]-1+e)%28]<<31-a%6,d[4+(a/6|0)]|=c[28+(p[a+24]-1+e)%28]<<31-a%6;d[0]=d[0]<<1|d[0]>>>31;for(a=1;7>a;a++)d[a]>>>=\n4*(a-1)+3;d[7]=d[7]<<5|d[7]>>>27}c=this._invSubKeys=[];for(a=0;16>a;a++)c[a]=b[15-a]},encryptBlock:function(b,c){this._doCryptBlock(b,c,this._subKeys)},decryptBlock:function(b,c){this._doCryptBlock(b,c,this._invSubKeys)},_doCryptBlock:function(b,c,a){this._lBlock=b[c];this._rBlock=b[c+1];j.call(this,4,252645135);j.call(this,16,65535);l.call(this,2,858993459);l.call(this,8,16711935);j.call(this,1,1431655765);for(var f=0;16>f;f++){for(var d=a[f],e=this._lBlock,h=this._rBlock,g=0,k=0;8>k;k++)g|=s[k][((h^\nd[k])&t[k])>>>0];this._lBlock=h;this._rBlock=e^g}a=this._lBlock;this._lBlock=this._rBlock;this._rBlock=a;j.call(this,1,1431655765);l.call(this,8,16711935);l.call(this,2,858993459);j.call(this,16,65535);j.call(this,4,252645135);b[c]=this._lBlock;b[c+1]=this._rBlock},keySize:2,ivSize:2,blockSize:2});h.DES=e._createHelper(m);g=g.TripleDES=e.extend({_doReset:function(){var b=this._key.words;this._des1=m.createEncryptor(n.create(b.slice(0,2)));this._des2=m.createEncryptor(n.create(b.slice(2,4)));this._des3=\nm.createEncryptor(n.create(b.slice(4,6)))},encryptBlock:function(b,c){this._des1.encryptBlock(b,c);this._des2.decryptBlock(b,c);this._des3.encryptBlock(b,c)},decryptBlock:function(b,c){this._des3.decryptBlock(b,c);this._des2.encryptBlock(b,c);this._des1.decryptBlock(b,c)},keySize:6,ivSize:2,blockSize:2});h.TripleDES=e._createHelper(g)})();\n\n/*\nCryptoJS v3.1.2 enc-base64.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n(function(){var h=CryptoJS,j=h.lib.WordArray;h.enc.Base64={stringify:function(b){var e=b.words,f=b.sigBytes,c=this._map;b.clamp();b=[];for(var a=0;a<f;a+=3)for(var d=(e[a>>>2]>>>24-8*(a%4)&255)<<16|(e[a+1>>>2]>>>24-8*((a+1)%4)&255)<<8|e[a+2>>>2]>>>24-8*((a+2)%4)&255,g=0;4>g&&a+0.75*g<f;g++)b.push(c.charAt(d>>>6*(3-g)&63));if(e=c.charAt(64))for(;b.length%4;)b.push(e);return b.join(\"\")},parse:function(b){var e=b.length,f=this._map,c=f.charAt(64);c&&(c=b.indexOf(c),-1!=c&&(e=c));for(var c=[],a=0,d=0;d<\ne;d++)if(d%4){var g=f.indexOf(b.charAt(d-1))<<2*(d%4),h=f.indexOf(b.charAt(d))>>>6-2*(d%4);c[a>>>2]|=(g|h)<<24-8*(a%4);a++}return j.create(c,a)},_map:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"}})();\n\n/*\nCryptoJS v3.1.2 md5.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n(function(E){function h(a,f,g,j,p,h,k){a=a+(f&g|~f&j)+p+k;return(a<<h|a>>>32-h)+f}function k(a,f,g,j,p,h,k){a=a+(f&j|g&~j)+p+k;return(a<<h|a>>>32-h)+f}function l(a,f,g,j,h,k,l){a=a+(f^g^j)+h+l;return(a<<k|a>>>32-k)+f}function n(a,f,g,j,h,k,l){a=a+(g^(f|~j))+h+l;return(a<<k|a>>>32-k)+f}for(var r=CryptoJS,q=r.lib,F=q.WordArray,s=q.Hasher,q=r.algo,a=[],t=0;64>t;t++)a[t]=4294967296*E.abs(E.sin(t+1))|0;q=q.MD5=s.extend({_doReset:function(){this._hash=new F.init([1732584193,4023233417,2562383102,271733878])},\n_doProcessBlock:function(m,f){for(var g=0;16>g;g++){var j=f+g,p=m[j];m[j]=(p<<8|p>>>24)&16711935|(p<<24|p>>>8)&4278255360}var g=this._hash.words,j=m[f+0],p=m[f+1],q=m[f+2],r=m[f+3],s=m[f+4],t=m[f+5],u=m[f+6],v=m[f+7],w=m[f+8],x=m[f+9],y=m[f+10],z=m[f+11],A=m[f+12],B=m[f+13],C=m[f+14],D=m[f+15],b=g[0],c=g[1],d=g[2],e=g[3],b=h(b,c,d,e,j,7,a[0]),e=h(e,b,c,d,p,12,a[1]),d=h(d,e,b,c,q,17,a[2]),c=h(c,d,e,b,r,22,a[3]),b=h(b,c,d,e,s,7,a[4]),e=h(e,b,c,d,t,12,a[5]),d=h(d,e,b,c,u,17,a[6]),c=h(c,d,e,b,v,22,a[7]),\nb=h(b,c,d,e,w,7,a[8]),e=h(e,b,c,d,x,12,a[9]),d=h(d,e,b,c,y,17,a[10]),c=h(c,d,e,b,z,22,a[11]),b=h(b,c,d,e,A,7,a[12]),e=h(e,b,c,d,B,12,a[13]),d=h(d,e,b,c,C,17,a[14]),c=h(c,d,e,b,D,22,a[15]),b=k(b,c,d,e,p,5,a[16]),e=k(e,b,c,d,u,9,a[17]),d=k(d,e,b,c,z,14,a[18]),c=k(c,d,e,b,j,20,a[19]),b=k(b,c,d,e,t,5,a[20]),e=k(e,b,c,d,y,9,a[21]),d=k(d,e,b,c,D,14,a[22]),c=k(c,d,e,b,s,20,a[23]),b=k(b,c,d,e,x,5,a[24]),e=k(e,b,c,d,C,9,a[25]),d=k(d,e,b,c,r,14,a[26]),c=k(c,d,e,b,w,20,a[27]),b=k(b,c,d,e,B,5,a[28]),e=k(e,b,\nc,d,q,9,a[29]),d=k(d,e,b,c,v,14,a[30]),c=k(c,d,e,b,A,20,a[31]),b=l(b,c,d,e,t,4,a[32]),e=l(e,b,c,d,w,11,a[33]),d=l(d,e,b,c,z,16,a[34]),c=l(c,d,e,b,C,23,a[35]),b=l(b,c,d,e,p,4,a[36]),e=l(e,b,c,d,s,11,a[37]),d=l(d,e,b,c,v,16,a[38]),c=l(c,d,e,b,y,23,a[39]),b=l(b,c,d,e,B,4,a[40]),e=l(e,b,c,d,j,11,a[41]),d=l(d,e,b,c,r,16,a[42]),c=l(c,d,e,b,u,23,a[43]),b=l(b,c,d,e,x,4,a[44]),e=l(e,b,c,d,A,11,a[45]),d=l(d,e,b,c,D,16,a[46]),c=l(c,d,e,b,q,23,a[47]),b=n(b,c,d,e,j,6,a[48]),e=n(e,b,c,d,v,10,a[49]),d=n(d,e,b,c,\nC,15,a[50]),c=n(c,d,e,b,t,21,a[51]),b=n(b,c,d,e,A,6,a[52]),e=n(e,b,c,d,r,10,a[53]),d=n(d,e,b,c,y,15,a[54]),c=n(c,d,e,b,p,21,a[55]),b=n(b,c,d,e,w,6,a[56]),e=n(e,b,c,d,D,10,a[57]),d=n(d,e,b,c,u,15,a[58]),c=n(c,d,e,b,B,21,a[59]),b=n(b,c,d,e,s,6,a[60]),e=n(e,b,c,d,z,10,a[61]),d=n(d,e,b,c,q,15,a[62]),c=n(c,d,e,b,x,21,a[63]);g[0]=g[0]+b|0;g[1]=g[1]+c|0;g[2]=g[2]+d|0;g[3]=g[3]+e|0},_doFinalize:function(){var a=this._data,f=a.words,g=8*this._nDataBytes,j=8*a.sigBytes;f[j>>>5]|=128<<24-j%32;var h=E.floor(g/\n4294967296);f[(j+64>>>9<<4)+15]=(h<<8|h>>>24)&16711935|(h<<24|h>>>8)&4278255360;f[(j+64>>>9<<4)+14]=(g<<8|g>>>24)&16711935|(g<<24|g>>>8)&4278255360;a.sigBytes=4*(f.length+1);this._process();a=this._hash;f=a.words;for(g=0;4>g;g++)j=f[g],f[g]=(j<<8|j>>>24)&16711935|(j<<24|j>>>8)&4278255360;return a},clone:function(){var a=s.clone.call(this);a._hash=this._hash.clone();return a}});r.MD5=s._createHelper(q);r.HmacMD5=s._createHmacHelper(q)})(Math);\n\n/*\nCryptoJS v3.1.2 sha1-min.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n(function(){var k=CryptoJS,b=k.lib,m=b.WordArray,l=b.Hasher,d=[],b=k.algo.SHA1=l.extend({_doReset:function(){this._hash=new m.init([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(n,p){for(var a=this._hash.words,e=a[0],f=a[1],h=a[2],j=a[3],b=a[4],c=0;80>c;c++){if(16>c)d[c]=n[p+c]|0;else{var g=d[c-3]^d[c-8]^d[c-14]^d[c-16];d[c]=g<<1|g>>>31}g=(e<<5|e>>>27)+b+d[c];g=20>c?g+((f&h|~f&j)+1518500249):40>c?g+((f^h^j)+1859775393):60>c?g+((f&h|f&j|h&j)-1894007588):g+((f^h^\nj)-899497514);b=j;j=h;h=f<<30|f>>>2;f=e;e=g}a[0]=a[0]+e|0;a[1]=a[1]+f|0;a[2]=a[2]+h|0;a[3]=a[3]+j|0;a[4]=a[4]+b|0},_doFinalize:function(){var b=this._data,d=b.words,a=8*this._nDataBytes,e=8*b.sigBytes;d[e>>>5]|=128<<24-e%32;d[(e+64>>>9<<4)+14]=Math.floor(a/4294967296);d[(e+64>>>9<<4)+15]=a;b.sigBytes=4*d.length;this._process();return this._hash},clone:function(){var b=l.clone.call(this);b._hash=this._hash.clone();return b}});k.SHA1=l._createHelper(b);k.HmacSHA1=l._createHmacHelper(b)})();\n\n/*\nCryptoJS v3.1.2 sha256-min.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n(function(k){for(var g=CryptoJS,h=g.lib,v=h.WordArray,j=h.Hasher,h=g.algo,s=[],t=[],u=function(q){return 4294967296*(q-(q|0))|0},l=2,b=0;64>b;){var d;a:{d=l;for(var w=k.sqrt(d),r=2;r<=w;r++)if(!(d%r)){d=!1;break a}d=!0}d&&(8>b&&(s[b]=u(k.pow(l,0.5))),t[b]=u(k.pow(l,1/3)),b++);l++}var n=[],h=h.SHA256=j.extend({_doReset:function(){this._hash=new v.init(s.slice(0))},_doProcessBlock:function(q,h){for(var a=this._hash.words,c=a[0],d=a[1],b=a[2],k=a[3],f=a[4],g=a[5],j=a[6],l=a[7],e=0;64>e;e++){if(16>e)n[e]=\nq[h+e]|0;else{var m=n[e-15],p=n[e-2];n[e]=((m<<25|m>>>7)^(m<<14|m>>>18)^m>>>3)+n[e-7]+((p<<15|p>>>17)^(p<<13|p>>>19)^p>>>10)+n[e-16]}m=l+((f<<26|f>>>6)^(f<<21|f>>>11)^(f<<7|f>>>25))+(f&g^~f&j)+t[e]+n[e];p=((c<<30|c>>>2)^(c<<19|c>>>13)^(c<<10|c>>>22))+(c&d^c&b^d&b);l=j;j=g;g=f;f=k+m|0;k=b;b=d;d=c;c=m+p|0}a[0]=a[0]+c|0;a[1]=a[1]+d|0;a[2]=a[2]+b|0;a[3]=a[3]+k|0;a[4]=a[4]+f|0;a[5]=a[5]+g|0;a[6]=a[6]+j|0;a[7]=a[7]+l|0},_doFinalize:function(){var d=this._data,b=d.words,a=8*this._nDataBytes,c=8*d.sigBytes;\nb[c>>>5]|=128<<24-c%32;b[(c+64>>>9<<4)+14]=k.floor(a/4294967296);b[(c+64>>>9<<4)+15]=a;d.sigBytes=4*b.length;this._process();return this._hash},clone:function(){var b=j.clone.call(this);b._hash=this._hash.clone();return b}});g.SHA256=j._createHelper(h);g.HmacSHA256=j._createHmacHelper(h)})(Math);\n\n/*\nCryptoJS v3.1.2 sha224-min.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n(function(){var b=CryptoJS,d=b.lib.WordArray,a=b.algo,c=a.SHA256,a=a.SHA224=c.extend({_doReset:function(){this._hash=new d.init([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428])},_doFinalize:function(){var a=c._doFinalize.call(this);a.sigBytes-=4;return a}});b.SHA224=c._createHelper(a);b.HmacSHA224=c._createHmacHelper(a)})();\n\n/*\nCryptoJS v3.1.2 sha512-min.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n(function(){function a(){return d.create.apply(d,arguments)}for(var n=CryptoJS,r=n.lib.Hasher,e=n.x64,d=e.Word,T=e.WordArray,e=n.algo,ea=[a(1116352408,3609767458),a(1899447441,602891725),a(3049323471,3964484399),a(3921009573,2173295548),a(961987163,4081628472),a(1508970993,3053834265),a(2453635748,2937671579),a(2870763221,3664609560),a(3624381080,2734883394),a(310598401,1164996542),a(607225278,1323610764),a(1426881987,3590304994),a(1925078388,4068182383),a(2162078206,991336113),a(2614888103,633803317),\na(3248222580,3479774868),a(3835390401,2666613458),a(4022224774,944711139),a(264347078,2341262773),a(604807628,2007800933),a(770255983,1495990901),a(1249150122,1856431235),a(1555081692,3175218132),a(1996064986,2198950837),a(2554220882,3999719339),a(2821834349,766784016),a(2952996808,2566594879),a(3210313671,3203337956),a(3336571891,1034457026),a(3584528711,2466948901),a(113926993,3758326383),a(338241895,168717936),a(666307205,1188179964),a(773529912,1546045734),a(1294757372,1522805485),a(1396182291,\n2643833823),a(1695183700,2343527390),a(1986661051,1014477480),a(2177026350,1206759142),a(2456956037,344077627),a(2730485921,1290863460),a(2820302411,3158454273),a(3259730800,3505952657),a(3345764771,106217008),a(3516065817,3606008344),a(3600352804,1432725776),a(4094571909,1467031594),a(275423344,851169720),a(430227734,3100823752),a(506948616,1363258195),a(659060556,3750685593),a(883997877,3785050280),a(958139571,3318307427),a(1322822218,3812723403),a(1537002063,2003034995),a(1747873779,3602036899),\na(1955562222,1575990012),a(2024104815,1125592928),a(2227730452,2716904306),a(2361852424,442776044),a(2428436474,593698344),a(2756734187,3733110249),a(3204031479,2999351573),a(3329325298,3815920427),a(3391569614,3928383900),a(3515267271,566280711),a(3940187606,3454069534),a(4118630271,4000239992),a(116418474,1914138554),a(174292421,2731055270),a(289380356,3203993006),a(460393269,320620315),a(685471733,587496836),a(852142971,1086792851),a(1017036298,365543100),a(1126000580,2618297676),a(1288033470,\n3409855158),a(1501505948,4234509866),a(1607167915,987167468),a(1816402316,1246189591)],v=[],w=0;80>w;w++)v[w]=a();e=e.SHA512=r.extend({_doReset:function(){this._hash=new T.init([new d.init(1779033703,4089235720),new d.init(3144134277,2227873595),new d.init(1013904242,4271175723),new d.init(2773480762,1595750129),new d.init(1359893119,2917565137),new d.init(2600822924,725511199),new d.init(528734635,4215389547),new d.init(1541459225,327033209)])},_doProcessBlock:function(a,d){for(var f=this._hash.words,\nF=f[0],e=f[1],n=f[2],r=f[3],G=f[4],H=f[5],I=f[6],f=f[7],w=F.high,J=F.low,X=e.high,K=e.low,Y=n.high,L=n.low,Z=r.high,M=r.low,$=G.high,N=G.low,aa=H.high,O=H.low,ba=I.high,P=I.low,ca=f.high,Q=f.low,k=w,g=J,z=X,x=K,A=Y,y=L,U=Z,B=M,l=$,h=N,R=aa,C=O,S=ba,D=P,V=ca,E=Q,m=0;80>m;m++){var s=v[m];if(16>m)var j=s.high=a[d+2*m]|0,b=s.low=a[d+2*m+1]|0;else{var j=v[m-15],b=j.high,p=j.low,j=(b>>>1|p<<31)^(b>>>8|p<<24)^b>>>7,p=(p>>>1|b<<31)^(p>>>8|b<<24)^(p>>>7|b<<25),u=v[m-2],b=u.high,c=u.low,u=(b>>>19|c<<13)^(b<<\n3|c>>>29)^b>>>6,c=(c>>>19|b<<13)^(c<<3|b>>>29)^(c>>>6|b<<26),b=v[m-7],W=b.high,t=v[m-16],q=t.high,t=t.low,b=p+b.low,j=j+W+(b>>>0<p>>>0?1:0),b=b+c,j=j+u+(b>>>0<c>>>0?1:0),b=b+t,j=j+q+(b>>>0<t>>>0?1:0);s.high=j;s.low=b}var W=l&R^~l&S,t=h&C^~h&D,s=k&z^k&A^z&A,T=g&x^g&y^x&y,p=(k>>>28|g<<4)^(k<<30|g>>>2)^(k<<25|g>>>7),u=(g>>>28|k<<4)^(g<<30|k>>>2)^(g<<25|k>>>7),c=ea[m],fa=c.high,da=c.low,c=E+((h>>>14|l<<18)^(h>>>18|l<<14)^(h<<23|l>>>9)),q=V+((l>>>14|h<<18)^(l>>>18|h<<14)^(l<<23|h>>>9))+(c>>>0<E>>>0?1:\n0),c=c+t,q=q+W+(c>>>0<t>>>0?1:0),c=c+da,q=q+fa+(c>>>0<da>>>0?1:0),c=c+b,q=q+j+(c>>>0<b>>>0?1:0),b=u+T,s=p+s+(b>>>0<u>>>0?1:0),V=S,E=D,S=R,D=C,R=l,C=h,h=B+c|0,l=U+q+(h>>>0<B>>>0?1:0)|0,U=A,B=y,A=z,y=x,z=k,x=g,g=c+b|0,k=q+s+(g>>>0<c>>>0?1:0)|0}J=F.low=J+g;F.high=w+k+(J>>>0<g>>>0?1:0);K=e.low=K+x;e.high=X+z+(K>>>0<x>>>0?1:0);L=n.low=L+y;n.high=Y+A+(L>>>0<y>>>0?1:0);M=r.low=M+B;r.high=Z+U+(M>>>0<B>>>0?1:0);N=G.low=N+h;G.high=$+l+(N>>>0<h>>>0?1:0);O=H.low=O+C;H.high=aa+R+(O>>>0<C>>>0?1:0);P=I.low=P+D;\nI.high=ba+S+(P>>>0<D>>>0?1:0);Q=f.low=Q+E;f.high=ca+V+(Q>>>0<E>>>0?1:0)},_doFinalize:function(){var a=this._data,d=a.words,f=8*this._nDataBytes,e=8*a.sigBytes;d[e>>>5]|=128<<24-e%32;d[(e+128>>>10<<5)+30]=Math.floor(f/4294967296);d[(e+128>>>10<<5)+31]=f;a.sigBytes=4*d.length;this._process();return this._hash.toX32()},clone:function(){var a=r.clone.call(this);a._hash=this._hash.clone();return a},blockSize:32});n.SHA512=r._createHelper(e);n.HmacSHA512=r._createHmacHelper(e)})();\n\n/*\nCryptoJS v3.1.2 sha384-min.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n(function(){var c=CryptoJS,a=c.x64,b=a.Word,e=a.WordArray,a=c.algo,d=a.SHA512,a=a.SHA384=d.extend({_doReset:function(){this._hash=new e.init([new b.init(3418070365,3238371032),new b.init(1654270250,914150663),new b.init(2438529370,812702999),new b.init(355462360,4144912697),new b.init(1731405415,4290775857),new b.init(2394180231,1750603025),new b.init(3675008525,1694076839),new b.init(1203062813,3204075428)])},_doFinalize:function(){var a=d._doFinalize.call(this);a.sigBytes-=16;return a}});c.SHA384=\nd._createHelper(a);c.HmacSHA384=d._createHmacHelper(a)})();\n\n/*\nCryptoJS v3.1.2 ripemd160-min.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n/*\n\n(c) 2012 by Cedric Mesnil. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n(function(){var q=CryptoJS,d=q.lib,n=d.WordArray,p=d.Hasher,d=q.algo,x=n.create([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13]),y=n.create([5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11]),z=n.create([11,14,15,12,\n5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6]),A=n.create([8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]),B=n.create([0,1518500249,1859775393,2400959708,2840853838]),C=n.create([1352829926,1548603684,1836072691,\n2053994217,0]),d=d.RIPEMD160=p.extend({_doReset:function(){this._hash=n.create([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(e,v){for(var b=0;16>b;b++){var c=v+b,f=e[c];e[c]=(f<<8|f>>>24)&16711935|(f<<24|f>>>8)&4278255360}var c=this._hash.words,f=B.words,d=C.words,n=x.words,q=y.words,p=z.words,w=A.words,t,g,h,j,r,u,k,l,m,s;u=t=c[0];k=g=c[1];l=h=c[2];m=j=c[3];s=r=c[4];for(var a,b=0;80>b;b+=1)a=t+e[v+n[b]]|0,a=16>b?a+((g^h^j)+f[0]):32>b?a+((g&h|~g&j)+f[1]):48>b?\na+(((g|~h)^j)+f[2]):64>b?a+((g&j|h&~j)+f[3]):a+((g^(h|~j))+f[4]),a|=0,a=a<<p[b]|a>>>32-p[b],a=a+r|0,t=r,r=j,j=h<<10|h>>>22,h=g,g=a,a=u+e[v+q[b]]|0,a=16>b?a+((k^(l|~m))+d[0]):32>b?a+((k&m|l&~m)+d[1]):48>b?a+(((k|~l)^m)+d[2]):64>b?a+((k&l|~k&m)+d[3]):a+((k^l^m)+d[4]),a|=0,a=a<<w[b]|a>>>32-w[b],a=a+s|0,u=s,s=m,m=l<<10|l>>>22,l=k,k=a;a=c[1]+h+m|0;c[1]=c[2]+j+s|0;c[2]=c[3]+r+u|0;c[3]=c[4]+t+k|0;c[4]=c[0]+g+l|0;c[0]=a},_doFinalize:function(){var e=this._data,d=e.words,b=8*this._nDataBytes,c=8*e.sigBytes;\nd[c>>>5]|=128<<24-c%32;d[(c+64>>>9<<4)+14]=(b<<8|b>>>24)&16711935|(b<<24|b>>>8)&4278255360;e.sigBytes=4*(d.length+1);this._process();e=this._hash;d=e.words;for(b=0;5>b;b++)c=d[b],d[b]=(c<<8|c>>>24)&16711935|(c<<24|c>>>8)&4278255360;return e},clone:function(){var d=p.clone.call(this);d._hash=this._hash.clone();return d}});q.RIPEMD160=p._createHelper(d);q.HmacRIPEMD160=p._createHmacHelper(d)})(Math);\n\n/*\nCryptoJS v3.1.2 hmac.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n(function(){var c=CryptoJS,k=c.enc.Utf8;c.algo.HMAC=c.lib.Base.extend({init:function(a,b){a=this._hasher=new a.init;\"string\"==typeof b&&(b=k.parse(b));var c=a.blockSize,e=4*c;b.sigBytes>e&&(b=a.finalize(b));b.clamp();for(var f=this._oKey=b.clone(),g=this._iKey=b.clone(),h=f.words,j=g.words,d=0;d<c;d++)h[d]^=1549556828,j[d]^=909522486;f.sigBytes=g.sigBytes=e;this.reset()},reset:function(){var a=this._hasher;a.reset();a.update(this._iKey)},update:function(a){this._hasher.update(a);return this},finalize:function(a){var b=\nthis._hasher;a=b.finalize(a);b.reset();return b.finalize(this._oKey.clone().concat(a))}})})();\n\n/*\nCryptoJS v3.1.2 pbkdf2-min.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n(function(){var b=CryptoJS,a=b.lib,d=a.Base,m=a.WordArray,a=b.algo,q=a.HMAC,l=a.PBKDF2=d.extend({cfg:d.extend({keySize:4,hasher:a.SHA1,iterations:1}),init:function(a){this.cfg=this.cfg.extend(a)},compute:function(a,b){for(var c=this.cfg,f=q.create(c.hasher,a),g=m.create(),d=m.create([1]),l=g.words,r=d.words,n=c.keySize,c=c.iterations;l.length<n;){var h=f.update(b).finalize(d);f.reset();for(var j=h.words,s=j.length,k=h,p=1;p<c;p++){k=f.finalize(k);f.reset();for(var t=k.words,e=0;e<s;e++)j[e]^=t[e]}g.concat(h);\nr[0]++}g.sigBytes=4*n;return g}});b.PBKDF2=function(a,b,c){return l.create(c).compute(a,b)}})();\n\n/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\n */\nvar b64map=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";var b64pad=\"=\";function hex2b64(d){var b;var e;var a=\"\";for(b=0;b+3<=d.length;b+=3){e=parseInt(d.substring(b,b+3),16);a+=b64map.charAt(e>>6)+b64map.charAt(e&63)}if(b+1==d.length){e=parseInt(d.substring(b,b+1),16);a+=b64map.charAt(e<<2)}else{if(b+2==d.length){e=parseInt(d.substring(b,b+2),16);a+=b64map.charAt(e>>2)+b64map.charAt((e&3)<<4)}}if(b64pad){while((a.length&3)>0){a+=b64pad}}return a}function b64tohex(f){var d=\"\";var e;var b=0;var c;var a;for(e=0;e<f.length;++e){if(f.charAt(e)==b64pad){break}a=b64map.indexOf(f.charAt(e));if(a<0){continue}if(b==0){d+=int2char(a>>2);c=a&3;b=1}else{if(b==1){d+=int2char((c<<2)|(a>>4));c=a&15;b=2}else{if(b==2){d+=int2char(c);d+=int2char(a>>2);c=a&3;b=3}else{d+=int2char((c<<2)|(a>>4));d+=int2char(a&15);b=0}}}}if(b==1){d+=int2char(c<<2)}return d}function b64toBA(e){var d=b64tohex(e);var c;var b=new Array();for(c=0;2*c<d.length;++c){b[c]=parseInt(d.substring(2*c,2*c+2),16)}return b};\n/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\n */\nvar dbits;var canary=244837814094590;var j_lm=((canary&16777215)==15715070);function BigInteger(e,d,f){if(e!=null){if(\"number\"==typeof e){this.fromNumber(e,d,f)}else{if(d==null&&\"string\"!=typeof e){this.fromString(e,256)}else{this.fromString(e,d)}}}}function nbi(){return new BigInteger(null)}function am1(f,a,b,e,h,g){while(--g>=0){var d=a*this[f++]+b[e]+h;h=Math.floor(d/67108864);b[e++]=d&67108863}return h}function am2(f,q,r,e,o,a){var k=q&32767,p=q>>15;while(--a>=0){var d=this[f]&32767;var g=this[f++]>>15;var b=p*d+g*k;d=k*d+((b&32767)<<15)+r[e]+(o&1073741823);o=(d>>>30)+(b>>>15)+p*g+(o>>>30);r[e++]=d&1073741823}return o}function am3(f,q,r,e,o,a){var k=q&16383,p=q>>14;while(--a>=0){var d=this[f]&16383;var g=this[f++]>>14;var b=p*d+g*k;d=k*d+((b&16383)<<14)+r[e]+o;o=(d>>28)+(b>>14)+p*g;r[e++]=d&268435455}return o}if(j_lm&&(navigator.appName==\"Microsoft Internet Explorer\")){BigInteger.prototype.am=am2;dbits=30}else{if(j_lm&&(navigator.appName!=\"Netscape\")){BigInteger.prototype.am=am1;dbits=26}else{BigInteger.prototype.am=am3;dbits=28}}BigInteger.prototype.DB=dbits;BigInteger.prototype.DM=((1<<dbits)-1);BigInteger.prototype.DV=(1<<dbits);var BI_FP=52;BigInteger.prototype.FV=Math.pow(2,BI_FP);BigInteger.prototype.F1=BI_FP-dbits;BigInteger.prototype.F2=2*dbits-BI_FP;var BI_RM=\"0123456789abcdefghijklmnopqrstuvwxyz\";var BI_RC=new Array();var rr,vv;rr=\"0\".charCodeAt(0);for(vv=0;vv<=9;++vv){BI_RC[rr++]=vv}rr=\"a\".charCodeAt(0);for(vv=10;vv<36;++vv){BI_RC[rr++]=vv}rr=\"A\".charCodeAt(0);for(vv=10;vv<36;++vv){BI_RC[rr++]=vv}function int2char(a){return BI_RM.charAt(a)}function intAt(b,a){var d=BI_RC[b.charCodeAt(a)];return(d==null)?-1:d}function bnpCopyTo(b){for(var a=this.t-1;a>=0;--a){b[a]=this[a]}b.t=this.t;b.s=this.s}function bnpFromInt(a){this.t=1;this.s=(a<0)?-1:0;if(a>0){this[0]=a}else{if(a<-1){this[0]=a+this.DV}else{this.t=0}}}function nbv(a){var b=nbi();b.fromInt(a);return b}function bnpFromString(h,c){var e;if(c==16){e=4}else{if(c==8){e=3}else{if(c==256){e=8}else{if(c==2){e=1}else{if(c==32){e=5}else{if(c==4){e=2}else{this.fromRadix(h,c);return}}}}}}this.t=0;this.s=0;var g=h.length,d=false,f=0;while(--g>=0){var a=(e==8)?h[g]&255:intAt(h,g);if(a<0){if(h.charAt(g)==\"-\"){d=true}continue}d=false;if(f==0){this[this.t++]=a}else{if(f+e>this.DB){this[this.t-1]|=(a&((1<<(this.DB-f))-1))<<f;this[this.t++]=(a>>(this.DB-f))}else{this[this.t-1]|=a<<f}}f+=e;if(f>=this.DB){f-=this.DB}}if(e==8&&(h[0]&128)!=0){this.s=-1;if(f>0){this[this.t-1]|=((1<<(this.DB-f))-1)<<f}}this.clamp();if(d){BigInteger.ZERO.subTo(this,this)}}function bnpClamp(){var a=this.s&this.DM;while(this.t>0&&this[this.t-1]==a){--this.t}}function bnToString(c){if(this.s<0){return\"-\"+this.negate().toString(c)}var e;if(c==16){e=4}else{if(c==8){e=3}else{if(c==2){e=1}else{if(c==32){e=5}else{if(c==4){e=2}else{return this.toRadix(c)}}}}}var g=(1<<e)-1,l,a=false,h=\"\",f=this.t;var j=this.DB-(f*this.DB)%e;if(f-->0){if(j<this.DB&&(l=this[f]>>j)>0){a=true;h=int2char(l)}while(f>=0){if(j<e){l=(this[f]&((1<<j)-1))<<(e-j);l|=this[--f]>>(j+=this.DB-e)}else{l=(this[f]>>(j-=e))&g;if(j<=0){j+=this.DB;--f}}if(l>0){a=true}if(a){h+=int2char(l)}}}return a?h:\"0\"}function bnNegate(){var a=nbi();BigInteger.ZERO.subTo(this,a);return a}function bnAbs(){return(this.s<0)?this.negate():this}function bnCompareTo(b){var d=this.s-b.s;if(d!=0){return d}var c=this.t;d=c-b.t;if(d!=0){return(this.s<0)?-d:d}while(--c>=0){if((d=this[c]-b[c])!=0){return d}}return 0}function nbits(a){var c=1,b;if((b=a>>>16)!=0){a=b;c+=16}if((b=a>>8)!=0){a=b;c+=8}if((b=a>>4)!=0){a=b;c+=4}if((b=a>>2)!=0){a=b;c+=2}if((b=a>>1)!=0){a=b;c+=1}return c}function bnBitLength(){if(this.t<=0){return 0}return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM))}function bnpDLShiftTo(c,b){var a;for(a=this.t-1;a>=0;--a){b[a+c]=this[a]}for(a=c-1;a>=0;--a){b[a]=0}b.t=this.t+c;b.s=this.s}function bnpDRShiftTo(c,b){for(var a=c;a<this.t;++a){b[a-c]=this[a]}b.t=Math.max(this.t-c,0);b.s=this.s}function bnpLShiftTo(j,e){var b=j%this.DB;var a=this.DB-b;var g=(1<<a)-1;var f=Math.floor(j/this.DB),h=(this.s<<b)&this.DM,d;for(d=this.t-1;d>=0;--d){e[d+f+1]=(this[d]>>a)|h;h=(this[d]&g)<<b}for(d=f-1;d>=0;--d){e[d]=0}e[f]=h;e.t=this.t+f+1;e.s=this.s;e.clamp()}function bnpRShiftTo(g,d){d.s=this.s;var e=Math.floor(g/this.DB);if(e>=this.t){d.t=0;return}var b=g%this.DB;var a=this.DB-b;var f=(1<<b)-1;d[0]=this[e]>>b;for(var c=e+1;c<this.t;++c){d[c-e-1]|=(this[c]&f)<<a;d[c-e]=this[c]>>b}if(b>0){d[this.t-e-1]|=(this.s&f)<<a}d.t=this.t-e;d.clamp()}function bnpSubTo(d,f){var e=0,g=0,b=Math.min(d.t,this.t);while(e<b){g+=this[e]-d[e];f[e++]=g&this.DM;g>>=this.DB}if(d.t<this.t){g-=d.s;while(e<this.t){g+=this[e];f[e++]=g&this.DM;g>>=this.DB}g+=this.s}else{g+=this.s;while(e<d.t){g-=d[e];f[e++]=g&this.DM;g>>=this.DB}g-=d.s}f.s=(g<0)?-1:0;if(g<-1){f[e++]=this.DV+g}else{if(g>0){f[e++]=g}}f.t=e;f.clamp()}function bnpMultiplyTo(c,e){var b=this.abs(),f=c.abs();var d=b.t;e.t=d+f.t;while(--d>=0){e[d]=0}for(d=0;d<f.t;++d){e[d+b.t]=b.am(0,f[d],e,d,0,b.t)}e.s=0;e.clamp();if(this.s!=c.s){BigInteger.ZERO.subTo(e,e)}}function bnpSquareTo(d){var a=this.abs();var b=d.t=2*a.t;while(--b>=0){d[b]=0}for(b=0;b<a.t-1;++b){var e=a.am(b,a[b],d,2*b,0,1);if((d[b+a.t]+=a.am(b+1,2*a[b],d,2*b+1,e,a.t-b-1))>=a.DV){d[b+a.t]-=a.DV;d[b+a.t+1]=1}}if(d.t>0){d[d.t-1]+=a.am(b,a[b],d,2*b,0,1)}d.s=0;d.clamp()}function bnpDivRemTo(n,h,g){var w=n.abs();if(w.t<=0){return}var k=this.abs();if(k.t<w.t){if(h!=null){h.fromInt(0)}if(g!=null){this.copyTo(g)}return}if(g==null){g=nbi()}var d=nbi(),a=this.s,l=n.s;var v=this.DB-nbits(w[w.t-1]);if(v>0){w.lShiftTo(v,d);k.lShiftTo(v,g)}else{w.copyTo(d);k.copyTo(g)}var p=d.t;var b=d[p-1];if(b==0){return}var o=b*(1<<this.F1)+((p>1)?d[p-2]>>this.F2:0);var A=this.FV/o,z=(1<<this.F1)/o,x=1<<this.F2;var u=g.t,s=u-p,f=(h==null)?nbi():h;d.dlShiftTo(s,f);if(g.compareTo(f)>=0){g[g.t++]=1;g.subTo(f,g)}BigInteger.ONE.dlShiftTo(p,f);f.subTo(d,d);while(d.t<p){d[d.t++]=0}while(--s>=0){var c=(g[--u]==b)?this.DM:Math.floor(g[u]*A+(g[u-1]+x)*z);if((g[u]+=d.am(0,c,g,s,0,p))<c){d.dlShiftTo(s,f);g.subTo(f,g);while(g[u]<--c){g.subTo(f,g)}}}if(h!=null){g.drShiftTo(p,h);if(a!=l){BigInteger.ZERO.subTo(h,h)}}g.t=p;g.clamp();if(v>0){g.rShiftTo(v,g)}if(a<0){BigInteger.ZERO.subTo(g,g)}}function bnMod(b){var c=nbi();this.abs().divRemTo(b,null,c);if(this.s<0&&c.compareTo(BigInteger.ZERO)>0){b.subTo(c,c)}return c}function Classic(a){this.m=a}function cConvert(a){if(a.s<0||a.compareTo(this.m)>=0){return a.mod(this.m)}else{return a}}function cRevert(a){return a}function cReduce(a){a.divRemTo(this.m,null,a)}function cMulTo(a,c,b){a.multiplyTo(c,b);this.reduce(b)}function cSqrTo(a,b){a.squareTo(b);this.reduce(b)}Classic.prototype.convert=cConvert;Classic.prototype.revert=cRevert;Classic.prototype.reduce=cReduce;Classic.prototype.mulTo=cMulTo;Classic.prototype.sqrTo=cSqrTo;function bnpInvDigit(){if(this.t<1){return 0}var a=this[0];if((a&1)==0){return 0}var b=a&3;b=(b*(2-(a&15)*b))&15;b=(b*(2-(a&255)*b))&255;b=(b*(2-(((a&65535)*b)&65535)))&65535;b=(b*(2-a*b%this.DV))%this.DV;return(b>0)?this.DV-b:-b}function Montgomery(a){this.m=a;this.mp=a.invDigit();this.mpl=this.mp&32767;this.mph=this.mp>>15;this.um=(1<<(a.DB-15))-1;this.mt2=2*a.t}function montConvert(a){var b=nbi();a.abs().dlShiftTo(this.m.t,b);b.divRemTo(this.m,null,b);if(a.s<0&&b.compareTo(BigInteger.ZERO)>0){this.m.subTo(b,b)}return b}function montRevert(a){var b=nbi();a.copyTo(b);this.reduce(b);return b}function montReduce(a){while(a.t<=this.mt2){a[a.t++]=0}for(var c=0;c<this.m.t;++c){var b=a[c]&32767;var d=(b*this.mpl+(((b*this.mph+(a[c]>>15)*this.mpl)&this.um)<<15))&a.DM;b=c+this.m.t;a[b]+=this.m.am(0,d,a,c,0,this.m.t);while(a[b]>=a.DV){a[b]-=a.DV;a[++b]++}}a.clamp();a.drShiftTo(this.m.t,a);if(a.compareTo(this.m)>=0){a.subTo(this.m,a)}}function montSqrTo(a,b){a.squareTo(b);this.reduce(b)}function montMulTo(a,c,b){a.multiplyTo(c,b);this.reduce(b)}Montgomery.prototype.convert=montConvert;Montgomery.prototype.revert=montRevert;Montgomery.prototype.reduce=montReduce;Montgomery.prototype.mulTo=montMulTo;Montgomery.prototype.sqrTo=montSqrTo;function bnpIsEven(){return((this.t>0)?(this[0]&1):this.s)==0}function bnpExp(h,j){if(h>4294967295||h<1){return BigInteger.ONE}var f=nbi(),a=nbi(),d=j.convert(this),c=nbits(h)-1;d.copyTo(f);while(--c>=0){j.sqrTo(f,a);if((h&(1<<c))>0){j.mulTo(a,d,f)}else{var b=f;f=a;a=b}}return j.revert(f)}function bnModPowInt(b,a){var c;if(b<256||a.isEven()){c=new Classic(a)}else{c=new Montgomery(a)}return this.exp(b,c)}BigInteger.prototype.copyTo=bnpCopyTo;BigInteger.prototype.fromInt=bnpFromInt;BigInteger.prototype.fromString=bnpFromString;BigInteger.prototype.clamp=bnpClamp;BigInteger.prototype.dlShiftTo=bnpDLShiftTo;BigInteger.prototype.drShiftTo=bnpDRShiftTo;BigInteger.prototype.lShiftTo=bnpLShiftTo;BigInteger.prototype.rShiftTo=bnpRShiftTo;BigInteger.prototype.subTo=bnpSubTo;BigInteger.prototype.multiplyTo=bnpMultiplyTo;BigInteger.prototype.squareTo=bnpSquareTo;BigInteger.prototype.divRemTo=bnpDivRemTo;BigInteger.prototype.invDigit=bnpInvDigit;BigInteger.prototype.isEven=bnpIsEven;BigInteger.prototype.exp=bnpExp;BigInteger.prototype.toString=bnToString;BigInteger.prototype.negate=bnNegate;BigInteger.prototype.abs=bnAbs;BigInteger.prototype.compareTo=bnCompareTo;BigInteger.prototype.bitLength=bnBitLength;BigInteger.prototype.mod=bnMod;BigInteger.prototype.modPowInt=bnModPowInt;BigInteger.ZERO=nbv(0);BigInteger.ONE=nbv(1);\n/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\n */\nfunction bnClone(){var a=nbi();this.copyTo(a);return a}function bnIntValue(){if(this.s<0){if(this.t==1){return this[0]-this.DV}else{if(this.t==0){return -1}}}else{if(this.t==1){return this[0]}else{if(this.t==0){return 0}}}return((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0]}function bnByteValue(){return(this.t==0)?this.s:(this[0]<<24)>>24}function bnShortValue(){return(this.t==0)?this.s:(this[0]<<16)>>16}function bnpChunkSize(a){return Math.floor(Math.LN2*this.DB/Math.log(a))}function bnSigNum(){if(this.s<0){return -1}else{if(this.t<=0||(this.t==1&&this[0]<=0)){return 0}else{return 1}}}function bnpToRadix(c){if(c==null){c=10}if(this.signum()==0||c<2||c>36){return\"0\"}var f=this.chunkSize(c);var e=Math.pow(c,f);var i=nbv(e),j=nbi(),h=nbi(),g=\"\";this.divRemTo(i,j,h);while(j.signum()>0){g=(e+h.intValue()).toString(c).substr(1)+g;j.divRemTo(i,j,h)}return h.intValue().toString(c)+g}function bnpFromRadix(m,h){this.fromInt(0);if(h==null){h=10}var f=this.chunkSize(h);var g=Math.pow(h,f),e=false,a=0,l=0;for(var c=0;c<m.length;++c){var k=intAt(m,c);if(k<0){if(m.charAt(c)==\"-\"&&this.signum()==0){e=true}continue}l=h*l+k;if(++a>=f){this.dMultiply(g);this.dAddOffset(l,0);a=0;l=0}}if(a>0){this.dMultiply(Math.pow(h,a));this.dAddOffset(l,0)}if(e){BigInteger.ZERO.subTo(this,this)}}function bnpFromNumber(f,e,h){if(\"number\"==typeof e){if(f<2){this.fromInt(1)}else{this.fromNumber(f,h);if(!this.testBit(f-1)){this.bitwiseTo(BigInteger.ONE.shiftLeft(f-1),op_or,this)}if(this.isEven()){this.dAddOffset(1,0)}while(!this.isProbablePrime(e)){this.dAddOffset(2,0);if(this.bitLength()>f){this.subTo(BigInteger.ONE.shiftLeft(f-1),this)}}}}else{var d=new Array(),g=f&7;d.length=(f>>3)+1;e.nextBytes(d);if(g>0){d[0]&=((1<<g)-1)}else{d[0]=0}this.fromString(d,256)}}function bnToByteArray(){var b=this.t,c=new Array();c[0]=this.s;var e=this.DB-(b*this.DB)%8,f,a=0;if(b-->0){if(e<this.DB&&(f=this[b]>>e)!=(this.s&this.DM)>>e){c[a++]=f|(this.s<<(this.DB-e))}while(b>=0){if(e<8){f=(this[b]&((1<<e)-1))<<(8-e);f|=this[--b]>>(e+=this.DB-8)}else{f=(this[b]>>(e-=8))&255;if(e<=0){e+=this.DB;--b}}if((f&128)!=0){f|=-256}if(a==0&&(this.s&128)!=(f&128)){++a}if(a>0||f!=this.s){c[a++]=f}}}return c}function bnEquals(b){return(this.compareTo(b)==0)}function bnMin(b){return(this.compareTo(b)<0)?this:b}function bnMax(b){return(this.compareTo(b)>0)?this:b}function bnpBitwiseTo(c,h,e){var d,g,b=Math.min(c.t,this.t);for(d=0;d<b;++d){e[d]=h(this[d],c[d])}if(c.t<this.t){g=c.s&this.DM;for(d=b;d<this.t;++d){e[d]=h(this[d],g)}e.t=this.t}else{g=this.s&this.DM;for(d=b;d<c.t;++d){e[d]=h(g,c[d])}e.t=c.t}e.s=h(this.s,c.s);e.clamp()}function op_and(a,b){return a&b}function bnAnd(b){var c=nbi();this.bitwiseTo(b,op_and,c);return c}function op_or(a,b){return a|b}function bnOr(b){var c=nbi();this.bitwiseTo(b,op_or,c);return c}function op_xor(a,b){return a^b}function bnXor(b){var c=nbi();this.bitwiseTo(b,op_xor,c);return c}function op_andnot(a,b){return a&~b}function bnAndNot(b){var c=nbi();this.bitwiseTo(b,op_andnot,c);return c}function bnNot(){var b=nbi();for(var a=0;a<this.t;++a){b[a]=this.DM&~this[a]}b.t=this.t;b.s=~this.s;return b}function bnShiftLeft(b){var a=nbi();if(b<0){this.rShiftTo(-b,a)}else{this.lShiftTo(b,a)}return a}function bnShiftRight(b){var a=nbi();if(b<0){this.lShiftTo(-b,a)}else{this.rShiftTo(b,a)}return a}function lbit(a){if(a==0){return -1}var b=0;if((a&65535)==0){a>>=16;b+=16}if((a&255)==0){a>>=8;b+=8}if((a&15)==0){a>>=4;b+=4}if((a&3)==0){a>>=2;b+=2}if((a&1)==0){++b}return b}function bnGetLowestSetBit(){for(var a=0;a<this.t;++a){if(this[a]!=0){return a*this.DB+lbit(this[a])}}if(this.s<0){return this.t*this.DB}return -1}function cbit(a){var b=0;while(a!=0){a&=a-1;++b}return b}function bnBitCount(){var c=0,a=this.s&this.DM;for(var b=0;b<this.t;++b){c+=cbit(this[b]^a)}return c}function bnTestBit(b){var a=Math.floor(b/this.DB);if(a>=this.t){return(this.s!=0)}return((this[a]&(1<<(b%this.DB)))!=0)}function bnpChangeBit(c,b){var a=BigInteger.ONE.shiftLeft(c);this.bitwiseTo(a,b,a);return a}function bnSetBit(a){return this.changeBit(a,op_or)}function bnClearBit(a){return this.changeBit(a,op_andnot)}function bnFlipBit(a){return this.changeBit(a,op_xor)}function bnpAddTo(d,f){var e=0,g=0,b=Math.min(d.t,this.t);while(e<b){g+=this[e]+d[e];f[e++]=g&this.DM;g>>=this.DB}if(d.t<this.t){g+=d.s;while(e<this.t){g+=this[e];f[e++]=g&this.DM;g>>=this.DB}g+=this.s}else{g+=this.s;while(e<d.t){g+=d[e];f[e++]=g&this.DM;g>>=this.DB}g+=d.s}f.s=(g<0)?-1:0;if(g>0){f[e++]=g}else{if(g<-1){f[e++]=this.DV+g}}f.t=e;f.clamp()}function bnAdd(b){var c=nbi();this.addTo(b,c);return c}function bnSubtract(b){var c=nbi();this.subTo(b,c);return c}function bnMultiply(b){var c=nbi();this.multiplyTo(b,c);return c}function bnSquare(){var a=nbi();this.squareTo(a);return a}function bnDivide(b){var c=nbi();this.divRemTo(b,c,null);return c}function bnRemainder(b){var c=nbi();this.divRemTo(b,null,c);return c}function bnDivideAndRemainder(b){var d=nbi(),c=nbi();this.divRemTo(b,d,c);return new Array(d,c)}function bnpDMultiply(a){this[this.t]=this.am(0,a-1,this,0,0,this.t);++this.t;this.clamp()}function bnpDAddOffset(b,a){if(b==0){return}while(this.t<=a){this[this.t++]=0}this[a]+=b;while(this[a]>=this.DV){this[a]-=this.DV;if(++a>=this.t){this[this.t++]=0}++this[a]}}function NullExp(){}function nNop(a){return a}function nMulTo(a,c,b){a.multiplyTo(c,b)}function nSqrTo(a,b){a.squareTo(b)}NullExp.prototype.convert=nNop;NullExp.prototype.revert=nNop;NullExp.prototype.mulTo=nMulTo;NullExp.prototype.sqrTo=nSqrTo;function bnPow(a){return this.exp(a,new NullExp())}function bnpMultiplyLowerTo(b,f,e){var d=Math.min(this.t+b.t,f);e.s=0;e.t=d;while(d>0){e[--d]=0}var c;for(c=e.t-this.t;d<c;++d){e[d+this.t]=this.am(0,b[d],e,d,0,this.t)}for(c=Math.min(b.t,f);d<c;++d){this.am(0,b[d],e,d,0,f-d)}e.clamp()}function bnpMultiplyUpperTo(b,e,d){--e;var c=d.t=this.t+b.t-e;d.s=0;while(--c>=0){d[c]=0}for(c=Math.max(e-this.t,0);c<b.t;++c){d[this.t+c-e]=this.am(e-c,b[c],d,0,0,this.t+c-e)}d.clamp();d.drShiftTo(1,d)}function Barrett(a){this.r2=nbi();this.q3=nbi();BigInteger.ONE.dlShiftTo(2*a.t,this.r2);this.mu=this.r2.divide(a);this.m=a}function barrettConvert(a){if(a.s<0||a.t>2*this.m.t){return a.mod(this.m)}else{if(a.compareTo(this.m)<0){return a}else{var b=nbi();a.copyTo(b);this.reduce(b);return b}}}function barrettRevert(a){return a}function barrettReduce(a){a.drShiftTo(this.m.t-1,this.r2);if(a.t>this.m.t+1){a.t=this.m.t+1;a.clamp()}this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);while(a.compareTo(this.r2)<0){a.dAddOffset(1,this.m.t+1)}a.subTo(this.r2,a);while(a.compareTo(this.m)>=0){a.subTo(this.m,a)}}function barrettSqrTo(a,b){a.squareTo(b);this.reduce(b)}function barrettMulTo(a,c,b){a.multiplyTo(c,b);this.reduce(b)}Barrett.prototype.convert=barrettConvert;Barrett.prototype.revert=barrettRevert;Barrett.prototype.reduce=barrettReduce;Barrett.prototype.mulTo=barrettMulTo;Barrett.prototype.sqrTo=barrettSqrTo;function bnModPow(q,f){var o=q.bitLength(),h,b=nbv(1),v;if(o<=0){return b}else{if(o<18){h=1}else{if(o<48){h=3}else{if(o<144){h=4}else{if(o<768){h=5}else{h=6}}}}}if(o<8){v=new Classic(f)}else{if(f.isEven()){v=new Barrett(f)}else{v=new Montgomery(f)}}var p=new Array(),d=3,s=h-1,a=(1<<h)-1;p[1]=v.convert(this);if(h>1){var A=nbi();v.sqrTo(p[1],A);while(d<=a){p[d]=nbi();v.mulTo(A,p[d-2],p[d]);d+=2}}var l=q.t-1,x,u=true,c=nbi(),y;o=nbits(q[l])-1;while(l>=0){if(o>=s){x=(q[l]>>(o-s))&a}else{x=(q[l]&((1<<(o+1))-1))<<(s-o);if(l>0){x|=q[l-1]>>(this.DB+o-s)}}d=h;while((x&1)==0){x>>=1;--d}if((o-=d)<0){o+=this.DB;--l}if(u){p[x].copyTo(b);u=false}else{while(d>1){v.sqrTo(b,c);v.sqrTo(c,b);d-=2}if(d>0){v.sqrTo(b,c)}else{y=b;b=c;c=y}v.mulTo(c,p[x],b)}while(l>=0&&(q[l]&(1<<o))==0){v.sqrTo(b,c);y=b;b=c;c=y;if(--o<0){o=this.DB-1;--l}}}return v.revert(b)}function bnGCD(c){var b=(this.s<0)?this.negate():this.clone();var h=(c.s<0)?c.negate():c.clone();if(b.compareTo(h)<0){var e=b;b=h;h=e}var d=b.getLowestSetBit(),f=h.getLowestSetBit();if(f<0){return b}if(d<f){f=d}if(f>0){b.rShiftTo(f,b);h.rShiftTo(f,h)}while(b.signum()>0){if((d=b.getLowestSetBit())>0){b.rShiftTo(d,b)}if((d=h.getLowestSetBit())>0){h.rShiftTo(d,h)}if(b.compareTo(h)>=0){b.subTo(h,b);b.rShiftTo(1,b)}else{h.subTo(b,h);h.rShiftTo(1,h)}}if(f>0){h.lShiftTo(f,h)}return h}function bnpModInt(e){if(e<=0){return 0}var c=this.DV%e,b=(this.s<0)?e-1:0;if(this.t>0){if(c==0){b=this[0]%e}else{for(var a=this.t-1;a>=0;--a){b=(c*b+this[a])%e}}}return b}function bnModInverse(f){var j=f.isEven();if((this.isEven()&&j)||f.signum()==0){return BigInteger.ZERO}var i=f.clone(),h=this.clone();var g=nbv(1),e=nbv(0),l=nbv(0),k=nbv(1);while(i.signum()!=0){while(i.isEven()){i.rShiftTo(1,i);if(j){if(!g.isEven()||!e.isEven()){g.addTo(this,g);e.subTo(f,e)}g.rShiftTo(1,g)}else{if(!e.isEven()){e.subTo(f,e)}}e.rShiftTo(1,e)}while(h.isEven()){h.rShiftTo(1,h);if(j){if(!l.isEven()||!k.isEven()){l.addTo(this,l);k.subTo(f,k)}l.rShiftTo(1,l)}else{if(!k.isEven()){k.subTo(f,k)}}k.rShiftTo(1,k)}if(i.compareTo(h)>=0){i.subTo(h,i);if(j){g.subTo(l,g)}e.subTo(k,e)}else{h.subTo(i,h);if(j){l.subTo(g,l)}k.subTo(e,k)}}if(h.compareTo(BigInteger.ONE)!=0){return BigInteger.ZERO}if(k.compareTo(f)>=0){return k.subtract(f)}if(k.signum()<0){k.addTo(f,k)}else{return k}if(k.signum()<0){return k.add(f)}else{return k}}var lowprimes=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997];var lplim=(1<<26)/lowprimes[lowprimes.length-1];function bnIsProbablePrime(e){var d,b=this.abs();if(b.t==1&&b[0]<=lowprimes[lowprimes.length-1]){for(d=0;d<lowprimes.length;++d){if(b[0]==lowprimes[d]){return true}}return false}if(b.isEven()){return false}d=1;while(d<lowprimes.length){var a=lowprimes[d],c=d+1;while(c<lowprimes.length&&a<lplim){a*=lowprimes[c++]}a=b.modInt(a);while(d<c){if(a%lowprimes[d++]==0){return false}}}return b.millerRabin(e)}function bnpMillerRabin(f){var g=this.subtract(BigInteger.ONE);var c=g.getLowestSetBit();if(c<=0){return false}var h=g.shiftRight(c);f=(f+1)>>1;if(f>lowprimes.length){f=lowprimes.length}var b=nbi();for(var e=0;e<f;++e){b.fromInt(lowprimes[Math.floor(Math.random()*lowprimes.length)]);var l=b.modPow(h,this);if(l.compareTo(BigInteger.ONE)!=0&&l.compareTo(g)!=0){var d=1;while(d++<c&&l.compareTo(g)!=0){l=l.modPowInt(2,this);if(l.compareTo(BigInteger.ONE)==0){return false}}if(l.compareTo(g)!=0){return false}}}return true}BigInteger.prototype.chunkSize=bnpChunkSize;BigInteger.prototype.toRadix=bnpToRadix;BigInteger.prototype.fromRadix=bnpFromRadix;BigInteger.prototype.fromNumber=bnpFromNumber;BigInteger.prototype.bitwiseTo=bnpBitwiseTo;BigInteger.prototype.changeBit=bnpChangeBit;BigInteger.prototype.addTo=bnpAddTo;BigInteger.prototype.dMultiply=bnpDMultiply;BigInteger.prototype.dAddOffset=bnpDAddOffset;BigInteger.prototype.multiplyLowerTo=bnpMultiplyLowerTo;BigInteger.prototype.multiplyUpperTo=bnpMultiplyUpperTo;BigInteger.prototype.modInt=bnpModInt;BigInteger.prototype.millerRabin=bnpMillerRabin;BigInteger.prototype.clone=bnClone;BigInteger.prototype.intValue=bnIntValue;BigInteger.prototype.byteValue=bnByteValue;BigInteger.prototype.shortValue=bnShortValue;BigInteger.prototype.signum=bnSigNum;BigInteger.prototype.toByteArray=bnToByteArray;BigInteger.prototype.equals=bnEquals;BigInteger.prototype.min=bnMin;BigInteger.prototype.max=bnMax;BigInteger.prototype.and=bnAnd;BigInteger.prototype.or=bnOr;BigInteger.prototype.xor=bnXor;BigInteger.prototype.andNot=bnAndNot;BigInteger.prototype.not=bnNot;BigInteger.prototype.shiftLeft=bnShiftLeft;BigInteger.prototype.shiftRight=bnShiftRight;BigInteger.prototype.getLowestSetBit=bnGetLowestSetBit;BigInteger.prototype.bitCount=bnBitCount;BigInteger.prototype.testBit=bnTestBit;BigInteger.prototype.setBit=bnSetBit;BigInteger.prototype.clearBit=bnClearBit;BigInteger.prototype.flipBit=bnFlipBit;BigInteger.prototype.add=bnAdd;BigInteger.prototype.subtract=bnSubtract;BigInteger.prototype.multiply=bnMultiply;BigInteger.prototype.divide=bnDivide;BigInteger.prototype.remainder=bnRemainder;BigInteger.prototype.divideAndRemainder=bnDivideAndRemainder;BigInteger.prototype.modPow=bnModPow;BigInteger.prototype.modInverse=bnModInverse;BigInteger.prototype.pow=bnPow;BigInteger.prototype.gcd=bnGCD;BigInteger.prototype.isProbablePrime=bnIsProbablePrime;BigInteger.prototype.square=bnSquare;\n/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\n */\nfunction Arcfour(){this.i=0;this.j=0;this.S=new Array()}function ARC4init(d){var c,a,b;for(c=0;c<256;++c){this.S[c]=c}a=0;for(c=0;c<256;++c){a=(a+this.S[c]+d[c%d.length])&255;b=this.S[c];this.S[c]=this.S[a];this.S[a]=b}this.i=0;this.j=0}function ARC4next(){var a;this.i=(this.i+1)&255;this.j=(this.j+this.S[this.i])&255;a=this.S[this.i];this.S[this.i]=this.S[this.j];this.S[this.j]=a;return this.S[(a+this.S[this.i])&255]}Arcfour.prototype.init=ARC4init;Arcfour.prototype.next=ARC4next;function prng_newstate(){return new Arcfour()}var rng_psize=256;\n/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\n */\nvar rng_state;var rng_pool;var rng_pptr;function rng_seed_int(a){rng_pool[rng_pptr++]^=a&255;rng_pool[rng_pptr++]^=(a>>8)&255;rng_pool[rng_pptr++]^=(a>>16)&255;rng_pool[rng_pptr++]^=(a>>24)&255;if(rng_pptr>=rng_psize){rng_pptr-=rng_psize}}function rng_seed_time(){rng_seed_int(new Date().getTime())}if(rng_pool==null){rng_pool=new Array();rng_pptr=0;var t;if(window!==undefined&&(window.crypto!==undefined||window.msCrypto!==undefined)){var crypto=window.crypto||window.msCrypto;if(crypto.getRandomValues){var ua=new Uint8Array(32);crypto.getRandomValues(ua);for(t=0;t<32;++t){rng_pool[rng_pptr++]=ua[t]}}else{if(navigator.appName==\"Netscape\"&&navigator.appVersion<\"5\"){var z=window.crypto.random(32);for(t=0;t<z.length;++t){rng_pool[rng_pptr++]=z.charCodeAt(t)&255}}}}while(rng_pptr<rng_psize){t=Math.floor(65536*Math.random());rng_pool[rng_pptr++]=t>>>8;rng_pool[rng_pptr++]=t&255}rng_pptr=0;rng_seed_time()}function rng_get_byte(){if(rng_state==null){rng_seed_time();rng_state=prng_newstate();rng_state.init(rng_pool);for(rng_pptr=0;rng_pptr<rng_pool.length;++rng_pptr){rng_pool[rng_pptr]=0}rng_pptr=0}return rng_state.next()}function rng_get_bytes(b){var a;for(a=0;a<b.length;++a){b[a]=rng_get_byte()}}function SecureRandom(){}SecureRandom.prototype.nextBytes=rng_get_bytes;\n/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\n */\nfunction parseBigInt(b,a){return new BigInteger(b,a)}function linebrk(c,d){var a=\"\";var b=0;while(b+d<c.length){a+=c.substring(b,b+d)+\"\\n\";b+=d}return a+c.substring(b,c.length)}function byte2Hex(a){if(a<16){return\"0\"+a.toString(16)}else{return a.toString(16)}}function pkcs1pad2(e,h){if(h<e.length+11){throw\"Message too long for RSA\";return null}var g=new Array();var d=e.length-1;while(d>=0&&h>0){var f=e.charCodeAt(d--);if(f<128){g[--h]=f}else{if((f>127)&&(f<2048)){g[--h]=(f&63)|128;g[--h]=(f>>6)|192}else{g[--h]=(f&63)|128;g[--h]=((f>>6)&63)|128;g[--h]=(f>>12)|224}}}g[--h]=0;var b=new SecureRandom();var a=new Array();while(h>2){a[0]=0;while(a[0]==0){b.nextBytes(a)}g[--h]=a[0]}g[--h]=2;g[--h]=0;return new BigInteger(g)}function oaep_mgf1_arr(c,a,e){var b=\"\",d=0;while(b.length<a){b+=e(String.fromCharCode.apply(String,c.concat([(d&4278190080)>>24,(d&16711680)>>16,(d&65280)>>8,d&255])));d+=1}return b}function oaep_pad(q,a,f,l){var c=KJUR.crypto.MessageDigest;var o=KJUR.crypto.Util;var b=null;if(!f){f=\"sha1\"}if(typeof f===\"string\"){b=c.getCanonicalAlgName(f);l=c.getHashLength(b);f=function(i){return hextorstr(o.hashHex(rstrtohex(i),b))}}if(q.length+2*l+2>a){throw\"Message too long for RSA\"}var k=\"\",e;for(e=0;e<a-q.length-2*l-2;e+=1){k+=\"\\x00\"}var h=f(\"\")+k+\"\\x01\"+q;var g=new Array(l);new SecureRandom().nextBytes(g);var j=oaep_mgf1_arr(g,h.length,f);var p=[];for(e=0;e<h.length;e+=1){p[e]=h.charCodeAt(e)^j.charCodeAt(e)}var m=oaep_mgf1_arr(p,g.length,f);var d=[0];for(e=0;e<g.length;e+=1){d[e+1]=g[e]^m.charCodeAt(e)}return new BigInteger(d.concat(p))}function RSAKey(){this.n=null;this.e=0;this.d=null;this.p=null;this.q=null;this.dmp1=null;this.dmq1=null;this.coeff=null}function RSASetPublic(b,a){this.isPublic=true;this.isPrivate=false;if(typeof b!==\"string\"){this.n=b;this.e=a}else{if(b!=null&&a!=null&&b.length>0&&a.length>0){this.n=parseBigInt(b,16);this.e=parseInt(a,16)}else{throw\"Invalid RSA public key\"}}}function RSADoPublic(a){return a.modPowInt(this.e,this.n)}function RSAEncrypt(d){var a=pkcs1pad2(d,(this.n.bitLength()+7)>>3);if(a==null){return null}var e=this.doPublic(a);if(e==null){return null}var b=e.toString(16);if((b.length&1)==0){return b}else{return\"0\"+b}}function RSAEncryptOAEP(f,e,b){var a=oaep_pad(f,(this.n.bitLength()+7)>>3,e,b);if(a==null){return null}var g=this.doPublic(a);if(g==null){return null}var d=g.toString(16);if((d.length&1)==0){return d}else{return\"0\"+d}}RSAKey.prototype.doPublic=RSADoPublic;RSAKey.prototype.setPublic=RSASetPublic;RSAKey.prototype.encrypt=RSAEncrypt;RSAKey.prototype.encryptOAEP=RSAEncryptOAEP;RSAKey.prototype.type=\"RSA\";\n/*! (c) Tom Wu, Kenji Urushima | http://www-cs-students.stanford.edu/~tjw/jsbn/\n */\nfunction pkcs1unpad2(g,j){var a=g.toByteArray();var f=0;while(f<a.length&&a[f]==0){++f}if(a.length-f!=j-1||a[f]!=2){return null}++f;while(a[f]!=0){if(++f>=a.length){return null}}var e=\"\";while(++f<a.length){var h=a[f]&255;if(h<128){e+=String.fromCharCode(h)}else{if((h>191)&&(h<224)){e+=String.fromCharCode(((h&31)<<6)|(a[f+1]&63));++f}else{e+=String.fromCharCode(((h&15)<<12)|((a[f+1]&63)<<6)|(a[f+2]&63));f+=2}}}return e}function oaep_mgf1_str(c,a,e){var b=\"\",d=0;while(b.length<a){b+=e(c+String.fromCharCode.apply(String,[(d&4278190080)>>24,(d&16711680)>>16,(d&65280)>>8,d&255]));d+=1}return b}function oaep_unpad(o,b,g,p){var e=KJUR.crypto.MessageDigest;var r=KJUR.crypto.Util;var c=null;if(!g){g=\"sha1\"}if(typeof g===\"string\"){c=e.getCanonicalAlgName(g);p=e.getHashLength(c);g=function(d){return hextorstr(r.hashHex(rstrtohex(d),c))}}o=o.toByteArray();var h;for(h=0;h<o.length;h+=1){o[h]&=255}while(o.length<b){o.unshift(0)}o=String.fromCharCode.apply(String,o);if(o.length<2*p+2){throw\"Cipher too short\"}var f=o.substr(1,p);var s=o.substr(p+1);var q=oaep_mgf1_str(s,p,g);var k=[],h;for(h=0;h<f.length;h+=1){k[h]=f.charCodeAt(h)^q.charCodeAt(h)}var l=oaep_mgf1_str(String.fromCharCode.apply(String,k),o.length-p,g);var j=[];for(h=0;h<s.length;h+=1){j[h]=s.charCodeAt(h)^l.charCodeAt(h)}j=String.fromCharCode.apply(String,j);if(j.substr(0,p)!==g(\"\")){throw\"Hash mismatch\"}j=j.substr(p);var a=j.indexOf(\"\\x01\");var m=(a!=-1)?j.substr(0,a).lastIndexOf(\"\\x00\"):-1;if(m+1!=a){throw\"Malformed data\"}return j.substr(a+1)}function RSASetPrivate(c,a,b){this.isPrivate=true;if(typeof c!==\"string\"){this.n=c;this.e=a;this.d=b}else{if(c!=null&&a!=null&&c.length>0&&a.length>0){this.n=parseBigInt(c,16);this.e=parseInt(a,16);this.d=parseBigInt(b,16)}else{throw\"Invalid RSA private key\"}}}function RSASetPrivateEx(g,d,e,c,b,a,h,f){this.isPrivate=true;this.isPublic=false;if(g==null){throw\"RSASetPrivateEx N == null\"}if(d==null){throw\"RSASetPrivateEx E == null\"}if(g.length==0){throw\"RSASetPrivateEx N.length == 0\"}if(d.length==0){throw\"RSASetPrivateEx E.length == 0\"}if(g!=null&&d!=null&&g.length>0&&d.length>0){this.n=parseBigInt(g,16);this.e=parseInt(d,16);this.d=parseBigInt(e,16);this.p=parseBigInt(c,16);this.q=parseBigInt(b,16);this.dmp1=parseBigInt(a,16);this.dmq1=parseBigInt(h,16);this.coeff=parseBigInt(f,16)}else{throw\"Invalid RSA private key in RSASetPrivateEx\"}}function RSAGenerate(b,l){var a=new SecureRandom();var g=b>>1;this.e=parseInt(l,16);var c=new BigInteger(l,16);var d=(b/2)-100;var k=BigInteger.ONE.shiftLeft(d);for(;;){for(;;){this.p=new BigInteger(b-g,1,a);if(this.p.subtract(BigInteger.ONE).gcd(c).compareTo(BigInteger.ONE)==0&&this.p.isProbablePrime(10)){break}}for(;;){this.q=new BigInteger(g,1,a);if(this.q.subtract(BigInteger.ONE).gcd(c).compareTo(BigInteger.ONE)==0&&this.q.isProbablePrime(10)){break}}if(this.p.compareTo(this.q)<=0){var j=this.p;this.p=this.q;this.q=j}var h=this.q.subtract(this.p).abs();if(h.bitLength()<d||h.compareTo(k)<=0){continue}var i=this.p.subtract(BigInteger.ONE);var e=this.q.subtract(BigInteger.ONE);var f=i.multiply(e);if(f.gcd(c).compareTo(BigInteger.ONE)==0){this.n=this.p.multiply(this.q);if(this.n.bitLength()==b){this.d=c.modInverse(f);this.dmp1=this.d.mod(i);this.dmq1=this.d.mod(e);this.coeff=this.q.modInverse(this.p);break}}}this.isPrivate=true}function RSADoPrivate(a){if(this.p==null||this.q==null){return a.modPow(this.d,this.n)}var c=a.mod(this.p).modPow(this.dmp1,this.p);var b=a.mod(this.q).modPow(this.dmq1,this.q);while(c.compareTo(b)<0){c=c.add(this.p)}return c.subtract(b).multiply(this.coeff).mod(this.p).multiply(this.q).add(b)}function RSADecrypt(b){if(b.length!=Math.ceil(this.n.bitLength()/4)){throw new Error(\"wrong ctext length\")}var d=parseBigInt(b,16);var a=this.doPrivate(d);if(a==null){return null}return pkcs1unpad2(a,(this.n.bitLength()+7)>>3)}function RSADecryptOAEP(e,d,b){if(e.length!=Math.ceil(this.n.bitLength()/4)){throw new Error(\"wrong ctext length\")}var f=parseBigInt(e,16);var a=this.doPrivate(f);if(a==null){return null}return oaep_unpad(a,(this.n.bitLength()+7)>>3,d,b)}RSAKey.prototype.doPrivate=RSADoPrivate;RSAKey.prototype.setPrivate=RSASetPrivate;RSAKey.prototype.setPrivateEx=RSASetPrivateEx;RSAKey.prototype.generate=RSAGenerate;RSAKey.prototype.decrypt=RSADecrypt;RSAKey.prototype.decryptOAEP=RSADecryptOAEP;\n/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\n */\nfunction ECFieldElementFp(b,a){this.x=a;this.q=b}function feFpEquals(a){if(a==this){return true}return(this.q.equals(a.q)&&this.x.equals(a.x))}function feFpToBigInteger(){return this.x}function feFpNegate(){return new ECFieldElementFp(this.q,this.x.negate().mod(this.q))}function feFpAdd(a){return new ECFieldElementFp(this.q,this.x.add(a.toBigInteger()).mod(this.q))}function feFpSubtract(a){return new ECFieldElementFp(this.q,this.x.subtract(a.toBigInteger()).mod(this.q))}function feFpMultiply(a){return new ECFieldElementFp(this.q,this.x.multiply(a.toBigInteger()).mod(this.q))}function feFpSquare(){return new ECFieldElementFp(this.q,this.x.square().mod(this.q))}function feFpDivide(a){return new ECFieldElementFp(this.q,this.x.multiply(a.toBigInteger().modInverse(this.q)).mod(this.q))}ECFieldElementFp.prototype.equals=feFpEquals;ECFieldElementFp.prototype.toBigInteger=feFpToBigInteger;ECFieldElementFp.prototype.negate=feFpNegate;ECFieldElementFp.prototype.add=feFpAdd;ECFieldElementFp.prototype.subtract=feFpSubtract;ECFieldElementFp.prototype.multiply=feFpMultiply;ECFieldElementFp.prototype.square=feFpSquare;ECFieldElementFp.prototype.divide=feFpDivide;ECFieldElementFp.prototype.sqrt=function(){return new ECFieldElementFp(this.q,this.x.sqrt().mod(this.q))};function ECPointFp(c,a,d,b){this.curve=c;this.x=a;this.y=d;if(b==null){this.z=BigInteger.ONE}else{this.z=b}this.zinv=null}function pointFpGetX(){if(this.zinv==null){this.zinv=this.z.modInverse(this.curve.q)}return this.curve.fromBigInteger(this.x.toBigInteger().multiply(this.zinv).mod(this.curve.q))}function pointFpGetY(){if(this.zinv==null){this.zinv=this.z.modInverse(this.curve.q)}return this.curve.fromBigInteger(this.y.toBigInteger().multiply(this.zinv).mod(this.curve.q))}function pointFpEquals(a){if(a==this){return true}if(this.isInfinity()){return a.isInfinity()}if(a.isInfinity()){return this.isInfinity()}var c,b;c=a.y.toBigInteger().multiply(this.z).subtract(this.y.toBigInteger().multiply(a.z)).mod(this.curve.q);if(!c.equals(BigInteger.ZERO)){return false}b=a.x.toBigInteger().multiply(this.z).subtract(this.x.toBigInteger().multiply(a.z)).mod(this.curve.q);return b.equals(BigInteger.ZERO)}function pointFpIsInfinity(){if((this.x==null)&&(this.y==null)){return true}return this.z.equals(BigInteger.ZERO)&&!this.y.toBigInteger().equals(BigInteger.ZERO)}function pointFpNegate(){return new ECPointFp(this.curve,this.x,this.y.negate(),this.z)}function pointFpAdd(l){if(this.isInfinity()){return l}if(l.isInfinity()){return this}var p=l.y.toBigInteger().multiply(this.z).subtract(this.y.toBigInteger().multiply(l.z)).mod(this.curve.q);var o=l.x.toBigInteger().multiply(this.z).subtract(this.x.toBigInteger().multiply(l.z)).mod(this.curve.q);if(BigInteger.ZERO.equals(o)){if(BigInteger.ZERO.equals(p)){return this.twice()}return this.curve.getInfinity()}var j=new BigInteger(\"3\");var e=this.x.toBigInteger();var n=this.y.toBigInteger();var c=l.x.toBigInteger();var k=l.y.toBigInteger();var m=o.square();var i=m.multiply(o);var d=e.multiply(m);var g=p.square().multiply(this.z);var a=g.subtract(d.shiftLeft(1)).multiply(l.z).subtract(i).multiply(o).mod(this.curve.q);var h=d.multiply(j).multiply(p).subtract(n.multiply(i)).subtract(g.multiply(p)).multiply(l.z).add(p.multiply(i)).mod(this.curve.q);var f=i.multiply(this.z).multiply(l.z).mod(this.curve.q);return new ECPointFp(this.curve,this.curve.fromBigInteger(a),this.curve.fromBigInteger(h),f)}function pointFpTwice(){if(this.isInfinity()){return this}if(this.y.toBigInteger().signum()==0){return this.curve.getInfinity()}var g=new BigInteger(\"3\");var c=this.x.toBigInteger();var h=this.y.toBigInteger();var e=h.multiply(this.z);var j=e.multiply(h).mod(this.curve.q);var i=this.curve.a.toBigInteger();var k=c.square().multiply(g);if(!BigInteger.ZERO.equals(i)){k=k.add(this.z.square().multiply(i))}k=k.mod(this.curve.q);var b=k.square().subtract(c.shiftLeft(3).multiply(j)).shiftLeft(1).multiply(e).mod(this.curve.q);var f=k.multiply(g).multiply(c).subtract(j.shiftLeft(1)).shiftLeft(2).multiply(j).subtract(k.square().multiply(k)).mod(this.curve.q);var d=e.square().multiply(e).shiftLeft(3).mod(this.curve.q);return new ECPointFp(this.curve,this.curve.fromBigInteger(b),this.curve.fromBigInteger(f),d)}function pointFpMultiply(d){if(this.isInfinity()){return this}if(d.signum()==0){return this.curve.getInfinity()}var m=d;var l=m.multiply(new BigInteger(\"3\"));var b=this.negate();var j=this;var q=this.curve.q.subtract(d);var o=q.multiply(new BigInteger(\"3\"));var c=new ECPointFp(this.curve,this.x,this.y);var a=c.negate();var g;for(g=l.bitLength()-2;g>0;--g){j=j.twice();var n=l.testBit(g);var f=m.testBit(g);if(n!=f){j=j.add(n?this:b)}}for(g=o.bitLength()-2;g>0;--g){c=c.twice();var p=o.testBit(g);var r=q.testBit(g);if(p!=r){c=c.add(p?c:a)}}return j}function pointFpMultiplyTwo(c,a,b){var d;if(c.bitLength()>b.bitLength()){d=c.bitLength()-1}else{d=b.bitLength()-1}var f=this.curve.getInfinity();var e=this.add(a);while(d>=0){f=f.twice();if(c.testBit(d)){if(b.testBit(d)){f=f.add(e)}else{f=f.add(this)}}else{if(b.testBit(d)){f=f.add(a)}}--d}return f}ECPointFp.prototype.getX=pointFpGetX;ECPointFp.prototype.getY=pointFpGetY;ECPointFp.prototype.equals=pointFpEquals;ECPointFp.prototype.isInfinity=pointFpIsInfinity;ECPointFp.prototype.negate=pointFpNegate;ECPointFp.prototype.add=pointFpAdd;ECPointFp.prototype.twice=pointFpTwice;ECPointFp.prototype.multiply=pointFpMultiply;ECPointFp.prototype.multiplyTwo=pointFpMultiplyTwo;function ECCurveFp(e,d,c){this.q=e;this.a=this.fromBigInteger(d);this.b=this.fromBigInteger(c);this.infinity=new ECPointFp(this,null,null)}function curveFpGetQ(){return this.q}function curveFpGetA(){return this.a}function curveFpGetB(){return this.b}function curveFpEquals(a){if(a==this){return true}return(this.q.equals(a.q)&&this.a.equals(a.a)&&this.b.equals(a.b))}function curveFpGetInfinity(){return this.infinity}function curveFpFromBigInteger(a){return new ECFieldElementFp(this.q,a)}function curveFpDecodePointHex(m){switch(parseInt(m.substr(0,2),16)){case 0:return this.infinity;case 2:case 3:var c=m.substr(0,2);var l=m.substr(2);var j=this.fromBigInteger(new BigInteger(k,16));var i=this.getA();var h=this.getB();var e=j.square().add(i).multiply(j).add(h);var g=e.sqrt();if(c==\"03\"){g=g.negate()}return new ECPointFp(this,j,g);case 4:case 6:case 7:var d=(m.length-2)/2;var k=m.substr(2,d);var f=m.substr(d+2,d);return new ECPointFp(this,this.fromBigInteger(new BigInteger(k,16)),this.fromBigInteger(new BigInteger(f,16)));default:return null}}ECCurveFp.prototype.getQ=curveFpGetQ;ECCurveFp.prototype.getA=curveFpGetA;ECCurveFp.prototype.getB=curveFpGetB;ECCurveFp.prototype.equals=curveFpEquals;ECCurveFp.prototype.getInfinity=curveFpGetInfinity;ECCurveFp.prototype.fromBigInteger=curveFpFromBigInteger;ECCurveFp.prototype.decodePointHex=curveFpDecodePointHex;\n/*! (c) Stefan Thomas | https://github.com/bitcoinjs/bitcoinjs-lib\n */\nECFieldElementFp.prototype.getByteLength=function(){return Math.floor((this.toBigInteger().bitLength()+7)/8)};ECPointFp.prototype.getEncoded=function(c){var d=function(h,f){var g=h.toByteArrayUnsigned();if(f<g.length){g=g.slice(g.length-f)}else{while(f>g.length){g.unshift(0)}}return g};var a=this.getX().toBigInteger();var e=this.getY().toBigInteger();var b=d(a,32);if(c){if(e.isEven()){b.unshift(2)}else{b.unshift(3)}}else{b.unshift(4);b=b.concat(d(e,32))}return b};ECPointFp.decodeFrom=function(g,c){var f=c[0];var e=c.length-1;var d=c.slice(1,1+e/2);var b=c.slice(1+e/2,1+e);d.unshift(0);b.unshift(0);var a=new BigInteger(d);var h=new BigInteger(b);return new ECPointFp(g,g.fromBigInteger(a),g.fromBigInteger(h))};ECPointFp.decodeFromHex=function(g,c){var f=c.substr(0,2);var e=c.length-2;var d=c.substr(2,e/2);var b=c.substr(2+e/2,e/2);var a=new BigInteger(d,16);var h=new BigInteger(b,16);return new ECPointFp(g,g.fromBigInteger(a),g.fromBigInteger(h))};ECPointFp.prototype.add2D=function(c){if(this.isInfinity()){return c}if(c.isInfinity()){return this}if(this.x.equals(c.x)){if(this.y.equals(c.y)){return this.twice()}return this.curve.getInfinity()}var g=c.x.subtract(this.x);var e=c.y.subtract(this.y);var a=e.divide(g);var d=a.square().subtract(this.x).subtract(c.x);var f=a.multiply(this.x.subtract(d)).subtract(this.y);return new ECPointFp(this.curve,d,f)};ECPointFp.prototype.twice2D=function(){if(this.isInfinity()){return this}if(this.y.toBigInteger().signum()==0){return this.curve.getInfinity()}var b=this.curve.fromBigInteger(BigInteger.valueOf(2));var e=this.curve.fromBigInteger(BigInteger.valueOf(3));var a=this.x.square().multiply(e).add(this.curve.a).divide(this.y.multiply(b));var c=a.square().subtract(this.x.multiply(b));var d=a.multiply(this.x.subtract(c)).subtract(this.y);return new ECPointFp(this.curve,c,d)};ECPointFp.prototype.multiply2D=function(b){if(this.isInfinity()){return this}if(b.signum()==0){return this.curve.getInfinity()}var g=b;var f=g.multiply(new BigInteger(\"3\"));var l=this.negate();var d=this;var c;for(c=f.bitLength()-2;c>0;--c){d=d.twice();var a=f.testBit(c);var j=g.testBit(c);if(a!=j){d=d.add2D(a?this:l)}}return d};ECPointFp.prototype.isOnCurve=function(){var d=this.getX().toBigInteger();var i=this.getY().toBigInteger();var f=this.curve.getA().toBigInteger();var c=this.curve.getB().toBigInteger();var h=this.curve.getQ();var e=i.multiply(i).mod(h);var g=d.multiply(d).multiply(d).add(f.multiply(d)).add(c).mod(h);return e.equals(g)};ECPointFp.prototype.toString=function(){return\"(\"+this.getX().toBigInteger().toString()+\",\"+this.getY().toBigInteger().toString()+\")\"};ECPointFp.prototype.validate=function(){var c=this.curve.getQ();if(this.isInfinity()){throw new Error(\"Point is at infinity.\")}var a=this.getX().toBigInteger();var b=this.getY().toBigInteger();if(a.compareTo(BigInteger.ONE)<0||a.compareTo(c.subtract(BigInteger.ONE))>0){throw new Error(\"x coordinate out of bounds\")}if(b.compareTo(BigInteger.ONE)<0||b.compareTo(c.subtract(BigInteger.ONE))>0){throw new Error(\"y coordinate out of bounds\")}if(!this.isOnCurve()){throw new Error(\"Point is not on the curve.\")}if(this.multiply(c).isInfinity()){throw new Error(\"Point is not a scalar multiple of G.\")}return true};\n/*! Mike Samuel (c) 2009 | code.google.com/p/json-sans-eval\n */\nvar jsonParse=(function(){var e=\"(?:-?\\\\b(?:0|[1-9][0-9]*)(?:\\\\.[0-9]+)?(?:[eE][+-]?[0-9]+)?\\\\b)\";var j='(?:[^\\\\0-\\\\x08\\\\x0a-\\\\x1f\"\\\\\\\\]|\\\\\\\\(?:[\"/\\\\\\\\bfnrt]|u[0-9A-Fa-f]{4}))';var i='(?:\"'+j+'*\")';var d=new RegExp(\"(?:false|true|null|[\\\\{\\\\}\\\\[\\\\]]|\"+e+\"|\"+i+\")\",\"g\");var k=new RegExp(\"\\\\\\\\(?:([^u])|u(.{4}))\",\"g\");var g={'\"':'\"',\"/\":\"/\",\"\\\\\":\"\\\\\",b:\"\\b\",f:\"\\f\",n:\"\\n\",r:\"\\r\",t:\"\\t\"};function h(l,m,n){return m?g[m]:String.fromCharCode(parseInt(n,16))}var c=new String(\"\");var a=\"\\\\\";var f={\"{\":Object,\"[\":Array};var b=Object.hasOwnProperty;return function(u,q){var p=u.match(d);var x;var v=p[0];var l=false;if(\"{\"===v){x={}}else{if(\"[\"===v){x=[]}else{x=[];l=true}}var t;var r=[x];for(var o=1-l,m=p.length;o<m;++o){v=p[o];var w;switch(v.charCodeAt(0)){default:w=r[0];w[t||w.length]=+(v);t=void 0;break;case 34:v=v.substring(1,v.length-1);if(v.indexOf(a)!==-1){v=v.replace(k,h)}w=r[0];if(!t){if(w instanceof Array){t=w.length}else{t=v||c;break}}w[t]=v;t=void 0;break;case 91:w=r[0];r.unshift(w[t||w.length]=[]);t=void 0;break;case 93:r.shift();break;case 102:w=r[0];w[t||w.length]=false;t=void 0;break;case 110:w=r[0];w[t||w.length]=null;t=void 0;break;case 116:w=r[0];w[t||w.length]=true;t=void 0;break;case 123:w=r[0];r.unshift(w[t||w.length]={});t=void 0;break;case 125:r.shift();break}}if(l){if(r.length!==1){throw new Error()}x=x[0]}else{if(r.length){throw new Error()}}if(q){var s=function(C,B){var D=C[B];if(D&&typeof D===\"object\"){var n=null;for(var z in D){if(b.call(D,z)&&D!==C){var y=s(D,z);if(y!==void 0){D[z]=y}else{if(!n){n=[]}n.push(z)}}}if(n){for(var A=n.length;--A>=0;){delete D[n[A]]}}}return q.call(C,B,D)};x=s({\"\":x},\"\")}return x}})();\nif(typeof KJUR==\"undefined\"||!KJUR){KJUR={}}if(typeof KJUR.asn1==\"undefined\"||!KJUR.asn1){KJUR.asn1={}}KJUR.asn1.ASN1Util=new function(){this.integerToByteHex=function(a){var b=a.toString(16);if((b.length%2)==1){b=\"0\"+b}return b};this.bigIntToMinTwosComplementsHex=function(j){var f=j.toString(16);if(f.substr(0,1)!=\"-\"){if(f.length%2==1){f=\"0\"+f}else{if(!f.match(/^[0-7]/)){f=\"00\"+f}}}else{var a=f.substr(1);var e=a.length;if(e%2==1){e+=1}else{if(!f.match(/^[0-7]/)){e+=2}}var g=\"\";for(var d=0;d<e;d++){g+=\"f\"}var c=new BigInteger(g,16);var b=c.xor(j).add(BigInteger.ONE);f=b.toString(16).replace(/^-/,\"\")}return f};this.getPEMStringFromHex=function(a,b){return hextopem(a,b)};this.newObject=function(k){var F=KJUR,o=F.asn1,v=o.ASN1Object,B=o.DERBoolean,e=o.DERInteger,t=o.DERBitString,h=o.DEROctetString,x=o.DERNull,y=o.DERObjectIdentifier,m=o.DEREnumerated,g=o.DERUTF8String,f=o.DERNumericString,A=o.DERPrintableString,w=o.DERTeletexString,q=o.DERIA5String,E=o.DERUTCTime,j=o.DERGeneralizedTime,b=o.DERVisibleString,l=o.DERBMPString,n=o.DERSequence,c=o.DERSet,s=o.DERTaggedObject,p=o.ASN1Util.newObject;if(k instanceof o.ASN1Object){return k}var u=Object.keys(k);if(u.length!=1){throw new Error(\"key of param shall be only one.\")}var H=u[0];if(\":asn1:bool:int:bitstr:octstr:null:oid:enum:utf8str:numstr:prnstr:telstr:ia5str:utctime:gentime:visstr:bmpstr:seq:set:tag:\".indexOf(\":\"+H+\":\")==-1){throw new Error(\"undefined key: \"+H)}if(H==\"bool\"){return new B(k[H])}if(H==\"int\"){return new e(k[H])}if(H==\"bitstr\"){return new t(k[H])}if(H==\"octstr\"){return new h(k[H])}if(H==\"null\"){return new x(k[H])}if(H==\"oid\"){return new y(k[H])}if(H==\"enum\"){return new m(k[H])}if(H==\"utf8str\"){return new g(k[H])}if(H==\"numstr\"){return new f(k[H])}if(H==\"prnstr\"){return new A(k[H])}if(H==\"telstr\"){return new w(k[H])}if(H==\"ia5str\"){return new q(k[H])}if(H==\"utctime\"){return new E(k[H])}if(H==\"gentime\"){return new j(k[H])}if(H==\"visstr\"){return new b(k[H])}if(H==\"bmpstr\"){return new l(k[H])}if(H==\"asn1\"){return new v(k[H])}if(H==\"seq\"){var d=k[H];var G=[];for(var z=0;z<d.length;z++){var D=p(d[z]);G.push(D)}return new n({array:G})}if(H==\"set\"){var d=k[H];var G=[];for(var z=0;z<d.length;z++){var D=p(d[z]);G.push(D)}return new c({array:G})}if(H==\"tag\"){var C=k[H];if(Object.prototype.toString.call(C)===\"[object Array]\"&&C.length==3){var r=p(C[2]);return new s({tag:C[0],explicit:C[1],obj:r})}else{return new s(C)}}};this.jsonToASN1HEX=function(b){var a=this.newObject(b);return a.tohex()}};KJUR.asn1.ASN1Util.oidHexToInt=function(a){var j=\"\";var k=parseInt(a.substr(0,2),16);var d=Math.floor(k/40);var c=k%40;var j=d+\".\"+c;var e=\"\";for(var f=2;f<a.length;f+=2){var g=parseInt(a.substr(f,2),16);var h=(\"00000000\"+g.toString(2)).slice(-8);e=e+h.substr(1,7);if(h.substr(0,1)==\"0\"){var b=new BigInteger(e,2);j=j+\".\"+b.toString(10);e=\"\"}}return j};KJUR.asn1.ASN1Util.oidIntToHex=function(f){var e=function(a){var k=a.toString(16);if(k.length==1){k=\"0\"+k}return k};var d=function(o){var n=\"\";var k=new BigInteger(o,10);var a=k.toString(2);var l=7-a.length%7;if(l==7){l=0}var q=\"\";for(var m=0;m<l;m++){q+=\"0\"}a=q+a;for(var m=0;m<a.length-1;m+=7){var p=a.substr(m,7);if(m!=a.length-7){p=\"1\"+p}n+=e(parseInt(p,2))}return n};if(!f.match(/^[0-9.]+$/)){throw\"malformed oid string: \"+f}var g=\"\";var b=f.split(\".\");var j=parseInt(b[0])*40+parseInt(b[1]);g+=e(j);b.splice(0,2);for(var c=0;c<b.length;c++){g+=d(b[c])}return g};KJUR.asn1.ASN1Object=function(e){var c=true;var b=null;var d=\"00\";var f=\"00\";var a=\"\";this.params=null;this.getLengthHexFromValue=function(){if(typeof this.hV==\"undefined\"||this.hV==null){throw new Error(\"this.hV is null or undefined\")}if(this.hV.length%2==1){throw new Error(\"value hex must be even length: n=\"+a.length+\",v=\"+this.hV)}var j=this.hV.length/2;var i=j.toString(16);if(i.length%2==1){i=\"0\"+i}if(j<128){return i}else{var h=i.length/2;if(h>15){throw new Error(\"ASN.1 length too long to represent by 8x: n = \"+j.toString(16))}var g=128+h;return g.toString(16)+i}};this.tohex=function(){if(this.hTLV==null||this.isModified){this.hV=this.getFreshValueHex();this.hL=this.getLengthHexFromValue();this.hTLV=this.hT+this.hL+this.hV;this.isModified=false}return this.hTLV};this.getEncodedHex=function(){return this.tohex()};this.getValueHex=function(){this.tohex();return this.hV};this.getFreshValueHex=function(){return\"\"};this.setByParam=function(g){this.params=g};if(e!=undefined){if(e.tlv!=undefined){this.hTLV=e.tlv;this.isModified=false}}};KJUR.asn1.DERAbstractString=function(c){KJUR.asn1.DERAbstractString.superclass.constructor.call(this);var b=null;var a=null;this.getString=function(){return this.s};this.setString=function(d){this.hTLV=null;this.isModified=true;this.s=d;this.hV=utf8tohex(this.s).toLowerCase()};this.setStringHex=function(d){this.hTLV=null;this.isModified=true;this.s=null;this.hV=d};this.getFreshValueHex=function(){return this.hV};if(typeof c!=\"undefined\"){if(typeof c==\"string\"){this.setString(c)}else{if(typeof c.str!=\"undefined\"){this.setString(c.str)}else{if(typeof c.hex!=\"undefined\"){this.setStringHex(c.hex)}}}}};extendClass(KJUR.asn1.DERAbstractString,KJUR.asn1.ASN1Object);KJUR.asn1.DERAbstractTime=function(c){KJUR.asn1.DERAbstractTime.superclass.constructor.call(this);var b=null;var a=null;this.localDateToUTC=function(g){var e=g.getTime()+(g.getTimezoneOffset()*60000);var f=new Date(e);return f};this.formatDate=function(m,o,e){var g=this.zeroPadding;var n=this.localDateToUTC(m);var p=String(n.getFullYear());if(o==\"utc\"){p=p.substr(2,2)}var l=g(String(n.getMonth()+1),2);var q=g(String(n.getDate()),2);var h=g(String(n.getHours()),2);var i=g(String(n.getMinutes()),2);var j=g(String(n.getSeconds()),2);var r=p+l+q+h+i+j;if(e===true){var f=n.getMilliseconds();if(f!=0){var k=g(String(f),3);k=k.replace(/[0]+$/,\"\");r=r+\".\"+k}}return r+\"Z\"};this.zeroPadding=function(e,d){if(e.length>=d){return e}return new Array(d-e.length+1).join(\"0\")+e};this.setByParam=function(d){this.hV=null;this.hTLV=null;this.params=d};this.getString=function(){return undefined};this.setString=function(d){this.hTLV=null;this.isModified=true;if(this.params==undefined){this.params={}}this.params.str=d};this.setByDate=function(d){this.hTLV=null;this.isModified=true;if(this.params==undefined){this.params={}}this.params.date=d};this.setByDateValue=function(h,j,e,d,f,g){var i=new Date(Date.UTC(h,j-1,e,d,f,g,0));this.setByDate(i)};this.getFreshValueHex=function(){return this.hV}};extendClass(KJUR.asn1.DERAbstractTime,KJUR.asn1.ASN1Object);KJUR.asn1.DERAbstractStructured=function(b){KJUR.asn1.DERAbstractString.superclass.constructor.call(this);var a=null;this.setByASN1ObjectArray=function(c){this.hTLV=null;this.isModified=true;this.asn1Array=c};this.appendASN1Object=function(c){this.hTLV=null;this.isModified=true;this.asn1Array.push(c)};this.asn1Array=new Array();if(typeof b!=\"undefined\"){if(typeof b.array!=\"undefined\"){this.asn1Array=b.array}}};extendClass(KJUR.asn1.DERAbstractStructured,KJUR.asn1.ASN1Object);KJUR.asn1.DERBoolean=function(a){KJUR.asn1.DERBoolean.superclass.constructor.call(this);this.hT=\"01\";if(a==false){this.hTLV=\"010100\"}else{this.hTLV=\"0101ff\"}};extendClass(KJUR.asn1.DERBoolean,KJUR.asn1.ASN1Object);KJUR.asn1.DERInteger=function(a){KJUR.asn1.DERInteger.superclass.constructor.call(this);this.hT=\"02\";this.setByBigInteger=function(b){this.hTLV=null;this.isModified=true;this.hV=KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(b)};this.setByInteger=function(c){var b=new BigInteger(String(c),10);this.setByBigInteger(b)};this.setValueHex=function(b){this.hV=b};this.getFreshValueHex=function(){return this.hV};if(typeof a!=\"undefined\"){if(typeof a.bigint!=\"undefined\"){this.setByBigInteger(a.bigint)}else{if(typeof a[\"int\"]!=\"undefined\"){this.setByInteger(a[\"int\"])}else{if(typeof a==\"number\"){this.setByInteger(a)}else{if(typeof a.hex!=\"undefined\"){this.setValueHex(a.hex)}}}}}};extendClass(KJUR.asn1.DERInteger,KJUR.asn1.ASN1Object);KJUR.asn1.DERBitString=function(b){if(b!==undefined&&typeof b.obj!==\"undefined\"){var a=KJUR.asn1.ASN1Util.newObject(b.obj);b.hex=\"00\"+a.tohex()}KJUR.asn1.DERBitString.superclass.constructor.call(this);this.hT=\"03\";this.setHexValueIncludingUnusedBits=function(c){this.hTLV=null;this.isModified=true;this.hV=c};this.setUnusedBitsAndHexValue=function(c,e){if(c<0||7<c){throw\"unused bits shall be from 0 to 7: u = \"+c}var d=\"0\"+c;this.hTLV=null;this.isModified=true;this.hV=d+e};this.setByBinaryString=function(e){e=e.replace(/0+$/,\"\");var f=8-e.length%8;if(f==8){f=0}e+=\"0000000\".substr(0,f);var j=\"\";for(var g=0;g<e.length-1;g+=8){var d=e.substr(g,8);var c=parseInt(d,2).toString(16);if(c.length==1){c=\"0\"+c}j+=c}this.hTLV=null;this.isModified=true;this.hV=\"0\"+f+j};this.setByBooleanArray=function(e){var d=\"\";for(var c=0;c<e.length;c++){if(e[c]==true){d+=\"1\"}else{d+=\"0\"}}this.setByBinaryString(d)};this.newFalseArray=function(e){var c=new Array(e);for(var d=0;d<e;d++){c[d]=false}return c};this.getFreshValueHex=function(){return this.hV};if(typeof b!=\"undefined\"){if(typeof b==\"string\"&&b.toLowerCase().match(/^[0-9a-f]+$/)){this.setHexValueIncludingUnusedBits(b)}else{if(typeof b.hex!=\"undefined\"){this.setHexValueIncludingUnusedBits(b.hex)}else{if(typeof b.bin!=\"undefined\"){this.setByBinaryString(b.bin)}else{if(typeof b.array!=\"undefined\"){this.setByBooleanArray(b.array)}}}}}};extendClass(KJUR.asn1.DERBitString,KJUR.asn1.ASN1Object);KJUR.asn1.DEROctetString=function(b){if(b!==undefined&&typeof b.obj!==\"undefined\"){var a=KJUR.asn1.ASN1Util.newObject(b.obj);b.hex=a.tohex()}KJUR.asn1.DEROctetString.superclass.constructor.call(this,b);this.hT=\"04\"};extendClass(KJUR.asn1.DEROctetString,KJUR.asn1.DERAbstractString);KJUR.asn1.DERNull=function(){KJUR.asn1.DERNull.superclass.constructor.call(this);this.hT=\"05\";this.hTLV=\"0500\"};extendClass(KJUR.asn1.DERNull,KJUR.asn1.ASN1Object);KJUR.asn1.DERObjectIdentifier=function(a){KJUR.asn1.DERObjectIdentifier.superclass.constructor.call(this);this.hT=\"06\";this.setValueHex=function(b){this.hTLV=null;this.isModified=true;this.s=null;this.hV=b};this.setValueOidString=function(b){var c=oidtohex(b);if(c==null){throw new Error(\"malformed oid string: \"+b)}this.hTLV=null;this.isModified=true;this.s=null;this.hV=c};this.setValueName=function(c){var b=KJUR.asn1.x509.OID.name2oid(c);if(b!==\"\"){this.setValueOidString(b)}else{throw new Error(\"DERObjectIdentifier oidName undefined: \"+c)}};this.setValueNameOrOid=function(b){if(b.match(/^[0-2].[0-9.]+$/)){this.setValueOidString(b)}else{this.setValueName(b)}};this.getFreshValueHex=function(){return this.hV};this.setByParam=function(b){if(typeof b===\"string\"){this.setValueNameOrOid(b)}else{if(b.oid!==undefined){this.setValueNameOrOid(b.oid)}else{if(b.name!==undefined){this.setValueNameOrOid(b.name)}else{if(b.hex!==undefined){this.setValueHex(b.hex)}}}}};if(a!==undefined){this.setByParam(a)}};extendClass(KJUR.asn1.DERObjectIdentifier,KJUR.asn1.ASN1Object);KJUR.asn1.DEREnumerated=function(a){KJUR.asn1.DEREnumerated.superclass.constructor.call(this);this.hT=\"0a\";this.setByBigInteger=function(b){this.hTLV=null;this.isModified=true;this.hV=KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(b)};this.setByInteger=function(c){var b=new BigInteger(String(c),10);this.setByBigInteger(b)};this.setValueHex=function(b){this.hV=b};this.getFreshValueHex=function(){return this.hV};if(typeof a!=\"undefined\"){if(typeof a[\"int\"]!=\"undefined\"){this.setByInteger(a[\"int\"])}else{if(typeof a==\"number\"){this.setByInteger(a)}else{if(typeof a.hex!=\"undefined\"){this.setValueHex(a.hex)}}}}};extendClass(KJUR.asn1.DEREnumerated,KJUR.asn1.ASN1Object);KJUR.asn1.DERUTF8String=function(a){KJUR.asn1.DERUTF8String.superclass.constructor.call(this,a);this.hT=\"0c\"};extendClass(KJUR.asn1.DERUTF8String,KJUR.asn1.DERAbstractString);KJUR.asn1.DERNumericString=function(a){KJUR.asn1.DERNumericString.superclass.constructor.call(this,a);this.hT=\"12\"};extendClass(KJUR.asn1.DERNumericString,KJUR.asn1.DERAbstractString);KJUR.asn1.DERPrintableString=function(a){KJUR.asn1.DERPrintableString.superclass.constructor.call(this,a);this.hT=\"13\"};extendClass(KJUR.asn1.DERPrintableString,KJUR.asn1.DERAbstractString);KJUR.asn1.DERTeletexString=function(a){KJUR.asn1.DERTeletexString.superclass.constructor.call(this,a);this.hT=\"14\"};extendClass(KJUR.asn1.DERTeletexString,KJUR.asn1.DERAbstractString);KJUR.asn1.DERIA5String=function(a){KJUR.asn1.DERIA5String.superclass.constructor.call(this,a);this.hT=\"16\"};extendClass(KJUR.asn1.DERIA5String,KJUR.asn1.DERAbstractString);KJUR.asn1.DERVisibleString=function(a){KJUR.asn1.DERIA5String.superclass.constructor.call(this,a);this.hT=\"1a\"};extendClass(KJUR.asn1.DERVisibleString,KJUR.asn1.DERAbstractString);KJUR.asn1.DERBMPString=function(a){KJUR.asn1.DERBMPString.superclass.constructor.call(this,a);this.hT=\"1e\"};extendClass(KJUR.asn1.DERBMPString,KJUR.asn1.DERAbstractString);KJUR.asn1.DERUTCTime=function(a){KJUR.asn1.DERUTCTime.superclass.constructor.call(this,a);this.hT=\"17\";this.params=undefined;this.getFreshValueHex=function(){var d=this.params;if(this.params==undefined){d={date:new Date()}}if(typeof d==\"string\"){if(d.match(/^[0-9]{12}Z$/)||d.match(/^[0-9]{12}\\.[0-9]+Z$/)){this.hV=stohex(d)}else{throw new Error(\"malformed string for UTCTime: \"+d)}}else{if(d.str!=undefined){this.hV=stohex(d.str)}else{if(d.date==undefined&&d.millis==true){var c=new Date();this.hV=stohex(this.formatDate(c,\"utc\",true))}else{if(d.date!=undefined&&d.date instanceof Date){var b=(d.millis===true);this.hV=stohex(this.formatDate(d.date,\"utc\",b))}else{if(d instanceof Date){this.hV=stohex(this.formatDate(d,\"utc\"))}}}}}if(this.hV==undefined){throw new Error(\"parameter not specified properly for UTCTime\")}return this.hV};if(a!=undefined){this.setByParam(a)}};extendClass(KJUR.asn1.DERUTCTime,KJUR.asn1.DERAbstractTime);KJUR.asn1.DERGeneralizedTime=function(a){KJUR.asn1.DERGeneralizedTime.superclass.constructor.call(this,a);this.hT=\"18\";this.params=a;this.getFreshValueHex=function(){var d=this.params;if(this.params==undefined){d={date:new Date()}}if(typeof d==\"string\"){if(d.match(/^[0-9]{14}Z$/)||d.match(/^[0-9]{14}\\.[0-9]+Z$/)){this.hV=stohex(d)}else{throw new Error(\"malformed string for GeneralizedTime: \"+d)}}else{if(d.str!=undefined){this.hV=stohex(d.str)}else{if(d.date==undefined&&d.millis==true){var c=new Date();this.hV=stohex(this.formatDate(c,\"gen\",true))}else{if(d.date!=undefined&&d.date instanceof Date){var b=(d.millis===true);this.hV=stohex(this.formatDate(d.date,\"gen\",b))}else{if(d instanceof Date){this.hV=stohex(this.formatDate(d,\"gen\"))}}}}}if(this.hV==undefined){throw new Error(\"parameter not specified properly for GeneralizedTime\")}return this.hV};if(a!=undefined){this.setByParam(a)}};extendClass(KJUR.asn1.DERGeneralizedTime,KJUR.asn1.DERAbstractTime);KJUR.asn1.DERSequence=function(a){KJUR.asn1.DERSequence.superclass.constructor.call(this,a);this.hT=\"30\";this.getFreshValueHex=function(){var c=\"\";for(var b=0;b<this.asn1Array.length;b++){var d=this.asn1Array[b];c+=d.tohex()}this.hV=c;return this.hV}};extendClass(KJUR.asn1.DERSequence,KJUR.asn1.DERAbstractStructured);KJUR.asn1.DERSet=function(a){KJUR.asn1.DERSet.superclass.constructor.call(this,a);this.hT=\"31\";this.sortFlag=true;this.getFreshValueHex=function(){var b=new Array();for(var c=0;c<this.asn1Array.length;c++){var d=this.asn1Array[c];b.push(d.tohex())}if(this.sortFlag==true){b.sort()}this.hV=b.join(\"\");return this.hV};if(typeof a!=\"undefined\"){if(typeof a.sortflag!=\"undefined\"&&a.sortflag==false){this.sortFlag=false}}};extendClass(KJUR.asn1.DERSet,KJUR.asn1.DERAbstractStructured);KJUR.asn1.DERTaggedObject=function(f){KJUR.asn1.DERTaggedObject.superclass.constructor.call(this);var d=KJUR.asn1,e=ASN1HEX,a=e.getV,c=e.isASN1HEX,b=d.ASN1Util.newObject;this.hT=\"a0\";this.hV=\"\";this.isExplicit=true;this.asn1Object=null;this.params={tag:\"a0\",explicit:true};this.setASN1Object=function(g,h,i){this.params={tag:h,explicit:g,obj:i}};this.getFreshValueHex=function(){var h=this.params;if(h.explicit==undefined){h.explicit=true}if(h.tage!=undefined){h.tag=h.tage;h.explicit=true}if(h.tagi!=undefined){h.tag=h.tagi;h.explicit=false}if(h.str!=undefined){this.hV=utf8tohex(h.str)}else{if(h.hex!=undefined){this.hV=h.hex}else{if(h.obj!=undefined){var g;if(h.obj instanceof d.ASN1Object){g=h.obj.tohex()}else{if(typeof h.obj==\"object\"){g=b(h.obj).tohex()}}if(h.explicit){this.hV=g}else{this.hV=a(g,0)}}else{throw new Error(\"str, hex nor obj not specified\")}}}if(h.tag==undefined){h.tag=\"a0\"}this.hT=h.tag;this.hTLV=null;this.isModified=true;return this.hV};this.setByParam=function(g){this.params=g};if(f!==undefined){this.setByParam(f)}};extendClass(KJUR.asn1.DERTaggedObject,KJUR.asn1.ASN1Object);\nvar ASN1HEX=new function(){};ASN1HEX.getLblen=function(c,a){if(c.substr(a+2,1)!=\"8\"){return 1}var b=parseInt(c.substr(a+3,1));if(b==0){return -1}if(0<b&&b<10){return b+1}return -2};ASN1HEX.getL=function(c,b){var a=ASN1HEX.getLblen(c,b);if(a<1){return\"\"}return c.substr(b+2,a*2)};ASN1HEX.getVblen=function(d,a){var c,b;c=ASN1HEX.getL(d,a);if(c==\"\"){return -1}if(c.substr(0,1)===\"8\"){b=new BigInteger(c.substr(2),16)}else{b=new BigInteger(c,16)}return b.intValue()};ASN1HEX.getVidx=function(c,b){var a=ASN1HEX.getLblen(c,b);if(a<0){return a}return b+(a+1)*2};ASN1HEX.getV=function(d,a){var c=ASN1HEX.getVidx(d,a);var b=ASN1HEX.getVblen(d,a);return d.substr(c,b*2)};ASN1HEX.getTLV=function(b,a){return b.substr(a,2)+ASN1HEX.getL(b,a)+ASN1HEX.getV(b,a)};ASN1HEX.getTLVblen=function(b,a){return 2+ASN1HEX.getLblen(b,a)*2+ASN1HEX.getVblen(b,a)*2};ASN1HEX.getNextSiblingIdx=function(d,a){var c=ASN1HEX.getVidx(d,a);var b=ASN1HEX.getVblen(d,a);return c+b*2};ASN1HEX.getChildIdx=function(e,k){var l=ASN1HEX;var j=[];var c,f,g;c=l.getVidx(e,k);f=l.getVblen(e,k)*2;if(e.substr(k,2)==\"03\"){c+=2;f-=2}g=0;var d=c;while(g<=f){var b=l.getTLVblen(e,d);g+=b;if(g<=f){j.push(d)}d+=b;if(g>=f){break}}return j};ASN1HEX.getNthChildIdx=function(d,b,e){var c=ASN1HEX.getChildIdx(d,b);return c[e]};ASN1HEX.getIdxbyList=function(e,d,c,i){var g=ASN1HEX;var f,b;if(c.length==0){if(i!==undefined){if(e.substr(d,2)!==i){return -1}}return d}f=c.shift();b=g.getChildIdx(e,d);if(f>=b.length){return -1}return g.getIdxbyList(e,b[f],c,i)};ASN1HEX.getIdxbyListEx=function(f,k,b,g){var m=ASN1HEX;var d,l;if(b.length==0){if(g!==undefined){if(f.substr(k,2)!==g){return -1}}return k}d=b.shift();l=m.getChildIdx(f,k);var j=0;for(var e=0;e<l.length;e++){var c=f.substr(l[e],2);if((typeof d==\"number\"&&(!m.isContextTag(c))&&j==d)||(typeof d==\"string\"&&m.isContextTag(c,d))){return m.getIdxbyListEx(f,l[e],b,g)}if(!m.isContextTag(c)){j++}}return -1};ASN1HEX.getTLVbyList=function(d,c,b,f){var e=ASN1HEX;var a=e.getIdxbyList(d,c,b,f);if(a==-1){return null}if(a>=d.length){return null}return e.getTLV(d,a)};ASN1HEX.getTLVbyListEx=function(d,c,b,f){var e=ASN1HEX;var a=e.getIdxbyListEx(d,c,b,f);if(a==-1){return null}return e.getTLV(d,a)};ASN1HEX.getVbyList=function(e,c,b,g,i){var f=ASN1HEX;var a,d;a=f.getIdxbyList(e,c,b,g);if(a==-1){return null}if(a>=e.length){return null}d=f.getV(e,a);if(i===true){d=d.substr(2)}return d};ASN1HEX.getVbyListEx=function(b,e,a,d,f){var j=ASN1HEX;var g,c,i;g=j.getIdxbyListEx(b,e,a,d);if(g==-1){return null}i=j.getV(b,g);if(b.substr(g,2)==\"03\"&&f!==false){i=i.substr(2)}return i};ASN1HEX.getInt=function(e,b,f){if(f==undefined){f=-1}try{var c=e.substr(b,2);if(c!=\"02\"&&c!=\"03\"){return f}var a=ASN1HEX.getV(e,b);if(c==\"02\"){return parseInt(a,16)}else{return bitstrtoint(a)}}catch(d){return f}};ASN1HEX.getOID=function(c,a,d){if(d==undefined){d=null}try{if(c.substr(a,2)!=\"06\"){return d}var e=ASN1HEX.getV(c,a);return hextooid(e)}catch(b){return d}};ASN1HEX.getOIDName=function(d,a,f){if(f==undefined){f=null}try{var e=ASN1HEX.getOID(d,a,f);if(e==f){return f}var b=KJUR.asn1.x509.OID.oid2name(e);if(b==\"\"){return e}return b}catch(c){return f}};ASN1HEX.getString=function(d,b,e){if(e==undefined){e=null}try{var a=ASN1HEX.getV(d,b);return hextorstr(a)}catch(c){return e}};ASN1HEX.hextooidstr=function(e){var h=function(b,a){if(b.length>=a){return b}return new Array(a-b.length+1).join(\"0\")+b};var l=[];var o=e.substr(0,2);var f=parseInt(o,16);l[0]=new String(Math.floor(f/40));l[1]=new String(f%40);var m=e.substr(2);var k=[];for(var g=0;g<m.length/2;g++){k.push(parseInt(m.substr(g*2,2),16))}var j=[];var d=\"\";for(var g=0;g<k.length;g++){if(k[g]&128){d=d+h((k[g]&127).toString(2),7)}else{d=d+h((k[g]&127).toString(2),7);j.push(new String(parseInt(d,2)));d=\"\"}}var n=l.join(\".\");if(j.length>0){n=n+\".\"+j.join(\".\")}return n};ASN1HEX.dump=function(t,c,l,g){var p=ASN1HEX;var j=p.getV;var y=p.dump;var w=p.getChildIdx;var e=t;if(t instanceof KJUR.asn1.ASN1Object){e=t.tohex()}var q=function(A,i){if(A.length<=i*2){return A}else{var v=A.substr(0,i)+\"..(total \"+A.length/2+\"bytes)..\"+A.substr(A.length-i,i);return v}};if(c===undefined){c={ommit_long_octet:32}}if(l===undefined){l=0}if(g===undefined){g=\"\"}var x=c.ommit_long_octet;var z=e.substr(l,2);if(z==\"01\"){var h=j(e,l);if(h==\"00\"){return g+\"BOOLEAN FALSE\\n\"}else{return g+\"BOOLEAN TRUE\\n\"}}if(z==\"02\"){var h=j(e,l);return g+\"INTEGER \"+q(h,x)+\"\\n\"}if(z==\"03\"){var h=j(e,l);if(p.isASN1HEX(h.substr(2))){var k=g+\"BITSTRING, encapsulates\\n\";k=k+y(h.substr(2),c,0,g+\"  \");return k}else{return g+\"BITSTRING \"+q(h,x)+\"\\n\"}}if(z==\"04\"){var h=j(e,l);if(p.isASN1HEX(h)){var k=g+\"OCTETSTRING, encapsulates\\n\";k=k+y(h,c,0,g+\"  \");return k}else{return g+\"OCTETSTRING \"+q(h,x)+\"\\n\"}}if(z==\"05\"){return g+\"NULL\\n\"}if(z==\"06\"){var m=j(e,l);var b=KJUR.asn1.ASN1Util.oidHexToInt(m);var o=KJUR.asn1.x509.OID.oid2name(b);var a=b.replace(/\\./g,\" \");if(o!=\"\"){return g+\"ObjectIdentifier \"+o+\" (\"+a+\")\\n\"}else{return g+\"ObjectIdentifier (\"+a+\")\\n\"}}if(z==\"0a\"){return g+\"ENUMERATED \"+parseInt(j(e,l))+\"\\n\"}if(z==\"0c\"){return g+\"UTF8String '\"+hextoutf8(j(e,l))+\"'\\n\"}if(z==\"13\"){return g+\"PrintableString '\"+hextoutf8(j(e,l))+\"'\\n\"}if(z==\"14\"){return g+\"TeletexString '\"+hextoutf8(j(e,l))+\"'\\n\"}if(z==\"16\"){return g+\"IA5String '\"+hextoutf8(j(e,l))+\"'\\n\"}if(z==\"17\"){return g+\"UTCTime \"+hextoutf8(j(e,l))+\"\\n\"}if(z==\"18\"){return g+\"GeneralizedTime \"+hextoutf8(j(e,l))+\"\\n\"}if(z==\"1a\"){return g+\"VisualString '\"+hextoutf8(j(e,l))+\"'\\n\"}if(z==\"1e\"){return g+\"BMPString '\"+ucs2hextoutf8(j(e,l))+\"'\\n\"}if(z==\"30\"){if(e.substr(l,4)==\"3000\"){return g+\"SEQUENCE {}\\n\"}var k=g+\"SEQUENCE\\n\";var d=w(e,l);var f=c;if((d.length==2||d.length==3)&&e.substr(d[0],2)==\"06\"&&e.substr(d[d.length-1],2)==\"04\"){var o=p.oidname(j(e,d[0]));var r=JSON.parse(JSON.stringify(c));r.x509ExtName=o;f=r}for(var u=0;u<d.length;u++){k=k+y(e,f,d[u],g+\"  \")}return k}if(z==\"31\"){var k=g+\"SET\\n\";var d=w(e,l);for(var u=0;u<d.length;u++){k=k+y(e,c,d[u],g+\"  \")}return k}var z=parseInt(z,16);if((z&128)!=0){var n=z&31;if((z&32)!=0){var k=g+\"[\"+n+\"]\\n\";var d=w(e,l);for(var u=0;u<d.length;u++){k=k+y(e,c,d[u],g+\"  \")}return k}else{var h=j(e,l);if(ASN1HEX.isASN1HEX(h)){var k=g+\"[\"+n+\"]\\n\";k=k+y(h,c,0,g+\"  \");return k}else{if(h.substr(0,8)==\"68747470\"){h=hextoutf8(h)}else{if(c.x509ExtName===\"subjectAltName\"&&n==2){h=hextoutf8(h)}}}var k=g+\"[\"+n+\"] \"+h+\"\\n\";return k}}return g+\"UNKNOWN(\"+z+\") \"+j(e,l)+\"\\n\"};ASN1HEX.parse=function(x){var t=ASN1HEX,f=t.parse,a=t.isASN1HEX,l=t.getV,b=t.getTLV,y=t.getChildIdx,i=KJUR.asn1,e=i.ASN1Util.oidHexToInt,B=i.x509.OID.oid2name,k=hextoutf8,n=ucs2hextoutf8,q=iso88591hextoutf8;var c={\"0c\":\"utf8str\",\"12\":\"numstr\",\"13\":\"prnstr\",\"14\":\"telstr\",\"16\":\"ia5str\",\"17\":\"utctime\",\"18\":\"gentime\",\"1a\":\"visstr\",\"1e\":\"bmpstr\",\"30\":\"seq\",\"31\":\"set\"};var u=function(H){var D=[];var E=y(H,0);for(var G=0;G<E.length;G++){var s=E[G];var d=b(H,s);var F=f(d);D.push(F)}return D};var C=x.substr(0,2);var j={};var p=l(x,0);if(C==\"01\"){if(x==\"0101ff\"){return{bool:true}}return{bool:false}}else{if(C==\"02\"){return{\"int\":{hex:p}}}else{if(C==\"03\"){try{if(p.substr(0,2)!=\"00\"){throw\"not encap\"}var v=p.substr(2);if(!a(v)){throw\"not encap\"}return{bitstr:{obj:f(v)}}}catch(z){var m=null;if(p.length<=10){m=bitstrtobinstr(p)}if(m==null){return{bitstr:{hex:p}}}else{return{bitstr:{bin:m}}}}}else{if(C==\"04\"){try{if(!a(p)){throw\"not encap\"}return{octstr:{obj:f(p)}}}catch(z){return{octstr:{hex:p}}}}else{if(C==\"05\"){return{\"null\":\"\"}}else{if(C==\"06\"){var g=e(p);var r=B(g);if(r==\"\"){return{oid:g}}else{return{oid:r}}}else{if(C==\"0a\"){if(p.length>4){return{\"enum\":{hex:p}}}else{return{\"enum\":parseInt(p,16)}}}else{if(C==\"30\"||C==\"31\"){j[c[C]]=u(x);return j}else{if(C==\"14\"){var o=q(p);j[c[C]]={str:o};return j}else{if(C==\"1e\"){var o=n(p);j[c[C]]={str:o};return j}else{if(\":0c:12:13:16:17:18:1a:\".indexOf(C)!=-1){var o=k(p);j[c[C]]={str:o};return j}else{if(C.match(/^8[0-9]$/)){var o=k(p);if(o==null|o==\"\"){return{tag:{tag:C,explicit:false,hex:p}}}else{if(o.match(/[\\x00-\\x1F\\x7F-\\x9F]/)!=null||o.match(/[\\u0000-\\u001F\\u0080–\\u009F]/)!=null){return{tag:{tag:C,explicit:false,hex:p}}}else{return{tag:{tag:C,explicit:false,str:o}}}}}else{if(C.match(/^a[0-9]$/)){try{if(!a(p)){throw new Error(\"not encap\")}return{tag:{tag:C,explicit:true,obj:f(p)}}}catch(z){return{tag:{tag:C,explicit:true,hex:p}}}}else{var A=new KJUR.asn1.ASN1Object();A.hV=p;var w=A.getLengthHexFromValue();return{asn1:{tlv:C+w+p}}}}}}}}}}}}}}}};ASN1HEX.isContextTag=function(c,b){c=c.toLowerCase();var f,e;try{f=parseInt(c,16)}catch(d){return -1}if(b===undefined){if((f&192)==128){return true}else{return false}}try{var a=b.match(/^\\[[0-9]+\\]$/);if(a==null){return false}e=parseInt(b.substr(1,b.length-1),10);if(e>31){return false}if(((f&192)==128)&&((f&31)==e)){return true}return false}catch(d){return false}};ASN1HEX.isASN1HEX=function(e){var d=ASN1HEX;if(e.length%2==1){return false}var c=d.getVblen(e,0);var b=e.substr(0,2);var f=d.getL(e,0);var a=e.length-b.length-f.length;if(a==c*2){return true}return false};ASN1HEX.checkStrictDER=function(g,o,d,c,r){var s=ASN1HEX;if(d===undefined){if(typeof g!=\"string\"){throw new Error(\"not hex string\")}g=g.toLowerCase();if(!KJUR.lang.String.isHex(g)){throw new Error(\"not hex string\")}d=g.length;c=g.length/2;if(c<128){r=1}else{r=Math.ceil(c.toString(16))+1}}var k=s.getL(g,o);if(k.length>r*2){throw new Error(\"L of TLV too long: idx=\"+o)}var n=s.getVblen(g,o);if(n>c){throw new Error(\"value of L too long than hex: idx=\"+o)}var q=s.getTLV(g,o);var f=q.length-2-s.getL(g,o).length;if(f!==(n*2)){throw new Error(\"V string length and L's value not the same:\"+f+\"/\"+(n*2))}if(o===0){if(g.length!=q.length){throw new Error(\"total length and TLV length unmatch:\"+g.length+\"!=\"+q.length)}}var b=g.substr(o,2);if(b===\"02\"){var a=s.getVidx(g,o);if(g.substr(a,2)==\"00\"&&g.charCodeAt(a+2)<56){throw new Error(\"not least zeros for DER INTEGER\")}}if(parseInt(b,16)&32){var p=s.getVblen(g,o);var m=0;var l=s.getChildIdx(g,o);for(var e=0;e<l.length;e++){var j=s.getTLV(g,l[e]);m+=j.length;s.checkStrictDER(g,l[e],d,c,r)}if((p*2)!=m){throw new Error(\"sum of children's TLV length and L unmatch: \"+(p*2)+\"!=\"+m)}}};ASN1HEX.oidname=function(a){var c=KJUR.asn1;if(KJUR.lang.String.isHex(a)){a=c.ASN1Util.oidHexToInt(a)}var b=c.x509.OID.oid2name(a);if(b===\"\"){b=a}return b};\nif(typeof KJUR==\"undefined\"||!KJUR){KJUR={}}if(typeof KJUR.asn1==\"undefined\"||!KJUR.asn1){KJUR.asn1={}}if(typeof KJUR.asn1.x509==\"undefined\"||!KJUR.asn1.x509){KJUR.asn1.x509={}}KJUR.asn1.x509.Certificate=function(h){KJUR.asn1.x509.Certificate.superclass.constructor.call(this);var d=KJUR,c=d.asn1,f=c.DERBitString,b=c.DERSequence,g=c.x509,a=g.TBSCertificate,e=g.AlgorithmIdentifier;this.params=undefined;this.setByParam=function(i){this.params=i};this.sign=function(){var l=this.params;var k=l.sigalg;if(l.sigalg.name!=undefined){k=l.sigalg.name}var i=l.tbsobj.tohex();var j=new KJUR.crypto.Signature({alg:k});j.init(l.cakey);j.updateHex(i);l.sighex=j.sign()};this.getPEM=function(){return hextopem(this.tohex(),\"CERTIFICATE\")};this.tohex=function(){var k=this.params;if(k.tbsobj==undefined||k.tbsobj==null){k.tbsobj=new a(k)}if(k.sighex==undefined&&k.cakey!=undefined){this.sign()}if(k.sighex==undefined){throw new Error(\"sighex or cakey parameter not defined\")}var i=[];i.push(k.tbsobj);i.push(new e({name:k.sigalg}));i.push(new f({hex:\"00\"+k.sighex}));var j=new b({array:i});return j.tohex()};this.getEncodedHex=function(){return this.tohex()};if(h!=undefined){this.params=h}};extendClass(KJUR.asn1.x509.Certificate,KJUR.asn1.ASN1Object);KJUR.asn1.x509.TBSCertificate=function(f){KJUR.asn1.x509.TBSCertificate.superclass.constructor.call(this);var b=KJUR,i=b.asn1,d=i.x509,c=i.DERTaggedObject,h=i.DERInteger,g=i.DERSequence,l=d.AlgorithmIdentifier,e=d.Time,a=d.X500Name,j=d.Extensions,k=d.SubjectPublicKeyInfo;this.params=null;this.setByParam=function(m){this.params=m};this.tohex=function(){var n=[];var q=this.params;if(q.version!=undefined||q.version!=1){var m=2;if(q.version!=undefined){m=q.version-1}var p=new c({obj:new h({\"int\":m})});n.push(p)}n.push(new h(q.serial));n.push(new l({name:q.sigalg}));n.push(new a(q.issuer));n.push(new g({array:[new e(q.notbefore),new e(q.notafter)]}));n.push(new a(q.subject));n.push(new k(KEYUTIL.getKey(q.sbjpubkey)));if(q.ext!==undefined&&q.ext.length>0){n.push(new c({tag:\"a3\",obj:new j(q.ext)}))}var o=new KJUR.asn1.DERSequence({array:n});return o.tohex()};this.getEncodedHex=function(){return this.tohex()};if(f!==undefined){this.setByParam(f)}};extendClass(KJUR.asn1.x509.TBSCertificate,KJUR.asn1.ASN1Object);KJUR.asn1.x509.Extensions=function(d){KJUR.asn1.x509.Extensions.superclass.constructor.call(this);var c=KJUR,b=c.asn1,a=b.DERSequence,e=b.x509;this.aParam=[];this.setByParam=function(f){this.aParam=f};this.tohex=function(){var f=[];for(var h=0;h<this.aParam.length;h++){var l=this.aParam[h];var k=l.extname;var j=null;if(l.extn!=undefined){j=new e.PrivateExtension(l)}else{if(k==\"subjectKeyIdentifier\"){j=new e.SubjectKeyIdentifier(l)}else{if(k==\"keyUsage\"){j=new e.KeyUsage(l)}else{if(k==\"subjectAltName\"){j=new e.SubjectAltName(l)}else{if(k==\"issuerAltName\"){j=new e.IssuerAltName(l)}else{if(k==\"basicConstraints\"){j=new e.BasicConstraints(l)}else{if(k==\"nameConstraints\"){j=new e.NameConstraints(l)}else{if(k==\"cRLDistributionPoints\"){j=new e.CRLDistributionPoints(l)}else{if(k==\"certificatePolicies\"){j=new e.CertificatePolicies(l)}else{if(k==\"authorityKeyIdentifier\"){j=new e.AuthorityKeyIdentifier(l)}else{if(k==\"extKeyUsage\"){j=new e.ExtKeyUsage(l)}else{if(k==\"authorityInfoAccess\"){j=new e.AuthorityInfoAccess(l)}else{if(k==\"cRLNumber\"){j=new e.CRLNumber(l)}else{if(k==\"cRLReason\"){j=new e.CRLReason(l)}else{if(k==\"ocspNonce\"){j=new e.OCSPNonce(l)}else{if(k==\"ocspNoCheck\"){j=new e.OCSPNoCheck(l)}else{if(k==\"adobeTimeStamp\"){j=new e.AdobeTimeStamp(l)}else{if(k==\"subjectDirectoryAttributes\"){j=new e.SubjectDirectoryAttributes(l)}else{throw new Error(\"extension not supported:\"+JSON.stringify(l))}}}}}}}}}}}}}}}}}}if(j!=null){f.push(j)}}var g=new a({array:f});return g.tohex()};this.getEncodedHex=function(){return this.tohex()};if(d!=undefined){this.setByParam(d)}};extendClass(KJUR.asn1.x509.Extensions,KJUR.asn1.ASN1Object);KJUR.asn1.x509.Extension=function(d){KJUR.asn1.x509.Extension.superclass.constructor.call(this);var f=null,a=KJUR,e=a.asn1,h=e.DERObjectIdentifier,i=e.DEROctetString,b=e.DERBitString,g=e.DERBoolean,c=e.DERSequence;this.tohex=function(){var m=new h({oid:this.oid});var l=new i({hex:this.getExtnValueHex()});var k=new Array();k.push(m);if(this.critical){k.push(new g())}k.push(l);var j=new c({array:k});return j.tohex()};this.getEncodedHex=function(){return this.tohex()};this.critical=false;if(d!==undefined){if(d.critical!==undefined){this.critical=d.critical}}};extendClass(KJUR.asn1.x509.Extension,KJUR.asn1.ASN1Object);KJUR.asn1.x509.KeyUsage=function(c){KJUR.asn1.x509.KeyUsage.superclass.constructor.call(this,c);var b=Error;var a={digitalSignature:0,nonRepudiation:1,keyEncipherment:2,dataEncipherment:3,keyAgreement:4,keyCertSign:5,cRLSign:6,encipherOnly:7,decipherOnly:8};this.getExtnValueHex=function(){var d=this.getBinValue();this.asn1ExtnValue=new KJUR.asn1.DERBitString({bin:d});return this.asn1ExtnValue.tohex()};this.getBinValue=function(){var d=this.params;if(typeof d!=\"object\"||(typeof d.names!=\"object\"&&typeof d.bin!=\"string\")){throw new b(\"parameter not yet set\")}if(d.names!=undefined){return namearraytobinstr(d.names,a)}else{if(d.bin!=undefined){return d.bin}else{throw new b(\"parameter not set properly\")}}};this.oid=\"2.5.29.15\";if(c!==undefined){this.params=c}};extendClass(KJUR.asn1.x509.KeyUsage,KJUR.asn1.x509.Extension);KJUR.asn1.x509.BasicConstraints=function(g){KJUR.asn1.x509.BasicConstraints.superclass.constructor.call(this,g);var c=KJUR.asn1,e=c.DERBoolean,f=c.DERInteger,b=c.DERSequence;var a=false;var d=-1;this.getExtnValueHex=function(){var i=new Array();if(this.cA){i.push(new e())}if(this.pathLen>-1){i.push(new f({\"int\":this.pathLen}))}var h=new b({array:i});this.asn1ExtnValue=h;return this.asn1ExtnValue.tohex()};this.oid=\"2.5.29.19\";this.cA=false;this.pathLen=-1;if(g!==undefined){if(g.cA!==undefined){this.cA=g.cA}if(g.pathLen!==undefined){this.pathLen=g.pathLen}}};extendClass(KJUR.asn1.x509.BasicConstraints,KJUR.asn1.x509.Extension);KJUR.asn1.x509.CRLDistributionPoints=function(d){KJUR.asn1.x509.CRLDistributionPoints.superclass.constructor.call(this,d);var b=KJUR,a=b.asn1,c=a.x509;this.getExtnValueHex=function(){return this.asn1ExtnValue.tohex()};this.setByDPArray=function(e){var f=[];for(var g=0;g<e.length;g++){if(e[g] instanceof KJUR.asn1.ASN1Object){f.push(e[g])}else{var h=new c.DistributionPoint(e[g]);f.push(h)}}this.asn1ExtnValue=new a.DERSequence({array:f})};this.setByOneURI=function(f){var e=new c.DistributionPoint({fulluri:f});this.setByDPArray([e])};this.oid=\"2.5.29.31\";if(d!==undefined){if(d.array!==undefined){this.setByDPArray(d.array)}else{if(d.uri!==undefined){this.setByOneURI(d.uri)}}}};extendClass(KJUR.asn1.x509.CRLDistributionPoints,KJUR.asn1.x509.Extension);KJUR.asn1.x509.DistributionPoint=function(e){KJUR.asn1.x509.DistributionPoint.superclass.constructor.call(this);var a=null,c=KJUR,b=c.asn1,d=b.x509.DistributionPointName;this.tohex=function(){var f=new b.DERSequence();if(this.asn1DP!=null){var g=new b.DERTaggedObject({explicit:true,tag:\"a0\",obj:this.asn1DP});f.appendASN1Object(g)}this.hTLV=f.tohex();return this.hTLV};this.getEncodedHex=function(){return this.tohex()};if(e!==undefined){if(e.dpobj!==undefined){this.asn1DP=e.dpobj}else{if(e.dpname!==undefined){this.asn1DP=new d(e.dpname)}else{if(e.fulluri!==undefined){this.asn1DP=new d({full:[{uri:e.fulluri}]})}}}}};extendClass(KJUR.asn1.x509.DistributionPoint,KJUR.asn1.ASN1Object);KJUR.asn1.x509.DistributionPointName=function(h){KJUR.asn1.x509.DistributionPointName.superclass.constructor.call(this);var g=null,d=null,a=null,f=null,c=KJUR,b=c.asn1,e=b.DERTaggedObject;this.tohex=function(){if(this.type!=\"full\"){throw new Error(\"currently type shall be 'full': \"+this.type)}this.asn1Obj=new e({explicit:false,tag:this.tag,obj:this.asn1V});this.hTLV=this.asn1Obj.tohex();return this.hTLV};this.getEncodedHex=function(){return this.tohex()};if(h!==undefined){if(b.x509.GeneralNames.prototype.isPrototypeOf(h)){this.type=\"full\";this.tag=\"a0\";this.asn1V=h}else{if(h.full!==undefined){this.type=\"full\";this.tag=\"a0\";this.asn1V=new b.x509.GeneralNames(h.full)}else{throw new Error(\"This class supports GeneralNames only as argument\")}}}};extendClass(KJUR.asn1.x509.DistributionPointName,KJUR.asn1.ASN1Object);KJUR.asn1.x509.CertificatePolicies=function(f){KJUR.asn1.x509.CertificatePolicies.superclass.constructor.call(this,f);var c=KJUR,b=c.asn1,e=b.x509,a=b.DERSequence,d=e.PolicyInformation;this.params=null;this.getExtnValueHex=function(){var j=[];for(var h=0;h<this.params.array.length;h++){j.push(new d(this.params.array[h]))}var g=new a({array:j});this.asn1ExtnValue=g;return this.asn1ExtnValue.tohex()};this.oid=\"2.5.29.32\";if(f!==undefined){this.params=f}};extendClass(KJUR.asn1.x509.CertificatePolicies,KJUR.asn1.x509.Extension);KJUR.asn1.x509.PolicyInformation=function(d){KJUR.asn1.x509.PolicyInformation.superclass.constructor.call(this,d);var c=KJUR.asn1,b=c.DERSequence,e=c.DERObjectIdentifier,a=c.x509.PolicyQualifierInfo;this.params=null;this.tohex=function(){if(this.params.policyoid===undefined&&this.params.array===undefined){throw new Error(\"parameter oid and array missing\")}var f=[new e(this.params.policyoid)];if(this.params.array!==undefined){var j=[];for(var h=0;h<this.params.array.length;h++){j.push(new a(this.params.array[h]))}if(j.length>0){f.push(new b({array:j}))}}var g=new b({array:f});return g.tohex()};this.getEncodedHex=function(){return this.tohex()};if(d!==undefined){this.params=d}};extendClass(KJUR.asn1.x509.PolicyInformation,KJUR.asn1.ASN1Object);KJUR.asn1.x509.PolicyQualifierInfo=function(e){KJUR.asn1.x509.PolicyQualifierInfo.superclass.constructor.call(this,e);var c=KJUR.asn1,b=c.DERSequence,d=c.DERIA5String,f=c.DERObjectIdentifier,a=c.x509.UserNotice;this.params=null;this.tohex=function(){if(this.params.cps!==undefined){var g=new b({array:[new f({oid:\"1.3.6.1.5.5.7.2.1\"}),new d({str:this.params.cps})]});return g.tohex()}if(this.params.unotice!=undefined){var g=new b({array:[new f({oid:\"1.3.6.1.5.5.7.2.2\"}),new a(this.params.unotice)]});return g.tohex()}};this.getEncodedHex=function(){return this.tohex()};if(e!==undefined){this.params=e}};extendClass(KJUR.asn1.x509.PolicyQualifierInfo,KJUR.asn1.ASN1Object);KJUR.asn1.x509.UserNotice=function(e){KJUR.asn1.x509.UserNotice.superclass.constructor.call(this,e);var a=KJUR.asn1.DERSequence,d=KJUR.asn1.DERInteger,c=KJUR.asn1.x509.DisplayText,b=KJUR.asn1.x509.NoticeReference;this.params=null;this.tohex=function(){var f=[];if(this.params.noticeref!==undefined){f.push(new b(this.params.noticeref))}if(this.params.exptext!==undefined){f.push(new c(this.params.exptext))}var g=new a({array:f});return g.tohex()};this.getEncodedHex=function(){return this.tohex()};if(e!==undefined){this.params=e}};extendClass(KJUR.asn1.x509.UserNotice,KJUR.asn1.ASN1Object);KJUR.asn1.x509.NoticeReference=function(d){KJUR.asn1.x509.NoticeReference.superclass.constructor.call(this,d);var a=KJUR.asn1.DERSequence,c=KJUR.asn1.DERInteger,b=KJUR.asn1.x509.DisplayText;this.params=null;this.tohex=function(){var f=[];if(this.params.org!==undefined){f.push(new b(this.params.org))}if(this.params.noticenum!==undefined){var h=[];var e=this.params.noticenum;for(var j=0;j<e.length;j++){h.push(new c(e[j]))}f.push(new a({array:h}))}if(f.length==0){throw new Error(\"parameter is empty\")}var g=new a({array:f});return g.tohex()};this.getEncodedHex=function(){return this.tohex()};if(d!==undefined){this.params=d}};extendClass(KJUR.asn1.x509.NoticeReference,KJUR.asn1.ASN1Object);KJUR.asn1.x509.DisplayText=function(a){KJUR.asn1.x509.DisplayText.superclass.constructor.call(this,a);this.hT=\"0c\";if(a!==undefined){if(a.type===\"ia5\"){this.hT=\"16\"}else{if(a.type===\"vis\"){this.hT=\"1a\"}else{if(a.type===\"bmp\"){this.hT=\"1e\"}}}}};extendClass(KJUR.asn1.x509.DisplayText,KJUR.asn1.DERAbstractString);KJUR.asn1.x509.NameConstraints=function(f){KJUR.asn1.x509.NameConstraints.superclass.constructor.call(this,f);var c=KJUR,b=c.asn1,e=b.x509,a=b.ASN1Util.newObject,d=e.GeneralSubtree;this.params=null;this.getExtnValueHex=function(){var l=this.params;var g=[];if(l.permit!=undefined&&l.permit.length!=undefined){var k=[];for(var h=0;h<l.permit.length;h++){k.push(new d(l.permit[h]))}g.push({tag:{tagi:\"a0\",obj:{seq:k}}})}if(l.exclude!=undefined&&l.exclude.length!=undefined){var j=[];for(var h=0;h<l.exclude.length;h++){j.push(new d(l.exclude[h]))}g.push({tag:{tagi:\"a1\",obj:{seq:j}}})}this.asn1ExtnValue=a({seq:g});return this.asn1ExtnValue.tohex()};this.oid=\"2.5.29.30\";if(f!==undefined){this.params=f}};extendClass(KJUR.asn1.x509.NameConstraints,KJUR.asn1.x509.Extension);KJUR.asn1.x509.GeneralSubtree=function(e){KJUR.asn1.x509.GeneralSubtree.superclass.constructor.call(this);var b=KJUR.asn1,d=b.x509,c=d.GeneralName,a=b.ASN1Util.newObject;this.params=null;this.setByParam=function(f){this.params=f};this.tohex=function(){var h=this.params;var f=[new c(h)];if(h.min!=undefined){f.push({tag:{tagi:\"80\",obj:{\"int\":h.min}}})}if(h.max!=undefined){f.push({tag:{tagi:\"81\",obj:{\"int\":h.max}}})}var g=a({seq:f});return g.tohex()};this.getEncodedHex=function(){return this.tohex()};if(e!==undefined){this.setByParam(e)}};extendClass(KJUR.asn1.x509.GeneralSubtree,KJUR.asn1.ASN1Object);KJUR.asn1.x509.ExtKeyUsage=function(c){KJUR.asn1.x509.ExtKeyUsage.superclass.constructor.call(this,c);var b=KJUR,a=b.asn1;this.setPurposeArray=function(d){this.asn1ExtnValue=new a.DERSequence();for(var e=0;e<d.length;e++){var f=new a.DERObjectIdentifier(d[e]);this.asn1ExtnValue.appendASN1Object(f)}};this.getExtnValueHex=function(){return this.asn1ExtnValue.tohex()};this.oid=\"2.5.29.37\";if(c!==undefined){if(c.array!==undefined){this.setPurposeArray(c.array)}}};extendClass(KJUR.asn1.x509.ExtKeyUsage,KJUR.asn1.x509.Extension);KJUR.asn1.x509.AuthorityKeyIdentifier=function(f){KJUR.asn1.x509.AuthorityKeyIdentifier.superclass.constructor.call(this,f);var b=KJUR,a=b.asn1,d=a.DERTaggedObject,e=a.x509.GeneralNames,c=b.crypto.Util.isKey;this.asn1KID=null;this.asn1CertIssuer=null;this.asn1CertSN=null;this.getExtnValueHex=function(){var h=new Array();if(this.asn1KID){h.push(new d({explicit:false,tag:\"80\",obj:this.asn1KID}))}if(this.asn1CertIssuer){h.push(new d({explicit:false,tag:\"a1\",obj:new e([{dn:this.asn1CertIssuer}])}))}if(this.asn1CertSN){h.push(new d({explicit:false,tag:\"82\",obj:this.asn1CertSN}))}var g=new a.DERSequence({array:h});this.asn1ExtnValue=g;return this.asn1ExtnValue.tohex()};this.setKIDByParam=function(i){if(i.str!==undefined||i.hex!==undefined){this.asn1KID=new KJUR.asn1.DEROctetString(i)}else{if((typeof i===\"object\"&&KJUR.crypto.Util.isKey(i))||(typeof i===\"string\"&&i.indexOf(\"BEGIN \")!=-1)){var h=i;if(typeof i===\"string\"){h=KEYUTIL.getKey(i)}var g=KEYUTIL.getKeyID(h);this.asn1KID=new KJUR.asn1.DEROctetString({hex:g})}}};this.setCertIssuerByParam=function(g){if(g.str!==undefined||g.ldapstr!==undefined||g.hex!==undefined||g.certsubject!==undefined||g.certissuer!==undefined){this.asn1CertIssuer=new KJUR.asn1.x509.X500Name(g)}else{if(typeof g===\"string\"&&g.indexOf(\"BEGIN \")!=-1&&g.indexOf(\"CERTIFICATE\")!=-1){this.asn1CertIssuer=new KJUR.asn1.x509.X500Name({certissuer:g})}}};this.setCertSNByParam=function(i){if(i.str!==undefined||i.bigint!==undefined||i.hex!==undefined){this.asn1CertSN=new KJUR.asn1.DERInteger(i)}else{if(typeof i===\"string\"&&i.indexOf(\"BEGIN \")!=-1&&i.indexOf(\"CERTIFICATE\")){var g=new X509();g.readCertPEM(i);var h=g.getSerialNumberHex();this.asn1CertSN=new KJUR.asn1.DERInteger({hex:h})}}};this.oid=\"2.5.29.35\";if(f!==undefined){if(f.kid!==undefined){this.setKIDByParam(f.kid)}if(f.issuer!==undefined){this.setCertIssuerByParam(f.issuer)}if(f.sn!==undefined){this.setCertSNByParam(f.sn)}if(f.issuersn!==undefined&&typeof f.issuersn===\"string\"&&f.issuersn.indexOf(\"BEGIN \")!=-1&&f.issuersn.indexOf(\"CERTIFICATE\")){this.setCertSNByParam(f.issuersn);this.setCertIssuerByParam(f.issuersn)}}};extendClass(KJUR.asn1.x509.AuthorityKeyIdentifier,KJUR.asn1.x509.Extension);KJUR.asn1.x509.SubjectKeyIdentifier=function(d){KJUR.asn1.x509.SubjectKeyIdentifier.superclass.constructor.call(this,d);var b=KJUR,a=b.asn1,c=a.DEROctetString;this.asn1KID=null;this.getExtnValueHex=function(){this.asn1ExtnValue=this.asn1KID;return this.asn1ExtnValue.tohex()};this.setKIDByParam=function(g){if(g.str!==undefined||g.hex!==undefined){this.asn1KID=new c(g)}else{if((typeof g===\"object\"&&KJUR.crypto.Util.isKey(g))||(typeof g===\"string\"&&g.indexOf(\"BEGIN\")!=-1)){var f=g;if(typeof g===\"string\"){f=KEYUTIL.getKey(g)}var e=KEYUTIL.getKeyID(f);this.asn1KID=new KJUR.asn1.DEROctetString({hex:e})}}};this.oid=\"2.5.29.14\";if(d!==undefined){if(d.kid!==undefined){this.setKIDByParam(d.kid)}}};extendClass(KJUR.asn1.x509.SubjectKeyIdentifier,KJUR.asn1.x509.Extension);KJUR.asn1.x509.AuthorityInfoAccess=function(a){KJUR.asn1.x509.AuthorityInfoAccess.superclass.constructor.call(this,a);this.setAccessDescriptionArray=function(k){var d=new Array(),b=KJUR,g=b.asn1,c=g.DERSequence,j=g.DERObjectIdentifier,l=g.x509.GeneralName;for(var f=0;f<k.length;f++){var e;var h=k[f];if(h.ocsp!==undefined){e=new c({array:[new j({oid:\"1.3.6.1.5.5.7.48.1\"}),new l({uri:h.ocsp})]})}else{if(h.caissuer!==undefined){e=new c({array:[new j({oid:\"1.3.6.1.5.5.7.48.2\"}),new l({uri:h.caissuer})]})}else{throw new Error(\"unknown AccessMethod parameter: \"+JSON.stringify(h))}}d.push(e)}this.asn1ExtnValue=new c({array:d})};this.getExtnValueHex=function(){return this.asn1ExtnValue.tohex()};this.oid=\"1.3.6.1.5.5.7.1.1\";if(a!==undefined){if(a.array!==undefined){this.setAccessDescriptionArray(a.array)}}};extendClass(KJUR.asn1.x509.AuthorityInfoAccess,KJUR.asn1.x509.Extension);KJUR.asn1.x509.SubjectAltName=function(a){KJUR.asn1.x509.SubjectAltName.superclass.constructor.call(this,a);this.setNameArray=function(b){this.asn1ExtnValue=new KJUR.asn1.x509.GeneralNames(b)};this.getExtnValueHex=function(){return this.asn1ExtnValue.tohex()};this.oid=\"2.5.29.17\";if(a!==undefined){if(a.array!==undefined){this.setNameArray(a.array)}}};extendClass(KJUR.asn1.x509.SubjectAltName,KJUR.asn1.x509.Extension);KJUR.asn1.x509.IssuerAltName=function(a){KJUR.asn1.x509.IssuerAltName.superclass.constructor.call(this,a);this.setNameArray=function(b){this.asn1ExtnValue=new KJUR.asn1.x509.GeneralNames(b)};this.getExtnValueHex=function(){return this.asn1ExtnValue.tohex()};this.oid=\"2.5.29.18\";if(a!==undefined){if(a.array!==undefined){this.setNameArray(a.array)}}};extendClass(KJUR.asn1.x509.IssuerAltName,KJUR.asn1.x509.Extension);KJUR.asn1.x509.SubjectDirectoryAttributes=function(e){KJUR.asn1.x509.SubjectDirectoryAttributes.superclass.constructor.call(this,e);var c=KJUR.asn1,a=c.DERSequence,b=c.ASN1Util.newObject,d=c.x509.OID.name2oid;this.params=null;this.getExtnValueHex=function(){var f=[];for(var j=0;j<this.params.array.length;j++){var k=this.params.array[j];var h={seq:[{oid:\"1.2.3.4\"},{set:[{utf8str:\"DE\"}]}]};if(k.attr==\"dateOfBirth\"){h.seq[0].oid=d(k.attr);h.seq[1].set[0]={gentime:k.str}}else{if(k.attr==\"placeOfBirth\"){h.seq[0].oid=d(k.attr);h.seq[1].set[0]={utf8str:k.str}}else{if(k.attr==\"gender\"){h.seq[0].oid=d(k.attr);h.seq[1].set[0]={prnstr:k.str}}else{if(k.attr==\"countryOfCitizenship\"){h.seq[0].oid=d(k.attr);h.seq[1].set[0]={prnstr:k.str}}else{if(k.attr==\"countryOfResidence\"){h.seq[0].oid=d(k.attr);h.seq[1].set[0]={prnstr:k.str}}else{throw new Error(\"unsupported attribute: \"+k.attr)}}}}}f.push(new b(h))}var g=new a({array:f});this.asn1ExtnValue=g;return this.asn1ExtnValue.tohex()};this.oid=\"2.5.29.9\";if(e!==undefined){this.params=e}};extendClass(KJUR.asn1.x509.SubjectDirectoryAttributes,KJUR.asn1.x509.Extension);KJUR.asn1.x509.PrivateExtension=function(f){KJUR.asn1.x509.PrivateExtension.superclass.constructor.call(this,f);var c=KJUR,e=c.lang.String.isHex,b=c.asn1,d=b.x509.OID.name2oid,a=b.ASN1Util.newObject;this.params=null;this.setByParam=function(g){this.oid=d(g.extname);this.params=g};this.getExtnValueHex=function(){if(this.params.extname==undefined||this.params.extn==undefined){throw new Error(\"extname or extnhex not specified\")}var h=this.params.extn;if(typeof h==\"string\"&&e(h)){return h}else{if(typeof h==\"object\"){try{return a(h).tohex()}catch(g){}}}throw new Error(\"unsupported extn value\")};if(f!=undefined){this.setByParam(f)}};extendClass(KJUR.asn1.x509.PrivateExtension,KJUR.asn1.x509.Extension);KJUR.asn1.x509.CRL=function(g){KJUR.asn1.x509.CRL.superclass.constructor.call(this);var c=KJUR,b=c.asn1,a=b.DERSequence,e=b.DERBitString,f=b.x509,d=f.AlgorithmIdentifier,h=f.TBSCertList;this.params=undefined;this.setByParam=function(i){this.params=i};this.sign=function(){var j=(new h(this.params)).tohex();var k=new KJUR.crypto.Signature({alg:this.params.sigalg});k.init(this.params.cakey);k.updateHex(j);var i=k.sign();this.params.sighex=i};this.getPEM=function(){return hextopem(this.tohex(),\"X509 CRL\")};this.tohex=function(){var k=this.params;if(k.tbsobj==undefined){k.tbsobj=new h(k)}if(k.sighex==undefined&&k.cakey!=undefined){this.sign()}if(k.sighex==undefined){throw new Error(\"sighex or cakey parameter not defined\")}var i=[];i.push(k.tbsobj);i.push(new d({name:k.sigalg}));i.push(new e({hex:\"00\"+k.sighex}));var j=new a({array:i});return j.tohex()};this.getEncodedHex=function(){return this.tohex()};if(g!=undefined){this.params=g}};extendClass(KJUR.asn1.x509.CRL,KJUR.asn1.ASN1Object);KJUR.asn1.x509.TBSCertList=function(f){KJUR.asn1.x509.TBSCertList.superclass.constructor.call(this);var b=KJUR,i=b.asn1,h=i.DERInteger,g=i.DERSequence,c=i.DERTaggedObject,k=i.DERObjectIdentifier,d=i.x509,l=d.AlgorithmIdentifier,e=d.Time,j=d.Extensions,a=d.X500Name;this.params=null;this.setByParam=function(m){this.params=m};this.getRevCertSequence=function(){var m=[];var n=this.params.revcert;for(var o=0;o<n.length;o++){var p=[new h(n[o].sn),new e(n[o].date)];if(n[o].ext!=undefined){p.push(new j(n[o].ext))}m.push(new g({array:p}))}return new g({array:m})};this.tohex=function(){var n=[];var r=this.params;if(r.version!=undefined){var m=r.version-1;var p=new h({\"int\":m});n.push(p)}n.push(new l({name:r.sigalg}));n.push(new a(r.issuer));n.push(new e(r.thisupdate));if(r.nextupdate!=undefined){n.push(new e(r.nextupdate))}if(r.revcert!=undefined){n.push(this.getRevCertSequence())}if(r.ext!=undefined){var q=new j(r.ext);n.push(new c({tag:\"a0\",explicit:true,obj:q}))}var o=new g({array:n});return o.tohex()};this.getEncodedHex=function(){return this.tohex()};if(f!==undefined){this.setByParam(f)}};extendClass(KJUR.asn1.x509.TBSCertList,KJUR.asn1.ASN1Object);KJUR.asn1.x509.CRLEntry=function(e){KJUR.asn1.x509.CRLEntry.superclass.constructor.call(this);var d=null,c=null,b=KJUR,a=b.asn1;this.setCertSerial=function(f){this.sn=new a.DERInteger(f)};this.setRevocationDate=function(f){this.time=new a.x509.Time(f)};this.tohex=function(){var f=new a.DERSequence({array:[this.sn,this.time]});this.TLV=f.tohex();return this.TLV};this.getEncodedHex=function(){return this.tohex()};if(e!==undefined){if(e.time!==undefined){this.setRevocationDate(e.time)}if(e.sn!==undefined){this.setCertSerial(e.sn)}}};extendClass(KJUR.asn1.x509.CRLEntry,KJUR.asn1.ASN1Object);KJUR.asn1.x509.CRLNumber=function(a){KJUR.asn1.x509.CRLNumber.superclass.constructor.call(this,a);this.params=undefined;this.getExtnValueHex=function(){this.asn1ExtnValue=new KJUR.asn1.DERInteger(this.params.num);return this.asn1ExtnValue.tohex()};this.oid=\"2.5.29.20\";if(a!=undefined){this.params=a}};extendClass(KJUR.asn1.x509.CRLNumber,KJUR.asn1.x509.Extension);KJUR.asn1.x509.CRLReason=function(a){KJUR.asn1.x509.CRLReason.superclass.constructor.call(this,a);this.params=undefined;this.getExtnValueHex=function(){this.asn1ExtnValue=new KJUR.asn1.DEREnumerated(this.params.code);return this.asn1ExtnValue.tohex()};this.oid=\"2.5.29.21\";if(a!=undefined){this.params=a}};extendClass(KJUR.asn1.x509.CRLReason,KJUR.asn1.x509.Extension);KJUR.asn1.x509.OCSPNonce=function(a){KJUR.asn1.x509.OCSPNonce.superclass.constructor.call(this,a);this.params=undefined;this.getExtnValueHex=function(){this.asn1ExtnValue=new KJUR.asn1.DEROctetString(this.params);return this.asn1ExtnValue.tohex()};this.oid=\"1.3.6.1.5.5.7.48.1.2\";if(a!=undefined){this.params=a}};extendClass(KJUR.asn1.x509.OCSPNonce,KJUR.asn1.x509.Extension);KJUR.asn1.x509.OCSPNoCheck=function(a){KJUR.asn1.x509.OCSPNoCheck.superclass.constructor.call(this,a);this.params=undefined;this.getExtnValueHex=function(){this.asn1ExtnValue=new KJUR.asn1.DERNull();return this.asn1ExtnValue.tohex()};this.oid=\"1.3.6.1.5.5.7.48.1.5\";if(a!=undefined){this.params=a}};extendClass(KJUR.asn1.x509.OCSPNoCheck,KJUR.asn1.x509.Extension);KJUR.asn1.x509.AdobeTimeStamp=function(g){KJUR.asn1.x509.AdobeTimeStamp.superclass.constructor.call(this,g);var c=KJUR,b=c.asn1,f=b.DERInteger,d=b.DERBoolean,a=b.DERSequence,e=b.x509.GeneralName;this.params=null;this.getExtnValueHex=function(){var i=this.params;var h=[new f(1)];h.push(new e({uri:i.uri}));if(i.reqauth!=undefined){h.push(new d(i.reqauth))}this.asn1ExtnValue=new a({array:h});return this.asn1ExtnValue.tohex()};this.oid=\"1.2.840.113583.1.1.9.1\";if(g!==undefined){this.setByParam(g)}};extendClass(KJUR.asn1.x509.AdobeTimeStamp,KJUR.asn1.x509.Extension);KJUR.asn1.x509.X500Name=function(f){KJUR.asn1.x509.X500Name.superclass.constructor.call(this);this.asn1Array=[];this.paramArray=[];this.sRule=\"utf8\";var c=KJUR,b=c.asn1,e=b.x509,d=e.RDN,a=pemtohex;this.setByString=function(g,l){if(l!==undefined){this.sRule=l}var k=g.split(\"/\");k.shift();var j=[];for(var m=0;m<k.length;m++){if(k[m].match(/^[^=]+=.+$/)){j.push(k[m])}else{var h=j.length-1;j[h]=j[h]+\"/\"+k[m]}}for(var m=0;m<j.length;m++){this.asn1Array.push(new d({str:j[m],rule:this.sRule}))}};this.setByLdapString=function(g,h){if(h!==undefined){this.sRule=h}var i=e.X500Name.ldapToCompat(g);this.setByString(i,h)};this.setByObject=function(j,i){if(i!==undefined){this.sRule=i}for(var g in j){if(j.hasOwnProperty(g)){var h=new d({str:g+\"=\"+j[g],rule:this.sRule});this.asn1Array?this.asn1Array.push(h):this.asn1Array=[h]}}};this.setByParam=function(h){if(h.rule!==undefined){this.sRule=h.rule}if(h.array!==undefined){this.paramArray=h.array}else{if(h.str!==undefined){this.setByString(h.str)}else{if(h.ldapstr!==undefined){this.setByLdapString(h.ldapstr)}else{if(h.hex!==undefined){this.hTLV=h.hex}else{if(h.certissuer!==undefined){var g=new X509();g.readCertPEM(h.certissuer);this.hTLV=g.getIssuerHex()}else{if(h.certsubject!==undefined){var g=new X509();g.readCertPEM(h.certsubject);this.hTLV=g.getSubjectHex()}else{if(typeof h===\"object\"&&h.certsubject===undefined&&h.certissuer===undefined){this.setByObject(h)}}}}}}}};this.tohex=function(){if(typeof this.hTLV==\"string\"){return this.hTLV}if(this.asn1Array.length==0&&this.paramArray.length>0){for(var g=0;g<this.paramArray.length;g++){var k={array:this.paramArray[g]};if(this.sRule!=\"utf8\"){k.rule=this.sRule}var h=new d(k);this.asn1Array.push(h)}}var j=new b.DERSequence({array:this.asn1Array});this.hTLV=j.tohex();return this.hTLV};this.getEncodedHex=function(){return this.tohex()};if(f!==undefined){this.setByParam(f)}};extendClass(KJUR.asn1.x509.X500Name,KJUR.asn1.ASN1Object);KJUR.asn1.x509.X500Name.compatToLDAP=function(d){if(d.substr(0,1)!==\"/\"){throw\"malformed input\"}var b=\"\";d=d.substr(1);var c=d.split(\"/\");c.reverse();c=c.map(function(a){return a.replace(/,/,\"\\\\,\")});return c.join(\",\")};KJUR.asn1.x509.X500Name.onelineToLDAP=function(a){return KJUR.asn1.x509.X500Name.compatToLDAP(a)};KJUR.asn1.x509.X500Name.ldapToCompat=function(g){var c=g.split(\",\");var e=false;var b=[];for(var f=0;c.length>0;f++){var h=c.shift();if(e===true){var d=b.pop();var j=(d+\",\"+h).replace(/\\\\,/g,\",\");b.push(j);e=false}else{b.push(h)}if(h.substr(-1,1)===\"\\\\\"){e=true}}b=b.map(function(a){return a.replace(\"/\",\"\\\\/\")});b.reverse();return\"/\"+b.join(\"/\")};KJUR.asn1.x509.X500Name.ldapToOneline=function(a){return KJUR.asn1.x509.X500Name.ldapToCompat(a)};KJUR.asn1.x509.RDN=function(b){KJUR.asn1.x509.RDN.superclass.constructor.call(this);this.asn1Array=[];this.paramArray=[];this.sRule=\"utf8\";var a=KJUR.asn1.x509.AttributeTypeAndValue;this.setByParam=function(c){if(c.rule!==undefined){this.sRule=c.rule}if(c.str!==undefined){this.addByMultiValuedString(c.str)}if(c.array!==undefined){this.paramArray=c.array}};this.addByString=function(c){this.asn1Array.push(new KJUR.asn1.x509.AttributeTypeAndValue({str:c,rule:this.sRule}))};this.addByMultiValuedString=function(e){var c=KJUR.asn1.x509.RDN.parseString(e);for(var d=0;d<c.length;d++){this.addByString(c[d])}};this.tohex=function(){if(this.asn1Array.length==0&&this.paramArray.length>0){for(var d=0;d<this.paramArray.length;d++){var f=this.paramArray[d];if(f.rule!==undefined&&this.sRule!=\"utf8\"){f.rule=this.sRule}var c=new a(f);this.asn1Array.push(c)}}var e=new KJUR.asn1.DERSet({array:this.asn1Array});this.TLV=e.tohex();return this.TLV};this.getEncodedHex=function(){return this.tohex()};if(b!==undefined){this.setByParam(b)}};extendClass(KJUR.asn1.x509.RDN,KJUR.asn1.ASN1Object);KJUR.asn1.x509.RDN.parseString=function(m){var j=m.split(/\\+/);var h=false;var c=[];for(var g=0;j.length>0;g++){var k=j.shift();if(h===true){var f=c.pop();var d=(f+\"+\"+k).replace(/\\\\\\+/g,\"+\");c.push(d);h=false}else{c.push(k)}if(k.substr(-1,1)===\"\\\\\"){h=true}}var l=false;var b=[];for(var g=0;c.length>0;g++){var k=c.shift();if(l===true){var e=b.pop();if(k.match(/\"$/)){var d=(e+\"+\"+k).replace(/^([^=]+)=\"(.*)\"$/,\"$1=$2\");b.push(d);l=false}else{b.push(e+\"+\"+k)}}else{b.push(k)}if(k.match(/^[^=]+=\"/)){l=true}}return b};KJUR.asn1.x509.AttributeTypeAndValue=function(c){KJUR.asn1.x509.AttributeTypeAndValue.superclass.constructor.call(this);this.sRule=\"utf8\";this.sType=null;this.sValue=null;this.dsType=null;var a=KJUR,g=a.asn1,d=g.DERSequence,l=g.DERUTF8String,i=g.DERPrintableString,h=g.DERTeletexString,b=g.DERIA5String,e=g.DERVisibleString,k=g.DERBMPString,f=a.lang.String.isMail,j=a.lang.String.isPrintable;this.setByParam=function(o){if(o.rule!==undefined){this.sRule=o.rule}if(o.ds!==undefined){this.dsType=o.ds}if(o.value===undefined&&o.str!==undefined){var n=o.str;var m=n.match(/^([^=]+)=(.+)$/);if(m){this.sType=m[1];this.sValue=m[2]}else{throw new Error(\"malformed attrTypeAndValueStr: \"+attrTypeAndValueStr)}}else{this.sType=o.type;this.sValue=o.value}};this.setByString=function(n,o){if(o!==undefined){this.sRule=o}var m=n.match(/^([^=]+)=(.+)$/);if(m){this.setByAttrTypeAndValueStr(m[1],m[2])}else{throw new Error(\"malformed attrTypeAndValueStr: \"+attrTypeAndValueStr)}};this._getDsType=function(){var o=this.sType;var n=this.sValue;var m=this.sRule;if(m===\"prn\"){if(o==\"CN\"&&f(n)){return\"ia5\"}if(j(n)){return\"prn\"}return\"utf8\"}else{if(m===\"utf8\"){if(o==\"CN\"&&f(n)){return\"ia5\"}if(o==\"C\"){return\"prn\"}return\"utf8\"}}return\"utf8\"};this.setByAttrTypeAndValueStr=function(o,n,m){if(m!==undefined){this.sRule=m}this.sType=o;this.sValue=n};this.getValueObj=function(n,m){if(n==\"utf8\"){return new l({str:m})}if(n==\"prn\"){return new i({str:m})}if(n==\"tel\"){return new h({str:m})}if(n==\"ia5\"){return new b({str:m})}if(n==\"vis\"){return new e({str:m})}if(n==\"bmp\"){return new k({str:m})}throw new Error(\"unsupported directory string type: type=\"+n+\" value=\"+m)};this.tohex=function(){if(this.dsType==null){this.dsType=this._getDsType()}var n=KJUR.asn1.x509.OID.atype2obj(this.sType);var m=this.getValueObj(this.dsType,this.sValue);var p=new d({array:[n,m]});this.TLV=p.tohex();return this.TLV};this.getEncodedHex=function(){return this.tohex()};if(c!==undefined){this.setByParam(c)}};extendClass(KJUR.asn1.x509.AttributeTypeAndValue,KJUR.asn1.ASN1Object);KJUR.asn1.x509.SubjectPublicKeyInfo=function(f){KJUR.asn1.x509.SubjectPublicKeyInfo.superclass.constructor.call(this);var l=null,k=null,a=KJUR,j=a.asn1,i=j.DERInteger,b=j.DERBitString,m=j.DERObjectIdentifier,e=j.DERSequence,h=j.ASN1Util.newObject,d=j.x509,o=d.AlgorithmIdentifier,g=a.crypto,n=g.ECDSA,c=g.DSA;this.getASN1Object=function(){if(this.asn1AlgId==null||this.asn1SubjPKey==null){throw\"algId and/or subjPubKey not set\"}var p=new e({array:[this.asn1AlgId,this.asn1SubjPKey]});return p};this.tohex=function(){var p=this.getASN1Object();this.hTLV=p.tohex();return this.hTLV};this.getEncodedHex=function(){return this.tohex()};this.setPubKey=function(q){try{if(q instanceof RSAKey){var u=h({seq:[{\"int\":{bigint:q.n}},{\"int\":{\"int\":q.e}}]});var s=u.tohex();this.asn1AlgId=new o({name:\"rsaEncryption\"});this.asn1SubjPKey=new b({hex:\"00\"+s})}}catch(p){}try{if(q instanceof KJUR.crypto.ECDSA){var r=new m({name:q.curveName});this.asn1AlgId=new o({name:\"ecPublicKey\",asn1params:r});this.asn1SubjPKey=new b({hex:\"00\"+q.pubKeyHex})}}catch(p){}try{if(q instanceof KJUR.crypto.DSA){var r=new h({seq:[{\"int\":{bigint:q.p}},{\"int\":{bigint:q.q}},{\"int\":{bigint:q.g}}]});this.asn1AlgId=new o({name:\"dsa\",asn1params:r});var t=new i({bigint:q.y});this.asn1SubjPKey=new b({hex:\"00\"+t.tohex()})}}catch(p){}};if(f!==undefined){this.setPubKey(f)}};extendClass(KJUR.asn1.x509.SubjectPublicKeyInfo,KJUR.asn1.ASN1Object);KJUR.asn1.x509.Time=function(f){KJUR.asn1.x509.Time.superclass.constructor.call(this);var e=null,a=null,d=KJUR,c=d.asn1,b=c.DERUTCTime,g=c.DERGeneralizedTime;this.params=null;this.type=null;this.setTimeParams=function(h){this.timeParams=h};this.setByParam=function(h){this.params=h};this.getType=function(h){if(h.match(/^[0-9]{12}Z$/)){return\"utc\"}if(h.match(/^[0-9]{14}Z$/)){return\"gen\"}if(h.match(/^[0-9]{12}\\.[0-9]+Z$/)){return\"utc\"}if(h.match(/^[0-9]{14}\\.[0-9]+Z$/)){return\"gen\"}return null};this.tohex=function(){var i=this.params;var h=null;if(typeof i==\"string\"){i={str:i}}if(i!=null&&i.str&&(i.type==null||i.type==undefined)){i.type=this.getType(i.str)}if(i!=null&&i.str){if(i.type==\"utc\"){h=new b(i.str)}if(i.type==\"gen\"){h=new g(i.str)}}else{if(this.type==\"gen\"){h=new g()}else{h=new b()}}if(h==null){throw new Error(\"wrong setting for Time\")}this.TLV=h.tohex();return this.TLV};this.getEncodedHex=function(){return this.tohex()};if(f!=undefined){this.setByParam(f)}};KJUR.asn1.x509.Time_bak=function(f){KJUR.asn1.x509.Time_bak.superclass.constructor.call(this);var e=null,a=null,d=KJUR,c=d.asn1,b=c.DERUTCTime,g=c.DERGeneralizedTime;this.setTimeParams=function(h){this.timeParams=h};this.tohex=function(){var h=null;if(this.timeParams!=null){if(this.type==\"utc\"){h=new b(this.timeParams)}else{h=new g(this.timeParams)}}else{if(this.type==\"utc\"){h=new b()}else{h=new g()}}this.TLV=h.tohex();return this.TLV};this.getEncodedHex=function(){return this.tohex()};this.type=\"utc\";if(f!==undefined){if(f.type!==undefined){this.type=f.type}else{if(f.str!==undefined){if(f.str.match(/^[0-9]{12}Z$/)){this.type=\"utc\"}if(f.str.match(/^[0-9]{14}Z$/)){this.type=\"gen\"}}}this.timeParams=f}};extendClass(KJUR.asn1.x509.Time,KJUR.asn1.ASN1Object);KJUR.asn1.x509.AlgorithmIdentifier=function(e){KJUR.asn1.x509.AlgorithmIdentifier.superclass.constructor.call(this);this.nameAlg=null;this.asn1Alg=null;this.asn1Params=null;this.paramEmpty=false;var b=KJUR,a=b.asn1,c=a.x509.AlgorithmIdentifier.PSSNAME2ASN1TLV;this.tohex=function(){if(this.nameAlg===null&&this.asn1Alg===null){throw new Error(\"algorithm not specified\")}if(this.nameAlg!==null){var f=null;for(var h in c){if(h===this.nameAlg){f=c[h]}}if(f!==null){this.hTLV=f;return this.hTLV}}if(this.nameAlg!==null&&this.asn1Alg===null){this.asn1Alg=a.x509.OID.name2obj(this.nameAlg)}var g=[this.asn1Alg];if(this.asn1Params!==null){g.push(this.asn1Params)}var i=new a.DERSequence({array:g});this.hTLV=i.tohex();return this.hTLV};this.getEncodedHex=function(){return this.tohex()};if(e!==undefined){if(e.name!==undefined){this.nameAlg=e.name}if(e.asn1params!==undefined){this.asn1Params=e.asn1params}if(e.paramempty!==undefined){this.paramEmpty=e.paramempty}}if(this.asn1Params===null&&this.paramEmpty===false&&this.nameAlg!==null){if(this.nameAlg.name!==undefined){this.nameAlg=this.nameAlg.name}var d=this.nameAlg.toLowerCase();if(d.substr(-7,7)!==\"withdsa\"&&d.substr(-9,9)!==\"withecdsa\"){this.asn1Params=new a.DERNull()}}};extendClass(KJUR.asn1.x509.AlgorithmIdentifier,KJUR.asn1.ASN1Object);KJUR.asn1.x509.AlgorithmIdentifier.PSSNAME2ASN1TLV={SHAwithRSAandMGF1:\"300d06092a864886f70d01010a3000\",SHA256withRSAandMGF1:\"303d06092a864886f70d01010a3030a00d300b0609608648016503040201a11a301806092a864886f70d010108300b0609608648016503040201a203020120\",SHA384withRSAandMGF1:\"303d06092a864886f70d01010a3030a00d300b0609608648016503040202a11a301806092a864886f70d010108300b0609608648016503040202a203020130\",SHA512withRSAandMGF1:\"303d06092a864886f70d01010a3030a00d300b0609608648016503040203a11a301806092a864886f70d010108300b0609608648016503040203a203020140\"};KJUR.asn1.x509.GeneralName=function(f){KJUR.asn1.x509.GeneralName.superclass.constructor.call(this);var l={rfc822:\"81\",dns:\"82\",dn:\"a4\",uri:\"86\",ip:\"87\",otherName:\"a0\"},b=KJUR,h=b.asn1,d=h.x509,a=d.X500Name,g=d.OtherName,e=h.DERIA5String,i=h.DERPrintableString,k=h.DEROctetString,c=h.DERTaggedObject,m=h.ASN1Object,j=Error;this.params=null;this.setByParam=function(n){this.params=n};this.tohex=function(){var p=this.params;var A,y,q;var y=false;if(p.other!==undefined){A=\"a0\",q=new g(p.other)}else{if(p.rfc822!==undefined){A=\"81\";q=new e({str:p.rfc822})}else{if(p.dns!==undefined){A=\"82\";q=new e({str:p.dns})}else{if(p.dn!==undefined){A=\"a4\";y=true;if(typeof p.dn===\"string\"){q=new a({str:p.dn})}else{if(p.dn instanceof KJUR.asn1.x509.X500Name){q=p.dn}else{q=new a(p.dn)}}}else{if(p.ldapdn!==undefined){A=\"a4\";y=true;q=new a({ldapstr:p.ldapdn})}else{if(p.certissuer!==undefined||p.certsubj!==undefined){A=\"a4\";y=true;var n,o;var z=null;if(p.certsubj!==undefined){n=false;o=p.certsubj}else{n=true;o=p.certissuer}if(o.match(/^[0-9A-Fa-f]+$/)){z==o}if(o.indexOf(\"-----BEGIN \")!=-1){z=pemtohex(o)}if(z==null){throw new Error(\"certsubj/certissuer not cert\")}var w=new X509();w.hex=z;var s;if(n){s=w.getIssuerHex()}else{s=w.getSubjectHex()}q=new m();q.hTLV=s}else{if(p.uri!==undefined){A=\"86\";q=new e({str:p.uri})}else{if(p.ip!==undefined){A=\"87\";var v;var t=p.ip;try{if(t.match(/^[0-9a-f]+$/)){var r=t.length;if(r==8||r==16||r==32||r==64){v=t}else{throw\"err\"}}else{v=iptohex(t)}}catch(u){throw new j(\"malformed IP address: \"+p.ip+\":\"+u.message)}q=new k({hex:v})}else{throw new j(\"improper params\")}}}}}}}}var B=new c({tag:A,explicit:y,obj:q});return B.tohex()};this.getEncodedHex=function(){return this.tohex()};if(f!==undefined){this.setByParam(f)}};extendClass(KJUR.asn1.x509.GeneralName,KJUR.asn1.ASN1Object);KJUR.asn1.x509.GeneralNames=function(d){KJUR.asn1.x509.GeneralNames.superclass.constructor.call(this);var a=null,c=KJUR,b=c.asn1;this.setByParamArray=function(g){for(var e=0;e<g.length;e++){var f=new b.x509.GeneralName(g[e]);this.asn1Array.push(f)}};this.tohex=function(){var e=new b.DERSequence({array:this.asn1Array});return e.tohex()};this.getEncodedHex=function(){return this.tohex()};this.asn1Array=new Array();if(typeof d!=\"undefined\"){this.setByParamArray(d)}};extendClass(KJUR.asn1.x509.GeneralNames,KJUR.asn1.ASN1Object);KJUR.asn1.x509.OtherName=function(g){KJUR.asn1.x509.OtherName.superclass.constructor.call(this);var f=null,e=null,d=KJUR,c=d.asn1,h=c.DERObjectIdentifier,a=c.DERSequence,b=c.ASN1Util.newObject;this.params=null;this.setByParam=function(i){this.params=i};this.tohex=function(){var k=this.params;if(k.oid==undefined||k.value==undefined){throw new Error(\"oid or value not specified\")}var l=new h({oid:k.oid});var i=b({tag:{tag:\"a0\",explicit:true,obj:k.value}});var j=new a({array:[l,i]});return j.tohex()};this.getEncodedHex=function(){return this.tohex()};if(g!==undefined){this.setByParam(g)}};extendClass(KJUR.asn1.x509.OtherName,KJUR.asn1.ASN1Object);KJUR.asn1.x509.OID=new function(){var a=KJUR.asn1.DERObjectIdentifier;this.name2oidList={sha1:\"1.3.14.3.2.26\",sha256:\"2.16.840.1.101.3.4.2.1\",sha384:\"2.16.840.1.101.3.4.2.2\",sha512:\"2.16.840.1.101.3.4.2.3\",sha224:\"2.16.840.1.101.3.4.2.4\",md5:\"1.2.840.113549.2.5\",md2:\"1.3.14.7.2.2.1\",ripemd160:\"1.3.36.3.2.1\",MD2withRSA:\"1.2.840.113549.1.1.2\",MD4withRSA:\"1.2.840.113549.1.1.3\",MD5withRSA:\"1.2.840.113549.1.1.4\",SHA1withRSA:\"1.2.840.113549.1.1.5\",\"pkcs1-MGF\":\"1.2.840.113549.1.1.8\",rsaPSS:\"1.2.840.113549.1.1.10\",SHA224withRSA:\"1.2.840.113549.1.1.14\",SHA256withRSA:\"1.2.840.113549.1.1.11\",SHA384withRSA:\"1.2.840.113549.1.1.12\",SHA512withRSA:\"1.2.840.113549.1.1.13\",SHA1withECDSA:\"1.2.840.10045.4.1\",SHA224withECDSA:\"1.2.840.10045.4.3.1\",SHA256withECDSA:\"1.2.840.10045.4.3.2\",SHA384withECDSA:\"1.2.840.10045.4.3.3\",SHA512withECDSA:\"1.2.840.10045.4.3.4\",dsa:\"1.2.840.10040.4.1\",SHA1withDSA:\"1.2.840.10040.4.3\",SHA224withDSA:\"2.16.840.1.101.3.4.3.1\",SHA256withDSA:\"2.16.840.1.101.3.4.3.2\",rsaEncryption:\"1.2.840.113549.1.1.1\",commonName:\"2.5.4.3\",countryName:\"2.5.4.6\",localityName:\"2.5.4.7\",stateOrProvinceName:\"2.5.4.8\",streetAddress:\"2.5.4.9\",organizationName:\"2.5.4.10\",organizationalUnitName:\"2.5.4.11\",domainComponent:\"0.9.2342.19200300.100.1.25\",userId:\"0.9.2342.19200300.100.1.1\",surname:\"2.5.4.4\",givenName:\"2.5.4.42\",title:\"2.5.4.12\",distinguishedName:\"2.5.4.49\",emailAddress:\"1.2.840.113549.1.9.1\",description:\"2.5.4.13\",businessCategory:\"2.5.4.15\",postalCode:\"2.5.4.17\",uniqueIdentifier:\"2.5.4.45\",organizationIdentifier:\"2.5.4.97\",jurisdictionOfIncorporationL:\"1.3.6.1.4.1.311.60.2.1.1\",jurisdictionOfIncorporationSP:\"1.3.6.1.4.1.311.60.2.1.2\",jurisdictionOfIncorporationC:\"1.3.6.1.4.1.311.60.2.1.3\",subjectDirectoryAttributes:\"2.5.29.9\",subjectKeyIdentifier:\"2.5.29.14\",keyUsage:\"2.5.29.15\",subjectAltName:\"2.5.29.17\",issuerAltName:\"2.5.29.18\",basicConstraints:\"2.5.29.19\",cRLNumber:\"2.5.29.20\",cRLReason:\"2.5.29.21\",nameConstraints:\"2.5.29.30\",cRLDistributionPoints:\"2.5.29.31\",certificatePolicies:\"2.5.29.32\",anyPolicy:\"2.5.29.32.0\",authorityKeyIdentifier:\"2.5.29.35\",policyConstraints:\"2.5.29.36\",extKeyUsage:\"2.5.29.37\",authorityInfoAccess:\"1.3.6.1.5.5.7.1.1\",ocsp:\"1.3.6.1.5.5.7.48.1\",ocspBasic:\"1.3.6.1.5.5.7.48.1.1\",ocspNonce:\"1.3.6.1.5.5.7.48.1.2\",ocspNoCheck:\"1.3.6.1.5.5.7.48.1.5\",caIssuers:\"1.3.6.1.5.5.7.48.2\",anyExtendedKeyUsage:\"2.5.29.37.0\",serverAuth:\"1.3.6.1.5.5.7.3.1\",clientAuth:\"1.3.6.1.5.5.7.3.2\",codeSigning:\"1.3.6.1.5.5.7.3.3\",emailProtection:\"1.3.6.1.5.5.7.3.4\",timeStamping:\"1.3.6.1.5.5.7.3.8\",ocspSigning:\"1.3.6.1.5.5.7.3.9\",dateOfBirth:\"1.3.6.1.5.5.7.9.1\",placeOfBirth:\"1.3.6.1.5.5.7.9.2\",gender:\"1.3.6.1.5.5.7.9.3\",countryOfCitizenship:\"1.3.6.1.5.5.7.9.4\",countryOfResidence:\"1.3.6.1.5.5.7.9.5\",ecPublicKey:\"1.2.840.10045.2.1\",\"P-256\":\"1.2.840.10045.3.1.7\",secp256r1:\"1.2.840.10045.3.1.7\",secp256k1:\"1.3.132.0.10\",secp384r1:\"1.3.132.0.34\",secp521r1:\"1.3.132.0.35\",pkcs5PBES2:\"1.2.840.113549.1.5.13\",pkcs5PBKDF2:\"1.2.840.113549.1.5.12\",\"des-EDE3-CBC\":\"1.2.840.113549.3.7\",data:\"1.2.840.113549.1.7.1\",\"signed-data\":\"1.2.840.113549.1.7.2\",\"enveloped-data\":\"1.2.840.113549.1.7.3\",\"digested-data\":\"1.2.840.113549.1.7.5\",\"encrypted-data\":\"1.2.840.113549.1.7.6\",\"authenticated-data\":\"1.2.840.113549.1.9.16.1.2\",tstinfo:\"1.2.840.113549.1.9.16.1.4\",signingCertificate:\"1.2.840.113549.1.9.16.2.12\",timeStampToken:\"1.2.840.113549.1.9.16.2.14\",signaturePolicyIdentifier:\"1.2.840.113549.1.9.16.2.15\",etsArchiveTimeStamp:\"1.2.840.113549.1.9.16.2.27\",signingCertificateV2:\"1.2.840.113549.1.9.16.2.47\",etsArchiveTimeStampV2:\"1.2.840.113549.1.9.16.2.48\",extensionRequest:\"1.2.840.113549.1.9.14\",contentType:\"1.2.840.113549.1.9.3\",messageDigest:\"1.2.840.113549.1.9.4\",signingTime:\"1.2.840.113549.1.9.5\",counterSignature:\"1.2.840.113549.1.9.6\",archiveTimeStampV3:\"0.4.0.1733.2.4\",pdfRevocationInfoArchival:\"1.2.840.113583.1.1.8\",adobeTimeStamp:\"1.2.840.113583.1.1.9.1\",};this.atype2oidList={CN:\"2.5.4.3\",L:\"2.5.4.7\",ST:\"2.5.4.8\",O:\"2.5.4.10\",OU:\"2.5.4.11\",C:\"2.5.4.6\",STREET:\"2.5.4.9\",DC:\"0.9.2342.19200300.100.1.25\",UID:\"0.9.2342.19200300.100.1.1\",SN:\"2.5.4.4\",T:\"2.5.4.12\",DN:\"2.5.4.49\",E:\"1.2.840.113549.1.9.1\",description:\"2.5.4.13\",businessCategory:\"2.5.4.15\",postalCode:\"2.5.4.17\",serialNumber:\"2.5.4.5\",uniqueIdentifier:\"2.5.4.45\",organizationIdentifier:\"2.5.4.97\",jurisdictionOfIncorporationL:\"1.3.6.1.4.1.311.60.2.1.1\",jurisdictionOfIncorporationSP:\"1.3.6.1.4.1.311.60.2.1.2\",jurisdictionOfIncorporationC:\"1.3.6.1.4.1.311.60.2.1.3\"};this.objCache={};this.name2obj=function(b){if(typeof this.objCache[b]!=\"undefined\"){return this.objCache[b]}if(typeof this.name2oidList[b]==\"undefined\"){throw\"Name of ObjectIdentifier not defined: \"+b}var c=this.name2oidList[b];var d=new a({oid:c});this.objCache[b]=d;return d};this.atype2obj=function(b){if(this.objCache[b]!==undefined){return this.objCache[b]}var c;if(b.match(/^\\d+\\.\\d+\\.[0-9.]+$/)){c=b}else{if(this.atype2oidList[b]!==undefined){c=this.atype2oidList[b]}else{if(this.name2oidList[b]!==undefined){c=this.name2oidList[b]}else{throw new Error(\"AttributeType name undefined: \"+b)}}}var d=new a({oid:c});this.objCache[b]=d;return d};this.registerOIDs=function(b){if(!this.checkOIDs(b)){return}for(var c in b){this.name2oidList[c]=b[c]}};this.checkOIDs=function(b){try{var d=Object.keys(b);if(d.length==0){return false}d.map(function(g,e,h){var f=this[g];if(!f.match(/^[0-2]\\.[0-9.]+$/)){throw new Error(\"value is not OID\")}},b);return true}catch(c){return false}}};KJUR.asn1.x509.OID.oid2name=function(b){var c=KJUR.asn1.x509.OID.name2oidList;for(var a in c){if(c[a]==b){return a}}return\"\"};KJUR.asn1.x509.OID.oid2atype=function(b){var c=KJUR.asn1.x509.OID.atype2oidList;for(var a in c){if(c[a]==b){return a}}return b};KJUR.asn1.x509.OID.name2oid=function(a){if(a.match(/^[0-9.]+$/)){return a}var b=KJUR.asn1.x509.OID.name2oidList;if(b[a]===undefined){return\"\"}return b[a]};KJUR.asn1.x509.X509Util={};KJUR.asn1.x509.X509Util.newCertPEM=function(e){var d=KJUR.asn1.x509,b=d.TBSCertificate,a=d.Certificate;var c=new a(e);return c.getPEM()};\nif(typeof KJUR==\"undefined\"||!KJUR){KJUR={}}if(typeof KJUR.asn1==\"undefined\"||!KJUR.asn1){KJUR.asn1={}}if(typeof KJUR.asn1.cms==\"undefined\"||!KJUR.asn1.cms){KJUR.asn1.cms={}}KJUR.asn1.cms.Attribute=function(f){var e=Error,d=KJUR,c=d.asn1,b=c.DERSequence,a=c.DERSet,g=c.DERObjectIdentifier;this.params=null;this.typeOid=null;this.setByParam=function(h){this.params=h};this.getValueArray=function(){throw new e(\"not yet implemented abstract\")};this.tohex=function(){var j=new g({oid:this.typeOid});var h=new a({array:this.getValueArray()});var i=new b({array:[j,h]});return i.tohex()};this.getEncodedHex=function(){return this.tohex()}};extendClass(KJUR.asn1.cms.Attribute,KJUR.asn1.ASN1Object);KJUR.asn1.cms.ContentType=function(c){var b=KJUR,a=b.asn1;a.cms.ContentType.superclass.constructor.call(this);this.typeOid=\"1.2.840.113549.1.9.3\";this.getValueArray=function(){var d=new a.DERObjectIdentifier(this.params.type);return[d]};if(c!=undefined){this.setByParam(c)}};extendClass(KJUR.asn1.cms.ContentType,KJUR.asn1.cms.Attribute);KJUR.asn1.cms.MessageDigest=function(e){var b=KJUR,a=b.asn1,c=a.DEROctetString,d=a.cms;d.MessageDigest.superclass.constructor.call(this);this.typeOid=\"1.2.840.113549.1.9.4\";this.getValueArray=function(){var f=new c(this.params);return[f]};if(e!=undefined){this.setByParam(e)}};extendClass(KJUR.asn1.cms.MessageDigest,KJUR.asn1.cms.Attribute);KJUR.asn1.cms.SigningTime=function(c){var b=KJUR,a=b.asn1;a.cms.SigningTime.superclass.constructor.call(this);this.typeOid=\"1.2.840.113549.1.9.5\";this.getValueArray=function(){var d=new a.x509.Time(this.params);return[d]};if(c!=undefined){this.setByParam(c)}};extendClass(KJUR.asn1.cms.SigningTime,KJUR.asn1.cms.Attribute);KJUR.asn1.cms.SigningCertificate=function(h){var e=Error,d=KJUR,c=d.asn1,b=c.DERSequence,g=c.cms,a=g.ESSCertID,f=d.crypto;g.SigningCertificate.superclass.constructor.call(this);this.typeOid=\"1.2.840.113549.1.9.16.2.12\";this.getValueArray=function(){if(this.params==null||this.params==undefined||this.params.array==undefined){throw new e(\"parameter 'array' not specified\")}var o=this.params.array;var k=[];for(var l=0;l<o.length;l++){var n=o[l];if(h.hasis==false&&(typeof n==\"string\"&&(n.indexOf(\"-----BEGIN\")!=-1||ASN1HEX.isASN1HEX(n)))){n={cert:n}}if(n.hasis!=false&&h.hasis==false){n.hasis=false}k.push(new a(n))}var j=new b({array:k});var m=new b({array:[j]});return[m]};if(h!=undefined){this.setByParam(h)}};extendClass(KJUR.asn1.cms.SigningCertificate,KJUR.asn1.cms.Attribute);KJUR.asn1.cms.ESSCertID=function(g){KJUR.asn1.cms.ESSCertID.superclass.constructor.call(this);var d=Error,c=KJUR,b=c.asn1,f=b.DEROctetString,a=b.DERSequence,e=b.cms.IssuerSerial;this.params=null;this.getCertHash=function(k,h){if(k.hash!=undefined){return k.hash}if(typeof k==\"string\"&&k.indexOf(\"-----BEGIN\")==-1&&!ASN1HEX.isASN1HEX(k)){return k}var i;if(typeof k==\"string\"){i=k}else{if(k.cert!=undefined){i=k.cert}else{throw new d(\"hash nor cert unspecified\")}}var j;if(i.indexOf(\"-----BEGIN\")!=-1){j=pemtohex(i)}else{j=i}if(typeof k==\"string\"){if(k.indexOf(\"-----BEGIN\")!=-1){j=pemtohex(k)}else{if(ASN1HEX.isASN1HEX(k)){j=k}}}var l;if(k.alg!=undefined){l=k.alg}else{if(h!=undefined){l=h}else{throw new d(\"hash alg unspecified\")}}return c.crypto.Util.hashHex(j,l)};this.tohex=function(){var k=this.params;var j=this.getCertHash(k,\"sha1\");var h=[];h.push(new f({hex:j}));if((typeof k==\"string\"&&k.indexOf(\"-----BEGIN\")!=-1)||(k.cert!=undefined&&k.hasis!=false)||(k.issuer!=undefined&&k.serial!=undefined)){h.push(new e(k))}var i=new a({array:h});return i.tohex()};this.getEncodedHex=function(){return this.tohex()};if(g!=undefined){this.setByParam(g)}};extendClass(KJUR.asn1.cms.ESSCertID,KJUR.asn1.ASN1Object);KJUR.asn1.cms.SigningCertificateV2=function(d){var h=Error,a=KJUR,g=a.asn1,e=g.DERSequence,b=g.x509,i=g.cms,c=i.ESSCertIDv2,f=a.crypto;i.SigningCertificateV2.superclass.constructor.call(this);this.typeOid=\"1.2.840.113549.1.9.16.2.47\";this.getValueArray=function(){if(this.params==null||this.params==undefined||this.params.array==undefined){throw new h(\"parameter 'array' not specified\")}var o=this.params.array;var l=[];for(var m=0;m<o.length;m++){var n=o[m];if((d.alg!=undefined||d.hasis==false)&&(typeof n==\"string\"&&(n.indexOf(\"-----BEGIN\")!=-1||ASN1HEX.isASN1HEX(n)))){n={cert:n}}if(n.alg==undefined&&d.alg!=undefined){n.alg=d.alg}if(n.hasis!=false&&d.hasis==false){n.hasis=false}l.push(new c(n))}var k=new e({array:l});var j=new e({array:[k]});return[j]};if(d!=undefined){this.setByParam(d)}};extendClass(KJUR.asn1.cms.SigningCertificateV2,KJUR.asn1.cms.Attribute);KJUR.asn1.cms.ESSCertIDv2=function(h){KJUR.asn1.cms.ESSCertIDv2.superclass.constructor.call(this);var d=Error,c=KJUR,b=c.asn1,f=b.DEROctetString,a=b.DERSequence,e=b.cms.IssuerSerial,g=b.x509.AlgorithmIdentifier;this.params=null;this.tohex=function(){var l=this.params;var k=this.getCertHash(l,\"sha256\");var i=[];if(l.alg!=undefined&&l.alg!=\"sha256\"){i.push(new g({name:l.alg}))}i.push(new f({hex:k}));if((typeof l==\"string\"&&l.indexOf(\"-----BEGIN\")!=-1)||(l.cert!=undefined&&l.hasis!=false)||(l.issuer!=undefined&&l.serial!=undefined)){i.push(new e(l))}var j=new a({array:i});return j.tohex()};this.getEncodedHex=function(){return this.tohex()};if(h!=undefined){this.setByParam(h)}};extendClass(KJUR.asn1.cms.ESSCertIDv2,KJUR.asn1.cms.ESSCertID);KJUR.asn1.cms.IssuerSerial=function(e){var i=Error,c=KJUR,h=c.asn1,g=h.DERInteger,f=h.DERSequence,j=h.cms,d=h.x509,a=d.GeneralNames,b=X509;j.IssuerSerial.superclass.constructor.call(this);this.setByParam=function(k){this.params=k};this.tohex=function(){var p=this.params;var l,r;if((typeof p==\"string\"&&p.indexOf(\"-----BEGIN\")!=-1)||p.cert!=undefined){var n;if(p.cert!=undefined){n=p.cert}else{n=p}var k=new b();k.readCertPEM(n);l=k.getIssuer();r={hex:k.getSerialNumberHex()}}else{if(p.issuer!=undefined&&p.serial){l=p.issuer;r=p.serial}else{throw new i(\"cert or issuer and serial parameter not specified\")}}var q=new a([{dn:l}]);var o=new g(r);var m=new f({array:[q,o]});return m.tohex()};this.getEncodedHex=function(){return this.tohex()};if(e!=undefined){this.setByParam(e)}};extendClass(KJUR.asn1.cms.IssuerSerial,KJUR.asn1.ASN1Object);KJUR.asn1.cms.SignerIdentifier=function(f){var c=KJUR,i=c.asn1,h=i.DERInteger,g=i.DERSequence,l=i.cms,k=l.IssuerAndSerialNumber,d=l.SubjectKeyIdentifier,e=i.x509,a=e.X500Name,b=X509,j=Error;l.SignerIdentifier.superclass.constructor.call(this);this.params=null;this.tohex=function(){var o=this.params;if(o.type==\"isssn\"){var m=new k(o);return m.tohex()}else{if(o.type==\"skid\"){var n=new d(o);return n.tohex()}else{throw new Error(\"wrong property for isssn or skid\")}}};this.getEncodedHex=function(){return this.tohex()};if(f!=undefined){this.setByParam(f)}};extendClass(KJUR.asn1.cms.SignerIdentifier,KJUR.asn1.ASN1Object);KJUR.asn1.cms.IssuerAndSerialNumber=function(e){var c=KJUR,h=c.asn1,g=h.DERInteger,f=h.DERSequence,j=h.cms,d=h.x509,a=d.X500Name,b=X509,i=Error;j.IssuerAndSerialNumber.superclass.constructor.call(this);this.params=null;this.tohex=function(){var p=this.params;var l,r;if((typeof p==\"string\"&&p.indexOf(\"-----BEGIN\")!=-1)||p.cert!=undefined){var n;if(p.cert!=undefined){n=p.cert}else{n=p}var k=new b();k.readCertPEM(n);l=k.getIssuer();r={hex:k.getSerialNumberHex()}}else{if(p.issuer!=undefined&&p.serial){l=p.issuer;r=p.serial}else{throw new i(\"cert or issuer and serial parameter not specified\")}}var q=new a(l);var o=new g(r);var m=new f({array:[q,o]});return m.tohex()};this.getEncodedHex=function(){return this.tohex()};this.setByParam=function(k){this.params=k};if(e!=undefined){this.setByParam(e)}};extendClass(KJUR.asn1.cms.IssuerAndSerialNumber,KJUR.asn1.ASN1Object);KJUR.asn1.cms.SubjectKeyIdentifier=function(g){var d=KJUR,k=d.asn1,i=k.DERInteger,h=k.DERSequence,j=k.ASN1Util.newObject,m=k.cms,f=m.IssuerAndSerialName,c=m.SubjectKeyIdentifier,e=k.x509,a=e.X500Name,b=X509,l=Error;m.SubjectKeyIdentifier.superclass.constructor.call(this);this.tohex=function(){var r=this.params;if(r.cert==undefined&&r.skid==undefined){throw new l(\"property cert nor skid undefined\")}var q;if(r.cert!=undefined){var n=new b(r.cert);var o=n.getExtSubjectKeyIdentifier();q=o.kid.hex}else{if(r.skid!=undefined){q=r.skid}}var p=j({tag:{tage:\"a0\",obj:{octstr:{hex:q}}}});return p.tohex()};this.getEncodedHex=function(){return this.tohex()};if(g!=undefined){this.setByParam(g)}};extendClass(KJUR.asn1.cms.SubjectKeyIdentifier,KJUR.asn1.ASN1Object);KJUR.asn1.cms.AttributeList=function(f){var d=Error,c=KJUR,b=c.asn1,a=b.DERSet,e=b.cms;e.AttributeList.superclass.constructor.call(this);this.params=null;this.hTLV=null;this.setByParam=function(g){this.params=g};this.tohex=function(){var o=this.params;if(this.hTLV!=null){return this.hTLV}var m=true;if(o.sortflag!=undefined){m=o.sortflag}var j=o.array;var g=[];for(var l=0;l<j.length;l++){var n=j[l];var k=n.attr;if(k==\"contentType\"){g.push(new e.ContentType(n))}else{if(k==\"messageDigest\"){g.push(new e.MessageDigest(n))}else{if(k==\"signingTime\"){g.push(new e.SigningTime(n))}else{if(k==\"signingCertificate\"){g.push(new e.SigningCertificate(n))}else{if(k==\"signingCertificateV2\"){g.push(new e.SigningCertificateV2(n))}else{if(k==\"signaturePolicyIdentifier\"){g.push(new KJUR.asn1.cades.SignaturePolicyIdentifier(n))}else{if(k==\"signatureTimeStamp\"||k==\"timeStampToken\"){g.push(new KJUR.asn1.cades.SignatureTimeStamp(n))}else{throw new d(\"unknown attr: \"+k)}}}}}}}}var h=new a({array:g,sortflag:m});this.hTLV=h.tohex();return this.hTLV};this.getEncodedHex=function(){return this.tohex()};if(f!=undefined){this.setByParam(f)}};extendClass(KJUR.asn1.cms.AttributeList,KJUR.asn1.ASN1Object);KJUR.asn1.cms.SignerInfo=function(q){var n=Error,r=KJUR,i=r.asn1,c=i.DERInteger,f=i.DEROctetString,h=i.DERSequence,m=i.DERTaggedObject,k=i.cms,p=k.SignerIdentifier,l=k.AttributeList,g=k.ContentType,e=k.EncapsulatedContentInfo,d=k.MessageDigest,j=k.SignedData,a=i.x509,s=a.AlgorithmIdentifier,b=r.crypto,o=KEYUTIL;k.SignerInfo.superclass.constructor.call(this);this.params=null;this.sign=function(){var y=this.params;var x=y.sigalg;var u=(new l(y.sattrs)).tohex();var v=o.getKey(y.signkey);var w=new b.Signature({alg:x});w.init(v);w.updateHex(u);var t=w.sign();y.sighex=t};this.tohex=function(){var w=this.params;var t=[];t.push(new c({\"int\":w.version}));t.push(new p(w.id));t.push(new s({name:w.hashalg}));if(w.sattrs!=undefined){var x=new l(w.sattrs);try{t.push(new m({tag:\"a0\",explicit:false,obj:x}))}catch(v){throw new n(\"si sattr error: \"+v)}}if(w.sigalgfield!=undefined){t.push(new s({name:w.sigalgfield}))}else{t.push(new s({name:w.sigalg}))}if(w.sighex==undefined&&w.signkey!=undefined){this.sign()}t.push(new f({hex:w.sighex}));if(w.uattrs!=undefined){var x=new l(w.uattrs);try{t.push(new m({tag:\"a1\",explicit:false,obj:x}))}catch(v){throw new n(\"si uattr error: \"+v)}}var u=new h({array:t});return u.tohex()};this.getEncodedHex=function(){return this.tohex()};if(q!=undefined){this.setByParam(q)}};extendClass(KJUR.asn1.cms.SignerInfo,KJUR.asn1.ASN1Object);KJUR.asn1.cms.EncapsulatedContentInfo=function(g){var c=KJUR,b=c.asn1,e=b.DERTaggedObject,a=b.DERSequence,h=b.DERObjectIdentifier,d=b.DEROctetString,f=b.cms;f.EncapsulatedContentInfo.superclass.constructor.call(this);this.params=null;this.tohex=function(){var m=this.params;var i=[];i.push(new h(m.type));if(m.content!=undefined&&(m.content.hex!=undefined||m.content.str!=undefined)&&m.isDetached!=true){var k=new d(m.content);var l=new e({tag:\"a0\",explicit:true,obj:k});i.push(l)}var j=new a({array:i});return j.tohex()};this.getEncodedHex=function(){return this.tohex()};this.setByParam=function(i){this.params=i};if(g!=undefined){this.setByParam(g)}};extendClass(KJUR.asn1.cms.EncapsulatedContentInfo,KJUR.asn1.ASN1Object);KJUR.asn1.cms.ContentInfo=function(g){var c=KJUR,b=c.asn1,d=b.DERTaggedObject,a=b.DERSequence,h=b.DERObjectIdentifier,f=b.x509,e=f.OID.name2obj;KJUR.asn1.cms.ContentInfo.superclass.constructor.call(this);this.params=null;this.tohex=function(){var l=this.params;var i=[];i.push(new h(l.type));var k=new d({tag:\"a0\",explicit:true,obj:l.obj});i.push(k);var j=new a({array:i});return j.tohex()};this.getEncodedHex=function(){return this.tohex()};this.setByParam=function(i){this.params=i};if(g!=undefined){this.setByParam(g)}};extendClass(KJUR.asn1.cms.ContentInfo,KJUR.asn1.ASN1Object);KJUR.asn1.cms.SignedData=function(e){var j=Error,a=KJUR,h=a.asn1,m=h.ASN1Object,g=h.DERInteger,p=h.DERSet,f=h.DERSequence,b=h.DERTaggedObject,o=h.cms,l=o.EncapsulatedContentInfo,d=o.SignerInfo,q=o.ContentInfo,k=o.CertificateSet,i=o.RevocationInfoChoices,c=h.x509,n=c.AlgorithmIdentifier;KJUR.asn1.cms.SignedData.superclass.constructor.call(this);this.params=null;this.checkAndFixParam=function(){var r=this.params;this._setDigestAlgs(r);this._setContentTypeByEContent(r);this._setMessageDigestByEContent(r);this._setSignerInfoVersion(r);this._setSignedDataVersion(r)};this._setDigestAlgs=function(v){var u={};var t=v.sinfos;for(var r=0;r<t.length;r++){var s=t[r];u[s.hashalg]=1}v.hashalgs=Object.keys(u).sort()};this._setContentTypeByEContent=function(w){var u=w.econtent.type;var v=w.sinfos;for(var r=0;r<v.length;r++){var t=v[r];var s=this._getAttrParamByName(t,\"contentType\");s.type=u}};this._setMessageDigestByEContent=function(r){var v=r.econtent;var y=r.econtent.type;var x=v.content.hex;if(x==undefined&&v.type==\"data\"&&v.content.str!=undefined){x=rstrtohex(v.content.str)}var A=r.sinfos;for(var u=0;u<A.length;u++){var t=A[u];var s=t.hashalg;var z=this._getAttrParamByName(t,\"messageDigest\");var w=KJUR.crypto.Util.hashHex(x,s);z.hex=w}};this._getAttrParamByName=function(t,s){var u=t.sattrs.array;for(var r=0;r<u.length;r++){if(u[r].attr==s){return u[r]}}};this._setSignerInfoVersion=function(v){var t=v.sinfos;for(var r=0;r<t.length;r++){var s=t[r];var u=1;if(s.id.type==\"skid\"){u=3}s.version=u}};this._setSignedDataVersion=function(s){var r=this._getSignedDataVersion(s);s.version=r};this._getSignedDataVersion=function(w){if(w.revinfos!=undefined){var r=w.revinfos;for(var t=0;t<r.length;t++){var s=r[t];if(s.ocsp!=undefined){return 5}}}var v=w.sinfos;for(var t=0;t<v.length;t++){var u=w.sinfos[t];if(u.version==3){return 3}}if(w.econtent.type!=\"data\"){return 3}return 1};this.tohex=function(){var y=this.params;if(this.getEncodedHexPrepare!=undefined){this.getEncodedHexPrepare()}if(y.fixed!=true){this.checkAndFixParam()}var r=[];r.push(new g({\"int\":y.version}));var w=[];for(var v=0;v<y.hashalgs.length;v++){var t=y.hashalgs[v];w.push(new n({name:t}))}r.push(new p({array:w}));r.push(new l(y.econtent));if(y.certs!=undefined){r.push(new k(y.certs))}if(y.revinfos!=undefined){r.push(new i(y.revinfos))}var u=[];for(var v=0;v<y.sinfos.length;v++){var x=y.sinfos[v];u.push(new d(x))}r.push(new p({array:u}));var s=new f({array:r});return s.tohex()};this.getEncodedHex=function(){return this.tohex()};this.getContentInfo=function(){var r=new q({type:\"signed-data\",obj:this});return r};this.getContentInfoEncodedHex=function(){return this.getContentInfo().tohex()};if(e!=undefined){this.setByParam(e)}};extendClass(KJUR.asn1.cms.SignedData,KJUR.asn1.ASN1Object);KJUR.asn1.cms.CertificateSet=function(f){KJUR.asn1.cms.CertificateSet.superclass.constructor.call(this);var c=Error,b=KJUR.asn1,e=b.DERTaggedObject,a=b.DERSet,d=b.ASN1Object;this.params=null;this.tohex=function(){var j=this.params;var p=[];var q;if(j instanceof Array){q=j}else{if(j.array!=undefined){q=j.array}else{throw new c(\"cert array not specified\")}}for(var k=0;k<q.length;k++){var l=q[k];var n=pemtohex(l);var g=new d();g.hTLV=n;p.push(g)}var m={array:p};if(j.sortflag==false){m.sortflag=false}var o=new a(m);var h=new e({tag:\"a0\",explicit:false,obj:o});return h.tohex()};this.getEncodedHex=function(){return this.tohex()};if(f!=undefined){this.setByParam(f)}};extendClass(KJUR.asn1.cms.CertificateSet,KJUR.asn1.ASN1Object);KJUR.asn1.cms.RevocationInfoChoices=function(a){KJUR.asn1.cms.RevocationInfoChoices.superclass.constructor.call(this);this.params=null;this.tohex=function(){var e=this.params;if(!e instanceof Array){throw new Error(\"params is not array\")}var b=[];for(var c=0;c<e.length;c++){b.push(new KJUR.asn1.cms.RevocationInfoChoice(e[c]))}var d=KJUR.asn1.ASN1Util.newObject({tag:{tagi:\"a1\",obj:{set:b}}});return d.tohex()};this.getEncodedHex=function(){return this.tohex()};if(a!=undefined){this.setByParam(a)}};extendClass(KJUR.asn1.cms.RevocationInfoChoices,KJUR.asn1.ASN1Object);KJUR.asn1.cms.RevocationInfoChoice=function(a){KJUR.asn1.cms.RevocationInfoChoice.superclass.constructor.call(this);this.params=null;this.tohex=function(){var d=this.params;if(d.crl!=undefined&&typeof d.crl==\"string\"){var b=d.crl;if(d.crl.indexOf(\"-----BEGIN\")!=-1){b=pemtohex(d.crl)}return b}else{if(d.ocsp!=undefined){var c=KJUR.asn1.ASN1Util.newObject({tag:{tagi:\"a1\",obj:new KJUR.asn1.cms.OtherRevocationFormat(d)}});return c.tohex()}else{throw new Error(\"property crl or ocsp undefined\")}}};this.getEncodedHex=function(){return this.tohex()};if(a!=undefined){this.setByParam(a)}};extendClass(KJUR.asn1.cms.RevocationInfoChoice,KJUR.asn1.ASN1Object);KJUR.asn1.cms.OtherRevocationFormat=function(f){KJUR.asn1.cms.OtherRevocationFormat.superclass.constructor.call(this);var d=Error,c=KJUR,b=c.asn1,a=b.ASN1Util.newObject,e=c.lang.String.isHex;this.params=null;this.tohex=function(){var h=this.params;if(h.ocsp==undefined){throw new d(\"property ocsp not specified\")}if(!e(h.ocsp)||!ASN1HEX.isASN1HEX(h.ocsp)){throw new d(\"ocsp value not ASN.1 hex string\")}var g=a({seq:[{oid:\"1.3.6.1.5.5.7.16.2\"},{asn1:{tlv:h.ocsp}}]});return g.tohex()};this.getEncodedHex=function(){return this.tohex()};if(f!=undefined){this.setByParam(f)}};extendClass(KJUR.asn1.cms.OtherRevocationFormat,KJUR.asn1.ASN1Object);KJUR.asn1.cms.CMSUtil=new function(){};KJUR.asn1.cms.CMSUtil.newSignedData=function(a){return new KJUR.asn1.cms.SignedData(a)};KJUR.asn1.cms.CMSUtil.verifySignedData=function(n){var C=KJUR,p=C.asn1,s=p.cms,D=s.SignerInfo,q=s.SignedData,y=s.SigningTime,b=s.SigningCertificate,d=s.SigningCertificateV2,A=p.cades,u=A.SignaturePolicyIdentifier,i=C.lang.String.isHex,v=ASN1HEX,h=v.getVbyList,a=v.getTLVbyList,t=v.getIdxbyList,z=v.getChildIdx,c=v.getTLV,B=v.oidname,j=C.crypto.Util.hashHex;if(n.cms===undefined&&!i(n.cms)){}var E=n.cms;var g=function(J,H){var G;for(var I=3;I<6;I++){G=t(J,0,[1,0,I]);if(G!==undefined){var F=J.substr(G,2);if(F===\"a0\"){H.certsIdx=G}if(F===\"a1\"){H.revinfosIdx=G}if(F===\"31\"){H.signerinfosIdx=G}}}};var l=function(I,F){var H=F.signerinfosIdx;if(H===undefined){return}var L=z(I,H);F.signerInfoIdxList=L;for(var G=0;G<L.length;G++){var K=L[G];var J={idx:K};k(I,J);F.signerInfos.push(J)}};var k=function(I,J){var F=J.idx;J.signerid_issuer1=a(I,F,[1,0],\"30\");J.signerid_serial1=h(I,F,[1,1],\"02\");J.hashalg=B(h(I,F,[2,0],\"06\"));var H=t(I,F,[3],\"a0\");J.idxSignedAttrs=H;f(I,J,H);var G=z(I,F);var K=G.length;if(K<6){throw\"malformed SignerInfo\"}J.sigalg=B(h(I,F,[K-2,0],\"06\"));J.sigval=h(I,F,[K-1],\"04\")};var f=function(L,M,F){var J=z(L,F);M.signedAttrIdxList=J;for(var K=0;K<J.length;K++){var I=J[K];var G=h(L,I,[0],\"06\");var H;if(G===\"2a864886f70d010905\"){H=hextoutf8(h(L,I,[1,0]));M.saSigningTime=H}else{if(G===\"2a864886f70d010904\"){H=h(L,I,[1,0],\"04\");M.saMessageDigest=H}}}};var w=function(G,F){if(h(G,0,[0],\"06\")!==\"2a864886f70d010702\"){return F}F.cmsType=\"signedData\";F.econtent=h(G,0,[1,0,2,1,0]);g(G,F);F.signerInfos=[];l(G,F)};var o=function(J,F){var G=F.parse.signerInfos;var L=G.length;var K=true;for(var I=0;I<L;I++){var H=G[I];e(J,F,H,I);if(!H.isValid){K=false}}F.isValid=K};var x=function(F,Q,J,P){var N=Q.parse.certsIdx;var H;if(Q.certs===undefined){H=[];Q.certkeys=[];var K=z(F,N);for(var I=0;I<K.length;I++){var M=c(F,K[I]);var O=new X509();O.readCertHex(M);H[I]=O;Q.certkeys[I]=O.getPublicKey()}Q.certs=H}else{H=Q.certs}Q.cccc=H.length;Q.cccci=K.length;for(var I=0;I<H.length;I++){var L=O.getIssuerHex();var G=O.getSerialNumberHex();if(J.signerid_issuer1===L&&J.signerid_serial1===G){J.certkey_idx=I}}};var e=function(F,R,I,N){I.verifyDetail={};var Q=I.verifyDetail;var K=R.parse.econtent;var G=I.hashalg;var L=I.saMessageDigest;Q.validMessageDigest=false;if(j(K,G)===L){Q.validMessageDigest=true}x(F,R,I,N);Q.validSignatureValue=false;var H=I.sigalg;var M=\"31\"+c(F,I.idxSignedAttrs).substr(2);I.signedattrshex=M;var J=R.certs[I.certkey_idx].getPublicKey();var P=new KJUR.crypto.Signature({alg:H});P.init(J);P.updateHex(M);var O=P.verify(I.sigval);Q.validSignatureValue_isValid=O;if(O===true){Q.validSignatureValue=true}I.isValid=false;if(Q.validMessageDigest&&Q.validSignatureValue){I.isValid=true}};var m=function(){};var r={isValid:false,parse:{}};w(E,r.parse);o(E,r);return r};KJUR.asn1.cms.CMSParser=function(){var g=Error,a=X509,h=new a(),l=ASN1HEX,i=l.getV,b=l.getTLV,f=l.getIdxbyList,c=l.getTLVbyList,d=l.getTLVbyListEx,e=l.getVbyList,k=l.getVbyListEx,j=l.getChildIdx;this.getCMSSignedData=function(m){var o=c(m,0,[1,0]);var n=this.getSignedData(o);return n};this.getSignedData=function(o){var q=j(o,0);var v={};var p=i(o,q[0]);var n=parseInt(p,16);v.version=n;var r=b(o,q[1]);v.hashalgs=this.getHashAlgArray(r);var t=b(o,q[2]);v.econtent=this.getEContent(t);var m=d(o,0,[\"[0]\"]);if(m!=null){v.certs=this.getCertificateSet(m)}var u=d(o,0,[\"[1]\"]);if(u!=null){}var s=d(o,0,[3]);v.sinfos=this.getSignerInfos(s);return v};this.getHashAlgArray=function(s){var q=j(s,0);var m=new a();var n=[];for(var r=0;r<q.length;r++){var p=b(s,q[r]);var o=m.getAlgorithmIdentifierName(p);n.push(o)}return n};this.getEContent=function(m){var n={};var p=e(m,0,[0]);var o=e(m,0,[1,0]);n.type=KJUR.asn1.x509.OID.oid2name(ASN1HEX.hextooidstr(p));n.content={hex:o};return n};this.getSignerInfos=function(p){var r=[];var m=j(p,0);for(var n=0;n<m.length;n++){var o=b(p,m[n]);var q=this.getSignerInfo(o);r.push(q)}return r};this.getSignerInfo=function(s){var y={};var u=j(s,0);var q=l.getInt(s,u[0],-1);if(q!=-1){y.version=q}var t=b(s,u[1]);var p=this.getIssuerAndSerialNumber(t);y.id=p;var z=b(s,u[2]);var n=h.getAlgorithmIdentifierName(z);y.hashalg=n;var w=d(s,0,[\"[0]\"]);if(w!=null){var A=this.getAttributeList(w);y.sattrs=A}var m=d(s,0,[3]);var x=h.getAlgorithmIdentifierName(m);y.sigalg=x;var o=k(s,0,[4]);y.sighex=o;var r=d(s,0,[\"[1]\"]);if(r!=null){var v=this.getAttributeList(r);y.uattrs=v}return y};this.getSignerIdentifier=function(m){if(m.substr(0,2)==\"30\"){return this.getIssuerAndSerialNumber(m)}else{throw new Error(\"SKID of signerIdentifier not supported\")}};this.getIssuerAndSerialNumber=function(n){var o={type:\"isssn\"};var m=j(n,0);var p=b(n,m[0]);o.issuer=h.getX500Name(p);var q=i(n,m[1]);o.serial={hex:q};return o};this.getAttributeList=function(q){var m=[];var n=j(q,0);for(var o=0;o<n.length;o++){var p=b(q,n[o]);var r=this.getAttribute(p);m.push(r)}return{array:m}};this.getAttribute=function(p){var t={};var q=j(p,0);var o=l.getOID(p,q[0]);var m=KJUR.asn1.x509.OID.oid2name(o);t.attr=m;var r=b(p,q[1]);var u=j(r,0);if(u.length==1){t.valhex=b(r,u[0])}else{var s=[];for(var n=0;n<u.length;n++){s.push(b(r,u[n]))}t.valhex=s}if(m==\"contentType\"){this.setContentType(t)}else{if(m==\"messageDigest\"){this.setMessageDigest(t)}else{if(m==\"signingTime\"){this.setSigningTime(t)}else{if(m==\"signingCertificate\"){this.setSigningCertificate(t)}else{if(m==\"signingCertificateV2\"){this.setSigningCertificateV2(t)}else{if(m==\"signaturePolicyIdentifier\"){this.setSignaturePolicyIdentifier(t)}}}}}}return t};this.setContentType=function(m){var n=l.getOIDName(m.valhex,0,null);if(n!=null){m.type=n;delete m.valhex}};this.setSigningTime=function(o){var n=i(o.valhex,0);var m=hextoutf8(n);o.str=m;delete o.valhex};this.setMessageDigest=function(m){var n=i(m.valhex,0);m.hex=n;delete m.valhex};this.setSigningCertificate=function(n){var q=j(n.valhex,0);if(q.length>0){var m=b(n.valhex,q[0]);var p=j(m,0);var t=[];for(var o=0;o<p.length;o++){var s=b(m,p[o]);var u=this.getESSCertID(s);t.push(u)}n.array=t}if(q.length>1){var r=b(n.valhex,q[1]);n.polhex=r}delete n.valhex};this.setSignaturePolicyIdentifier=function(s){var q=j(s.valhex,0);if(q.length>0){var r=l.getOID(s.valhex,q[0]);s.oid=r}if(q.length>1){var m=new a();var t=j(s.valhex,q[1]);var p=b(s.valhex,t[0]);var o=m.getAlgorithmIdentifierName(p);s.alg=o;var n=i(s.valhex,t[1]);s.hash=n}delete s.valhex};this.setSigningCertificateV2=function(o){var s=j(o.valhex,0);if(s.length>0){var n=b(o.valhex,s[0]);var r=j(n,0);var u=[];for(var q=0;q<r.length;q++){var m=b(n,r[q]);var p=this.getESSCertIDv2(m);u.push(p)}o.array=u}if(s.length>1){var t=b(o.valhex,s[1]);o.polhex=t}delete o.valhex};this.getESSCertID=function(o){var p={};var n=j(o,0);if(n.length>0){var q=i(o,n[0]);p.hash=q}if(n.length>1){var m=b(o,n[1]);var r=this.getIssuerSerial(m);if(r.serial!=undefined){p.serial=r.serial}if(r.issuer!=undefined){p.issuer=r.issuer}}return p};this.getESSCertIDv2=function(q){var s={};var p=j(q,0);if(p.length<1||3<p.length){throw new g(\"wrong number of elements\")}var r=0;if(q.substr(p[0],2)==\"30\"){var o=b(q,p[0]);s.alg=h.getAlgorithmIdentifierName(o);r++}else{s.alg=\"sha256\"}var n=i(q,p[r]);s.hash=n;if(p.length>r+1){var m=b(q,p[r+1]);var t=this.getIssuerSerial(m);s.issuer=t.issuer;s.serial=t.serial}return s};this.getIssuerSerial=function(q){var r={};var n=j(q,0);var m=b(q,n[0]);var p=h.getGeneralNames(m);var o=p[0].dn;r.issuer=o;var s=i(q,n[1]);r.serial={hex:s};return r};this.getCertificateSet=function(p){var n=j(p,0);var m=[];for(var o=0;o<n.length;o++){var r=b(p,n[o]);if(r.substr(0,2)==\"30\"){var q=hextopem(r,\"CERTIFICATE\");m.push(q)}}return{array:m,sortflag:false}}};\nif(typeof KJUR==\"undefined\"||!KJUR){KJUR={}}if(typeof KJUR.asn1==\"undefined\"||!KJUR.asn1){KJUR.asn1={}}if(typeof KJUR.asn1.tsp==\"undefined\"||!KJUR.asn1.tsp){KJUR.asn1.tsp={}}KJUR.asn1.tsp.TimeStampToken=function(d){var c=KJUR,b=c.asn1,a=b.tsp;a.TimeStampToken.superclass.constructor.call(this);this.params=null;this.getEncodedHexPrepare=function(){var e=new a.TSTInfo(this.params.econtent.content);this.params.econtent.content.hex=e.tohex()};if(d!=undefined){this.setByParam(d)}};extendClass(KJUR.asn1.tsp.TimeStampToken,KJUR.asn1.cms.SignedData);KJUR.asn1.tsp.TSTInfo=function(f){var m=Error,c=KJUR,j=c.asn1,g=j.DERSequence,i=j.DERInteger,l=j.DERBoolean,h=j.DERGeneralizedTime,n=j.DERObjectIdentifier,e=j.DERTaggedObject,k=j.tsp,d=k.MessageImprint,b=k.Accuracy,a=j.x509.X500Name,o=j.x509.GeneralName;k.TSTInfo.superclass.constructor.call(this);this.dVersion=new i({\"int\":1});this.dPolicy=null;this.dMessageImprint=null;this.dSerial=null;this.dGenTime=null;this.dAccuracy=null;this.dOrdering=null;this.dNonce=null;this.dTsa=null;this.tohex=function(){var p=[this.dVersion];if(this.dPolicy==null){throw new Error(\"policy shall be specified.\")}p.push(this.dPolicy);if(this.dMessageImprint==null){throw new Error(\"messageImprint shall be specified.\")}p.push(this.dMessageImprint);if(this.dSerial==null){throw new Error(\"serialNumber shall be specified.\")}p.push(this.dSerial);if(this.dGenTime==null){throw new Error(\"genTime shall be specified.\")}p.push(this.dGenTime);if(this.dAccuracy!=null){p.push(this.dAccuracy)}if(this.dOrdering!=null){p.push(this.dOrdering)}if(this.dNonce!=null){p.push(this.dNonce)}if(this.dTsa!=null){p.push(this.dTsa)}var q=new g({array:p});this.hTLV=q.tohex();return this.hTLV};this.getEncodedHex=function(){return this.tohex()};if(f!==undefined){if(typeof f.policy==\"string\"){if(!f.policy.match(/^[0-9.]+$/)){throw\"policy shall be oid like 0.1.4.134\"}this.dPolicy=new n({oid:f.policy})}if(f.messageImprint!==undefined){this.dMessageImprint=new d(f.messageImprint)}if(f.serial!==undefined){this.dSerial=new i(f.serial)}if(f.genTime!==undefined){this.dGenTime=new h(f.genTime)}if(f.accuracy!==undefined){this.dAccuracy=new b(f.accuracy)}if(f.ordering!==undefined&&f.ordering==true){this.dOrdering=new l()}if(f.nonce!==undefined){this.dNonce=new i(f.nonce)}if(f.tsa!==undefined){this.dTsa=new e({tag:\"a0\",explicit:true,obj:new o({dn:f.tsa})})}}};extendClass(KJUR.asn1.tsp.TSTInfo,KJUR.asn1.ASN1Object);KJUR.asn1.tsp.Accuracy=function(d){var c=KJUR,b=c.asn1,a=b.ASN1Util.newObject;b.tsp.Accuracy.superclass.constructor.call(this);this.params=null;this.tohex=function(){var f=this.params;var e=[];if(f.seconds!=undefined&&typeof f.seconds==\"number\"){e.push({\"int\":f.seconds})}if(f.millis!=undefined&&typeof f.millis==\"number\"){e.push({tag:{tagi:\"80\",obj:{\"int\":f.millis}}})}if(f.micros!=undefined&&typeof f.micros==\"number\"){e.push({tag:{tagi:\"81\",obj:{\"int\":f.micros}}})}return a({seq:e}).tohex()};this.getEncodedHex=function(){return this.tohex()};if(d!=undefined){this.setByParam(d)}};extendClass(KJUR.asn1.tsp.Accuracy,KJUR.asn1.ASN1Object);KJUR.asn1.tsp.MessageImprint=function(g){var c=KJUR,b=c.asn1,a=b.DERSequence,d=b.DEROctetString,f=b.x509,e=f.AlgorithmIdentifier;b.tsp.MessageImprint.superclass.constructor.call(this);this.params=null;this.tohex=function(){var k=this.params;var j=new e({name:k.alg});var h=new d({hex:k.hash});var i=new a({array:[j,h]});return i.tohex()};this.getEncodedHex=function(){return this.tohex()};if(g!==undefined){this.setByParam(g)}};extendClass(KJUR.asn1.tsp.MessageImprint,KJUR.asn1.ASN1Object);KJUR.asn1.tsp.TimeStampReq=function(c){var a=KJUR,f=a.asn1,d=f.DERSequence,e=f.DERInteger,h=f.DERBoolean,j=f.ASN1Object,i=f.DERObjectIdentifier,g=f.tsp,b=g.MessageImprint;g.TimeStampReq.superclass.constructor.call(this);this.params=null;this.tohex=function(){var m=this.params;var k=[];k.push(new e({\"int\":1}));if(m.messageImprint instanceof KJUR.asn1.ASN1Object){k.push(m.messageImprint)}else{k.push(new b(m.messageImprint))}if(m.policy!=undefined){k.push(new i(m.policy))}if(m.nonce!=undefined){k.push(new e(m.nonce))}if(m.certreq==true){k.push(new h())}var l=new d({array:k});return l.tohex()};this.getEncodedHex=function(){return this.tohex()};if(c!=undefined){this.setByParam(c)}};extendClass(KJUR.asn1.tsp.TimeStampReq,KJUR.asn1.ASN1Object);KJUR.asn1.tsp.TimeStampResp=function(g){var e=KJUR,d=e.asn1,c=d.DERSequence,f=d.ASN1Object,a=d.tsp,b=a.PKIStatusInfo;a.TimeStampResp.superclass.constructor.call(this);this.params=null;this.tohex=function(){var j=this.params;var h=[];if(j.econtent!=undefined||j.tst!=undefined){if(j.statusinfo!=undefined){h.push(new b(j.statusinfo))}else{h.push(new b(\"granted\"))}if(j.econtent!=undefined){h.push((new a.TimeStampToken(j)).getContentInfo())}else{if(j.tst instanceof d.ASN1Object){h.push(j.tst)}else{throw new Error(\"improper member tst value\")}}}else{if(j.statusinfo!=undefined){h.push(new b(j.statusinfo))}else{throw new Error(\"parameter for token nor statusinfo not specified\")}}var i=new c({array:h});return i.tohex()};this.getEncodedHex=function(){return this.tohex()};if(g!=undefined){this.setByParam(g)}};extendClass(KJUR.asn1.tsp.TimeStampResp,KJUR.asn1.ASN1Object);KJUR.asn1.tsp.PKIStatusInfo=function(d){var h=Error,a=KJUR,g=a.asn1,e=g.DERSequence,i=g.tsp,f=i.PKIStatus,c=i.PKIFreeText,b=i.PKIFailureInfo;i.PKIStatusInfo.superclass.constructor.call(this);this.params=null;this.tohex=function(){var l=this.params;var j=[];if(typeof l==\"string\"){j.push(new f(l))}else{if(l.status==undefined){throw new h(\"property 'status' unspecified\")}j.push(new f(l.status));if(l.statusstr!=undefined){j.push(new c(l.statusstr))}if(l.failinfo!=undefined){j.push(new b(l.failinfo))}}var k=new e({array:j});return k.tohex()};this.getEncodedHex=function(){return this.tohex()};if(d!=undefined){this.setByParam(d)}};extendClass(KJUR.asn1.tsp.PKIStatusInfo,KJUR.asn1.ASN1Object);KJUR.asn1.tsp.PKIStatus=function(g){var e=Error,d=KJUR,c=d.asn1,f=c.DERInteger,b=c.tsp;b.PKIStatus.superclass.constructor.call(this);var a={granted:0,grantedWithMods:1,rejection:2,waiting:3,revocationWarning:4,revocationNotification:5};this.params=null;this.tohex=function(){var k=this.params;var h,j;if(typeof k==\"string\"){try{j=a[k]}catch(i){throw new e(\"undefined name: \"+k)}}else{if(typeof k==\"number\"){j=k}else{throw new e(\"unsupported params\")}}return(new f({\"int\":j})).tohex()};this.getEncodedHex=function(){return this.tohex()};if(g!=undefined){this.setByParam(g)}};extendClass(KJUR.asn1.tsp.PKIStatus,KJUR.asn1.ASN1Object);KJUR.asn1.tsp.PKIFreeText=function(g){var f=Error,e=KJUR,d=e.asn1,b=d.DERSequence,c=d.DERUTF8String,a=d.tsp;a.PKIFreeText.superclass.constructor.call(this);this.params=null;this.tohex=function(){var l=this.params;if(!l instanceof Array){throw new f(\"wrong params: not array\")}var h=[];for(var k=0;k<l.length;k++){h.push(new c({str:l[k]}))}var j=new b({array:h});return j.tohex()};this.getEncodedHex=function(){return this.tohex()};if(g!=undefined){this.setByParam(g)}};extendClass(KJUR.asn1.tsp.PKIFreeText,KJUR.asn1.ASN1Object);KJUR.asn1.tsp.PKIFailureInfo=function(h){var f=Error,e=KJUR,d=e.asn1,g=d.DERBitString,b=d.tsp,c=b.PKIFailureInfo;var a={badAlg:0,badRequest:2,badDataFormat:5,timeNotAvailable:14,unacceptedPolicy:15,unacceptedExtension:16,addInfoNotAvailable:17,systemFailure:25};c.superclass.constructor.call(this);this.params=null;this.getBinValue=function(){var n=this.params;var m=0;if(typeof n==\"number\"&&0<=n&&n<=25){m|=1<<n;var k=m.toString(2);var l=\"\";for(var j=k.length-1;j>=0;j--){l+=k[j]}return l}else{if(typeof n==\"string\"&&a[n]!=undefined){return namearraytobinstr([n],a)}else{if(typeof n==\"object\"&&n.length!=undefined){return namearraytobinstr(n,a)}else{throw new f(\"wrong params\")}}}return};this.tohex=function(){var j=this.params;var i=this.getBinValue();return(new g({bin:i})).tohex()};this.getEncodedHex=function(){return this.tohex()};if(h!=undefined){this.setByParam(h)}};extendClass(KJUR.asn1.tsp.PKIFailureInfo,KJUR.asn1.ASN1Object);KJUR.asn1.tsp.AbstractTSAAdapter=function(a){this.getTSTHex=function(c,b){throw\"not implemented yet\"}};KJUR.asn1.tsp.SimpleTSAAdapter=function(e){var d=KJUR,c=d.asn1,a=c.tsp,b=d.crypto.Util.hashHex;a.SimpleTSAAdapter.superclass.constructor.call(this);this.params=null;this.serial=0;this.getTSTHex=function(g,f){var i=b(g,f);this.params.econtent.content.messageImprint={alg:f,hash:i};this.params.econtent.content.serial={\"int\":this.serial++};var h=Math.floor(Math.random()*1000000000);this.params.econtent.content.nonce={\"int\":h};var j=new a.TimeStampToken(this.params);return j.getContentInfoEncodedHex()};if(e!==undefined){this.params=e}};extendClass(KJUR.asn1.tsp.SimpleTSAAdapter,KJUR.asn1.tsp.AbstractTSAAdapter);KJUR.asn1.tsp.FixedTSAAdapter=function(e){var d=KJUR,c=d.asn1,a=c.tsp,b=d.crypto.Util.hashHex;a.FixedTSAAdapter.superclass.constructor.call(this);this.params=null;this.getTSTHex=function(g,f){var h=b(g,f);this.params.econtent.content.messageImprint={alg:f,hash:h};var i=new a.TimeStampToken(this.params);return i.getContentInfoEncodedHex()};if(e!==undefined){this.params=e}};extendClass(KJUR.asn1.tsp.FixedTSAAdapter,KJUR.asn1.tsp.AbstractTSAAdapter);KJUR.asn1.tsp.TSPUtil=new function(){};KJUR.asn1.tsp.TSPUtil.newTimeStampToken=function(a){return new KJUR.asn1.tsp.TimeStampToken(a)};KJUR.asn1.tsp.TSPUtil.parseTimeStampReq=function(a){var b=new KJUR.asn1.tsp.TSPParser();return b.getTimeStampReq(a)};KJUR.asn1.tsp.TSPUtil.parseMessageImprint=function(a){var b=new KJUR.asn1.tsp.TSPParser();return b.getMessageImprint(a)};KJUR.asn1.tsp.TSPParser=function(){var e=Error,a=X509,f=new a(),k=ASN1HEX,g=k.getV,b=k.getTLV,d=k.getIdxbyList,c=k.getTLVbyListEx,i=k.getChildIdx;var j=[\"granted\",\"grantedWithMods\",\"rejection\",\"waiting\",\"revocationWarning\",\"revocationNotification\"];var h={0:\"badAlg\",2:\"badRequest\",5:\"badDataFormat\",14:\"timeNotAvailable\",15:\"unacceptedPolicy\",16:\"unacceptedExtension\",17:\"addInfoNotAvailable\",25:\"systemFailure\"};this.getResponse=function(n){var l=i(n,0);if(l.length==1){return this.getPKIStatusInfo(b(n,l[0]))}else{if(l.length>1){var o=this.getPKIStatusInfo(b(n,l[0]));var m=b(n,l[1]);var p=this.getToken(m);p.statusinfo=o;return p}}};this.getToken=function(m){var l=new KJUR.asn1.cms.CMSParser;var n=l.getCMSSignedData(m);this.setTSTInfo(n);return n};this.setTSTInfo=function(l){var o=l.econtent;if(o.type==\"tstinfo\"){var n=o.content.hex;var m=this.getTSTInfo(n);o.content=m}};this.getTSTInfo=function(r){var x={};var s=i(r,0);var p=g(r,s[1]);x.policy=hextooid(p);var o=b(r,s[2]);x.messageImprint=this.getMessageImprint(o);var u=g(r,s[3]);x.serial={hex:u};var y=g(r,s[4]);x.genTime={str:hextoutf8(y)};var q=0;if(s.length>5&&r.substr(s[5],2)==\"30\"){var v=b(r,s[5]);x.accuracy=this.getAccuracy(v);q++}if(s.length>5+q&&r.substr(s[5+q],2)==\"01\"){var z=g(r,s[5+q]);if(z==\"ff\"){x.ordering=true}q++}if(s.length>5+q&&r.substr(s[5+q],2)==\"02\"){var n=g(r,s[5+q]);x.nonce={hex:n};q++}if(s.length>5+q&&r.substr(s[5+q],2)==\"a0\"){var m=b(r,s[5+q]);m=\"30\"+m.substr(2);pGeneralNames=f.getGeneralNames(m);var t=pGeneralNames[0].dn;x.tsa=t;q++}if(s.length>5+q&&r.substr(s[5+q],2)==\"a1\"){var l=b(r,s[5+q]);l=\"30\"+l.substr(2);var w=f.getExtParamArray(l);x.ext=w;q++}return x};this.getAccuracy=function(q){var r={};var o=i(q,0);for(var p=0;p<o.length;p++){var m=q.substr(o[p],2);var l=g(q,o[p]);var n=parseInt(l,16);if(m==\"02\"){r.seconds=n}else{if(m==\"80\"){r.millis=n}else{if(m==\"81\"){r.micros=n}}}}return r};this.getMessageImprint=function(n){if(n.substr(0,2)!=\"30\"){throw new Error(\"head of messageImprint hex shall be x30\")}var s={};var l=i(n,0);var t=d(n,0,[0,0]);var o=g(n,t);var p=k.hextooidstr(o);var r=KJUR.asn1.x509.OID.oid2name(p);if(r==\"\"){throw new Error(\"hashAlg name undefined: \"+p)}var m=r;var q=d(n,0,[1]);s.alg=m;s.hash=g(n,q);return s};this.getPKIStatusInfo=function(o){var t={};var r=i(o,0);var n=0;try{var l=g(o,r[0]);var p=parseInt(l,16);t.status=j[p]}catch(s){}if(r.length>1&&o.substr(r[1],2)==\"30\"){var m=b(o,r[1]);t.statusstr=this.getPKIFreeText(m);n++}if(r.length>n&&o.substr(r[1+n],2)==\"03\"){var q=b(o,r[1+n]);t.failinfo=this.getPKIFailureInfo(q)}return t};this.getPKIFreeText=function(n){var o=[];var l=i(n,0);for(var m=0;m<l.length;m++){o.push(k.getString(n,l[m]))}return o};this.getPKIFailureInfo=function(l){var m=k.getInt(l,0);if(h[m]!=undefined){return h[m]}else{return m}};this.getTimeStampReq=function(q){var p={};p.certreq=false;var s=i(q,0);if(s.length<2){throw new Error(\"TimeStampReq must have at least 2 items\")}var n=b(q,s[1]);p.messageImprint=KJUR.asn1.tsp.TSPUtil.parseMessageImprint(n);for(var o=2;o<s.length;o++){var m=s[o];var l=q.substr(m,2);if(l==\"06\"){var r=g(q,m);p.policy=k.hextooidstr(r)}if(l==\"02\"){p.nonce=g(q,m)}if(l==\"01\"){p.certreq=true}}return p}};\nif(typeof KJUR==\"undefined\"||!KJUR){KJUR={}}if(typeof KJUR.asn1==\"undefined\"||!KJUR.asn1){KJUR.asn1={}}if(typeof KJUR.asn1.cades==\"undefined\"||!KJUR.asn1.cades){KJUR.asn1.cades={}}KJUR.asn1.cades.SignaturePolicyIdentifier=function(e){var c=KJUR,b=c.asn1,a=b.cades,d=a.SignaturePolicyId;a.SignaturePolicyIdentifier.superclass.constructor.call(this);this.typeOid=\"1.2.840.113549.1.9.16.2.15\";this.params=null;this.getValueArray=function(){return[new d(this.params)]};this.setByParam=function(f){this.params=f};if(e!=undefined){this.setByParam(e)}};extendClass(KJUR.asn1.cades.SignaturePolicyIdentifier,KJUR.asn1.cms.Attribute);KJUR.asn1.cades.SignaturePolicyId=function(e){var a=KJUR,g=a.asn1,f=g.DERSequence,i=g.DERObjectIdentifier,d=g.x509,j=d.AlgorithmIdentifier,c=g.cades,h=c.SignaturePolicyId,b=c.OtherHashAlgAndValue;h.superclass.constructor.call(this);this.params=null;this.tohex=function(){var m=this.params;var k=[];k.push(new i(m.oid));k.push(new b(m));var l=new f({array:k});return l.tohex()};this.getEncodedHex=function(){return this.tohex()};this.setByParam=function(k){this.params=k};if(e!=undefined){this.setByParam(e)}};extendClass(KJUR.asn1.cades.SignaturePolicyId,KJUR.asn1.ASN1Object);KJUR.asn1.cades.OtherHashAlgAndValue=function(e){var h=Error,a=KJUR,g=a.asn1,f=g.DERSequence,i=g.DEROctetString,d=g.x509,j=d.AlgorithmIdentifier,c=g.cades,b=c.OtherHashAlgAndValue;b.superclass.constructor.call(this);this.params=null;this.tohex=function(){var o=this.params;if(o.alg==undefined){throw new h(\"property 'alg' not specified\")}if(o.hash==undefined&&o.cert==undefined){throw new h(\"property 'hash' nor 'cert' not specified\")}var m=null;if(o.hash!=undefined){m=o.hash}else{if(o.cert!=undefined){if(typeof o.cert!=\"string\"){throw new h(\"cert not string\")}var n=o.cert;if(o.cert.indexOf(\"-----BEGIN\")!=-1){n=pemtohex(o.cert)}m=KJUR.crypto.Util.hashHex(n,o.alg)}}var k=[];k.push(new j({name:o.alg}));k.push(new i({hex:m}));var l=new f({array:k});return l.tohex()};this.getEncodedHex=function(){return this.tohex()};if(e!=undefined){this.setByParam(e)}};extendClass(KJUR.asn1.cades.OtherHashAlgAndValue,KJUR.asn1.ASN1Object);KJUR.asn1.cades.OtherHashValue=function(g){KJUR.asn1.cades.OtherHashValue.superclass.constructor.call(this);var d=Error,c=KJUR,f=c.lang.String.isHex,b=c.asn1,e=b.DEROctetString,a=c.crypto.Util.hashHex;this.params=null;this.tohex=function(){var j=this.params;if(j.hash==undefined&&j.cert==undefined){throw new d(\"hash or cert not specified\")}var h=null;if(j.hash!=undefined){h=j.hash}else{if(j.cert!=undefined){if(typeof j.cert!=\"string\"){throw new d(\"cert not string\")}var i=j.cert;if(j.cert.indexOf(\"-----BEGIN\")!=-1){i=pemtohex(j.cert)}h=KJUR.crypto.Util.hashHex(i,\"sha1\")}}return(new e({hex:h})).tohex()};this.getEncodedHex=function(){return this.tohex()};if(g!=undefined){this.setByParam(g)}};extendClass(KJUR.asn1.cades.OtherHashValue,KJUR.asn1.ASN1Object);KJUR.asn1.cades.SignatureTimeStamp=function(h){var d=Error,c=KJUR,f=c.lang.String.isHex,b=c.asn1,e=b.ASN1Object,g=b.x509,a=b.cades;a.SignatureTimeStamp.superclass.constructor.call(this);this.typeOid=\"1.2.840.113549.1.9.16.2.14\";this.params=null;this.getValueArray=function(){var l=this.params;if(l.tst!=undefined){if(f(l.tst)){var j=new e();j.hTLV=l.tst;return[j]}else{if(l.tst instanceof e){return[l.tst]}else{throw new d(\"params.tst has wrong value\")}}}else{if(l.res!=undefined){var k=l.res;if(k instanceof e){k=k.tohex()}if(typeof k!=\"string\"||(!f(k))){throw new d(\"params.res has wrong value\")}var i=ASN1HEX.getTLVbyList(k,0,[1]);var j=new e();j.hTLV=l.tst;return[j]}}};if(h!=null){this.setByParam(h)}};extendClass(KJUR.asn1.cades.SignatureTimeStamp,KJUR.asn1.cms.Attribute);KJUR.asn1.cades.CompleteCertificateRefs=function(h){var f=Error,e=KJUR,d=e.asn1,b=d.DERSequence,c=d.cades,a=c.OtherCertID,g=e.lang.String.isHex;c.CompleteCertificateRefs.superclass.constructor.call(this);this.typeOid=\"1.2.840.113549.1.9.16.2.21\";this.params=null;this.getValueArray=function(){var o=this.params;var k=[];for(var m=0;m<o.array.length;m++){var n=o.array[m];if(typeof n==\"string\"){if(n.indexOf(\"-----BEGIN\")!=-1){n={cert:n}}else{if(g(n)){n={hash:n}}else{throw new f(\"unsupported value: \"+n)}}}if(o.alg!=undefined&&n.alg==undefined){n.alg=o.alg}if(o.hasis!=undefined&&n.hasis==undefined){n.hasis=o.hasis}var j=new a(n);k.push(j)}var l=new b({array:k});return[l]};if(h!=undefined){this.setByParam(h)}};extendClass(KJUR.asn1.cades.CompleteCertificateRefs,KJUR.asn1.cms.Attribute);KJUR.asn1.cades.OtherCertID=function(e){var a=KJUR,h=a.asn1,f=h.DERSequence,i=h.cms,g=i.IssuerSerial,c=h.cades,d=c.OtherHashValue,b=c.OtherHashAlgAndValue;c.OtherCertID.superclass.constructor.call(this);this.params=e;this.tohex=function(){var n=this.params;if(typeof n==\"string\"){if(n.indexOf(\"-----BEGIN\")!=-1){n={cert:n}}else{if(_isHex(n)){n={hash:n}}}}var j=[];var m=null;if(n.alg!=undefined){m=new b(n)}else{m=new d(n)}j.push(m);if((n.cert!=undefined&&n.hasis==true)||(n.issuer!=undefined&&n.serial!=undefined)){var l=new g(n);j.push(l)}var k=new f({array:j});return k.tohex()};this.getEncodedHex=function(){return this.tohex()};if(e!=undefined){this.setByParam(e)}};extendClass(KJUR.asn1.cades.OtherCertID,KJUR.asn1.ASN1Object);KJUR.asn1.cades.OtherHash=function(g){var i=Error,a=KJUR,h=a.asn1,j=h.cms,c=h.cades,b=c.OtherHashAlgAndValue,e=c.OtherHashValue,d=a.crypto.Util.hashHex,f=a.lang.String.isHex;c.OtherHash.superclass.constructor.call(this);this.params=null;this.tohex=function(){var l=this.params;if(typeof l==\"string\"){if(l.indexOf(\"-----BEGIN\")!=-1){l={cert:l}}else{if(f(l)){l={hash:l}}}}var k=null;if(l.alg!=undefined){k=new b(l)}else{k=new e(l)}return k.tohex()};this.getEncodedHex=function(){return this.tohex()};if(g!=undefined){this.setByParam(g)}};extendClass(KJUR.asn1.cades.OtherHash,KJUR.asn1.ASN1Object);KJUR.asn1.cades.CAdESUtil=new function(){};KJUR.asn1.cades.CAdESUtil.parseSignedDataForAddingUnsigned=function(a){var c=new KJUR.asn1.cms.CMSParser();var b=c.getCMSSignedData(a);return b};KJUR.asn1.cades.CAdESUtil.parseSignerInfoForAddingUnsigned=function(g,q,c){var p=ASN1HEX,s=p.getChildIdx,a=p.getTLV,l=p.getV,v=KJUR,h=v.asn1,n=h.ASN1Object,j=h.cms,k=j.AttributeList,w=j.SignerInfo;var o={};var t=s(g,q);if(t.length!=6){throw\"not supported items for SignerInfo (!=6)\"}var d=t.shift();o.version=a(g,d);var e=t.shift();o.si=a(g,e);var m=t.shift();o.digalg=a(g,m);var f=t.shift();o.sattrs=a(g,f);var i=t.shift();o.sigalg=a(g,i);var b=t.shift();o.sig=a(g,b);o.sigval=l(g,b);var u=null;o.obj=new w();u=new n();u.hTLV=o.version;o.obj.dCMSVersion=u;u=new n();u.hTLV=o.si;o.obj.dSignerIdentifier=u;u=new n();u.hTLV=o.digalg;o.obj.dDigestAlgorithm=u;u=new n();u.hTLV=o.sattrs;o.obj.dSignedAttrs=u;u=new n();u.hTLV=o.sigalg;o.obj.dSigAlg=u;u=new n();u.hTLV=o.sig;o.obj.dSig=u;o.obj.dUnsignedAttrs=new k();return o};\nif(typeof KJUR.asn1.csr==\"undefined\"||!KJUR.asn1.csr){KJUR.asn1.csr={}}KJUR.asn1.csr.CertificationRequest=function(g){var d=KJUR,c=d.asn1,e=c.DERBitString,b=c.DERSequence,a=c.csr,f=c.x509,h=a.CertificationRequestInfo;a.CertificationRequest.superclass.constructor.call(this);this.setByParam=function(i){this.params=i};this.sign=function(){var j=(new h(this.params)).tohex();var k=new KJUR.crypto.Signature({alg:this.params.sigalg});k.init(this.params.sbjprvkey);k.updateHex(j);var i=k.sign();this.params.sighex=i};this.getPEM=function(){return hextopem(this.tohex(),\"CERTIFICATE REQUEST\")};this.tohex=function(){var l=this.params;var j=new KJUR.asn1.csr.CertificationRequestInfo(this.params);var m=new KJUR.asn1.x509.AlgorithmIdentifier({name:l.sigalg});if(l.sighex==undefined&&l.sbjprvkey!=undefined){this.sign()}if(l.sighex==undefined){throw new Error(\"sighex or sbjprvkey parameter not defined\")}var k=new e({hex:\"00\"+l.sighex});var i=new b({array:[j,m,k]});return i.tohex()};this.getEncodedHex=function(){return this.tohex()};if(g!==undefined){this.setByParam(g)}};extendClass(KJUR.asn1.csr.CertificationRequest,KJUR.asn1.ASN1Object);KJUR.asn1.csr.CertificationRequestInfo=function(f){var b=KJUR,j=b.asn1,c=j.DERBitString,g=j.DERSequence,i=j.DERInteger,n=j.DERUTF8String,d=j.DERTaggedObject,h=j.ASN1Util.newObject,l=j.csr,e=j.x509,a=e.X500Name,k=e.Extensions,m=e.SubjectPublicKeyInfo;l.CertificationRequestInfo.superclass.constructor.call(this);this.params=null;this.setByParam=function(o){if(o!=undefined){this.params=o}};this.tohex=function(){var s=this.params;var p=[];p.push(new i({\"int\":0}));p.push(new a(s.subject));p.push(new m(KEYUTIL.getKey(s.sbjpubkey)));if(s.extreq!=undefined){var o=new k(s.extreq);var r=h({tag:{tag:\"a0\",explict:true,obj:{seq:[{oid:\"1.2.840.113549.1.9.14\"},{set:[o]}]}}});p.push(r)}else{p.push(new d({tag:\"a0\",explicit:false,obj:new n({str:\"\"})}))}var q=new g({array:p});return q.tohex()};this.getEncodedHex=function(){return this.tohex()};if(f!=undefined){this.setByParam(f)}};extendClass(KJUR.asn1.csr.CertificationRequestInfo,KJUR.asn1.ASN1Object);KJUR.asn1.csr.CSRUtil=new function(){};KJUR.asn1.csr.CSRUtil.newCSRPEM=function(e){var b=KEYUTIL,a=KJUR.asn1.csr;var c=new a.CertificationRequest(e);var d=c.getPEM();return d};KJUR.asn1.csr.CSRUtil.getParam=function(d,a){var m=ASN1HEX,i=m.getV,j=m.getIdxbyList,b=m.getTLVbyList,o=m.getTLVbyListEx,n=m.getVbyListEx;var l=function(u){var t=j(u,0,[0,3,0,0],\"06\");if(i(u,t)!=\"2a864886f70d01090e\"){return null}return b(u,0,[0,3,0,1,0],\"30\")};var g={};if(d.indexOf(\"-----BEGIN CERTIFICATE REQUEST\")==-1){throw new Error(\"argument is not PEM file\")}var e=pemtohex(d,\"CERTIFICATE REQUEST\");if(a){g.tbs=b(e,0,[0])}try{var p=o(e,0,[0,1]);if(p==\"3000\"){g.subject={}}else{var f=new X509();g.subject=f.getX500Name(p)}}catch(q){}var k=o(e,0,[0,2]);var r=KEYUTIL.getKey(k,null,\"pkcs8pub\");g.sbjpubkey=KEYUTIL.getPEM(r,\"PKCS8PUB\");var c=l(e);var f=new X509();if(c!=null){g.extreq=f.getExtParamArray(c)}try{var h=o(e,0,[1],\"30\");var f=new X509();g.sigalg=f.getAlgorithmIdentifierName(h)}catch(q){}try{var s=n(e,0,[2]);g.sighex=s}catch(q){}return g};KJUR.asn1.csr.CSRUtil.verifySignature=function(b){try{var c=null;if(typeof b==\"string\"&&b.indexOf(\"-----BEGIN CERTIFICATE REQUEST\")!=-1){c=KJUR.asn1.csr.CSRUtil.getParam(b,true)}else{if(typeof b==\"object\"&&b.sbjpubkey!=undefined&&b.sigalg!=undefined&&b.sighex!=undefined&&b.tbs!=undefined){c=b}}if(c==null){return false}var d=new KJUR.crypto.Signature({alg:c.sigalg});d.init(c.sbjpubkey);d.updateHex(c.tbs);return d.verify(c.sighex)}catch(a){alert(a);return false}};\nif(typeof KJUR==\"undefined\"||!KJUR){KJUR={}}if(typeof KJUR.asn1==\"undefined\"||!KJUR.asn1){KJUR.asn1={}}if(typeof KJUR.asn1.ocsp==\"undefined\"||!KJUR.asn1.ocsp){KJUR.asn1.ocsp={}}KJUR.asn1.ocsp.DEFAULT_HASH=\"sha1\";KJUR.asn1.ocsp.OCSPResponse=function(e){KJUR.asn1.ocsp.OCSPResponse.superclass.constructor.call(this);var a=KJUR.asn1.DEREnumerated,b=KJUR.asn1.ASN1Util.newObject,c=KJUR.asn1.ocsp.ResponseBytes;var d=[\"successful\",\"malformedRequest\",\"internalError\",\"tryLater\",\"_not_used_\",\"sigRequired\",\"unauthorized\"];this.params=null;this._getStatusCode=function(){var f=this.params.resstatus;if(typeof f==\"number\"){return f}if(typeof f!=\"string\"){return -1}return d.indexOf(f)};this.setByParam=function(f){this.params=f};this.tohex=function(){var h=this.params;var g=this._getStatusCode();if(g==-1){throw new Error(\"responseStatus not supported: \"+h.resstatus)}if(g!=0){return b({seq:[{\"enum\":{\"int\":g}}]}).tohex()}var f=new c(h);return b({seq:[{\"enum\":{\"int\":0}},{tag:{tag:\"a0\",explicit:true,obj:f}}]}).tohex()};this.getEncodedHex=function(){return this.tohex()};if(e!==undefined){this.setByParam(e)}};extendClass(KJUR.asn1.ocsp.OCSPResponse,KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.ResponseBytes=function(e){KJUR.asn1.ocsp.ResponseBytes.superclass.constructor.call(this);var b=KJUR.asn1,a=b.DERSequence,f=b.DERObjectIdentifier,c=b.DEROctetString,d=b.ocsp.BasicOCSPResponse;this.params=null;this.setByParam=function(g){this.params=g};this.tohex=function(){var j=this.params;if(j.restype!=\"ocspBasic\"){throw new Error(\"not supported responseType: \"+j.restype)}var i=new d(j);var g=[];g.push(new f({name:\"ocspBasic\"}));g.push(new c({hex:i.tohex()}));var h=new a({array:g});return h.tohex()};this.getEncodedHex=function(){return this.tohex()};if(e!==undefined){this.setByParam(e)}};extendClass(KJUR.asn1.ocsp.ResponseBytes,KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.BasicOCSPResponse=function(d){KJUR.asn1.ocsp.BasicOCSPResponse.superclass.constructor.call(this);var i=Error,g=KJUR.asn1,j=g.ASN1Object,e=g.DERSequence,f=g.DERGeneralizedTime,c=g.DERTaggedObject,b=g.DERBitString,h=g.x509.Extensions,k=g.x509.AlgorithmIdentifier,l=g.ocsp,a=l.ResponderID;_SingleResponseList=l.SingleResponseList,_ResponseData=l.ResponseData;this.params=null;this.setByParam=function(m){this.params=m};this.sign=function(){var o=this.params;var m=o.tbsresp.tohex();var n=new KJUR.crypto.Signature({alg:o.sigalg});n.init(o.reskey);n.updateHex(m);o.sighex=n.sign()};this.tohex=function(){var t=this.params;if(t.tbsresp==undefined){t.tbsresp=new _ResponseData(t)}if(t.sighex==undefined&&t.reskey!=undefined){this.sign()}var n=[];n.push(t.tbsresp);n.push(new k({name:t.sigalg}));n.push(new b({hex:\"00\"+t.sighex}));if(t.certs!=undefined&&t.certs.length!=undefined){var m=[];for(var q=0;q<t.certs.length;q++){var s=t.certs[q];var r=null;if(ASN1HEX.isASN1HEX(s)){r=s}else{if(s.match(/-----BEGIN/)){r=pemtohex(s)}else{throw new i(\"certs[\"+q+\"] not hex or PEM\")}}m.push(new j({tlv:r}))}var p=new e({array:m});n.push(new c({tag:\"a0\",explicit:true,obj:p}))}var o=new e({array:n});return o.tohex()};this.getEncodedHex=function(){return this.tohex()};if(d!==undefined){this.setByParam(d)}};extendClass(KJUR.asn1.ocsp.BasicOCSPResponse,KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.ResponseData=function(c){KJUR.asn1.ocsp.ResponseData.superclass.constructor.call(this);var h=Error,f=KJUR.asn1,d=f.DERSequence,e=f.DERGeneralizedTime,b=f.DERTaggedObject,g=f.x509.Extensions,i=f.ocsp,a=i.ResponderID;_SingleResponseList=i.SingleResponseList;this.params=null;this.tohex=function(){var m=this.params;if(m.respid!=undefined){new h(\"respid not specified\")}if(m.prodat!=undefined){new h(\"prodat not specified\")}if(m.array!=undefined){new h(\"array not specified\")}var j=[];j.push(new a(m.respid));j.push(new e(m.prodat));j.push(new _SingleResponseList(m.array));if(m.ext!=undefined){var l=new g(m.ext);j.push(new b({tag:\"a1\",explicit:true,obj:l}))}var k=new d({array:j});return k.tohex()};this.getEncodedHex=function(){return this.tohex()};this.setByParam=function(j){this.params=j};if(c!==undefined){this.setByParam(c)}};extendClass(KJUR.asn1.ocsp.ResponseData,KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.ResponderID=function(g){KJUR.asn1.ocsp.ResponderID.superclass.constructor.call(this);var d=KJUR,c=d.asn1,b=c.ASN1Util.newObject,f=c.x509.X500Name,e=d.lang.String.isHex,a=Error;this.params=null;this.tohex=function(){var m=this.params;if(m.key!=undefined){var l=null;if(typeof m.key==\"string\"){if(e(m.key)){l=m.key}if(m.key.match(/-----BEGIN CERTIFICATE/)){var h=new X509(m.key);var k=h.getExtSubjectKeyIdentifier();if(k!=null){l=k.kid.hex}}}else{if(m.key instanceof X509){var k=m.key.getExtSubjectKeyIdentifier();if(k!=null){l=k.kid.hex}}}if(l==null){throw new a(\"wrong key member value\")}var j=b({tag:{tag:\"a2\",explicit:true,obj:{octstr:{hex:l}}}});return j.tohex()}else{if(m.name!=undefined){var i=null;if(typeof m.name==\"string\"&&m.name.match(/-----BEGIN CERTIFICATE/)){var h=new X509(m.name);i=h.getSubject()}else{if(m.name instanceof X509){i=m.name.getSubject()}else{if(typeof m.name==\"object\"&&(m.name.array!=undefined||m.name.str!=undefined)){i=m.name}}}if(i==null){throw new a(\"wrong name member value\")}var j=b({tag:{tag:\"a1\",explicit:true,obj:new f(i)}});return j.tohex()}}throw new a(\"key or name not specified\")};this.getEncodedHex=function(){return this.tohex()};this.setByParam=function(h){this.params=h};if(g!==undefined){this.setByParam(g)}};extendClass(KJUR.asn1.ocsp.ResponderID,KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.SingleResponseList=function(d){KJUR.asn1.ocsp.SingleResponseList.superclass.constructor.call(this);var c=KJUR.asn1,b=c.DERSequence,a=c.ocsp.SingleResponse;this.params=null;this.tohex=function(){var h=this.params;if(typeof h!=\"object\"||h.length==undefined){throw new Error(\"params not specified properly\")}var e=[];for(var g=0;g<h.length;g++){e.push(new a(h[g]))}var f=new b({array:e});return f.tohex()};this.getEncodedHex=function(){return this.tohex()};this.setByParam=function(e){this.params=e};if(d!==undefined){this.setByParam(d)}};extendClass(KJUR.asn1.ocsp.SingleResponseList,KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.SingleResponse=function(e){var k=Error,a=KJUR,i=a.asn1,f=i.DERSequence,g=i.DERGeneralizedTime,b=i.DERTaggedObject,l=i.ocsp,h=l.CertID,c=l.CertStatus,d=i.x509,j=d.Extensions;l.SingleResponse.superclass.constructor.call(this);this.params=null;this.tohex=function(){var q=this.params;var n=[];if(q.certid==undefined){throw new k(\"certid unspecified\")}if(q.status==undefined){throw new k(\"status unspecified\")}if(q.thisupdate==undefined){throw new k(\"thisupdate unspecified\")}n.push(new h(q.certid));n.push(new c(q.status));n.push(new g(q.thisupdate));if(q.nextupdate!=undefined){var m=new g(q.nextupdate);n.push(new b({tag:\"a0\",explicit:true,obj:m}))}if(q.ext!=undefined){var p=new j(q.ext);n.push(new b({tag:\"a1\",explicit:true,obj:p}))}var o=new f({array:n});return o.tohex()};this.getEncodedHex=function(){return this.tohex()};this.setByParam=function(m){this.params=m};if(e!==undefined){this.setByParam(e)}};extendClass(KJUR.asn1.ocsp.SingleResponse,KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.CertID=function(e){var b=KJUR,i=b.asn1,l=i.DEROctetString,h=i.DERInteger,f=i.DERSequence,d=i.x509,m=d.AlgorithmIdentifier,n=i.ocsp,k=n.DEFAULT_HASH,g=b.crypto,c=g.Util.hashHex,a=X509,o=ASN1HEX,j=o.getVbyList;n.CertID.superclass.constructor.call(this);this.DEFAULT_HASH=\"sha1\";this.params=null;this.setByValue=function(s,r,p,q){if(q==undefined){q=this.DEFAULT_HASH}this.params={alg:q,issname:s,isskey:r,sbjsn:p}};this.setByCert=function(p,q,r){if(r==undefined){r=this.DEFAULT_HASH}this.params={alg:r,issuerCert:p,subjectCert:q,}};this.getParamByCerts=function(y,x,t){if(t==undefined){t=this.DEFAULT_HASH}var q=new a(y);var v=new a(x);var s=c(q.getSubjectHex(),t);var u=q.getPublicKeyHex();var p=c(j(u,0,[1],\"03\",true),t);var w=v.getSerialNumberHex();var r={alg:t,issname:s,isskey:p,sbjsn:w};return r};this.tohex=function(){if(typeof this.params!=\"object\"){throw new Error(\"params not set\")}var s=this.params;var u,r,y,q;if(s.alg==undefined){q=this.DEFAULT_HASH}else{q=s.alg}if(s.issuerCert!=undefined&&s.subjectCert!=undefined){var t=this.getParamByCerts(s.issuerCert,s.subjectCert,q);u=t.issname;r=t.isskey;y=t.sbjsn}else{if(s.issname!=undefined&&s.isskey!=undefined&&s.sbjsn!=undefined){u=s.issname;r=s.isskey;y=s.sbjsn}else{throw new Error(\"required param members not defined\")}}var A=new m({name:q});var v=new l({hex:u});var x=new l({hex:r});var w=new h({hex:y});var z=new f({array:[A,v,x,w]});this.hTLV=z.tohex();return this.hTLV};this.getEncodedHex=function(){return this.tohex()};if(e!==undefined){this.setByParam(e)}};extendClass(KJUR.asn1.ocsp.CertID,KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.CertStatus=function(a){KJUR.asn1.ocsp.CertStatus.superclass.constructor.call(this);this.params=null;this.tohex=function(){var d=this.params;if(d.status==\"good\"){return\"8000\"}if(d.status==\"unknown\"){return\"8200\"}if(d.status==\"revoked\"){var c=[{gentime:{str:d.time}}];if(d.reason!=undefined){c.push({tag:{tag:\"a0\",explicit:true,obj:{\"enum\":{\"int\":d.reason}}}})}var b={tag:\"a1\",explicit:false,obj:{seq:c}};return KJUR.asn1.ASN1Util.newObject({tag:b}).tohex()}throw new Error(\"bad status\")};this.getEncodedHex=function(){return this.tohex()};this.setByParam=function(b){this.params=b};if(a!==undefined){this.setByParam(a)}};extendClass(KJUR.asn1.ocsp.CertStatus,KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.Request=function(f){var c=KJUR,b=c.asn1,a=b.DERSequence,d=b.ocsp;d.Request.superclass.constructor.call(this);this.dReqCert=null;this.dExt=null;this.tohex=function(){var g=[];if(this.dReqCert===null){throw\"reqCert not set\"}g.push(this.dReqCert);var h=new a({array:g});this.hTLV=h.tohex();return this.hTLV};this.getEncodedHex=function(){return this.tohex()};if(typeof f!==\"undefined\"){var e=new d.CertID(f);this.dReqCert=e}};extendClass(KJUR.asn1.ocsp.Request,KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.TBSRequest=function(e){var c=KJUR,b=c.asn1,a=b.DERSequence,d=b.ocsp;d.TBSRequest.superclass.constructor.call(this);this.version=0;this.dRequestorName=null;this.dRequestList=[];this.dRequestExt=null;this.setRequestListByParam=function(h){var f=[];for(var g=0;g<h.length;g++){var j=new d.Request(h[0]);f.push(j)}this.dRequestList=f};this.tohex=function(){var f=[];if(this.version!==0){throw\"not supported version: \"+this.version}if(this.dRequestorName!==null){throw\"requestorName not supported\"}var h=new a({array:this.dRequestList});f.push(h);if(this.dRequestExt!==null){throw\"requestExtensions not supported\"}var g=new a({array:f});this.hTLV=g.tohex();return this.hTLV};this.getEncodedHex=function(){return this.tohex()};if(e!==undefined){if(e.reqList!==undefined){this.setRequestListByParam(e.reqList)}}};extendClass(KJUR.asn1.ocsp.TBSRequest,KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.OCSPRequest=function(f){var c=KJUR,b=c.asn1,a=b.DERSequence,d=b.ocsp;d.OCSPRequest.superclass.constructor.call(this);this.dTbsRequest=null;this.dOptionalSignature=null;this.tohex=function(){var g=[];if(this.dTbsRequest!==null){g.push(this.dTbsRequest)}else{throw\"tbsRequest not set\"}if(this.dOptionalSignature!==null){throw\"optionalSignature not supported\"}var h=new a({array:g});this.hTLV=h.tohex();return this.hTLV};this.getEncodedHex=function(){return this.tohex()};if(f!==undefined){if(f.reqList!==undefined){var e=new d.TBSRequest(f);this.dTbsRequest=e}}};extendClass(KJUR.asn1.ocsp.OCSPRequest,KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.OCSPUtil={};KJUR.asn1.ocsp.OCSPUtil.getRequestHex=function(a,b,h){var d=KJUR,c=d.asn1,e=c.ocsp;if(h===undefined){h=e.DEFAULT_HASH}var g={alg:h,issuerCert:a,subjectCert:b};var f=new e.OCSPRequest({reqList:[g]});return f.tohex()};KJUR.asn1.ocsp.OCSPUtil.getOCSPResponseInfo=function(b){var m=ASN1HEX,c=m.getVbyList,k=m.getVbyListEx,e=m.getIdxbyList,d=m.getIdxbyListEx,g=m.getV;var n={};try{var j=k(b,0,[0],\"0a\");n.responseStatus=parseInt(j,16)}catch(f){}if(n.responseStatus!==0){return n}try{var i=e(b,0,[1,0,1,0,0,2,0,1]);if(b.substr(i,2)===\"80\"){n.certStatus=\"good\"}else{if(b.substr(i,2)===\"a1\"){n.certStatus=\"revoked\";n.revocationTime=hextoutf8(c(b,i,[0]))}else{if(b.substr(i,2)===\"82\"){n.certStatus=\"unknown\"}}}}catch(f){}try{var a=e(b,0,[1,0,1,0,0,2,0,2]);n.thisUpdate=hextoutf8(g(b,a))}catch(f){}try{var l=e(b,0,[1,0,1,0,0,2,0,3]);if(b.substr(l,2)===\"a0\"){n.nextUpdate=hextoutf8(c(b,l,[0]))}}catch(f){}return n};KJUR.asn1.ocsp.OCSPParser=function(){var g=Error,a=X509,h=new a(),l=ASN1HEX,i=l.getV,b=l.getTLV,f=l.getIdxbyList,e=l.getVbyList,c=l.getTLVbyList,k=l.getVbyListEx,d=l.getTLVbyListEx,j=l.getChildIdx;this.getOCSPRequest=function(o){var n=j(o,0);if(n.length!=1&&n.length!=2){throw new g(\"wrong number elements: \"+n.length)}var m=this.getTBSRequest(b(o,n[0]));return m};this.getTBSRequest=function(o){var m={};var n=d(o,0,[0],\"30\");m.array=this.getRequestList(n);var p=d(o,0,[\"[2]\",0],\"30\");if(p!=null){m.ext=h.getExtParamArray(p)}return m};this.getRequestList=function(p){var m=[];var n=j(p,0);for(var o=0;o<n.length;o++){var p=b(p,n[o]);m.push(this.getRequest(p))}return m};this.getRequest=function(n){var m=j(n,0);if(m.length!=1&&m.length!=2){throw new g(\"wrong number elements: \"+m.length)}var p=this.getCertID(b(n,m[0]));if(m.length==2){var o=f(n,0,[1,0]);p.ext=h.getExtParamArray(b(n,o))}return p};this.getCertID=function(p){var o=j(p,0);if(o.length!=4){throw new g(\"wrong number elements: \"+o.length)}var n=new a();var m={};m.alg=n.getAlgorithmIdentifierName(b(p,o[0]));m.issname=i(p,o[1]);m.isskey=i(p,o[2]);m.sbjsn=i(p,o[3]);return m};this.getOCSPResponse=function(r){var o=j(r,0);var m;var q=i(r,o[0]);var p=parseInt(q);if(o.length==1){return{resstatus:p}}var n=c(r,0,[1,0]);m=this.getResponseBytes(n);m.resstatus=p;return m};this.getResponseBytes=function(p){var o=j(p,0);var n;var q=c(p,0,[1,0]);n=this.getBasicOCSPResponse(q);var m=i(p,o[0]);n.restype=KJUR.asn1.x509.OID.oid2name(hextooid(m));return n};this.getBasicOCSPResponse=function(q){var t=j(q,0);var v;v=this.getResponseData(b(q,t[0]));var u=new X509();v.alg=u.getAlgorithmIdentifierName(b(q,t[1]));var n=i(q,t[2]);v.sighex=n.substr(2);var m=k(q,0,[\"[0]\"]);if(m!=null){var r=j(m,0);var o=[];for(var p=0;p<r.length;p++){var s=b(m,r[p]);o.push(s)}v.certs=o}return v};this.getResponseData=function(q){var p=j(q,0);var r=p.length;var o={};var n=0;if(q.substr(p[0],2)==\"a0\"){n++}o.respid=this.getResponderID(b(q,p[n++]));var t=i(q,p[n++]);o.prodat=hextoutf8(t);o.array=this.getSingleResponseList(b(q,p[n++]));if(q.substr(p[r-1],2)==\"a1\"){var s=c(q,p[r-1],[0]);var m=new X509();o.ext=m.getExtParamArray(s)}return o};this.getResponderID=function(o){var n={};if(o.substr(0,2)==\"a2\"){var p=e(o,0,[0]);n.key=p}if(o.substr(0,2)==\"a1\"){var q=c(o,0,[0]);var m=new X509();n.name=m.getX500Name(q)}return n};this.getSingleResponseList=function(q){var n=j(q,0);var m=[];for(var o=0;o<n.length;o++){var r=this.getSingleResponse(b(q,n[o]));m.push(r)}return m};this.getSingleResponse=function(p){var t=j(p,0);var v={};var r=this.getCertID(b(p,t[0]));v.certid=r;var u=this.getCertStatus(b(p,t[1]));v.status=u;if(p.substr(t[2],2)==\"18\"){var q=i(p,t[2]);v.thisupdate=hextoutf8(q)}for(var o=3;o<t.length;o++){if(p.substr(t[o],2)==\"a0\"){var m=e(p,t[o],[0],\"18\");v.nextupdate=hextoutf8(m)}if(p.substr(t[o],2)==\"a1\"){var s=new X509();var n=c(p,0,[o,0]);v.ext=s.getExtParamArray(n)}}return v};this.getCertStatus=function(p){var m={};if(p==\"8000\"){return{status:\"good\"}}if(p==\"8200\"){return{status:\"unknown\"}}if(p.substr(0,2)==\"a1\"){m.status=\"revoked\";var o=e(p,0,[0]);var n=hextoutf8(o);m.time=n}return m}};\nvar KJUR;if(typeof KJUR==\"undefined\"||!KJUR){KJUR={}}if(typeof KJUR.lang==\"undefined\"||!KJUR.lang){KJUR.lang={}}KJUR.lang.String=function(){};function Base64x(){}function stoBA(d){var b=new Array();for(var c=0;c<d.length;c++){b[c]=d.charCodeAt(c)}return b}function BAtos(b){var d=\"\";for(var c=0;c<b.length;c++){d=d+String.fromCharCode(b[c])}return d}function BAtohex(b){var e=\"\";for(var d=0;d<b.length;d++){var c=b[d].toString(16);if(c.length==1){c=\"0\"+c}e=e+c}return e}function stohex(a){return BAtohex(stoBA(a))}function stob64(a){return hex2b64(stohex(a))}function stob64u(a){return b64tob64u(hex2b64(stohex(a)))}function b64utos(a){return BAtos(b64toBA(b64utob64(a)))}function b64tob64u(a){a=a.replace(/\\=/g,\"\");a=a.replace(/\\+/g,\"-\");a=a.replace(/\\//g,\"_\");return a}function b64utob64(a){if(a.length%4==2){a=a+\"==\"}else{if(a.length%4==3){a=a+\"=\"}}a=a.replace(/-/g,\"+\");a=a.replace(/_/g,\"/\");return a}function hextob64u(a){if(a.length%2==1){a=\"0\"+a}return b64tob64u(hex2b64(a))}function b64utohex(a){return b64tohex(b64utob64(a))}var utf8tob64u,b64utoutf8;if(typeof Buffer===\"function\"){utf8tob64u=function(a){return b64tob64u(Buffer.from(a,\"utf8\").toString(\"base64\"))};b64utoutf8=function(a){return Buffer.from(b64utob64(a),\"base64\").toString(\"utf8\")}}else{utf8tob64u=function(a){return hextob64u(uricmptohex(encodeURIComponentAll(a)))};b64utoutf8=function(a){return decodeURIComponent(hextouricmp(b64utohex(a)))}}function utf8tob64(a){return hex2b64(uricmptohex(encodeURIComponentAll(a)))}function b64toutf8(a){return decodeURIComponent(hextouricmp(b64tohex(a)))}function utf8tohex(a){return uricmptohex(encodeURIComponentAll(a)).toLowerCase()}function hextoutf8(b){try{return decodeURIComponent(hextouricmp(b))}catch(a){return null}}function iso88591hextoutf8(a){return hextoutf8(iso88591hextoutf8hex(a))}function utf8toiso88591hex(a){return utf8hextoiso88591hex(utf8tohex(a))}function iso88591hextoutf8hex(e){var c=e.match(/.{1,2}/g);var b=[];for(var d=0;d<c.length;d++){var f=parseInt(c[d],16);if(161<=f&&f<=191){b.push(\"c2\");b.push(c[d])}else{if(192<=f&&f<=255){b.push(\"c3\");b.push((f-64).toString(16))}else{b.push(c[d])}}}return b.join(\"\")}function utf8hextoiso88591hex(f){var c=f.match(/.{1,2}/g);var b=[];for(var e=0;e<c.length;e++){if(c[e]==\"c2\"){e++;b.push(c[e])}else{if(c[e]==\"c3\"){e++;var d=c[e];var g=parseInt(c[e],16)+64;b.push(g.toString(16))}else{b.push(c[e])}}}return b.join(\"\")}function hextorstr(c){var b=\"\";for(var a=0;a<c.length-1;a+=2){b+=String.fromCharCode(parseInt(c.substr(a,2),16))}return b}function rstrtohex(c){var a=\"\";for(var b=0;b<c.length;b++){a+=(\"0\"+c.charCodeAt(b).toString(16)).slice(-2)}return a}function hextob64(a){return hex2b64(a)}function hextob64nl(b){var a=hextob64(b);var c=a.replace(/(.{64})/g,\"$1\\r\\n\");c=c.replace(/\\r\\n$/,\"\");return c}function b64nltohex(b){var a=b.replace(/[^0-9A-Za-z\\/+=]*/g,\"\");var c=b64tohex(a);return c}function hextopem(a,b){var c=hextob64nl(a);return\"-----BEGIN \"+b+\"-----\\r\\n\"+c+\"\\r\\n-----END \"+b+\"-----\\r\\n\"}function pemtohex(a,b){if(a.indexOf(\"-----BEGIN \")==-1){throw\"can't find PEM header: \"+b}if(b!==undefined){a=a.replace(new RegExp(\"^[^]*-----BEGIN \"+b+\"-----\"),\"\");a=a.replace(new RegExp(\"-----END \"+b+\"-----[^]*$\"),\"\")}else{a=a.replace(/^[^]*-----BEGIN [^-]+-----/,\"\");a=a.replace(/-----END [^-]+-----[^]*$/,\"\")}return b64nltohex(a)}function hextoArrayBuffer(d){if(d.length%2!=0){throw\"input is not even length\"}if(d.match(/^[0-9A-Fa-f]+$/)==null){throw\"input is not hexadecimal\"}var b=new ArrayBuffer(d.length/2);var a=new DataView(b);for(var c=0;c<d.length/2;c++){a.setUint8(c,parseInt(d.substr(c*2,2),16))}return b}function ArrayBuffertohex(b){var d=\"\";var a=new DataView(b);for(var c=0;c<b.byteLength;c++){d+=(\"00\"+a.getUint8(c).toString(16)).slice(-2)}return d}function zulutomsec(n){var l,j,m,e,f,i,b,k;var a,h,g,c;c=n.match(/^(\\d{2}|\\d{4})(\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)(|\\.\\d+)Z$/);if(c){a=c[1];l=parseInt(a);if(a.length===2){if(50<=l&&l<100){l=1900+l}else{if(0<=l&&l<50){l=2000+l}}}j=parseInt(c[2])-1;m=parseInt(c[3]);e=parseInt(c[4]);f=parseInt(c[5]);i=parseInt(c[6]);b=0;h=c[7];if(h!==\"\"){g=(h.substr(1)+\"00\").substr(0,3);b=parseInt(g)}return Date.UTC(l,j,m,e,f,i,b)}throw new Error(\"unsupported zulu format: \"+n)}function zulutosec(a){return Math.round(zulutomsec(a)/1000)}function zulutodate(a){return new Date(zulutomsec(a))}function datetozulu(g,e,f){var b;var a=g.getUTCFullYear();if(e){if(a<1950||2049<a){throw\"not proper year for UTCTime: \"+a}b=(\"\"+a).slice(-2)}else{b=(\"000\"+a).slice(-4)}b+=(\"0\"+(g.getUTCMonth()+1)).slice(-2);b+=(\"0\"+g.getUTCDate()).slice(-2);b+=(\"0\"+g.getUTCHours()).slice(-2);b+=(\"0\"+g.getUTCMinutes()).slice(-2);b+=(\"0\"+g.getUTCSeconds()).slice(-2);if(f){var c=g.getUTCMilliseconds();if(c!==0){c=(\"00\"+c).slice(-3);c=c.replace(/0+$/g,\"\");b+=\".\"+c}}b+=\"Z\";return b}function uricmptohex(a){return a.replace(/%/g,\"\")}function hextouricmp(a){return a.replace(/(..)/g,\"%$1\")}function ipv6tohex(g){var b=\"malformed IPv6 address\";if(!g.match(/^[0-9A-Fa-f:]+$/)){throw b}g=g.toLowerCase();var d=g.split(\":\").length-1;if(d<2){throw b}var e=\":\".repeat(7-d+2);g=g.replace(\"::\",e);var c=g.split(\":\");if(c.length!=8){throw b}for(var f=0;f<8;f++){c[f]=(\"0000\"+c[f]).slice(-4)}return c.join(\"\")}function hextoipv6(d){if(!d.match(/^[0-9A-Fa-f]{32}$/)){throw new Error(\"malformed IPv6 address: \"+d)}d=d.toLowerCase();var b=d.match(/.{1,4}/g);b=b.map(function(a){return a.replace(/^0+/,\"\")});b=b.map(function(a){return a==\"\"?\"0\":a});d=\":\"+b.join(\":\")+\":\";var c=d.match(/:(0:){2,}/g);if(c==null){return d.slice(1,-1)}var e=c.sort().slice(-1)[0];d=d.replace(e.substr(0,e.length-1),\":\");if(d.substr(0,2)!=\"::\"){d=d.substr(1)}if(d.substr(-2,2)!=\"::\"){d=d.substr(0,d.length-1)}return d}function hextoip(b){var c=new Error(\"malformed hex value\");if(!b.match(/^([0-9A-Fa-f][0-9A-Fa-f]){1,}$/)){throw c}if(b.length==8){var d;try{d=parseInt(b.substr(0,2),16)+\".\"+parseInt(b.substr(2,2),16)+\".\"+parseInt(b.substr(4,2),16)+\".\"+parseInt(b.substr(6,2),16);return d}catch(a){throw c}}else{if(b.length==16){try{return hextoip(b.substr(0,8))+\"/\"+ipprefixlen(b.substr(8))}catch(a){throw c}}else{if(b.length==32){return hextoipv6(b)}else{if(b.length==64){try{return hextoipv6(b.substr(0,32))+\"/\"+ipprefixlen(b.substr(32))}catch(a){throw c}return}else{return b}}}}}function ipprefixlen(c){var d=new Error(\"malformed mask\");var a;try{a=new BigInteger(c,16).toString(2)}catch(b){throw d}if(!a.match(/^1*0*$/)){throw d}return a.replace(/0+$/,\"\").length}function iptohex(g){var j=new Error(\"malformed IP address\");g=g.toLowerCase(g);if(!g.match(/^[0-9a-f.:/]+$/)){throw j}if(g.match(/^[0-9.]+$/)){var b=g.split(\".\");if(b.length!==4){throw j}var h=\"\";try{for(var f=0;f<4;f++){var k=parseInt(b[f]);h+=(\"0\"+k.toString(16)).slice(-2)}return h}catch(e){throw j}}else{if(g.match(/^[0-9.]+\\/[0-9]+$/)){var c=g.split(\"/\");return iptohex(c[0])+ipnetmask(parseInt(c[1]),32)}else{if(g.match(/^[0-9a-f:]+$/)&&g.indexOf(\":\")!==-1){return ipv6tohex(g)}else{if(g.match(/^[0-9a-f:]+\\/[0-9]+$/)&&g.indexOf(\":\")!==-1){var c=g.split(\"/\");return ipv6tohex(c[0])+ipnetmask(parseInt(c[1]),128)}else{throw j}}}}}function ipnetmask(d,c){if(c==32&&d==0){return\"00000000\"}if(c==128&&d==0){return\"00000000000000000000000000000000\"}var a=Array(d+1).join(\"1\")+Array(c-d+1).join(\"0\");return new BigInteger(a,2).toString(16)}function ucs2hextoutf8(d){function e(f){var h=parseInt(f.substr(0,2),16);var a=parseInt(f.substr(2),16);if(h==0&a<128){return String.fromCharCode(a)}if(h<8){var j=192|((h&7)<<3)|((a&192)>>6);var i=128|(a&63);return hextoutf8(j.toString(16)+i.toString(16))}var j=224|((h&240)>>4);var i=128|((h&15)<<2)|((a&192)>>6);var g=128|(a&63);return hextoutf8(j.toString(16)+i.toString(16)+g.toString(16))}var c=d.match(/.{4}/g);var b=c.map(e);return b.join(\"\")}function encodeURIComponentAll(a){var d=encodeURIComponent(a);var b=\"\";for(var c=0;c<d.length;c++){if(d[c]==\"%\"){b=b+d.substr(c,3);c=c+2}else{b=b+\"%\"+stohex(d[c])}}return b}function newline_toUnix(a){a=a.replace(/\\r\\n/mg,\"\\n\");return a}function newline_toDos(a){a=a.replace(/\\r\\n/mg,\"\\n\");a=a.replace(/\\n/mg,\"\\r\\n\");return a}KJUR.lang.String.isInteger=function(a){if(a.match(/^[0-9]+$/)){return true}else{if(a.match(/^-[0-9]+$/)){return true}else{return false}}};KJUR.lang.String.isHex=function(a){return ishex(a)};function ishex(a){if(a.length%2==0&&(a.match(/^[0-9a-f]+$/)||a.match(/^[0-9A-F]+$/))){return true}else{return false}}KJUR.lang.String.isBase64=function(a){a=a.replace(/\\s+/g,\"\");if(a.match(/^[0-9A-Za-z+\\/]+={0,3}$/)&&a.length%4==0){return true}else{return false}};KJUR.lang.String.isBase64URL=function(a){if(a.match(/[+/=]/)){return false}a=b64utob64(a);return KJUR.lang.String.isBase64(a)};function isBase64URLDot(a){if(a.match(/^[0-9A-Za-z-_.]+$/)){return true}return false}KJUR.lang.String.isIntegerArray=function(a){a=a.replace(/\\s+/g,\"\");if(a.match(/^\\[[0-9,]+\\]$/)){return true}else{return false}};KJUR.lang.String.isPrintable=function(a){if(a.match(/^[0-9A-Za-z '()+,-./:=?]*$/)!==null){return true}return false};KJUR.lang.String.isIA5=function(a){if(a.match(/^[\\x20-\\x21\\x23-\\x7f]*$/)!==null){return true}return false};KJUR.lang.String.isMail=function(a){if(a.match(/^[A-Za-z0-9]{1}[A-Za-z0-9_.-]*@{1}[A-Za-z0-9_.-]{1,}\\.[A-Za-z0-9]{1,}$/)!==null){return true}return false};function hextoposhex(a){if(a.length%2==1){return\"0\"+a}if(a.substr(0,1)>\"7\"){return\"00\"+a}return a}function intarystrtohex(b){b=b.replace(/^\\s*\\[\\s*/,\"\");b=b.replace(/\\s*\\]\\s*$/,\"\");b=b.replace(/\\s*/g,\"\");try{var c=b.split(/,/).map(function(g,e,h){var f=parseInt(g);if(f<0||255<f){throw\"integer not in range 0-255\"}var d=(\"00\"+f.toString(16)).slice(-2);return d}).join(\"\");return c}catch(a){throw\"malformed integer array string: \"+a}}var strdiffidx=function(c,a){var d=c.length;if(c.length>a.length){d=a.length}for(var b=0;b<d;b++){if(c.charCodeAt(b)!=a.charCodeAt(b)){return b}}if(c.length!=a.length){return d}return -1};function oidtohex(g){var f=function(a){var l=a.toString(16);if(l.length==1){l=\"0\"+l}return l};var e=function(p){var o=\"\";var l=parseInt(p,10);var a=l.toString(2);var m=7-a.length%7;if(m==7){m=0}var r=\"\";for(var n=0;n<m;n++){r+=\"0\"}a=r+a;for(var n=0;n<a.length-1;n+=7){var q=a.substr(n,7);if(n!=a.length-7){q=\"1\"+q}o+=f(parseInt(q,2))}return o};try{if(!g.match(/^[0-9.]+$/)){return null}var j=\"\";var b=g.split(\".\");var k=parseInt(b[0],10)*40+parseInt(b[1],10);j+=f(k);b.splice(0,2);for(var d=0;d<b.length;d++){j+=e(b[d])}return j}catch(c){return null}}function hextooid(g){if(!ishex(g)){return null}try{var m=[];var p=g.substr(0,2);var e=parseInt(p,16);m[0]=new String(Math.floor(e/40));m[1]=new String(e%40);var n=g.substr(2);var l=[];for(var f=0;f<n.length/2;f++){l.push(parseInt(n.substr(f*2,2),16))}var k=[];var d=\"\";for(var f=0;f<l.length;f++){if(l[f]&128){d=d+strpad((l[f]&127).toString(2),7)}else{d=d+strpad((l[f]&127).toString(2),7);k.push(new String(parseInt(d,2)));d=\"\"}}var o=m.join(\".\");if(k.length>0){o=o+\".\"+k.join(\".\")}return o}catch(j){return null}}var strpad=function(c,b,a){if(a==undefined){a=\"0\"}if(c.length>=b){return c}return new Array(b-c.length+1).join(a)+c};function bitstrtoint(e){if(e.length%2!=0){return -1}e=e.toLowerCase();if(e.match(/^[0-9a-f]+$/)==null){return -1}try{var a=e.substr(0,2);if(a==\"00\"){return parseInt(e.substr(2),16)}var b=parseInt(a,16);if(b>7){return -1}var g=e.substr(2);var d=parseInt(g,16).toString(2);if(d==\"0\"){d=\"00000000\"}d=d.slice(0,0-b);var f=parseInt(d,2);if(f==NaN){return -1}return f}catch(c){return -1}}function inttobitstr(e){if(typeof e!=\"number\"){return null}if(e<0){return null}var c=Number(e).toString(2);var b=8-c.length%8;if(b==8){b=0}c=c+strpad(\"\",b,\"0\");var d=parseInt(c,2).toString(16);if(d.length%2==1){d=\"0\"+d}var a=\"0\"+b;return a+d}function bitstrtobinstr(g){if(typeof g!=\"string\"){return null}if(g.length%2!=0){return null}if(!g.match(/^[0-9a-f]+$/)){return null}try{var c=parseInt(g.substr(0,2),16);if(c<0||7<c){return null}var j=g.substr(2);var f=\"\";for(var e=0;e<j.length;e+=2){var b=j.substr(e,2);var a=parseInt(b,16).toString(2);a=(\"0000000\"+a).slice(-8);f+=a}return f.substr(0,f.length-c)}catch(d){return null}}function binstrtobitstr(b){if(typeof b!=\"string\"){return null}if(b.match(/^[01]+$/)==null){return null}try{var c=parseInt(b,2);return inttobitstr(c)}catch(a){return null}}function namearraytobinstr(e,g){var f=0;for(var a=0;a<e.length;a++){f|=1<<g[e[a]]}var b=f.toString(2);var c=\"\";for(var a=b.length-1;a>=0;a--){c+=b[a]}return c}function extendClass(c,a){var b=function(){};b.prototype=a.prototype;c.prototype=new b();c.prototype.constructor=c;c.superclass=a.prototype;if(a.prototype.constructor==Object.prototype.constructor){a.prototype.constructor=a}};\nif(typeof KJUR==\"undefined\"||!KJUR){KJUR={}}if(typeof KJUR.crypto==\"undefined\"||!KJUR.crypto){KJUR.crypto={}}KJUR.crypto.Util=new function(){this.DIGESTINFOHEAD={sha1:\"3021300906052b0e03021a05000414\",sha224:\"302d300d06096086480165030402040500041c\",sha256:\"3031300d060960864801650304020105000420\",sha384:\"3041300d060960864801650304020205000430\",sha512:\"3051300d060960864801650304020305000440\",md2:\"3020300c06082a864886f70d020205000410\",md5:\"3020300c06082a864886f70d020505000410\",ripemd160:\"3021300906052b2403020105000414\",};this.DEFAULTPROVIDER={md5:\"cryptojs\",sha1:\"cryptojs\",sha224:\"cryptojs\",sha256:\"cryptojs\",sha384:\"cryptojs\",sha512:\"cryptojs\",ripemd160:\"cryptojs\",hmacmd5:\"cryptojs\",hmacsha1:\"cryptojs\",hmacsha224:\"cryptojs\",hmacsha256:\"cryptojs\",hmacsha384:\"cryptojs\",hmacsha512:\"cryptojs\",hmacripemd160:\"cryptojs\",MD5withRSA:\"cryptojs/jsrsa\",SHA1withRSA:\"cryptojs/jsrsa\",SHA224withRSA:\"cryptojs/jsrsa\",SHA256withRSA:\"cryptojs/jsrsa\",SHA384withRSA:\"cryptojs/jsrsa\",SHA512withRSA:\"cryptojs/jsrsa\",RIPEMD160withRSA:\"cryptojs/jsrsa\",MD5withECDSA:\"cryptojs/jsrsa\",SHA1withECDSA:\"cryptojs/jsrsa\",SHA224withECDSA:\"cryptojs/jsrsa\",SHA256withECDSA:\"cryptojs/jsrsa\",SHA384withECDSA:\"cryptojs/jsrsa\",SHA512withECDSA:\"cryptojs/jsrsa\",RIPEMD160withECDSA:\"cryptojs/jsrsa\",SHA1withDSA:\"cryptojs/jsrsa\",SHA224withDSA:\"cryptojs/jsrsa\",SHA256withDSA:\"cryptojs/jsrsa\",MD5withRSAandMGF1:\"cryptojs/jsrsa\",SHAwithRSAandMGF1:\"cryptojs/jsrsa\",SHA1withRSAandMGF1:\"cryptojs/jsrsa\",SHA224withRSAandMGF1:\"cryptojs/jsrsa\",SHA256withRSAandMGF1:\"cryptojs/jsrsa\",SHA384withRSAandMGF1:\"cryptojs/jsrsa\",SHA512withRSAandMGF1:\"cryptojs/jsrsa\",RIPEMD160withRSAandMGF1:\"cryptojs/jsrsa\",};this.CRYPTOJSMESSAGEDIGESTNAME={md5:CryptoJS.algo.MD5,sha1:CryptoJS.algo.SHA1,sha224:CryptoJS.algo.SHA224,sha256:CryptoJS.algo.SHA256,sha384:CryptoJS.algo.SHA384,sha512:CryptoJS.algo.SHA512,ripemd160:CryptoJS.algo.RIPEMD160};this.getDigestInfoHex=function(a,b){if(typeof this.DIGESTINFOHEAD[b]==\"undefined\"){throw\"alg not supported in Util.DIGESTINFOHEAD: \"+b}return this.DIGESTINFOHEAD[b]+a};this.getPaddedDigestInfoHex=function(h,a,j){var c=this.getDigestInfoHex(h,a);var d=j/4;if(c.length+22>d){throw\"key is too short for SigAlg: keylen=\"+j+\",\"+a}var b=\"0001\";var k=\"00\"+c;var g=\"\";var l=d-b.length-k.length;for(var f=0;f<l;f+=2){g+=\"ff\"}var e=b+g+k;return e};this.hashString=function(a,c){var b=new KJUR.crypto.MessageDigest({alg:c});return b.digestString(a)};this.hashHex=function(b,c){var a=new KJUR.crypto.MessageDigest({alg:c});return a.digestHex(b)};this.sha1=function(a){return this.hashString(a,\"sha1\")};this.sha256=function(a){return this.hashString(a,\"sha256\")};this.sha256Hex=function(a){return this.hashHex(a,\"sha256\")};this.sha512=function(a){return this.hashString(a,\"sha512\")};this.sha512Hex=function(a){return this.hashHex(a,\"sha512\")};this.isKey=function(a){if(a instanceof RSAKey||a instanceof KJUR.crypto.DSA||a instanceof KJUR.crypto.ECDSA){return true}else{return false}}};KJUR.crypto.Util.md5=function(a){var b=new KJUR.crypto.MessageDigest({alg:\"md5\",prov:\"cryptojs\"});return b.digestString(a)};KJUR.crypto.Util.ripemd160=function(a){var b=new KJUR.crypto.MessageDigest({alg:\"ripemd160\",prov:\"cryptojs\"});return b.digestString(a)};KJUR.crypto.Util.SECURERANDOMGEN=new SecureRandom();KJUR.crypto.Util.getRandomHexOfNbytes=function(b){var a=new Array(b);KJUR.crypto.Util.SECURERANDOMGEN.nextBytes(a);return BAtohex(a)};KJUR.crypto.Util.getRandomBigIntegerOfNbytes=function(a){return new BigInteger(KJUR.crypto.Util.getRandomHexOfNbytes(a),16)};KJUR.crypto.Util.getRandomHexOfNbits=function(d){var c=d%8;var a=(d-c)/8;var b=new Array(a+1);KJUR.crypto.Util.SECURERANDOMGEN.nextBytes(b);b[0]=(((255<<c)&255)^255)&b[0];return BAtohex(b)};KJUR.crypto.Util.getRandomBigIntegerOfNbits=function(a){return new BigInteger(KJUR.crypto.Util.getRandomHexOfNbits(a),16)};KJUR.crypto.Util.getRandomBigIntegerZeroToMax=function(b){var a=b.bitLength();while(1){var c=KJUR.crypto.Util.getRandomBigIntegerOfNbits(a);if(b.compareTo(c)!=-1){return c}}};KJUR.crypto.Util.getRandomBigIntegerMinToMax=function(e,b){var c=e.compareTo(b);if(c==1){throw\"biMin is greater than biMax\"}if(c==0){return e}var a=b.subtract(e);var d=KJUR.crypto.Util.getRandomBigIntegerZeroToMax(a);return d.add(e)};KJUR.crypto.MessageDigest=function(c){var b=null;var a=null;var d=null;this.setAlgAndProvider=function(g,f){g=KJUR.crypto.MessageDigest.getCanonicalAlgName(g);if(g!==null&&f===undefined){f=KJUR.crypto.Util.DEFAULTPROVIDER[g]}if(\":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:\".indexOf(g)!=-1&&f==\"cryptojs\"){try{this.md=KJUR.crypto.Util.CRYPTOJSMESSAGEDIGESTNAME[g].create()}catch(e){throw\"setAlgAndProvider hash alg set fail alg=\"+g+\"/\"+e}this.updateString=function(h){this.md.update(h)};this.updateHex=function(h){var i=CryptoJS.enc.Hex.parse(h);this.md.update(i)};this.digest=function(){var h=this.md.finalize();return h.toString(CryptoJS.enc.Hex)};this.digestString=function(h){this.updateString(h);return this.digest()};this.digestHex=function(h){this.updateHex(h);return this.digest()}}if(\":sha256:\".indexOf(g)!=-1&&f==\"sjcl\"){try{this.md=new sjcl.hash.sha256()}catch(e){throw\"setAlgAndProvider hash alg set fail alg=\"+g+\"/\"+e}this.updateString=function(h){this.md.update(h)};this.updateHex=function(i){var h=sjcl.codec.hex.toBits(i);this.md.update(h)};this.digest=function(){var h=this.md.finalize();return sjcl.codec.hex.fromBits(h)};this.digestString=function(h){this.updateString(h);return this.digest()};this.digestHex=function(h){this.updateHex(h);return this.digest()}}};this.updateString=function(e){throw\"updateString(str) not supported for this alg/prov: \"+this.algName+\"/\"+this.provName};this.updateHex=function(e){throw\"updateHex(hex) not supported for this alg/prov: \"+this.algName+\"/\"+this.provName};this.digest=function(){throw\"digest() not supported for this alg/prov: \"+this.algName+\"/\"+this.provName};this.digestString=function(e){throw\"digestString(str) not supported for this alg/prov: \"+this.algName+\"/\"+this.provName};this.digestHex=function(e){throw\"digestHex(hex) not supported for this alg/prov: \"+this.algName+\"/\"+this.provName};if(c!==undefined){if(c.alg!==undefined){this.algName=c.alg;if(c.prov===undefined){this.provName=KJUR.crypto.Util.DEFAULTPROVIDER[this.algName]}this.setAlgAndProvider(this.algName,this.provName)}}};KJUR.crypto.MessageDigest.getCanonicalAlgName=function(a){if(typeof a===\"string\"){a=a.toLowerCase();a=a.replace(/-/,\"\")}return a};KJUR.crypto.MessageDigest.getHashLength=function(c){var b=KJUR.crypto.MessageDigest;var a=b.getCanonicalAlgName(c);if(b.HASHLENGTH[a]===undefined){throw\"not supported algorithm: \"+c}return b.HASHLENGTH[a]};KJUR.crypto.MessageDigest.HASHLENGTH={md5:16,sha1:20,sha224:28,sha256:32,sha384:48,sha512:64,ripemd160:20};KJUR.crypto.Mac=function(d){var f=null;var c=null;var a=null;var e=null;var b=null;this.setAlgAndProvider=function(k,i){k=k.toLowerCase();if(k==null){k=\"hmacsha1\"}k=k.toLowerCase();if(k.substr(0,4)!=\"hmac\"){throw\"setAlgAndProvider unsupported HMAC alg: \"+k}if(i===undefined){i=KJUR.crypto.Util.DEFAULTPROVIDER[k]}this.algProv=k+\"/\"+i;var g=k.substr(4);if(\":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:\".indexOf(g)!=-1&&i==\"cryptojs\"){try{var j=KJUR.crypto.Util.CRYPTOJSMESSAGEDIGESTNAME[g];this.mac=CryptoJS.algo.HMAC.create(j,this.pass)}catch(h){throw\"setAlgAndProvider hash alg set fail hashAlg=\"+g+\"/\"+h}this.updateString=function(l){this.mac.update(l)};this.updateHex=function(l){var m=CryptoJS.enc.Hex.parse(l);this.mac.update(m)};this.doFinal=function(){var l=this.mac.finalize();return l.toString(CryptoJS.enc.Hex)};this.doFinalString=function(l){this.updateString(l);return this.doFinal()};this.doFinalHex=function(l){this.updateHex(l);return this.doFinal()}}};this.updateString=function(g){throw\"updateString(str) not supported for this alg/prov: \"+this.algProv};this.updateHex=function(g){throw\"updateHex(hex) not supported for this alg/prov: \"+this.algProv};this.doFinal=function(){throw\"digest() not supported for this alg/prov: \"+this.algProv};this.doFinalString=function(g){throw\"digestString(str) not supported for this alg/prov: \"+this.algProv};this.doFinalHex=function(g){throw\"digestHex(hex) not supported for this alg/prov: \"+this.algProv};this.setPassword=function(h){if(typeof h==\"string\"){var g=h;if(h.length%2==1||!h.match(/^[0-9A-Fa-f]+$/)){g=rstrtohex(h)}this.pass=CryptoJS.enc.Hex.parse(g);return}if(typeof h!=\"object\"){throw\"KJUR.crypto.Mac unsupported password type: \"+h}var g=null;if(h.hex!==undefined){if(h.hex.length%2!=0||!h.hex.match(/^[0-9A-Fa-f]+$/)){throw\"Mac: wrong hex password: \"+h.hex}g=h.hex}if(h.utf8!==undefined){g=utf8tohex(h.utf8)}if(h.rstr!==undefined){g=rstrtohex(h.rstr)}if(h.b64!==undefined){g=b64tohex(h.b64)}if(h.b64u!==undefined){g=b64utohex(h.b64u)}if(g==null){throw\"KJUR.crypto.Mac unsupported password type: \"+h}this.pass=CryptoJS.enc.Hex.parse(g)};if(d!==undefined){if(d.pass!==undefined){this.setPassword(d.pass)}if(d.alg!==undefined){this.algName=d.alg;if(d.prov===undefined){this.provName=KJUR.crypto.Util.DEFAULTPROVIDER[this.algName]}this.setAlgAndProvider(this.algName,this.provName)}}};KJUR.crypto.Signature=function(o){var q=null;var n=null;var r=null;var c=null;var l=null;var d=null;var k=null;var h=null;var p=null;var e=null;var b=-1;var g=null;var j=null;var a=null;var i=null;var f=null;this._setAlgNames=function(){var s=this.algName.match(/^(.+)with(.+)$/);if(s){this.mdAlgName=s[1].toLowerCase();this.pubkeyAlgName=s[2].toLowerCase();if(this.pubkeyAlgName==\"rsaandmgf1\"&&this.mdAlgName==\"sha\"){this.mdAlgName=\"sha1\"}}};this._zeroPaddingOfSignature=function(x,w){var v=\"\";var t=w/4-x.length;for(var u=0;u<t;u++){v=v+\"0\"}return v+x};this.setAlgAndProvider=function(u,t){this._setAlgNames();if(t!=\"cryptojs/jsrsa\"){throw new Error(\"provider not supported: \"+t)}if(\":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:\".indexOf(this.mdAlgName)!=-1){try{this.md=new KJUR.crypto.MessageDigest({alg:this.mdAlgName})}catch(s){throw new Error(\"setAlgAndProvider hash alg set fail alg=\"+this.mdAlgName+\"/\"+s)}this.init=function(w,x){var y=null;try{if(x===undefined){y=KEYUTIL.getKey(w)}else{y=KEYUTIL.getKey(w,x)}}catch(v){throw\"init failed:\"+v}if(y.isPrivate===true){this.prvKey=y;this.state=\"SIGN\"}else{if(y.isPublic===true){this.pubKey=y;this.state=\"VERIFY\"}else{throw\"init failed.:\"+y}}};this.updateString=function(v){this.md.updateString(v)};this.updateHex=function(v){this.md.updateHex(v)};this.sign=function(){this.sHashHex=this.md.digest();if(this.prvKey===undefined&&this.ecprvhex!==undefined&&this.eccurvename!==undefined&&KJUR.crypto.ECDSA!==undefined){this.prvKey=new KJUR.crypto.ECDSA({curve:this.eccurvename,prv:this.ecprvhex})}if(this.prvKey instanceof RSAKey&&this.pubkeyAlgName===\"rsaandmgf1\"){this.hSign=this.prvKey.signWithMessageHashPSS(this.sHashHex,this.mdAlgName,this.pssSaltLen)}else{if(this.prvKey instanceof RSAKey&&this.pubkeyAlgName===\"rsa\"){this.hSign=this.prvKey.signWithMessageHash(this.sHashHex,this.mdAlgName)}else{if(this.prvKey instanceof KJUR.crypto.ECDSA){this.hSign=this.prvKey.signWithMessageHash(this.sHashHex)}else{if(this.prvKey instanceof KJUR.crypto.DSA){this.hSign=this.prvKey.signWithMessageHash(this.sHashHex)}else{throw\"Signature: unsupported private key alg: \"+this.pubkeyAlgName}}}}return this.hSign};this.signString=function(v){this.updateString(v);return this.sign()};this.signHex=function(v){this.updateHex(v);return this.sign()};this.verify=function(v){this.sHashHex=this.md.digest();if(this.pubKey===undefined&&this.ecpubhex!==undefined&&this.eccurvename!==undefined&&KJUR.crypto.ECDSA!==undefined){this.pubKey=new KJUR.crypto.ECDSA({curve:this.eccurvename,pub:this.ecpubhex})}if(this.pubKey instanceof RSAKey&&this.pubkeyAlgName===\"rsaandmgf1\"){return this.pubKey.verifyWithMessageHashPSS(this.sHashHex,v,this.mdAlgName,this.pssSaltLen)}else{if(this.pubKey instanceof RSAKey&&this.pubkeyAlgName===\"rsa\"){return this.pubKey.verifyWithMessageHash(this.sHashHex,v)}else{if(KJUR.crypto.ECDSA!==undefined&&this.pubKey instanceof KJUR.crypto.ECDSA){return this.pubKey.verifyWithMessageHash(this.sHashHex,v)}else{if(KJUR.crypto.DSA!==undefined&&this.pubKey instanceof KJUR.crypto.DSA){return this.pubKey.verifyWithMessageHash(this.sHashHex,v)}else{throw\"Signature: unsupported public key alg: \"+this.pubkeyAlgName}}}}}}};this.init=function(s,t){throw\"init(key, pass) not supported for this alg:prov=\"+this.algProvName};this.updateString=function(s){throw\"updateString(str) not supported for this alg:prov=\"+this.algProvName};this.updateHex=function(s){throw\"updateHex(hex) not supported for this alg:prov=\"+this.algProvName};this.sign=function(){throw\"sign() not supported for this alg:prov=\"+this.algProvName};this.signString=function(s){throw\"digestString(str) not supported for this alg:prov=\"+this.algProvName};this.signHex=function(s){throw\"digestHex(hex) not supported for this alg:prov=\"+this.algProvName};this.verify=function(s){throw\"verify(hSigVal) not supported for this alg:prov=\"+this.algProvName};this.initParams=o;if(o!==undefined){if(o.alg!==undefined){this.algName=o.alg;if(o.prov===undefined){this.provName=KJUR.crypto.Util.DEFAULTPROVIDER[this.algName]}else{this.provName=o.prov}this.algProvName=this.algName+\":\"+this.provName;this.setAlgAndProvider(this.algName,this.provName);this._setAlgNames()}if(o.psssaltlen!==undefined){this.pssSaltLen=o.psssaltlen}if(o.prvkeypem!==undefined){if(o.prvkeypas!==undefined){throw\"both prvkeypem and prvkeypas parameters not supported\"}else{try{var q=KEYUTIL.getKey(o.prvkeypem);this.init(q)}catch(m){throw\"fatal error to load pem private key: \"+m}}}}};KJUR.crypto.Cipher=function(a){};KJUR.crypto.Cipher.encrypt=function(e,f,d){if(f instanceof RSAKey&&f.isPublic){var c=KJUR.crypto.Cipher.getAlgByKeyAndName(f,d);if(c===\"RSA\"){return f.encrypt(e)}if(c===\"RSAOAEP\"){return f.encryptOAEP(e,\"sha1\")}var b=c.match(/^RSAOAEP(\\d+)$/);if(b!==null){return f.encryptOAEP(e,\"sha\"+b[1])}throw\"Cipher.encrypt: unsupported algorithm for RSAKey: \"+d}else{throw\"Cipher.encrypt: unsupported key or algorithm\"}};KJUR.crypto.Cipher.decrypt=function(e,f,d){if(f instanceof RSAKey&&f.isPrivate){var c=KJUR.crypto.Cipher.getAlgByKeyAndName(f,d);if(c===\"RSA\"){return f.decrypt(e)}if(c===\"RSAOAEP\"){return f.decryptOAEP(e,\"sha1\")}var b=c.match(/^RSAOAEP(\\d+)$/);if(b!==null){return f.decryptOAEP(e,\"sha\"+b[1])}throw\"Cipher.decrypt: unsupported algorithm for RSAKey: \"+d}else{throw\"Cipher.decrypt: unsupported key or algorithm\"}};KJUR.crypto.Cipher.getAlgByKeyAndName=function(b,a){if(b instanceof RSAKey){if(\":RSA:RSAOAEP:RSAOAEP224:RSAOAEP256:RSAOAEP384:RSAOAEP512:\".indexOf(a)!=-1){return a}if(a===null||a===undefined){return\"RSA\"}throw\"getAlgByKeyAndName: not supported algorithm name for RSAKey: \"+a}throw\"getAlgByKeyAndName: not supported algorithm name: \"+a};KJUR.crypto.OID=new function(){this.oidhex2name={\"2a864886f70d010101\":\"rsaEncryption\",\"2a8648ce3d0201\":\"ecPublicKey\",\"2a8648ce380401\":\"dsa\",\"2a8648ce3d030107\":\"secp256r1\",\"2b8104001f\":\"secp192k1\",\"2b81040021\":\"secp224r1\",\"2b8104000a\":\"secp256k1\",\"2b81040022\":\"secp384r1\",\"2b81040023\":\"secp521r1\",\"2a8648ce380403\":\"SHA1withDSA\",\"608648016503040301\":\"SHA224withDSA\",\"608648016503040302\":\"SHA256withDSA\",}};\nif(typeof KJUR==\"undefined\"||!KJUR){KJUR={}}if(typeof KJUR.crypto==\"undefined\"||!KJUR.crypto){KJUR.crypto={}}KJUR.crypto.ECDSA=function(e){var g=\"secp256r1\";var p=null;var b=null;var i=null;var j=Error,f=BigInteger,h=ECPointFp,m=KJUR.crypto.ECDSA,c=KJUR.crypto.ECParameterDB,d=m.getName,q=ASN1HEX,n=q.getVbyListEx,k=q.isASN1HEX;var a=new SecureRandom();var o=null;this.type=\"EC\";this.isPrivate=false;this.isPublic=false;function l(x,t,w,s){var r=Math.max(t.bitLength(),s.bitLength());var y=x.add2D(w);var v=x.curve.getInfinity();for(var u=r-1;u>=0;--u){v=v.twice2D();v.z=f.ONE;if(t.testBit(u)){if(s.testBit(u)){v=v.add2D(y)}else{v=v.add2D(x)}}else{if(s.testBit(u)){v=v.add2D(w)}}}return v}this.getBigRandom=function(r){return new f(r.bitLength(),a).mod(r.subtract(f.ONE)).add(f.ONE)};this.setNamedCurve=function(r){this.ecparams=c.getByName(r);this.prvKeyHex=null;this.pubKeyHex=null;this.curveName=r};this.setPrivateKeyHex=function(r){this.isPrivate=true;this.prvKeyHex=r};this.setPublicKeyHex=function(r){this.isPublic=true;this.pubKeyHex=r};this.getPublicKeyXYHex=function(){var t=this.pubKeyHex;if(t.substr(0,2)!==\"04\"){throw\"this method supports uncompressed format(04) only\"}var s=this.ecparams.keycharlen;if(t.length!==2+s*2){throw\"malformed public key hex length\"}var r={};r.x=t.substr(2,s);r.y=t.substr(2+s);return r};this.getShortNISTPCurveName=function(){var r=this.curveName;if(r===\"secp256r1\"||r===\"NIST P-256\"||r===\"P-256\"||r===\"prime256v1\"){return\"P-256\"}if(r===\"secp384r1\"||r===\"NIST P-384\"||r===\"P-384\"){return\"P-384\"}if(r===\"secp521r1\"||r===\"NIST P-521\"||r===\"P-521\"){return\"P-521\"}return null};this.generateKeyPairHex=function(){var s=this.ecparams.n;var u=this.getBigRandom(s);var r=this.ecparams.keycharlen;var t=(\"0000000000\"+u.toString(16)).slice(-r);this.setPrivateKeyHex(t);var v=this.generatePublicKeyHex();return{ecprvhex:t,ecpubhex:v}};this.generatePublicKeyHex=function(){var u=new f(this.prvKeyHex,16);var w=this.ecparams.G.multiply(u);var t=w.getX().toBigInteger();var s=w.getY().toBigInteger();var r=this.ecparams.keycharlen;var y=(\"0000000000\"+t.toString(16)).slice(-r);var v=(\"0000000000\"+s.toString(16)).slice(-r);var x=\"04\"+y+v;this.setPublicKeyHex(x);return x};this.signWithMessageHash=function(r){return this.signHex(r,this.prvKeyHex)};this.signHex=function(x,u){var A=new f(u,16);var v=this.ecparams.n;var z=new f(x.substring(0,this.ecparams.keycharlen),16);do{var w=this.getBigRandom(v);var B=this.ecparams.G;var y=B.multiply(w);var t=y.getX().toBigInteger().mod(v)}while(t.compareTo(f.ZERO)<=0);var C=w.modInverse(v).multiply(z.add(A.multiply(t))).mod(v);return m.biRSSigToASN1Sig(t,C)};this.sign=function(w,B){var z=B;var u=this.ecparams.n;var y=f.fromByteArrayUnsigned(w);do{var v=this.getBigRandom(u);var A=this.ecparams.G;var x=A.multiply(v);var t=x.getX().toBigInteger().mod(u)}while(t.compareTo(BigInteger.ZERO)<=0);var C=v.modInverse(u).multiply(y.add(z.multiply(t))).mod(u);return this.serializeSig(t,C)};this.verifyWithMessageHash=function(s,r){return this.verifyHex(s,r,this.pubKeyHex)};this.verifyHex=function(v,y,u){try{var t,B;var w=m.parseSigHex(y);t=w.r;B=w.s;var x=h.decodeFromHex(this.ecparams.curve,u);var z=new f(v.substring(0,this.ecparams.keycharlen),16);return this.verifyRaw(z,t,B,x)}catch(A){return false}};this.verify=function(z,A,u){var w,t;if(Bitcoin.Util.isArray(A)){var y=this.parseSig(A);w=y.r;t=y.s}else{if(\"object\"===typeof A&&A.r&&A.s){w=A.r;t=A.s}else{throw\"Invalid value for signature\"}}var v;if(u instanceof ECPointFp){v=u}else{if(Bitcoin.Util.isArray(u)){v=h.decodeFrom(this.ecparams.curve,u)}else{throw\"Invalid format for pubkey value, must be byte array or ECPointFp\"}}var x=f.fromByteArrayUnsigned(z);return this.verifyRaw(x,w,t,v)};this.verifyRaw=function(z,t,E,y){var x=this.ecparams.n;var D=this.ecparams.G;if(t.compareTo(f.ONE)<0||t.compareTo(x)>=0){return false}if(E.compareTo(f.ONE)<0||E.compareTo(x)>=0){return false}var A=E.modInverse(x);var w=z.multiply(A).mod(x);var u=t.multiply(A).mod(x);var B=D.multiply(w).add(y.multiply(u));var C=B.getX().toBigInteger().mod(x);return C.equals(t)};this.serializeSig=function(v,u){var w=v.toByteArraySigned();var t=u.toByteArraySigned();var x=[];x.push(2);x.push(w.length);x=x.concat(w);x.push(2);x.push(t.length);x=x.concat(t);x.unshift(x.length);x.unshift(48);return x};this.parseSig=function(y){var x;if(y[0]!=48){throw new Error(\"Signature not a valid DERSequence\")}x=2;if(y[x]!=2){throw new Error(\"First element in signature must be a DERInteger\")}var w=y.slice(x+2,x+2+y[x+1]);x+=2+y[x+1];if(y[x]!=2){throw new Error(\"Second element in signature must be a DERInteger\")}var t=y.slice(x+2,x+2+y[x+1]);x+=2+y[x+1];var v=f.fromByteArrayUnsigned(w);var u=f.fromByteArrayUnsigned(t);return{r:v,s:u}};this.parseSigCompact=function(w){if(w.length!==65){throw\"Signature has the wrong length\"}var t=w[0]-27;if(t<0||t>7){throw\"Invalid signature type\"}var x=this.ecparams.n;var v=f.fromByteArrayUnsigned(w.slice(1,33)).mod(x);var u=f.fromByteArrayUnsigned(w.slice(33,65)).mod(x);return{r:v,s:u,i:t}};this.readPKCS5PrvKeyHex=function(u){if(k(u)===false){throw new Error(\"not ASN.1 hex string\")}var r,t,v;try{r=n(u,0,[\"[0]\",0],\"06\");t=n(u,0,[1],\"04\");try{v=n(u,0,[\"[1]\",0],\"03\")}catch(s){}}catch(s){throw new Error(\"malformed PKCS#1/5 plain ECC private key\")}this.curveName=d(r);if(this.curveName===undefined){throw\"unsupported curve name\"}this.setNamedCurve(this.curveName);this.setPublicKeyHex(v);this.setPrivateKeyHex(t);this.isPublic=false};this.readPKCS8PrvKeyHex=function(v){if(k(v)===false){throw new j(\"not ASN.1 hex string\")}var t,r,u,w;try{t=n(v,0,[1,0],\"06\");r=n(v,0,[1,1],\"06\");u=n(v,0,[2,0,1],\"04\");try{w=n(v,0,[2,0,\"[1]\",0],\"03\")}catch(s){}}catch(s){throw new j(\"malformed PKCS#8 plain ECC private key\")}this.curveName=d(r);if(this.curveName===undefined){throw new j(\"unsupported curve name\")}this.setNamedCurve(this.curveName);this.setPublicKeyHex(w);this.setPrivateKeyHex(u);this.isPublic=false};this.readPKCS8PubKeyHex=function(u){if(k(u)===false){throw new j(\"not ASN.1 hex string\")}var t,r,v;try{t=n(u,0,[0,0],\"06\");r=n(u,0,[0,1],\"06\");v=n(u,0,[1],\"03\")}catch(s){throw new j(\"malformed PKCS#8 ECC public key\")}this.curveName=d(r);if(this.curveName===null){throw new j(\"unsupported curve name\")}this.setNamedCurve(this.curveName);this.setPublicKeyHex(v)};this.readCertPubKeyHex=function(t,v){if(k(t)===false){throw new j(\"not ASN.1 hex string\")}var r,u;try{r=n(t,0,[0,5,0,1],\"06\");u=n(t,0,[0,5,1],\"03\")}catch(s){throw new j(\"malformed X.509 certificate ECC public key\")}this.curveName=d(r);if(this.curveName===null){throw new j(\"unsupported curve name\")}this.setNamedCurve(this.curveName);this.setPublicKeyHex(u)};if(e!==undefined){if(e.curve!==undefined){this.curveName=e.curve}}if(this.curveName===undefined){this.curveName=g}this.setNamedCurve(this.curveName);if(e!==undefined){if(e.prv!==undefined){this.setPrivateKeyHex(e.prv)}if(e.pub!==undefined){this.setPublicKeyHex(e.pub)}}};KJUR.crypto.ECDSA.parseSigHex=function(a){var b=KJUR.crypto.ECDSA.parseSigHexInHexRS(a);var d=new BigInteger(b.r,16);var c=new BigInteger(b.s,16);return{r:d,s:c}};KJUR.crypto.ECDSA.parseSigHexInHexRS=function(f){var j=ASN1HEX,i=j.getChildIdx,g=j.getV;j.checkStrictDER(f,0);if(f.substr(0,2)!=\"30\"){throw new Error(\"signature is not a ASN.1 sequence\")}var h=i(f,0);if(h.length!=2){throw new Error(\"signature shall have two elements\")}var e=h[0];var d=h[1];if(f.substr(e,2)!=\"02\"){throw new Error(\"1st item not ASN.1 integer\")}if(f.substr(d,2)!=\"02\"){throw new Error(\"2nd item not ASN.1 integer\")}var c=g(f,e);var b=g(f,d);return{r:c,s:b}};KJUR.crypto.ECDSA.asn1SigToConcatSig=function(d){var e=KJUR.crypto.ECDSA.parseSigHexInHexRS(d);var b=e.r;var a=e.s;if(b.length>=130&&b.length<=134){if(b.length%2!=0){throw Error(\"unknown ECDSA sig r length error\")}if(a.length%2!=0){throw Error(\"unknown ECDSA sig s length error\")}if(b.substr(0,2)==\"00\"){b=b.substr(2)}if(a.substr(0,2)==\"00\"){a=a.substr(2)}var c=Math.max(b.length,a.length);b=(\"000000\"+b).slice(-c);a=(\"000000\"+a).slice(-c);return b+a}if(b.substr(0,2)==\"00\"&&(b.length%32)==2){b=b.substr(2)}if(a.substr(0,2)==\"00\"&&(a.length%32)==2){a=a.substr(2)}if((b.length%32)==30){b=\"00\"+b}if((a.length%32)==30){a=\"00\"+a}if(b.length%32!=0){throw Error(\"unknown ECDSA sig r length error\")}if(a.length%32!=0){throw Error(\"unknown ECDSA sig s length error\")}return b+a};KJUR.crypto.ECDSA.concatSigToASN1Sig=function(a){if(a.length%4!=0){throw Error(\"unknown ECDSA concatinated r-s sig length error\")}var c=a.substr(0,a.length/2);var b=a.substr(a.length/2);return KJUR.crypto.ECDSA.hexRSSigToASN1Sig(c,b)};KJUR.crypto.ECDSA.hexRSSigToASN1Sig=function(b,a){var d=new BigInteger(b,16);var c=new BigInteger(a,16);return KJUR.crypto.ECDSA.biRSSigToASN1Sig(d,c)};KJUR.crypto.ECDSA.biRSSigToASN1Sig=function(f,d){var c=KJUR.asn1;var b=new c.DERInteger({bigint:f});var a=new c.DERInteger({bigint:d});var e=new c.DERSequence({array:[b,a]});return e.tohex()};KJUR.crypto.ECDSA.getName=function(a){if(a===\"2b8104001f\"){return\"secp192k1\"}if(a===\"2a8648ce3d030107\"){return\"secp256r1\"}if(a===\"2b8104000a\"){return\"secp256k1\"}if(a===\"2b81040021\"){return\"secp224r1\"}if(a===\"2b81040022\"){return\"secp384r1\"}if(a===\"2b81040023\"){return\"secp521r1\"}if(\"|secp256r1|NIST P-256|P-256|prime256v1|\".indexOf(a)!==-1){return\"secp256r1\"}if(\"|secp256k1|\".indexOf(a)!==-1){return\"secp256k1\"}if(\"|secp224r1|NIST P-224|P-224|\".indexOf(a)!==-1){return\"secp224r1\"}if(\"|secp384r1|NIST P-384|P-384|\".indexOf(a)!==-1){return\"secp384r1\"}if(\"|secp521r1|NIST P-521|P-521|\".indexOf(a)!==-1){return\"secp521r1\"}return null};\nif(typeof KJUR==\"undefined\"||!KJUR){KJUR={}}if(typeof KJUR.crypto==\"undefined\"||!KJUR.crypto){KJUR.crypto={}}KJUR.crypto.ECParameterDB=new function(){var b={};var c={};function a(d){return new BigInteger(d,16)}this.getByName=function(e){var d=e;if(typeof c[d]!=\"undefined\"){d=c[e]}if(typeof b[d]!=\"undefined\"){return b[d]}throw\"unregistered EC curve name: \"+d};this.regist=function(A,l,o,g,m,e,j,f,k,u,d,x){b[A]={};var s=a(o);var z=a(g);var y=a(m);var t=a(e);var w=a(j);var r=new ECCurveFp(s,z,y);var q=r.decodePointHex(\"04\"+f+k);b[A][\"name\"]=A;b[A][\"keylen\"]=l;b[A][\"keycharlen\"]=Math.ceil(l/8)*2;b[A][\"curve\"]=r;b[A][\"G\"]=q;b[A][\"n\"]=t;b[A][\"h\"]=w;b[A][\"oid\"]=d;b[A][\"info\"]=x;for(var v=0;v<u.length;v++){c[u[v]]=A}}};KJUR.crypto.ECParameterDB.regist(\"secp128r1\",128,\"FFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFF\",\"FFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFC\",\"E87579C11079F43DD824993C2CEE5ED3\",\"FFFFFFFE0000000075A30D1B9038A115\",\"1\",\"161FF7528B899B2D0C28607CA52C5B86\",\"CF5AC8395BAFEB13C02DA292DDED7A83\",[],\"\",\"secp128r1 : SECG curve over a 128 bit prime field\");KJUR.crypto.ECParameterDB.regist(\"secp160k1\",160,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFAC73\",\"0\",\"7\",\"0100000000000000000001B8FA16DFAB9ACA16B6B3\",\"1\",\"3B4C382CE37AA192A4019E763036F4F5DD4D7EBB\",\"938CF935318FDCED6BC28286531733C3F03C4FEE\",[],\"\",\"secp160k1 : SECG curve over a 160 bit prime field\");KJUR.crypto.ECParameterDB.regist(\"secp160r1\",160,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFF\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFC\",\"1C97BEFC54BD7A8B65ACF89F81D4D4ADC565FA45\",\"0100000000000000000001F4C8F927AED3CA752257\",\"1\",\"4A96B5688EF573284664698968C38BB913CBFC82\",\"23A628553168947D59DCC912042351377AC5FB32\",[],\"\",\"secp160r1 : SECG curve over a 160 bit prime field\");KJUR.crypto.ECParameterDB.regist(\"secp192k1\",192,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFEE37\",\"0\",\"3\",\"FFFFFFFFFFFFFFFFFFFFFFFE26F2FC170F69466A74DEFD8D\",\"1\",\"DB4FF10EC057E9AE26B07D0280B7F4341DA5D1B1EAE06C7D\",\"9B2F2F6D9C5628A7844163D015BE86344082AA88D95E2F9D\",[]);KJUR.crypto.ECParameterDB.regist(\"secp192r1\",192,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFC\",\"64210519E59C80E70FA7E9AB72243049FEB8DEECC146B9B1\",\"FFFFFFFFFFFFFFFFFFFFFFFF99DEF836146BC9B1B4D22831\",\"1\",\"188DA80EB03090F67CBF20EB43A18800F4FF0AFD82FF1012\",\"07192B95FFC8DA78631011ED6B24CDD573F977A11E794811\",[]);KJUR.crypto.ECParameterDB.regist(\"secp224r1\",224,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000001\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFE\",\"B4050A850C04B3ABF54132565044B0B7D7BFD8BA270B39432355FFB4\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFF16A2E0B8F03E13DD29455C5C2A3D\",\"1\",\"B70E0CBD6BB4BF7F321390B94A03C1D356C21122343280D6115C1D21\",\"BD376388B5F723FB4C22DFE6CD4375A05A07476444D5819985007E34\",[]);KJUR.crypto.ECParameterDB.regist(\"secp256k1\",256,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F\",\"0\",\"7\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141\",\"1\",\"79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798\",\"483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8\",[]);KJUR.crypto.ECParameterDB.regist(\"secp256r1\",256,\"FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF\",\"FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC\",\"5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B\",\"FFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551\",\"1\",\"6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296\",\"4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5\",[\"NIST P-256\",\"P-256\",\"prime256v1\"]);KJUR.crypto.ECParameterDB.regist(\"secp384r1\",384,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF0000000000000000FFFFFFFF\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF0000000000000000FFFFFFFC\",\"B3312FA7E23EE7E4988E056BE3F82D19181D9C6EFE8141120314088F5013875AC656398D8A2ED19D2A85C8EDD3EC2AEF\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC7634D81F4372DDF581A0DB248B0A77AECEC196ACCC52973\",\"1\",\"AA87CA22BE8B05378EB1C71EF320AD746E1D3B628BA79B9859F741E082542A385502F25DBF55296C3A545E3872760AB7\",\"3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5f\",[\"NIST P-384\",\"P-384\"]);KJUR.crypto.ECParameterDB.regist(\"secp521r1\",521,\"1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\",\"1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC\",\"051953EB9618E1C9A1F929A21A0B68540EEA2DA725B99B315F3B8B489918EF109E156193951EC7E937B1652C0BD3BB1BF073573DF883D2C34F1EF451FD46B503F00\",\"1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA51868783BF2F966B7FCC0148F709A5D03BB5C9B8899C47AEBB6FB71E91386409\",\"1\",\"00C6858E06B70404E9CD9E3ECB662395B4429C648139053FB521F828AF606B4D3DBAA14B5E77EFE75928FE1DC127A2FFA8DE3348B3C1856A429BF97E7E31C2E5BD66\",\"011839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650\",[\"NIST P-521\",\"P-521\"]);\nif(typeof KJUR==\"undefined\"||!KJUR){KJUR={}}if(typeof KJUR.crypto==\"undefined\"||!KJUR.crypto){KJUR.crypto={}}KJUR.crypto.DSA=function(){var b=ASN1HEX,e=b.getVbyList,d=b.getVbyListEx,a=b.isASN1HEX,c=BigInteger;this.p=null;this.q=null;this.g=null;this.y=null;this.x=null;this.type=\"DSA\";this.isPrivate=false;this.isPublic=false;this.setPrivate=function(j,i,h,k,f){this.isPrivate=true;this.p=j;this.q=i;this.g=h;this.y=k;this.x=f};this.setPrivateHex=function(i,g,k,n,o){var h,f,j,l,m;h=new BigInteger(i,16);f=new BigInteger(g,16);j=new BigInteger(k,16);if(typeof n===\"string\"&&n.length>1){l=new BigInteger(n,16)}else{l=null}m=new BigInteger(o,16);this.setPrivate(h,f,j,l,m)};this.setPublic=function(i,h,f,j){this.isPublic=true;this.p=i;this.q=h;this.g=f;this.y=j;this.x=null};this.setPublicHex=function(k,j,i,l){var g,f,m,h;g=new BigInteger(k,16);f=new BigInteger(j,16);m=new BigInteger(i,16);h=new BigInteger(l,16);this.setPublic(g,f,m,h)};this.signWithMessageHash=function(j){var i=this.p;var h=this.q;var m=this.g;var o=this.y;var t=this.x;var l=KJUR.crypto.Util.getRandomBigIntegerMinToMax(BigInteger.ONE.add(BigInteger.ONE),h.subtract(BigInteger.ONE));var u=j.substr(0,h.bitLength()/4);var n=new BigInteger(u,16);var f=(m.modPow(l,i)).mod(h);var w=(l.modInverse(h).multiply(n.add(t.multiply(f)))).mod(h);var v=KJUR.asn1.ASN1Util.jsonToASN1HEX({seq:[{\"int\":{bigint:f}},{\"int\":{bigint:w}}]});return v};this.verifyWithMessageHash=function(m,l){var j=this.p;var h=this.q;var o=this.g;var u=this.y;var n=this.parseASN1Signature(l);var f=n[0];var C=n[1];var B=m.substr(0,h.bitLength()/4);var t=new BigInteger(B,16);if(BigInteger.ZERO.compareTo(f)>0||f.compareTo(h)>0){throw\"invalid DSA signature\"}if(BigInteger.ZERO.compareTo(C)>=0||C.compareTo(h)>0){throw\"invalid DSA signature\"}var x=C.modInverse(h);var k=t.multiply(x).mod(h);var i=f.multiply(x).mod(h);var A=o.modPow(k,j).multiply(u.modPow(i,j)).mod(j).mod(h);return A.compareTo(f)==0};this.parseASN1Signature=function(f){try{var i=new c(d(f,0,[0],\"02\"),16);var h=new c(d(f,0,[1],\"02\"),16);return[i,h]}catch(g){throw new Error(\"malformed ASN.1 DSA signature\")}};this.readPKCS5PrvKeyHex=function(j){var k,i,g,l,m;if(a(j)===false){throw new Error(\"not ASN.1 hex string\")}try{k=d(j,0,[1],\"02\");i=d(j,0,[2],\"02\");g=d(j,0,[3],\"02\");l=d(j,0,[4],\"02\");m=d(j,0,[5],\"02\")}catch(f){throw new Error(\"malformed PKCS#1/5 plain DSA private key\")}this.setPrivateHex(k,i,g,l,m)};this.readPKCS8PrvKeyHex=function(j){var k,i,g,l;if(a(j)===false){throw new Error(\"not ASN.1 hex string\")}try{k=d(j,0,[1,1,0],\"02\");i=d(j,0,[1,1,1],\"02\");g=d(j,0,[1,1,2],\"02\");l=d(j,0,[2,0],\"02\")}catch(f){throw new Error(\"malformed PKCS#8 plain DSA private key\")}this.setPrivateHex(k,i,g,null,l)};this.readPKCS8PubKeyHex=function(j){var k,i,g,l;if(a(j)===false){throw new Error(\"not ASN.1 hex string\")}try{k=d(j,0,[0,1,0],\"02\");i=d(j,0,[0,1,1],\"02\");g=d(j,0,[0,1,2],\"02\");l=d(j,0,[1,0],\"02\")}catch(f){throw new Error(\"malformed PKCS#8 DSA public key\")}this.setPublicHex(k,i,g,l)};this.readCertPubKeyHex=function(j,m){var k,i,g,l;if(a(j)===false){throw new Error(\"not ASN.1 hex string\")}try{k=d(j,0,[0,5,0,1,0],\"02\");i=d(j,0,[0,5,0,1,1],\"02\");g=d(j,0,[0,5,0,1,2],\"02\");l=d(j,0,[0,5,1,0],\"02\")}catch(f){throw new Error(\"malformed X.509 certificate DSA public key\")}this.setPublicHex(k,i,g,l)}};\nvar KEYUTIL=function(){var d=function(p,r,q){return k(CryptoJS.AES,p,r,q)};var e=function(p,r,q){return k(CryptoJS.TripleDES,p,r,q)};var a=function(p,r,q){return k(CryptoJS.DES,p,r,q)};var k=function(s,x,u,q){var r=CryptoJS.enc.Hex.parse(x);var w=CryptoJS.enc.Hex.parse(u);var p=CryptoJS.enc.Hex.parse(q);var t={};t.key=w;t.iv=p;t.ciphertext=r;var v=s.decrypt(t,w,{iv:p});return CryptoJS.enc.Hex.stringify(v)};var l=function(p,r,q){return g(CryptoJS.AES,p,r,q)};var o=function(p,r,q){return g(CryptoJS.TripleDES,p,r,q)};var f=function(p,r,q){return g(CryptoJS.DES,p,r,q)};var g=function(t,y,v,q){var s=CryptoJS.enc.Hex.parse(y);var x=CryptoJS.enc.Hex.parse(v);var p=CryptoJS.enc.Hex.parse(q);var w=t.encrypt(s,x,{iv:p});var r=CryptoJS.enc.Hex.parse(w.toString());var u=CryptoJS.enc.Base64.stringify(r);return u};var i={\"AES-256-CBC\":{proc:d,eproc:l,keylen:32,ivlen:16},\"AES-192-CBC\":{proc:d,eproc:l,keylen:24,ivlen:16},\"AES-128-CBC\":{proc:d,eproc:l,keylen:16,ivlen:16},\"DES-EDE3-CBC\":{proc:e,eproc:o,keylen:24,ivlen:8},\"DES-CBC\":{proc:a,eproc:f,keylen:8,ivlen:8}};var c=function(p){return i[p][\"proc\"]};var m=function(p){var r=CryptoJS.lib.WordArray.random(p);var q=CryptoJS.enc.Hex.stringify(r);return q};var n=function(v){var w={};var q=v.match(new RegExp(\"DEK-Info: ([^,]+),([0-9A-Fa-f]+)\",\"m\"));if(q){w.cipher=q[1];w.ivsalt=q[2]}var p=v.match(new RegExp(\"-----BEGIN ([A-Z]+) PRIVATE KEY-----\"));if(p){w.type=p[1]}var u=-1;var x=0;if(v.indexOf(\"\\r\\n\\r\\n\")!=-1){u=v.indexOf(\"\\r\\n\\r\\n\");x=2}if(v.indexOf(\"\\n\\n\")!=-1){u=v.indexOf(\"\\n\\n\");x=1}var t=v.indexOf(\"-----END\");if(u!=-1&&t!=-1){var r=v.substring(u+x*2,t-x);r=r.replace(/\\s+/g,\"\");w.data=r}return w};var j=function(q,y,p){var v=p.substring(0,16);var t=CryptoJS.enc.Hex.parse(v);var r=CryptoJS.enc.Utf8.parse(y);var u=i[q][\"keylen\"]+i[q][\"ivlen\"];var x=\"\";var w=null;for(;;){var s=CryptoJS.algo.MD5.create();if(w!=null){s.update(w)}s.update(r);s.update(t);w=s.finalize();x=x+CryptoJS.enc.Hex.stringify(w);if(x.length>=u*2){break}}var z={};z.keyhex=x.substr(0,i[q][\"keylen\"]*2);z.ivhex=x.substr(i[q][\"keylen\"]*2,i[q][\"ivlen\"]*2);return z};var b=function(p,v,r,w){var s=CryptoJS.enc.Base64.parse(p);var q=CryptoJS.enc.Hex.stringify(s);var u=i[v][\"proc\"];var t=u(q,r,w);return t};var h=function(p,s,q,u){var r=i[s][\"eproc\"];var t=r(p,q,u);return t};return{version:\"1.0.0\",parsePKCS5PEM:function(p){return n(p)},getKeyAndUnusedIvByPasscodeAndIvsalt:function(q,p,r){return j(q,p,r)},decryptKeyB64:function(p,r,q,s){return b(p,r,q,s)},getDecryptedKeyHex:function(y,x){var q=n(y);var t=q.type;var r=q.cipher;var p=q.ivsalt;var s=q.data;var w=j(r,x,p);var v=w.keyhex;var u=b(s,r,v,p);return u},getEncryptedPKCS5PEMFromPrvKeyHex:function(x,s,A,t,r){var p=\"\";if(typeof t==\"undefined\"||t==null){t=\"AES-256-CBC\"}if(typeof i[t]==\"undefined\"){throw new Error(\"KEYUTIL unsupported algorithm: \"+t)}if(typeof r==\"undefined\"||r==null){var v=i[t][\"ivlen\"];var u=m(v);r=u.toUpperCase()}var z=j(t,A,r);var y=z.keyhex;var w=h(s,t,y,r);var q=w.replace(/(.{64})/g,\"$1\\r\\n\");var p=\"-----BEGIN \"+x+\" PRIVATE KEY-----\\r\\n\";p+=\"Proc-Type: 4,ENCRYPTED\\r\\n\";p+=\"DEK-Info: \"+t+\",\"+r+\"\\r\\n\";p+=\"\\r\\n\";p+=q;p+=\"\\r\\n-----END \"+x+\" PRIVATE KEY-----\\r\\n\";return p},parseHexOfEncryptedPKCS8:function(y){var B=ASN1HEX;var z=B.getChildIdx;var w=B.getV;var t={};var r=z(y,0);if(r.length!=2){throw new Error(\"malformed format: SEQUENCE(0).items != 2: \"+r.length)}t.ciphertext=w(y,r[1]);var A=z(y,r[0]);if(A.length!=2){throw new Error(\"malformed format: SEQUENCE(0.0).items != 2: \"+A.length)}if(w(y,A[0])!=\"2a864886f70d01050d\"){throw new Error(\"this only supports pkcs5PBES2\")}var p=z(y,A[1]);if(A.length!=2){throw new Error(\"malformed format: SEQUENCE(0.0.1).items != 2: \"+p.length)}var q=z(y,p[1]);if(q.length!=2){throw new Error(\"malformed format: SEQUENCE(0.0.1.1).items != 2: \"+q.length)}if(w(y,q[0])!=\"2a864886f70d0307\"){throw\"this only supports TripleDES\"}t.encryptionSchemeAlg=\"TripleDES\";t.encryptionSchemeIV=w(y,q[1]);var s=z(y,p[0]);if(s.length!=2){throw new Error(\"malformed format: SEQUENCE(0.0.1.0).items != 2: \"+s.length)}if(w(y,s[0])!=\"2a864886f70d01050c\"){throw new Error(\"this only supports pkcs5PBKDF2\")}var x=z(y,s[1]);if(x.length<2){throw new Error(\"malformed format: SEQUENCE(0.0.1.0.1).items < 2: \"+x.length)}t.pbkdf2Salt=w(y,x[0]);var u=w(y,x[1]);try{t.pbkdf2Iter=parseInt(u,16)}catch(v){throw new Error(\"malformed format pbkdf2Iter: \"+u)}return t},getPBKDF2KeyHexFromParam:function(u,p){var t=CryptoJS.enc.Hex.parse(u.pbkdf2Salt);var q=u.pbkdf2Iter;var s=CryptoJS.PBKDF2(p,t,{keySize:192/32,iterations:q});var r=CryptoJS.enc.Hex.stringify(s);return r},_getPlainPKCS8HexFromEncryptedPKCS8PEM:function(x,y){var r=pemtohex(x,\"ENCRYPTED PRIVATE KEY\");var p=this.parseHexOfEncryptedPKCS8(r);var u=KEYUTIL.getPBKDF2KeyHexFromParam(p,y);var v={};v.ciphertext=CryptoJS.enc.Hex.parse(p.ciphertext);var t=CryptoJS.enc.Hex.parse(u);var s=CryptoJS.enc.Hex.parse(p.encryptionSchemeIV);var w=CryptoJS.TripleDES.decrypt(v,t,{iv:s});var q=CryptoJS.enc.Hex.stringify(w);return q},getKeyFromEncryptedPKCS8PEM:function(s,q){var p=this._getPlainPKCS8HexFromEncryptedPKCS8PEM(s,q);var r=this.getKeyFromPlainPrivatePKCS8Hex(p);return r},parsePlainPrivatePKCS8Hex:function(s){var v=ASN1HEX;var u=v.getChildIdx;var t=v.getV;var q={};q.algparam=null;if(s.substr(0,2)!=\"30\"){throw new Error(\"malformed plain PKCS8 private key(code:001)\")}var r=u(s,0);if(r.length<3){throw new Error(\"malformed plain PKCS8 private key(code:002)\")}if(s.substr(r[1],2)!=\"30\"){throw new Error(\"malformed PKCS8 private key(code:003)\")}var p=u(s,r[1]);if(p.length!=2){throw new Error(\"malformed PKCS8 private key(code:004)\")}if(s.substr(p[0],2)!=\"06\"){throw new Error(\"malformed PKCS8 private key(code:005)\")}q.algoid=t(s,p[0]);if(s.substr(p[1],2)==\"06\"){q.algparam=t(s,p[1])}if(s.substr(r[2],2)!=\"04\"){throw new Error(\"malformed PKCS8 private key(code:006)\")}q.keyidx=v.getVidx(s,r[2]);return q},getKeyFromPlainPrivatePKCS8PEM:function(q){var p=pemtohex(q,\"PRIVATE KEY\");var r=this.getKeyFromPlainPrivatePKCS8Hex(p);return r},getKeyFromPlainPrivatePKCS8Hex:function(p){var q=this.parsePlainPrivatePKCS8Hex(p);var r;if(q.algoid==\"2a864886f70d010101\"){r=new RSAKey()}else{if(q.algoid==\"2a8648ce380401\"){r=new KJUR.crypto.DSA()}else{if(q.algoid==\"2a8648ce3d0201\"){r=new KJUR.crypto.ECDSA()}else{throw new Error(\"unsupported private key algorithm\")}}}r.readPKCS8PrvKeyHex(p);return r},_getKeyFromPublicPKCS8Hex:function(q){var p;var r=ASN1HEX.getVbyList(q,0,[0,0],\"06\");if(r===\"2a864886f70d010101\"){p=new RSAKey()}else{if(r===\"2a8648ce380401\"){p=new KJUR.crypto.DSA()}else{if(r===\"2a8648ce3d0201\"){p=new KJUR.crypto.ECDSA()}else{throw new Error(\"unsupported PKCS#8 public key hex\")}}}p.readPKCS8PubKeyHex(q);return p},parsePublicRawRSAKeyHex:function(r){var u=ASN1HEX;var t=u.getChildIdx;var s=u.getV;var p={};if(r.substr(0,2)!=\"30\"){throw new Error(\"malformed RSA key(code:001)\")}var q=t(r,0);if(q.length!=2){throw new Error(\"malformed RSA key(code:002)\")}if(r.substr(q[0],2)!=\"02\"){throw new Error(\"malformed RSA key(code:003)\")}p.n=s(r,q[0]);if(r.substr(q[1],2)!=\"02\"){throw new Error(\"malformed RSA key(code:004)\")}p.e=s(r,q[1]);return p},parsePublicPKCS8Hex:function(t){var v=ASN1HEX;var u=v.getChildIdx;var s=v.getV;var q={};q.algparam=null;var r=u(t,0);if(r.length!=2){throw new Error(\"outer DERSequence shall have 2 elements: \"+r.length)}var w=r[0];if(t.substr(w,2)!=\"30\"){throw new Error(\"malformed PKCS8 public key(code:001)\")}var p=u(t,w);if(p.length!=2){throw new Error(\"malformed PKCS8 public key(code:002)\")}if(t.substr(p[0],2)!=\"06\"){throw new Error(\"malformed PKCS8 public key(code:003)\")}q.algoid=s(t,p[0]);if(t.substr(p[1],2)==\"06\"){q.algparam=s(t,p[1])}else{if(t.substr(p[1],2)==\"30\"){q.algparam={};q.algparam.p=v.getVbyList(t,p[1],[0],\"02\");q.algparam.q=v.getVbyList(t,p[1],[1],\"02\");q.algparam.g=v.getVbyList(t,p[1],[2],\"02\")}}if(t.substr(r[1],2)!=\"03\"){throw new Error(\"malformed PKCS8 public key(code:004)\")}q.key=s(t,r[1]).substr(2);return q},}}();KEYUTIL.getKey=function(l,k,n){var G=ASN1HEX,L=G.getChildIdx,v=G.getV,d=G.getVbyList,c=KJUR.crypto,i=c.ECDSA,C=c.DSA,w=RSAKey,M=pemtohex,F=KEYUTIL;if(typeof w!=\"undefined\"&&l instanceof w){return l}if(typeof i!=\"undefined\"&&l instanceof i){return l}if(typeof C!=\"undefined\"&&l instanceof C){return l}if(l.curve!==undefined&&l.xy!==undefined&&l.d===undefined){return new i({pub:l.xy,curve:l.curve})}if(l.curve!==undefined&&l.d!==undefined){return new i({prv:l.d,curve:l.curve})}if(l.kty===undefined&&l.n!==undefined&&l.e!==undefined&&l.d===undefined){var P=new w();P.setPublic(l.n,l.e);return P}if(l.kty===undefined&&l.n!==undefined&&l.e!==undefined&&l.d!==undefined&&l.p!==undefined&&l.q!==undefined&&l.dp!==undefined&&l.dq!==undefined&&l.co!==undefined&&l.qi===undefined){var P=new w();P.setPrivateEx(l.n,l.e,l.d,l.p,l.q,l.dp,l.dq,l.co);return P}if(l.kty===undefined&&l.n!==undefined&&l.e!==undefined&&l.d!==undefined&&l.p===undefined){var P=new w();P.setPrivate(l.n,l.e,l.d);return P}if(l.p!==undefined&&l.q!==undefined&&l.g!==undefined&&l.y!==undefined&&l.x===undefined){var P=new C();P.setPublic(l.p,l.q,l.g,l.y);return P}if(l.p!==undefined&&l.q!==undefined&&l.g!==undefined&&l.y!==undefined&&l.x!==undefined){var P=new C();P.setPrivate(l.p,l.q,l.g,l.y,l.x);return P}if(l.kty===\"RSA\"&&l.n!==undefined&&l.e!==undefined&&l.d===undefined){var P=new w();P.setPublic(b64utohex(l.n),b64utohex(l.e));return P}if(l.kty===\"RSA\"&&l.n!==undefined&&l.e!==undefined&&l.d!==undefined&&l.p!==undefined&&l.q!==undefined&&l.dp!==undefined&&l.dq!==undefined&&l.qi!==undefined){var P=new w();P.setPrivateEx(b64utohex(l.n),b64utohex(l.e),b64utohex(l.d),b64utohex(l.p),b64utohex(l.q),b64utohex(l.dp),b64utohex(l.dq),b64utohex(l.qi));return P}if(l.kty===\"RSA\"&&l.n!==undefined&&l.e!==undefined&&l.d!==undefined){var P=new w();P.setPrivate(b64utohex(l.n),b64utohex(l.e),b64utohex(l.d));return P}if(l.kty===\"EC\"&&l.crv!==undefined&&l.x!==undefined&&l.y!==undefined&&l.d===undefined){var j=new i({curve:l.crv});var t=j.ecparams.keycharlen;var B=(\"0000000000\"+b64utohex(l.x)).slice(-t);var z=(\"0000000000\"+b64utohex(l.y)).slice(-t);var u=\"04\"+B+z;j.setPublicKeyHex(u);return j}if(l.kty===\"EC\"&&l.crv!==undefined&&l.x!==undefined&&l.y!==undefined&&l.d!==undefined){var j=new i({curve:l.crv});var t=j.ecparams.keycharlen;var B=(\"0000000000\"+b64utohex(l.x)).slice(-t);var z=(\"0000000000\"+b64utohex(l.y)).slice(-t);var u=\"04\"+B+z;var b=(\"0000000000\"+b64utohex(l.d)).slice(-t);j.setPublicKeyHex(u);j.setPrivateKeyHex(b);return j}if(n===\"pkcs5prv\"){var J=l,G=ASN1HEX,N,P;N=L(J,0);if(N.length===9){P=new w();P.readPKCS5PrvKeyHex(J)}else{if(N.length===6){P=new C();P.readPKCS5PrvKeyHex(J)}else{if(N.length>2&&J.substr(N[1],2)===\"04\"){P=new i();P.readPKCS5PrvKeyHex(J)}else{throw new Error(\"unsupported PKCS#1/5 hexadecimal key\")}}}return P}if(n===\"pkcs8prv\"){var P=F.getKeyFromPlainPrivatePKCS8Hex(l);return P}if(n===\"pkcs8pub\"){return F._getKeyFromPublicPKCS8Hex(l)}if(n===\"x509pub\"){return X509.getPublicKeyFromCertHex(l)}if(l.indexOf(\"-END CERTIFICATE-\",0)!=-1||l.indexOf(\"-END X509 CERTIFICATE-\",0)!=-1||l.indexOf(\"-END TRUSTED CERTIFICATE-\",0)!=-1){return X509.getPublicKeyFromCertPEM(l)}if(l.indexOf(\"-END PUBLIC KEY-\")!=-1){var O=pemtohex(l,\"PUBLIC KEY\");return F._getKeyFromPublicPKCS8Hex(O)}if(l.indexOf(\"-END RSA PRIVATE KEY-\")!=-1&&l.indexOf(\"4,ENCRYPTED\")==-1){var m=M(l,\"RSA PRIVATE KEY\");return F.getKey(m,null,\"pkcs5prv\")}if(l.indexOf(\"-END DSA PRIVATE KEY-\")!=-1&&l.indexOf(\"4,ENCRYPTED\")==-1){var I=M(l,\"DSA PRIVATE KEY\");var E=d(I,0,[1],\"02\");var D=d(I,0,[2],\"02\");var K=d(I,0,[3],\"02\");var r=d(I,0,[4],\"02\");var s=d(I,0,[5],\"02\");var P=new C();P.setPrivate(new BigInteger(E,16),new BigInteger(D,16),new BigInteger(K,16),new BigInteger(r,16),new BigInteger(s,16));return P}if(l.indexOf(\"-END EC PRIVATE KEY-\")!=-1&&l.indexOf(\"4,ENCRYPTED\")==-1){var m=M(l,\"EC PRIVATE KEY\");return F.getKey(m,null,\"pkcs5prv\")}if(l.indexOf(\"-END PRIVATE KEY-\")!=-1){return F.getKeyFromPlainPrivatePKCS8PEM(l)}if(l.indexOf(\"-END RSA PRIVATE KEY-\")!=-1&&l.indexOf(\"4,ENCRYPTED\")!=-1){var o=F.getDecryptedKeyHex(l,k);var H=new RSAKey();H.readPKCS5PrvKeyHex(o);return H}if(l.indexOf(\"-END EC PRIVATE KEY-\")!=-1&&l.indexOf(\"4,ENCRYPTED\")!=-1){var I=F.getDecryptedKeyHex(l,k);var P=d(I,0,[1],\"04\");var f=d(I,0,[2,0],\"06\");var A=d(I,0,[3,0],\"03\").substr(2);var e=\"\";if(KJUR.crypto.OID.oidhex2name[f]!==undefined){e=KJUR.crypto.OID.oidhex2name[f]}else{throw new Error(\"undefined OID(hex) in KJUR.crypto.OID: \"+f)}var j=new i({curve:e});j.setPublicKeyHex(A);j.setPrivateKeyHex(P);j.isPublic=false;return j}if(l.indexOf(\"-END DSA PRIVATE KEY-\")!=-1&&l.indexOf(\"4,ENCRYPTED\")!=-1){var I=F.getDecryptedKeyHex(l,k);var E=d(I,0,[1],\"02\");var D=d(I,0,[2],\"02\");var K=d(I,0,[3],\"02\");var r=d(I,0,[4],\"02\");var s=d(I,0,[5],\"02\");var P=new C();P.setPrivate(new BigInteger(E,16),new BigInteger(D,16),new BigInteger(K,16),new BigInteger(r,16),new BigInteger(s,16));return P}if(l.indexOf(\"-END ENCRYPTED PRIVATE KEY-\")!=-1){return F.getKeyFromEncryptedPKCS8PEM(l,k)}throw new Error(\"not supported argument\")};KEYUTIL.generateKeypair=function(a,c){if(a==\"RSA\"){var b=c;var h=new RSAKey();h.generate(b,\"10001\");h.isPrivate=true;h.isPublic=true;var f=new RSAKey();var e=h.n.toString(16);var i=h.e.toString(16);f.setPublic(e,i);f.isPrivate=false;f.isPublic=true;var k={};k.prvKeyObj=h;k.pubKeyObj=f;return k}else{if(a==\"EC\"){var d=c;var g=new KJUR.crypto.ECDSA({curve:d});var j=g.generateKeyPairHex();var h=new KJUR.crypto.ECDSA({curve:d});h.setPublicKeyHex(j.ecpubhex);h.setPrivateKeyHex(j.ecprvhex);h.isPrivate=true;h.isPublic=false;var f=new KJUR.crypto.ECDSA({curve:d});f.setPublicKeyHex(j.ecpubhex);f.isPrivate=false;f.isPublic=true;var k={};k.prvKeyObj=h;k.pubKeyObj=f;return k}else{throw new Error(\"unknown algorithm: \"+a)}}};KEYUTIL.getPEM=function(b,D,y,m,q,j){var F=KJUR,k=F.asn1,z=k.DERObjectIdentifier,f=k.DERInteger,l=k.ASN1Util.newObject,a=k.x509,C=a.SubjectPublicKeyInfo,e=F.crypto,u=e.DSA,r=e.ECDSA,n=RSAKey;function A(s){var H=l({seq:[{\"int\":0},{\"int\":{bigint:s.n}},{\"int\":s.e},{\"int\":{bigint:s.d}},{\"int\":{bigint:s.p}},{\"int\":{bigint:s.q}},{\"int\":{bigint:s.dmp1}},{\"int\":{bigint:s.dmq1}},{\"int\":{bigint:s.coeff}}]});return H}function B(H){var s=l({seq:[{\"int\":1},{octstr:{hex:H.prvKeyHex}},{tag:[\"a0\",true,{oid:{name:H.curveName}}]},{tag:[\"a1\",true,{bitstr:{hex:\"00\"+H.pubKeyHex}}]}]});return s}function x(s){var H=l({seq:[{\"int\":0},{\"int\":{bigint:s.p}},{\"int\":{bigint:s.q}},{\"int\":{bigint:s.g}},{\"int\":{bigint:s.y}},{\"int\":{bigint:s.x}}]});return H}if(((n!==undefined&&b instanceof n)||(u!==undefined&&b instanceof u)||(r!==undefined&&b instanceof r))&&b.isPublic==true&&(D===undefined||D==\"PKCS8PUB\")){var E=new C(b);var w=E.tohex();return hextopem(w,\"PUBLIC KEY\")}if(D==\"PKCS1PRV\"&&n!==undefined&&b instanceof n&&(y===undefined||y==null)&&b.isPrivate==true){var E=A(b);var w=E.tohex();return hextopem(w,\"RSA PRIVATE KEY\")}if(D==\"PKCS1PRV\"&&r!==undefined&&b instanceof r&&(y===undefined||y==null)&&b.isPrivate==true){var i=new z({name:b.curveName});var v=i.tohex();var h=B(b);var t=h.tohex();var p=\"\";p+=hextopem(v,\"EC PARAMETERS\");p+=hextopem(t,\"EC PRIVATE KEY\");return p}if(D==\"PKCS1PRV\"&&u!==undefined&&b instanceof u&&(y===undefined||y==null)&&b.isPrivate==true){var E=x(b);var w=E.tohex();return hextopem(w,\"DSA PRIVATE KEY\")}if(D==\"PKCS5PRV\"&&n!==undefined&&b instanceof n&&(y!==undefined&&y!=null)&&b.isPrivate==true){var E=A(b);var w=E.tohex();if(m===undefined){m=\"DES-EDE3-CBC\"}return this.getEncryptedPKCS5PEMFromPrvKeyHex(\"RSA\",w,y,m,j)}if(D==\"PKCS5PRV\"&&r!==undefined&&b instanceof r&&(y!==undefined&&y!=null)&&b.isPrivate==true){var E=B(b);var w=E.tohex();if(m===undefined){m=\"DES-EDE3-CBC\"}return this.getEncryptedPKCS5PEMFromPrvKeyHex(\"EC\",w,y,m,j)}if(D==\"PKCS5PRV\"&&u!==undefined&&b instanceof u&&(y!==undefined&&y!=null)&&b.isPrivate==true){var E=x(b);var w=E.tohex();if(m===undefined){m=\"DES-EDE3-CBC\"}return this.getEncryptedPKCS5PEMFromPrvKeyHex(\"DSA\",w,y,m,j)}var o=function(H,s){var J=c(H,s);var I=new l({seq:[{seq:[{oid:{name:\"pkcs5PBES2\"}},{seq:[{seq:[{oid:{name:\"pkcs5PBKDF2\"}},{seq:[{octstr:{hex:J.pbkdf2Salt}},{\"int\":J.pbkdf2Iter}]}]},{seq:[{oid:{name:\"des-EDE3-CBC\"}},{octstr:{hex:J.encryptionSchemeIV}}]}]}]},{octstr:{hex:J.ciphertext}}]});return I.tohex()};var c=function(O,P){var I=100;var N=CryptoJS.lib.WordArray.random(8);var M=\"DES-EDE3-CBC\";var s=CryptoJS.lib.WordArray.random(8);var J=CryptoJS.PBKDF2(P,N,{keySize:192/32,iterations:I});var K=CryptoJS.enc.Hex.parse(O);var L=CryptoJS.TripleDES.encrypt(K,J,{iv:s})+\"\";var H={};H.ciphertext=L;H.pbkdf2Salt=CryptoJS.enc.Hex.stringify(N);H.pbkdf2Iter=I;H.encryptionSchemeAlg=M;H.encryptionSchemeIV=CryptoJS.enc.Hex.stringify(s);return H};if(D==\"PKCS8PRV\"&&n!=undefined&&b instanceof n&&b.isPrivate==true){var g=A(b);var d=g.tohex();var E=l({seq:[{\"int\":0},{seq:[{oid:{name:\"rsaEncryption\"}},{\"null\":true}]},{octstr:{hex:d}}]});var w=E.tohex();if(y===undefined||y==null){return hextopem(w,\"PRIVATE KEY\")}else{var t=o(w,y);return hextopem(t,\"ENCRYPTED PRIVATE KEY\")}}if(D==\"PKCS8PRV\"&&r!==undefined&&b instanceof r&&b.isPrivate==true){var G={seq:[{\"int\":1},{octstr:{hex:b.prvKeyHex}}]};if(typeof b.pubKeyHex==\"string\"){G.seq.push({tag:[\"a1\",true,{bitstr:{hex:\"00\"+b.pubKeyHex}}]})}var g=new l(G);var d=g.tohex();var E=l({seq:[{\"int\":0},{seq:[{oid:{name:\"ecPublicKey\"}},{oid:{name:b.curveName}}]},{octstr:{hex:d}}]});var w=E.tohex();if(y===undefined||y==null){return hextopem(w,\"PRIVATE KEY\")}else{var t=o(w,y);return hextopem(t,\"ENCRYPTED PRIVATE KEY\")}}if(D==\"PKCS8PRV\"&&u!==undefined&&b instanceof u&&b.isPrivate==true){var g=new f({bigint:b.x});var d=g.tohex();var E=l({seq:[{\"int\":0},{seq:[{oid:{name:\"dsa\"}},{seq:[{\"int\":{bigint:b.p}},{\"int\":{bigint:b.q}},{\"int\":{bigint:b.g}}]}]},{octstr:{hex:d}}]});var w=E.tohex();if(y===undefined||y==null){return hextopem(w,\"PRIVATE KEY\")}else{var t=o(w,y);return hextopem(t,\"ENCRYPTED PRIVATE KEY\")}}throw new Error(\"unsupported object nor format\")};KEYUTIL.getKeyFromCSRPEM=function(b){var a=pemtohex(b,\"CERTIFICATE REQUEST\");var c=KEYUTIL.getKeyFromCSRHex(a);return c};KEYUTIL.getKeyFromCSRHex=function(a){var c=KEYUTIL.parseCSRHex(a);var b=KEYUTIL.getKey(c.p8pubkeyhex,null,\"pkcs8pub\");return b};KEYUTIL.parseCSRHex=function(d){var i=ASN1HEX;var f=i.getChildIdx;var c=i.getTLV;var b={};var g=d;if(g.substr(0,2)!=\"30\"){throw new Error(\"malformed CSR(code:001)\")}var e=f(g,0);if(e.length<1){throw new Error(\"malformed CSR(code:002)\")}if(g.substr(e[0],2)!=\"30\"){throw new Error(\"malformed CSR(code:003)\")}var a=f(g,e[0]);if(a.length<3){throw new Error(\"malformed CSR(code:004)\")}b.p8pubkeyhex=c(g,a[2]);return b};KEYUTIL.getKeyID=function(f){var c=KEYUTIL;var e=ASN1HEX;if(typeof f===\"string\"&&f.indexOf(\"BEGIN \")!=-1){f=c.getKey(f)}var d=pemtohex(c.getPEM(f));var b=e.getIdxbyList(d,0,[1]);var a=e.getV(d,b).substring(2);return KJUR.crypto.Util.hashHex(a,\"sha1\")};KEYUTIL.getJWK=function(d,h,g,b,f){var i;var k={};var e;var c=KJUR.crypto.Util.hashHex;if(typeof d==\"string\"){i=KEYUTIL.getKey(d);if(d.indexOf(\"CERTIFICATE\")!=-1){e=pemtohex(d)}}else{if(typeof d==\"object\"){if(d instanceof X509){i=d.getPublicKey();e=d.hex}else{i=d}}else{throw new Error(\"unsupported keyinfo type\")}}if(i instanceof RSAKey&&i.isPrivate){k.kty=\"RSA\";k.n=hextob64u(i.n.toString(16));k.e=hextob64u(i.e.toString(16));k.d=hextob64u(i.d.toString(16));k.p=hextob64u(i.p.toString(16));k.q=hextob64u(i.q.toString(16));k.dp=hextob64u(i.dmp1.toString(16));k.dq=hextob64u(i.dmq1.toString(16));k.qi=hextob64u(i.coeff.toString(16))}else{if(i instanceof RSAKey&&i.isPublic){k.kty=\"RSA\";k.n=hextob64u(i.n.toString(16));k.e=hextob64u(i.e.toString(16))}else{if(i instanceof KJUR.crypto.ECDSA&&i.isPrivate){var a=i.getShortNISTPCurveName();if(a!==\"P-256\"&&a!==\"P-384\"&&a!==\"P-521\"){throw new Error(\"unsupported curve name for JWT: \"+a)}var j=i.getPublicKeyXYHex();k.kty=\"EC\";k.crv=a;k.x=hextob64u(j.x);k.y=hextob64u(j.y);k.d=hextob64u(i.prvKeyHex)}else{if(i instanceof KJUR.crypto.ECDSA&&i.isPublic){var a=i.getShortNISTPCurveName();if(a!==\"P-256\"&&a!==\"P-384\"&&a!==\"P-521\"){throw new Error(\"unsupported curve name for JWT: \"+a)}var j=i.getPublicKeyXYHex();k.kty=\"EC\";k.crv=a;k.x=hextob64u(j.x);k.y=hextob64u(j.y)}}}}if(k.kty==undefined){throw new Error(\"unsupported keyinfo\")}if((!i.isPrivate)&&h!=true){k.kid=KJUR.jws.JWS.getJWKthumbprint(k)}if(e!=undefined&&g!=true){k.x5c=[hex2b64(e)]}if(e!=undefined&&b!=true){k.x5t=b64tob64u(hex2b64(c(e,\"sha1\")))}if(e!=undefined&&f!=true){k[\"x5t#S256\"]=b64tob64u(hex2b64(c(e,\"sha256\")))}return k};KEYUTIL.getJWKFromKey=function(a){return KEYUTIL.getJWK(a,true,true,true,true)};\nRSAKey.getPosArrayOfChildrenFromHex=function(a){return ASN1HEX.getChildIdx(a,0)};RSAKey.getHexValueArrayOfChildrenFromHex=function(f){var n=ASN1HEX;var i=n.getV;var k=RSAKey.getPosArrayOfChildrenFromHex(f);var e=i(f,k[0]);var j=i(f,k[1]);var b=i(f,k[2]);var c=i(f,k[3]);var h=i(f,k[4]);var g=i(f,k[5]);var m=i(f,k[6]);var l=i(f,k[7]);var d=i(f,k[8]);var k=new Array();k.push(e,j,b,c,h,g,m,l,d);return k};RSAKey.prototype.readPrivateKeyFromPEMString=function(d){var c=pemtohex(d);var b=RSAKey.getHexValueArrayOfChildrenFromHex(c);this.setPrivateEx(b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8])};RSAKey.prototype.readPKCS5PrvKeyHex=function(c){var b=RSAKey.getHexValueArrayOfChildrenFromHex(c);this.setPrivateEx(b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8])};RSAKey.prototype.readPKCS8PrvKeyHex=function(e){var c,i,k,b,a,f,d,j;var m=ASN1HEX;var l=m.getVbyListEx;if(m.isASN1HEX(e)===false){throw new Error(\"not ASN.1 hex string\")}try{c=l(e,0,[2,0,1],\"02\");i=l(e,0,[2,0,2],\"02\");k=l(e,0,[2,0,3],\"02\");b=l(e,0,[2,0,4],\"02\");a=l(e,0,[2,0,5],\"02\");f=l(e,0,[2,0,6],\"02\");d=l(e,0,[2,0,7],\"02\");j=l(e,0,[2,0,8],\"02\")}catch(g){throw new Error(\"malformed PKCS#8 plain RSA private key\")}this.setPrivateEx(c,i,k,b,a,f,d,j)};RSAKey.prototype.readPKCS5PubKeyHex=function(c){var e=ASN1HEX;var b=e.getV;if(e.isASN1HEX(c)===false){throw new Error(\"keyHex is not ASN.1 hex string\")}var a=e.getChildIdx(c,0);if(a.length!==2||c.substr(a[0],2)!==\"02\"||c.substr(a[1],2)!==\"02\"){throw new Error(\"wrong hex for PKCS#5 public key\")}var f=b(c,a[0]);var d=b(c,a[1]);this.setPublic(f,d)};RSAKey.prototype.readPKCS8PubKeyHex=function(b){var c=ASN1HEX;if(c.isASN1HEX(b)===false){throw new Error(\"not ASN.1 hex string\")}if(c.getTLVbyListEx(b,0,[0,0])!==\"06092a864886f70d010101\"){throw new Error(\"not PKCS8 RSA public key\")}var a=c.getTLVbyListEx(b,0,[1,0]);this.readPKCS5PubKeyHex(a)};RSAKey.prototype.readCertPubKeyHex=function(b,d){var a,c;a=new X509();a.readCertHex(b);c=a.getPublicKeyHex();this.readPKCS8PubKeyHex(c)};\nvar _RE_HEXDECONLY=new RegExp(\"[^0-9a-f]\",\"gi\");function _rsasign_getHexPaddedDigestInfoForString(d,e,a){var b=function(f){return KJUR.crypto.Util.hashString(f,a)};var c=b(d);return KJUR.crypto.Util.getPaddedDigestInfoHex(c,a,e)}function _zeroPaddingOfSignature(e,d){var c=\"\";var a=d/4-e.length;for(var b=0;b<a;b++){c=c+\"0\"}return c+e}RSAKey.prototype.sign=function(d,a){var b=function(e){return KJUR.crypto.Util.hashString(e,a)};var c=b(d);return this.signWithMessageHash(c,a)};RSAKey.prototype.signWithMessageHash=function(e,c){var f=KJUR.crypto.Util.getPaddedDigestInfoHex(e,c,this.n.bitLength());var b=parseBigInt(f,16);var d=this.doPrivate(b);var a=d.toString(16);return _zeroPaddingOfSignature(a,this.n.bitLength())};function pss_mgf1_str(c,a,e){var b=\"\",d=0;while(b.length<a){b+=hextorstr(e(rstrtohex(c+String.fromCharCode.apply(String,[(d&4278190080)>>24,(d&16711680)>>16,(d&65280)>>8,d&255]))));d+=1}return b}RSAKey.prototype.signPSS=function(e,a,d){var c=function(f){return KJUR.crypto.Util.hashHex(f,a)};var b=c(rstrtohex(e));if(d===undefined){d=-1}return this.signWithMessageHashPSS(b,a,d)};RSAKey.prototype.signWithMessageHashPSS=function(l,a,k){var b=hextorstr(l);var g=b.length;var m=this.n.bitLength()-1;var c=Math.ceil(m/8);var d;var o=function(i){return KJUR.crypto.Util.hashHex(i,a)};if(k===-1||k===undefined){k=g}else{if(k===-2){k=c-g-2}else{if(k<-2){throw new Error(\"invalid salt length\")}}}if(c<(g+k+2)){throw new Error(\"data too long\")}var f=\"\";if(k>0){f=new Array(k);new SecureRandom().nextBytes(f);f=String.fromCharCode.apply(String,f)}var n=hextorstr(o(rstrtohex(\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"+b+f)));var j=[];for(d=0;d<c-k-g-2;d+=1){j[d]=0}var e=String.fromCharCode.apply(String,j)+\"\\x01\"+f;var h=pss_mgf1_str(n,e.length,o);var q=[];for(d=0;d<e.length;d+=1){q[d]=e.charCodeAt(d)^h.charCodeAt(d)}var p=(65280>>(8*c-m))&255;q[0]&=~p;for(d=0;d<g;d++){q.push(n.charCodeAt(d))}q.push(188);return _zeroPaddingOfSignature(this.doPrivate(new BigInteger(q)).toString(16),this.n.bitLength())};function _rsasign_getDecryptSignatureBI(a,d,c){var b=new RSAKey();b.setPublic(d,c);var e=b.doPublic(a);return e}function _rsasign_getHexDigestInfoFromSig(a,c,b){var e=_rsasign_getDecryptSignatureBI(a,c,b);var d=e.toString(16).replace(/^1f+00/,\"\");return d}function _rsasign_getAlgNameAndHashFromHexDisgestInfo(f){for(var e in KJUR.crypto.Util.DIGESTINFOHEAD){var d=KJUR.crypto.Util.DIGESTINFOHEAD[e];var b=d.length;if(f.substring(0,b)==d){var c=[e,f.substring(b)];return c}}return[]}RSAKey.prototype.verify=function(f,l){l=l.toLowerCase();if(l.match(/^[0-9a-f]+$/)==null){return false}var b=parseBigInt(l,16);var k=this.n.bitLength();if(b.bitLength()>k){return false}var j=this.doPublic(b);var i=j.toString(16);if(i.length+3!=k/4){return false}var e=i.replace(/^1f+00/,\"\");var g=_rsasign_getAlgNameAndHashFromHexDisgestInfo(e);if(g.length==0){return false}var d=g[0];var h=g[1];var a=function(m){return KJUR.crypto.Util.hashString(m,d)};var c=a(f);return(h==c)};RSAKey.prototype.verifyWithMessageHash=function(e,a){if(a.length!=Math.ceil(this.n.bitLength()/4)){return false}var b=parseBigInt(a,16);if(b.bitLength()>this.n.bitLength()){return 0}var h=this.doPublic(b);var g=h.toString(16).replace(/^1f+00/,\"\");var c=_rsasign_getAlgNameAndHashFromHexDisgestInfo(g);if(c.length==0){return false}var d=c[0];var f=c[1];return(f==e)};RSAKey.prototype.verifyPSS=function(c,b,a,f){var e=function(g){return KJUR.crypto.Util.hashHex(g,a)};var d=e(rstrtohex(c));if(f===undefined){f=-1}return this.verifyWithMessageHashPSS(d,b,a,f)};RSAKey.prototype.verifyWithMessageHashPSS=function(f,s,l,c){if(s.length!=Math.ceil(this.n.bitLength()/4)){return false}var k=new BigInteger(s,16);var r=function(i){return KJUR.crypto.Util.hashHex(i,l)};var j=hextorstr(f);var h=j.length;var g=this.n.bitLength()-1;var m=Math.ceil(g/8);var q;if(c===-1||c===undefined){c=h}else{if(c===-2){c=m-h-2}else{if(c<-2){throw new Error(\"invalid salt length\")}}}if(m<(h+c+2)){throw new Error(\"data too long\")}var a=this.doPublic(k).toByteArray();for(q=0;q<a.length;q+=1){a[q]&=255}while(a.length<m){a.unshift(0)}if(a[m-1]!==188){throw new Error(\"encoded message does not end in 0xbc\")}a=String.fromCharCode.apply(String,a);var d=a.substr(0,m-h-1);var e=a.substr(d.length,h);var p=(65280>>(8*m-g))&255;if((d.charCodeAt(0)&p)!==0){throw new Error(\"bits beyond keysize not zero\")}var n=pss_mgf1_str(e,d.length,r);var o=[];for(q=0;q<d.length;q+=1){o[q]=d.charCodeAt(q)^n.charCodeAt(q)}o[0]&=~p;var b=m-h-c-2;for(q=0;q<b;q+=1){if(o[q]!==0){throw new Error(\"leftmost octets not zero\")}}if(o[b]!==1){throw new Error(\"0x01 marker not found\")}return e===hextorstr(r(rstrtohex(\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"+j+String.fromCharCode.apply(String,o.slice(-c)))))};RSAKey.SALT_LEN_HLEN=-1;RSAKey.SALT_LEN_MAX=-2;RSAKey.SALT_LEN_RECOVER=-2;\nfunction X509(u){var n=ASN1HEX,r=n.getChildIdx,k=n.getV,x=n.dump,j=n.parse,b=n.getTLV,c=n.getVbyList,o=n.getVbyListEx,a=n.getTLVbyList,p=n.getTLVbyListEx,l=n.getIdxbyList,f=n.getIdxbyListEx,m=n.getVidx,w=n.getInt,t=n.oidname,q=n.hextooidstr,d=X509,v=pemtohex,g;try{g=KJUR.asn1.x509.AlgorithmIdentifier.PSSNAME2ASN1TLV}catch(s){}this.HEX2STAG={\"0c\":\"utf8\",\"13\":\"prn\",\"16\":\"ia5\",\"1a\":\"vis\",\"1e\":\"bmp\"};this.hex=null;this.version=0;this.foffset=0;this.aExtInfo=null;this.getVersion=function(){if(this.hex===null||this.version!==0){return this.version}var z=a(this.hex,0,[0,0]);if(z.substr(0,2)==\"a0\"){var A=a(z,0,[0]);var y=w(A,0);if(y<0||2<y){throw new Error(\"malformed version field\")}this.version=y+1;return this.version}else{this.version=1;this.foffset=-1;return 1}};this.getSerialNumberHex=function(){return o(this.hex,0,[0,0],\"02\")};this.getSignatureAlgorithmField=function(){var y=p(this.hex,0,[0,1]);return this.getAlgorithmIdentifierName(y)};this.getAlgorithmIdentifierName=function(y){for(var z in g){if(y===g[z]){return z}}return t(o(y,0,[0],\"06\"))};this.getIssuer=function(){return this.getX500Name(this.getIssuerHex())};this.getIssuerHex=function(){return a(this.hex,0,[0,3+this.foffset],\"30\")};this.getIssuerString=function(){var y=this.getIssuer();return y.str};this.getSubject=function(){return this.getX500Name(this.getSubjectHex())};this.getSubjectHex=function(){return a(this.hex,0,[0,5+this.foffset],\"30\")};this.getSubjectString=function(){var y=this.getSubject();return y.str};this.getNotBefore=function(){var y=c(this.hex,0,[0,4+this.foffset,0]);y=y.replace(/(..)/g,\"%$1\");y=decodeURIComponent(y);return y};this.getNotAfter=function(){var y=c(this.hex,0,[0,4+this.foffset,1]);y=y.replace(/(..)/g,\"%$1\");y=decodeURIComponent(y);return y};this.getPublicKeyHex=function(){return this.getSPKI()};this.getSPKI=function(){return a(this.hex,0,[0,6+this.foffset],\"30\")};this.getSPKIValue=function(){var y=this.getSPKI();if(y==null){return null}return c(y,0,[1],\"03\",true)};this.getPublicKeyIdx=function(){return l(this.hex,0,[0,6+this.foffset],\"30\")};this.getPublicKeyContentIdx=function(){var y=this.getPublicKeyIdx();return l(this.hex,y,[1,0],\"30\")};this.getPublicKey=function(){return KEYUTIL.getKey(this.getPublicKeyHex(),null,\"pkcs8pub\")};this.getSignatureAlgorithmName=function(){var y=a(this.hex,0,[1],\"30\");return this.getAlgorithmIdentifierName(y)};this.getSignatureValueHex=function(){return c(this.hex,0,[2],\"03\",true)};this.verifySignature=function(A){var B=this.getSignatureAlgorithmField();var y=this.getSignatureValueHex();var z=a(this.hex,0,[0],\"30\");var C=new KJUR.crypto.Signature({alg:B});C.init(A);C.updateHex(z);return C.verify(y)};this.parseExt=function(H){var A,y,C;if(H===undefined){C=this.hex;if(this.version!==3){return -1}A=l(C,0,[0,7,0],\"30\");y=r(C,A)}else{C=pemtohex(H);var D=l(C,0,[0,3,0,0],\"06\");if(k(C,D)!=\"2a864886f70d01090e\"){this.aExtInfo=new Array();return}A=l(C,0,[0,3,0,1,0],\"30\");y=r(C,A);this.hex=C}this.aExtInfo=new Array();for(var B=0;B<y.length;B++){var F={};F.critical=false;var E=r(C,y[B]);var z=0;if(E.length===3){F.critical=true;z=1}F.oid=n.hextooidstr(c(C,y[B],[0],\"06\"));var G=l(C,y[B],[1+z]);F.vidx=m(C,G);this.aExtInfo.push(F)}};this.getExtInfo=function(A){var y=this.aExtInfo;var B=A;if(!A.match(/^[0-9.]+$/)){B=KJUR.asn1.x509.OID.name2oid(A)}if(B===\"\"){return undefined}for(var z=0;z<y.length;z++){if(y[z].oid===B){return y[z]}}return undefined};this.getExtBasicConstraints=function(z,D){if(z===undefined&&D===undefined){var B=this.getExtInfo(\"basicConstraints\");if(B===undefined){return undefined}z=b(this.hex,B.vidx);D=B.critical}var y={extname:\"basicConstraints\"};if(D){y.critical=true}if(z===\"3000\"){return y}if(z===\"30030101ff\"){y.cA=true;return y}if(z.substr(0,12)===\"30060101ff02\"){var C=k(z,10);var A=parseInt(C,16);y.cA=true;y.pathLen=A;return y}throw new Error(\"hExtV parse error: \"+z)};this.getExtNameConstraints=function(H,F){if(H===undefined&&F===undefined){var z=this.getExtInfo(\"nameConstraints\");if(z===undefined){return undefined}H=b(this.hex,z.vidx);F=z.critical}var J={extname:\"nameConstraints\"};if(F){J.critical=true}var E=r(H,0);for(var C=0;C<E.length;C++){var D=[];var A=r(H,E[C]);for(var B=0;B<A.length;B++){var G=b(H,A[B]);var y=this.getGeneralSubtree(G);D.push(y)}var I=H.substr(E[C],2);if(I==\"a0\"){J.permit=D}else{if(I==\"a1\"){J.exclude=D}}}return J};this.getGeneralSubtree=function(E){var C=r(E,0);var B=C.length;if(B<1||2<B){throw new Error(\"wrong num elements\")}var A=this.getGeneralName(b(E,C[0]));for(var D=1;D<B;D++){var z=E.substr(C[D],2);var y=k(E,C[D]);var F=parseInt(y,16);if(z==\"80\"){A.min=F}if(z==\"81\"){A.max=F}}return A};this.getExtKeyUsage=function(z,B){if(z===undefined&&B===undefined){var A=this.getExtInfo(\"keyUsage\");if(A===undefined){return undefined}z=b(this.hex,A.vidx);B=A.critical}var y={extname:\"keyUsage\"};if(B){y.critical=true}y.names=this.getExtKeyUsageString(z).split(\",\");return y};this.getExtKeyUsageBin=function(z){if(z===undefined){var A=this.getExtInfo(\"keyUsage\");if(A===undefined){return\"\"}z=b(this.hex,A.vidx)}if(z.length!=8&&z.length!=10){throw new Error(\"malformed key usage value: \"+z)}var y=\"000000000000000\"+parseInt(z.substr(6),16).toString(2);if(z.length==8){y=y.slice(-8)}if(z.length==10){y=y.slice(-16)}y=y.replace(/0+$/,\"\");if(y==\"\"){y=\"0\"}return y};this.getExtKeyUsageString=function(A){var B=this.getExtKeyUsageBin(A);var y=new Array();for(var z=0;z<B.length;z++){if(B.substr(z,1)==\"1\"){y.push(X509.KEYUSAGE_NAME[z])}}return y.join(\",\")};this.getExtSubjectKeyIdentifier=function(A,C){if(A===undefined&&C===undefined){var B=this.getExtInfo(\"subjectKeyIdentifier\");if(B===undefined){return undefined}A=b(this.hex,B.vidx);C=B.critical}var y={extname:\"subjectKeyIdentifier\"};if(C){y.critical=true}var z=k(A,0);y.kid={hex:z};return y};this.getExtAuthorityKeyIdentifier=function(E,C){if(E===undefined&&C===undefined){var y=this.getExtInfo(\"authorityKeyIdentifier\");if(y===undefined){return undefined}E=b(this.hex,y.vidx);C=y.critical}var F={extname:\"authorityKeyIdentifier\"};if(C){F.critical=true}var D=r(E,0);for(var z=0;z<D.length;z++){var G=E.substr(D[z],2);if(G===\"80\"){F.kid={hex:k(E,D[z])}}if(G===\"a1\"){var B=b(E,D[z]);var A=this.getGeneralNames(B);F.issuer=A[0][\"dn\"]}if(G===\"82\"){F.sn={hex:k(E,D[z])}}}return F};this.getExtExtKeyUsage=function(B,D){if(B===undefined&&D===undefined){var C=this.getExtInfo(\"extKeyUsage\");if(C===undefined){return undefined}B=b(this.hex,C.vidx);D=C.critical}var y={extname:\"extKeyUsage\",array:[]};if(D){y.critical=true}var z=r(B,0);for(var A=0;A<z.length;A++){y.array.push(t(k(B,z[A])))}return y};this.getExtExtKeyUsageName=function(){var C=this.getExtInfo(\"extKeyUsage\");if(C===undefined){return C}var y=new Array();var B=b(this.hex,C.vidx);if(B===\"\"){return y}var z=r(B,0);for(var A=0;A<z.length;A++){y.push(t(k(B,z[A])))}return y};this.getExtSubjectAltName=function(z,B){if(z===undefined&&B===undefined){var A=this.getExtInfo(\"subjectAltName\");if(A===undefined){return undefined}z=b(this.hex,A.vidx);B=A.critical}var y={extname:\"subjectAltName\",array:[]};if(B){y.critical=true}y.array=this.getGeneralNames(z);return y};this.getExtIssuerAltName=function(z,B){if(z===undefined&&B===undefined){var A=this.getExtInfo(\"issuerAltName\");if(A===undefined){return undefined}z=b(this.hex,A.vidx);B=A.critical}var y={extname:\"issuerAltName\",array:[]};if(B){y.critical=true}y.array=this.getGeneralNames(z);return y};this.getGeneralNames=function(C){var A=r(C,0);var y=[];for(var B=0;B<A.length;B++){var z=this.getGeneralName(b(C,A[B]));if(z!==undefined){y.push(z)}}return y};this.getGeneralName=function(z){var y=z.substr(0,2);var B=k(z,0);var A=hextorstr(B);if(y==\"81\"){return{rfc822:A}}if(y==\"82\"){return{dns:A}}if(y==\"86\"){return{uri:A}}if(y==\"87\"){return{ip:hextoip(B)}}if(y==\"a4\"){return{dn:this.getX500Name(B)}}if(y==\"a0\"){return{other:this.getOtherName(z)}}return undefined};this.getExtSubjectAltName2=function(){var C,F,E;var D=this.getExtInfo(\"subjectAltName\");if(D===undefined){return D}var y=new Array();var B=b(this.hex,D.vidx);var z=r(B,0);for(var A=0;A<z.length;A++){E=B.substr(z[A],2);C=k(B,z[A]);if(E===\"81\"){F=hextoutf8(C);y.push([\"MAIL\",F])}if(E===\"82\"){F=hextoutf8(C);y.push([\"DNS\",F])}if(E===\"84\"){F=X509.hex2dn(C,0);y.push([\"DN\",F])}if(E===\"86\"){F=hextoutf8(C);y.push([\"URI\",F])}if(E===\"87\"){F=hextoip(C);y.push([\"IP\",F])}}return y};this.getExtCRLDistributionPoints=function(C,E){if(C===undefined&&E===undefined){var D=this.getExtInfo(\"cRLDistributionPoints\");if(D===undefined){return undefined}C=b(this.hex,D.vidx);E=D.critical}var z={extname:\"cRLDistributionPoints\",array:[]};if(E){z.critical=true}var A=r(C,0);for(var B=0;B<A.length;B++){var y=b(C,A[B]);z.array.push(this.getDistributionPoint(y))}return z};this.getDistributionPoint=function(D){var A={};var B=r(D,0);for(var C=0;C<B.length;C++){var z=D.substr(B[C],2);var y=b(D,B[C]);if(z==\"a0\"){A.dpname=this.getDistributionPointName(y)}}return A};this.getDistributionPointName=function(D){var A={};var B=r(D,0);for(var C=0;C<B.length;C++){var z=D.substr(B[C],2);var y=b(D,B[C]);if(z==\"a0\"){A.full=this.getGeneralNames(y)}}return A};this.getExtCRLDistributionPointsURI=function(){var C=this.getExtCRLDistributionPoints();if(C==undefined){return C}var z=C.array;var y=[];for(var B=0;B<z.length;B++){try{if(z[B].dpname.full[0].uri!=undefined){y.push(z[B].dpname.full[0].uri)}}catch(A){}}return y};this.getExtAIAInfo=function(){var C=this.getExtInfo(\"authorityInfoAccess\");if(C===undefined){return C}var y={ocsp:[],caissuer:[]};var z=r(this.hex,C.vidx);for(var A=0;A<z.length;A++){var D=c(this.hex,z[A],[0],\"06\");var B=c(this.hex,z[A],[1],\"86\");if(D===\"2b06010505073001\"){y.ocsp.push(hextoutf8(B))}if(D===\"2b06010505073002\"){y.caissuer.push(hextoutf8(B))}}return y};this.getExtAuthorityInfoAccess=function(F,D){if(F===undefined&&D===undefined){var y=this.getExtInfo(\"authorityInfoAccess\");if(y===undefined){return undefined}F=b(this.hex,y.vidx);D=y.critical}var G={extname:\"authorityInfoAccess\",array:[]};if(D){G.critical=true}var E=r(F,0);for(var z=0;z<E.length;z++){var C=o(F,E[z],[0],\"06\");var A=c(F,E[z],[1],\"86\");var B=hextoutf8(A);if(C==\"2b06010505073001\"){G.array.push({ocsp:B})}else{if(C==\"2b06010505073002\"){G.array.push({caissuer:B})}else{throw new Error(\"unknown method: \"+C)}}}return G};this.getExtCertificatePolicies=function(C,F){if(C===undefined&&F===undefined){var E=this.getExtInfo(\"certificatePolicies\");if(E===undefined){return undefined}C=b(this.hex,E.vidx);F=E.critical}var y={extname:\"certificatePolicies\",array:[]};if(F){y.critical=true}var z=r(C,0);for(var A=0;A<z.length;A++){var D=b(C,z[A]);var B=this.getPolicyInformation(D);y.array.push(B)}return y};this.getPolicyInformation=function(C){var y={};var E=c(C,0,[0],\"06\");y.policyoid=t(E);var F=f(C,0,[1],\"30\");if(F!=-1){y.array=[];var z=r(C,F);for(var A=0;A<z.length;A++){var D=b(C,z[A]);var B=this.getPolicyQualifierInfo(D);y.array.push(B)}}return y};this.getOtherName=function(A){var y={};var z=r(A,0);var C=c(A,z[0],[],\"06\");var B=c(A,z[1],[]);y.oid=KJUR.asn1.ASN1Util.oidHexToInt(C);y.obj=j(B);return y};this.getPolicyQualifierInfo=function(z){var y={};var A=c(z,0,[0],\"06\");if(A===\"2b06010505070201\"){var C=o(z,0,[1],\"16\");y.cps=hextorstr(C)}else{if(A===\"2b06010505070202\"){var B=a(z,0,[1],\"30\");y.unotice=this.getUserNotice(B)}}return y};this.getUserNotice=function(C){var z={};var A=r(C,0);for(var B=0;B<A.length;B++){var y=b(C,A[B]);if(y.substr(0,2)!=\"30\"){z.exptext=this.getDisplayText(y)}}return z};this.getDisplayText=function(z){var A={\"0c\":\"utf8\",\"16\":\"ia5\",\"1a\":\"vis\",\"1e\":\"bmp\"};var y={};y.type=A[z.substr(0,2)];y.str=hextorstr(k(z,0));return y};this.getExtCRLNumber=function(z,A){var y={extname:\"cRLNumber\"};if(A){y.critical=true}if(z.substr(0,2)==\"02\"){y.num={hex:k(z,0)};return y}throw new Error(\"hExtV parse error: \"+z)};this.getExtCRLReason=function(z,A){var y={extname:\"cRLReason\"};if(A){y.critical=true}if(z.substr(0,2)==\"0a\"){y.code=parseInt(k(z,0),16);return y}throw new Error(\"hExtV parse error: \"+z)};this.getExtOcspNonce=function(z,B){var y={extname:\"ocspNonce\"};if(B){y.critical=true}var A=k(z,0);y.hex=A;return y};this.getExtOcspNoCheck=function(z,A){var y={extname:\"ocspNoCheck\"};if(A){y.critical=true}return y};this.getExtAdobeTimeStamp=function(B,E){if(B===undefined&&E===undefined){var D=this.getExtInfo(\"adobeTimeStamp\");if(D===undefined){return undefined}B=b(this.hex,D.vidx);E=D.critical}var y={extname:\"adobeTimeStamp\"};if(E){y.critical=true}var A=r(B,0);if(A.length>1){var F=b(B,A[1]);var z=this.getGeneralName(F);if(z.uri!=undefined){y.uri=z.uri}}if(A.length>2){var C=b(B,A[2]);if(C==\"0101ff\"){y.reqauth=true}if(C==\"010100\"){y.reqauth=false}}return y};var e=function(D){var y={};try{var A=D.seq[0].oid;var C=KJUR.asn1.x509.OID.name2oid(A);y.type=KJUR.asn1.x509.OID.oid2atype(C);var z=D.seq[1];if(z.utf8str!=undefined){y.ds=\"utf8\";y.value=z.utf8str.str}else{if(z.numstr!=undefined){y.ds=\"num\";y.value=z.numstr.str}else{if(z.telstr!=undefined){y.ds=\"tel\";y.value=z.telstr.str}else{if(z.prnstr!=undefined){y.ds=\"prn\";y.value=z.prnstr.str}else{if(z.ia5str!=undefined){y.ds=\"ia5\";y.value=z.ia5str.str}else{if(z.visstr!=undefined){y.ds=\"vis\";y.value=z.visstr.str}else{if(z.bmpstr!=undefined){y.ds=\"bmp\";y.value=z.bmpstr.str}else{throw\"error\"}}}}}}}return y}catch(B){throw new Erorr(\"improper ASN.1 parsed AttrTypeAndValue\")}};var i=function(z){try{return z.set.map(function(A){return e(A)})}catch(y){throw new Error(\"improper ASN.1 parsed RDN: \"+y)}};var h=function(z){try{return z.seq.map(function(A){return i(A)})}catch(y){throw new Error(\"improper ASN.1 parsed X500Name: \"+y)}};this.getX500NameRule=function(y){var F=true;var J=true;var I=false;var z=\"\";var C=\"\";var L=null;var G=[];for(var B=0;B<y.length;B++){var D=y[B];for(var A=0;A<D.length;A++){G.push(D[A])}}for(var B=0;B<G.length;B++){var K=G[B];var M=K.ds;var H=K.value;var E=K.type;z+=\":\"+M;if(M!=\"prn\"&&M!=\"utf8\"&&M!=\"ia5\"){return\"mixed\"}if(M==\"ia5\"){if(E!=\"CN\"){return\"mixed\"}else{if(!KJUR.lang.String.isMail(H)){return\"mixed\"}else{continue}}}if(E==\"C\"){if(M==\"prn\"){continue}else{return\"mixed\"}}C+=\":\"+M;if(L==null){L=M}else{if(L!==M){return\"mixed\"}}}if(L==null){return\"prn\"}else{return L}};this.getAttrTypeAndValue=function(y){var z=j(y);return e(z)};this.getRDN=function(y){var z=j(y);return i(z)};this.getX500NameArray=function(y){var z=j(y);return h(z)};this.getX500Name=function(A){var y=this.getX500NameArray(A);var z=this.dnarraytostr(y);return{array:y,str:z}};this.readCertPEM=function(y){this.readCertHex(v(y))};this.readCertHex=function(y){this.hex=y;this.getVersion();try{l(this.hex,0,[0,7],\"a3\");this.parseExt()}catch(z){}};this.getParam=function(z){var y={};y.version=this.getVersion();y.serial={hex:this.getSerialNumberHex()};y.sigalg=this.getSignatureAlgorithmField();y.issuer=this.getIssuer();y.notbefore=this.getNotBefore();y.notafter=this.getNotAfter();y.subject=this.getSubject();y.sbjpubkey=hextopem(this.getPublicKeyHex(),\"PUBLIC KEY\");if(this.aExtInfo!=undefined&&this.aExtInfo.length>0){y.ext=this.getExtParamArray()}y.sighex=this.getSignatureValueHex();if(typeof z==\"object\"){if(z.tbshex==true){y.tbshex=a(this.hex,0,[0])}if(z.nodnarray==true){delete y.issuer.array;delete y.subject.array}}return y};this.getExtParamArray=function(z){if(z==undefined){var B=f(this.hex,0,[0,\"[3]\"]);if(B!=-1){z=p(this.hex,0,[0,\"[3]\",0],\"30\")}}var y=[];var A=r(z,0);for(var C=0;C<A.length;C++){var E=b(z,A[C]);var D=this.getExtParam(E);if(D!=null){y.push(D)}}return y};this.getExtParam=function(z){var G={};var B=r(z,0);var C=B.length;if(C!=2&&C!=3){throw new Error(\"wrong number elements in Extension: \"+C+\" \"+z)}var A=q(c(z,0,[0],\"06\"));var E=false;if(C==3&&a(z,0,[1])==\"0101ff\"){E=true}var F=a(z,0,[C-1,0]);var D=undefined;if(A==\"2.5.29.14\"){D=this.getExtSubjectKeyIdentifier(F,E)}else{if(A==\"2.5.29.15\"){D=this.getExtKeyUsage(F,E)}else{if(A==\"2.5.29.17\"){D=this.getExtSubjectAltName(F,E)}else{if(A==\"2.5.29.18\"){D=this.getExtIssuerAltName(F,E)}else{if(A==\"2.5.29.19\"){D=this.getExtBasicConstraints(F,E)}else{if(A==\"2.5.29.30\"){D=this.getExtNameConstraints(F,E)}else{if(A==\"2.5.29.31\"){D=this.getExtCRLDistributionPoints(F,E)}else{if(A==\"2.5.29.32\"){D=this.getExtCertificatePolicies(F,E)}else{if(A==\"2.5.29.35\"){D=this.getExtAuthorityKeyIdentifier(F,E)}else{if(A==\"2.5.29.37\"){D=this.getExtExtKeyUsage(F,E)}else{if(A==\"1.3.6.1.5.5.7.1.1\"){D=this.getExtAuthorityInfoAccess(F,E)}else{if(A==\"2.5.29.20\"){D=this.getExtCRLNumber(F,E)}else{if(A==\"2.5.29.21\"){D=this.getExtCRLReason(F,E)}else{if(A==\"1.3.6.1.5.5.7.48.1.2\"){D=this.getExtOcspNonce(F,E)}else{if(A==\"1.3.6.1.5.5.7.48.1.5\"){D=this.getExtOcspNoCheck(F,E)}else{if(A==\"1.2.840.113583.1.1.9.1\"){D=this.getExtAdobeTimeStamp(F,E)}}}}}}}}}}}}}}}}if(D!=undefined){return D}var y={extname:A,extn:F};if(E){y.critical=true}return y};this.findExt=function(z,A){for(var y=0;y<z.length;y++){if(z[y].extname==A){return z[y]}}return null};this.updateExtCDPFullURI=function(C,y){var B=this.findExt(C,\"cRLDistributionPoints\");if(B==null){return}if(B.array==undefined){return}var E=B.array;for(var A=0;A<E.length;A++){if(E[A].dpname==undefined){continue}if(E[A].dpname.full==undefined){continue}var F=E[A].dpname.full;for(var z=0;z<F.length;z++){var D=F[A];if(D.uri==undefined){continue}D.uri=y}}};this.updateExtAIAOCSP=function(C,z){var B=this.findExt(C,\"authorityInfoAccess\");if(B==null){return}if(B.array==undefined){return}var y=B.array;for(var A=0;A<y.length;A++){if(y[A].ocsp!=undefined){y[A].ocsp=z}}};this.updateExtAIACAIssuer=function(C,z){var B=this.findExt(C,\"authorityInfoAccess\");if(B==null){return}if(B.array==undefined){return}var y=B.array;for(var A=0;A<y.length;A++){if(y[A].caissuer!=undefined){y[A].caissuer=z}}};this.dnarraytostr=function(A){function y(B){return B.map(function(C){return z(C).replace(/\\+/,\"\\\\+\")}).join(\"+\")}function z(B){return B.type+\"=\"+B.value}return\"/\"+A.map(function(B){return y(B).replace(/\\//,\"\\\\/\")}).join(\"/\")};this.getInfo=function(){var z=function(R){var Q=JSON.stringify(R.array).replace(/[\\[\\]\\{\\}\\\"]/g,\"\");return Q};var F=function(W){var U=\"\";var Q=W.array;for(var T=0;T<Q.length;T++){var V=Q[T];U+=\"    policy oid: \"+V.policyoid+\"\\n\";if(V.array===undefined){continue}for(var S=0;S<V.array.length;S++){var R=V.array[S];if(R.cps!==undefined){U+=\"    cps: \"+R.cps+\"\\n\"}}}return U};var I=function(U){var T=\"\";var Q=U.array;for(var S=0;S<Q.length;S++){var V=Q[S];try{if(V.dpname.full[0].uri!==undefined){T+=\"    \"+V.dpname.full[0].uri+\"\\n\"}}catch(R){}try{if(V.dname.full[0].dn.hex!==undefined){T+=\"    \"+X509.hex2dn(V.dpname.full[0].dn.hex)+\"\\n\"}}catch(R){}}return T};var G=function(U){var T=\"\";var Q=U.array;for(var R=0;R<Q.length;R++){var S=Q[R];if(S.caissuer!==undefined){T+=\"    caissuer: \"+S.caissuer+\"\\n\"}if(S.ocsp!==undefined){T+=\"    ocsp: \"+S.ocsp+\"\\n\"}}return T};var A=X509;var K,J,P;K=\"Basic Fields\\n\";K+=\"  serial number: \"+this.getSerialNumberHex()+\"\\n\";K+=\"  signature algorithm: \"+this.getSignatureAlgorithmField()+\"\\n\";K+=\"  issuer: \"+this.getIssuerString()+\"\\n\";K+=\"  notBefore: \"+this.getNotBefore()+\"\\n\";K+=\"  notAfter: \"+this.getNotAfter()+\"\\n\";K+=\"  subject: \"+this.getSubjectString()+\"\\n\";K+=\"  subject public key info: \\n\";J=this.getPublicKey();K+=\"    key algorithm: \"+J.type+\"\\n\";if(J.type===\"RSA\"){K+=\"    n=\"+hextoposhex(J.n.toString(16)).substr(0,16)+\"...\\n\";K+=\"    e=\"+hextoposhex(J.e.toString(16))+\"\\n\"}P=this.aExtInfo;if(P!==undefined&&P!==null){K+=\"X509v3 Extensions:\\n\";for(var M=0;M<P.length;M++){var O=P[M];var y=KJUR.asn1.x509.OID.oid2name(O.oid);if(y===\"\"){y=O.oid}var L=\"\";if(O.critical===true){L=\"CRITICAL\"}K+=\"  \"+y+\" \"+L+\":\\n\";if(y===\"basicConstraints\"){var B=this.getExtBasicConstraints();if(B.cA===undefined){K+=\"    {}\\n\"}else{K+=\"    cA=true\";if(B.pathLen!==undefined){K+=\", pathLen=\"+B.pathLen}K+=\"\\n\"}}else{if(y===\"keyUsage\"){K+=\"    \"+this.getExtKeyUsageString()+\"\\n\"}else{if(y===\"subjectKeyIdentifier\"){K+=\"    \"+this.getExtSubjectKeyIdentifier().kid.hex+\"\\n\"}else{if(y===\"authorityKeyIdentifier\"){var C=this.getExtAuthorityKeyIdentifier();if(C.kid!==undefined){K+=\"    kid=\"+C.kid.hex+\"\\n\"}}else{if(y===\"extKeyUsage\"){var N=this.getExtExtKeyUsage().array;K+=\"    \"+N.join(\", \")+\"\\n\"}else{if(y===\"subjectAltName\"){var D=z(this.getExtSubjectAltName());K+=\"    \"+D+\"\\n\"}else{if(y===\"cRLDistributionPoints\"){var H=this.getExtCRLDistributionPoints();K+=I(H)}else{if(y===\"authorityInfoAccess\"){var E=this.getExtAuthorityInfoAccess();K+=G(E)}else{if(y===\"certificatePolicies\"){K+=F(this.getExtCertificatePolicies())}}}}}}}}}}}K+=\"signature algorithm: \"+this.getSignatureAlgorithmName()+\"\\n\";K+=\"signature: \"+this.getSignatureValueHex().substr(0,16)+\"...\\n\";return K};if(typeof u==\"string\"){if(u.indexOf(\"-----BEGIN\")!=-1){this.readCertPEM(u)}else{if(KJUR.lang.String.isHex(u)){this.readCertHex(u)}}}}X509.hex2dn=function(e,b){if(b===undefined){b=0}var a=new X509();var c=ASN1HEX.getTLV(e,b);var d=a.getX500Name(e);return d.str};X509.hex2rdn=function(f,b){if(b===undefined){b=0}if(f.substr(b,2)!==\"31\"){throw new Error(\"malformed RDN\")}var c=new Array();var d=ASN1HEX.getChildIdx(f,b);for(var e=0;e<d.length;e++){c.push(X509.hex2attrTypeValue(f,d[e]))}c=c.map(function(a){return a.replace(\"+\",\"\\\\+\")});return c.join(\"+\")};X509.hex2attrTypeValue=function(d,i){var j=ASN1HEX;var h=j.getV;if(i===undefined){i=0}if(d.substr(i,2)!==\"30\"){throw new Error(\"malformed attribute type and value\")}var g=j.getChildIdx(d,i);if(g.length!==2||d.substr(g[0],2)!==\"06\"){\"malformed attribute type and value\"}var b=h(d,g[0]);var f=KJUR.asn1.ASN1Util.oidHexToInt(b);var e=KJUR.asn1.x509.OID.oid2atype(f);var a=h(d,g[1]);var c=hextorstr(a);return e+\"=\"+c};X509.getPublicKeyFromCertHex=function(b){var a=new X509();a.readCertHex(b);return a.getPublicKey()};X509.getPublicKeyFromCertPEM=function(b){var a=new X509();a.readCertPEM(b);return a.getPublicKey()};X509.getPublicKeyInfoPropOfCertPEM=function(c){var e=ASN1HEX;var g=e.getVbyList;var b={};var a,f,d;b.algparam=null;a=new X509();a.readCertPEM(c);f=a.getPublicKeyHex();b.keyhex=g(f,0,[1],\"03\").substr(2);b.algoid=g(f,0,[0,0],\"06\");if(b.algoid===\"2a8648ce3d0201\"){b.algparam=g(f,0,[0,1],\"06\")}return b};X509.KEYUSAGE_NAME=[\"digitalSignature\",\"nonRepudiation\",\"keyEncipherment\",\"dataEncipherment\",\"keyAgreement\",\"keyCertSign\",\"cRLSign\",\"encipherOnly\",\"decipherOnly\"];\nvar X509CRL=function(e){var a=KJUR,f=a.lang.String.isHex,m=ASN1HEX,k=m.getV,b=m.getTLV,h=m.getVbyList,c=m.getTLVbyList,d=m.getTLVbyListEx,i=m.getIdxbyList,g=m.getIdxbyListEx,l=m.getChildIdx,j=new X509();this.hex=null;this.posSigAlg=null;this.posRevCert=null;this.parsed=null;this._setPos=function(){var o=i(this.hex,0,[0,0]);var n=this.hex.substr(o,2);if(n==\"02\"){this.posSigAlg=1}else{if(n==\"30\"){this.posSigAlg=0}else{throw new Error(\"malformed 1st item of TBSCertList: \"+n)}}var s=i(this.hex,0,[0,this.posSigAlg+3]);var r=this.hex.substr(s,2);if(r==\"17\"||r==\"18\"){var q,p;q=i(this.hex,0,[0,this.posSigAlg+4]);this.posRevCert=null;if(q!=-1){p=this.hex.substr(q,2);if(p==\"30\"){this.posRevCert=this.posSigAlg+4}}}else{if(r==\"30\"){this.posRevCert=this.posSigAlg+3}else{if(r==\"a0\"){this.posRevCert=null}else{throw new Error(\"malformed nextUpdate or revCert tag: \"+r)}}}};this.getVersion=function(){if(this.posSigAlg==0){return null}return parseInt(h(this.hex,0,[0,0],\"02\"),16)+1};this.getSignatureAlgorithmField=function(){var n=c(this.hex,0,[0,this.posSigAlg],\"30\");return j.getAlgorithmIdentifierName(n)};this.getIssuer=function(){return j.getX500Name(this.getIssuerHex())};this.getIssuerHex=function(){return c(this.hex,0,[0,this.posSigAlg+1],\"30\")};this.getThisUpdate=function(){var n=h(this.hex,0,[0,this.posSigAlg+2]);return result=hextorstr(n)};this.getNextUpdate=function(){var o=i(this.hex,0,[0,this.posSigAlg+3]);var n=this.hex.substr(o,2);if(n!=\"17\"&&n!=\"18\"){return null}return hextorstr(k(this.hex,o))};this.getRevCertArray=function(){if(this.posRevCert==null){return null}var o=[];var n=i(this.hex,0,[0,this.posRevCert]);var p=l(this.hex,n);for(var q=0;q<p.length;q++){var r=b(this.hex,p[q]);o.push(this.getRevCert(r))}return o};this.getRevCert=function(p){var o={};var n=l(p,0);o.sn={hex:h(p,0,[0],\"02\")};o.date=hextorstr(h(p,0,[1]));if(n.length==3){o.ext=j.getExtParamArray(c(p,0,[2]))}return o};this.findRevCert=function(p){var n=new X509(p);var o=n.getSerialNumberHex();return this.findRevCertBySN(o)};this.findRevCertBySN=function(o){if(this.parsed==null){this.getParam()}if(this.parsed.revcert==null){return null}var n=this.parsed.revcert;for(var p=0;p<n.length;p++){if(o==n[p].sn.hex){return n[p]}}return null};this.getSignatureValueHex=function(){return h(this.hex,0,[2],\"03\",true)};this.verifySignature=function(o){var p=this.getSignatureAlgorithmField();var n=this.getSignatureValueHex();var q=c(this.hex,0,[0],\"30\");var r=new KJUR.crypto.Signature({alg:p});r.init(o);r.updateHex(q);return r.verify(n)};this.getParam=function(r){var n={};var p=this.getVersion();if(p!=null){n.version=p}n.sigalg=this.getSignatureAlgorithmField();n.issuer=this.getIssuer();n.thisupdate=this.getThisUpdate();var q=this.getNextUpdate();if(q!=null){n.nextupdate=q}var t=this.getRevCertArray();if(t!=null){n.revcert=t}var s=g(this.hex,0,[0,\"[0]\"]);if(s!=-1){var o=d(this.hex,0,[0,\"[0]\",0]);n.ext=j.getExtParamArray(o)}n.sighex=this.getSignatureValueHex();this.parsed=n;if(typeof r==\"object\"){if(r.tbshex==true){n.tbshex=c(this.hex,0,[0])}if(r.nodnarray==true){delete n.issuer.array}}return n};if(typeof e==\"string\"){if(f(e)){this.hex=e}else{if(e.match(/-----BEGIN X509 CRL/)){this.hex=pemtohex(e)}}this._setPos()}};\nif(typeof KJUR==\"undefined\"||!KJUR){KJUR={}}if(typeof KJUR.jws==\"undefined\"||!KJUR.jws){KJUR.jws={}}KJUR.jws.JWS=function(){var b=KJUR,a=b.jws.JWS,c=a.isSafeJSONString;this.parseJWS=function(g,j){if((this.parsedJWS!==undefined)&&(j||(this.parsedJWS.sigvalH!==undefined))){return}var i=g.match(/^([^.]+)\\.([^.]+)\\.([^.]+)$/);if(i==null){throw\"JWS signature is not a form of 'Head.Payload.SigValue'.\"}var k=i[1];var e=i[2];var l=i[3];var n=k+\".\"+e;this.parsedJWS={};this.parsedJWS.headB64U=k;this.parsedJWS.payloadB64U=e;this.parsedJWS.sigvalB64U=l;this.parsedJWS.si=n;if(!j){var h=b64utohex(l);var f=parseBigInt(h,16);this.parsedJWS.sigvalH=h;this.parsedJWS.sigvalBI=f}var d=b64utoutf8(k);var m=b64utoutf8(e);this.parsedJWS.headS=d;this.parsedJWS.payloadS=m;if(!c(d,this.parsedJWS,\"headP\")){throw\"malformed JSON string for JWS Head: \"+d}}};KJUR.jws.JWS.sign=function(j,w,z,A,a){var x=KJUR,n=x.jws,r=n.JWS,h=r.readSafeJSONString,q=r.isSafeJSONString,d=x.crypto,l=d.ECDSA,p=d.Mac,c=d.Signature,u=JSON;var t,k,o;if(typeof w!=\"string\"&&typeof w!=\"object\"){throw\"spHeader must be JSON string or object: \"+w}if(typeof w==\"object\"){k=w;t=u.stringify(k)}if(typeof w==\"string\"){t=w;if(!q(t)){throw\"JWS Head is not safe JSON string: \"+t}k=h(t)}o=z;if(typeof z==\"object\"){o=u.stringify(z)}if((j==\"\"||j==null)&&k.alg!==undefined){j=k.alg}if((j!=\"\"&&j!=null)&&k.alg===undefined){k.alg=j;t=u.stringify(k)}if(j!==k.alg){throw\"alg and sHeader.alg doesn't match: \"+j+\"!=\"+k.alg}var s=null;if(r.jwsalg2sigalg[j]===undefined){throw\"unsupported alg name: \"+j}else{s=r.jwsalg2sigalg[j]}var e=utf8tob64u(t);var m=utf8tob64u(o);var b=e+\".\"+m;var y=\"\";if(s.substr(0,4)==\"Hmac\"){if(A===undefined){throw\"mac key shall be specified for HS* alg\"}var i=new p({alg:s,prov:\"cryptojs\",pass:A});i.updateString(b);y=i.doFinal()}else{if(s.indexOf(\"withECDSA\")!=-1){var f=new c({alg:s});f.init(A,a);f.updateString(b);var g=f.sign();y=KJUR.crypto.ECDSA.asn1SigToConcatSig(g)}else{if(s!=\"none\"){var f=new c({alg:s});f.init(A,a);f.updateString(b);y=f.sign()}}}var v=hextob64u(y);return b+\".\"+v};KJUR.jws.JWS.verify=function(w,B,n){var x=KJUR,q=x.jws,t=q.JWS,i=t.readSafeJSONString,e=x.crypto,p=e.ECDSA,s=e.Mac,d=e.Signature,m;if(typeof RSAKey!==undefined){m=RSAKey}if(!isBase64URLDot(w)){return false}var y=w.split(\".\");if(y.length!==3){return false}var f=y[0];var r=y[1];var c=f+\".\"+r;var A=b64utohex(y[2]);var l=i(b64utoutf8(y[0]));var k=null;var z=null;if(l.alg===undefined){throw\"algorithm not specified in header\"}else{k=l.alg;z=k.substr(0,2)}if(n!=null&&Object.prototype.toString.call(n)===\"[object Array]\"&&n.length>0){var b=\":\"+n.join(\":\")+\":\";if(b.indexOf(\":\"+k+\":\")==-1){throw\"algorithm '\"+k+\"' not accepted in the list\"}}if(k!=\"none\"&&B===null){throw\"key shall be specified to verify.\"}if(typeof B==\"string\"&&B.indexOf(\"-----BEGIN \")!=-1){B=KEYUTIL.getKey(B)}if(z==\"RS\"||z==\"PS\"){if(!(B instanceof m)){throw\"key shall be a RSAKey obj for RS* and PS* algs\"}}if(z==\"ES\"){if(!(B instanceof p)){throw\"key shall be a ECDSA obj for ES* algs\"}}if(k==\"none\"){}var u=null;if(t.jwsalg2sigalg[l.alg]===undefined){throw\"unsupported alg name: \"+k}else{u=t.jwsalg2sigalg[k]}if(u==\"none\"){throw\"not supported\"}else{if(u.substr(0,4)==\"Hmac\"){var o=null;if(B===undefined){throw\"hexadecimal key shall be specified for HMAC\"}var j=new s({alg:u,pass:B});j.updateString(c);o=j.doFinal();return A==o}else{if(u.indexOf(\"withECDSA\")!=-1){var h=null;try{h=p.concatSigToASN1Sig(A)}catch(v){return false}var g=new d({alg:u});g.init(B);g.updateString(c);return g.verify(h)}else{var g=new d({alg:u});g.init(B);g.updateString(c);return g.verify(A)}}}};KJUR.jws.JWS.parse=function(g){var c=g.split(\".\");var b={};var f,e,d;if(c.length!=2&&c.length!=3){throw\"malformed sJWS: wrong number of '.' splitted elements\"}f=c[0];e=c[1];if(c.length==3){d=c[2]}b.headerObj=KJUR.jws.JWS.readSafeJSONString(b64utoutf8(f));b.payloadObj=KJUR.jws.JWS.readSafeJSONString(b64utoutf8(e));b.headerPP=JSON.stringify(b.headerObj,null,\"  \");if(b.payloadObj==null){b.payloadPP=b64utoutf8(e)}else{b.payloadPP=JSON.stringify(b.payloadObj,null,\"  \")}if(d!==undefined){b.sigHex=b64utohex(d)}return b};KJUR.jws.JWS.verifyJWT=function(e,l,r){var d=KJUR,j=d.jws,o=j.JWS,n=o.readSafeJSONString,p=o.inArray,f=o.includedArray;if(!isBase64URLDot(e)){return false}var k=e.split(\".\");if(k.length!=3){return false}var c=k[0];var i=k[1];var q=c+\".\"+i;var m=b64utohex(k[2]);var h=n(b64utoutf8(c));var g=n(b64utoutf8(i));if(h.alg===undefined){return false}if(r.alg===undefined){throw\"acceptField.alg shall be specified\"}if(!p(h.alg,r.alg)){return false}if(g.iss!==undefined&&typeof r.iss===\"object\"){if(!p(g.iss,r.iss)){return false}}if(g.sub!==undefined&&typeof r.sub===\"object\"){if(!p(g.sub,r.sub)){return false}}if(g.aud!==undefined&&typeof r.aud===\"object\"){if(typeof g.aud==\"string\"){if(!p(g.aud,r.aud)){return false}}else{if(typeof g.aud==\"object\"){if(!f(g.aud,r.aud)){return false}}}}var b=j.IntDate.getNow();if(r.verifyAt!==undefined&&typeof r.verifyAt===\"number\"){b=r.verifyAt}if(r.gracePeriod===undefined||typeof r.gracePeriod!==\"number\"){r.gracePeriod=0}if(g.exp!==undefined&&typeof g.exp==\"number\"){if(g.exp+r.gracePeriod<b){return false}}if(g.nbf!==undefined&&typeof g.nbf==\"number\"){if(b<g.nbf-r.gracePeriod){return false}}if(g.iat!==undefined&&typeof g.iat==\"number\"){if(b<g.iat-r.gracePeriod){return false}}if(g.jti!==undefined&&r.jti!==undefined){if(g.jti!==r.jti){return false}}if(!o.verify(e,l,r.alg)){return false}return true};KJUR.jws.JWS.includedArray=function(b,a){var c=KJUR.jws.JWS.inArray;if(b===null){return false}if(typeof b!==\"object\"){return false}if(typeof b.length!==\"number\"){return false}for(var d=0;d<b.length;d++){if(!c(b[d],a)){return false}}return true};KJUR.jws.JWS.inArray=function(d,b){if(b===null){return false}if(typeof b!==\"object\"){return false}if(typeof b.length!==\"number\"){return false}for(var c=0;c<b.length;c++){if(b[c]==d){return true}}return false};KJUR.jws.JWS.jwsalg2sigalg={HS256:\"HmacSHA256\",HS384:\"HmacSHA384\",HS512:\"HmacSHA512\",RS256:\"SHA256withRSA\",RS384:\"SHA384withRSA\",RS512:\"SHA512withRSA\",ES256:\"SHA256withECDSA\",ES384:\"SHA384withECDSA\",ES512:\"SHA512withECDSA\",PS256:\"SHA256withRSAandMGF1\",PS384:\"SHA384withRSAandMGF1\",PS512:\"SHA512withRSAandMGF1\",none:\"none\",};KJUR.jws.JWS.isSafeJSONString=function(c,b,d){var e=null;try{e=jsonParse(c);if(typeof e!=\"object\"){return 0}if(e.constructor===Array){return 0}if(b){b[d]=e}return 1}catch(a){return 0}};KJUR.jws.JWS.readSafeJSONString=function(b){var c=null;try{c=jsonParse(b);if(typeof c!=\"object\"){return null}if(c.constructor===Array){return null}return c}catch(a){return null}};KJUR.jws.JWS.getEncodedSignatureValueFromJWS=function(b){var a=b.match(/^[^.]+\\.[^.]+\\.([^.]+)$/);if(a==null){throw\"JWS signature is not a form of 'Head.Payload.SigValue'.\"}return a[1]};KJUR.jws.JWS.getJWKthumbprint=function(d){if(d.kty!==\"RSA\"&&d.kty!==\"EC\"&&d.kty!==\"oct\"){throw\"unsupported algorithm for JWK Thumprint\"}var a=\"{\";if(d.kty===\"RSA\"){if(typeof d.n!=\"string\"||typeof d.e!=\"string\"){throw\"wrong n and e value for RSA key\"}a+='\"e\":\"'+d.e+'\",';a+='\"kty\":\"'+d.kty+'\",';a+='\"n\":\"'+d.n+'\"}'}else{if(d.kty===\"EC\"){if(typeof d.crv!=\"string\"||typeof d.x!=\"string\"||typeof d.y!=\"string\"){throw\"wrong crv, x and y value for EC key\"}a+='\"crv\":\"'+d.crv+'\",';a+='\"kty\":\"'+d.kty+'\",';a+='\"x\":\"'+d.x+'\",';a+='\"y\":\"'+d.y+'\"}'}else{if(d.kty===\"oct\"){if(typeof d.k!=\"string\"){throw\"wrong k value for oct(symmetric) key\"}a+='\"kty\":\"'+d.kty+'\",';a+='\"k\":\"'+d.k+'\"}'}}}var b=rstrtohex(a);var c=KJUR.crypto.Util.hashHex(b,\"sha256\");var e=hextob64u(c);return e};KJUR.jws.IntDate={};KJUR.jws.IntDate.get=function(c){var b=KJUR.jws.IntDate,d=b.getNow,a=b.getZulu;if(c==\"now\"){return d()}else{if(c==\"now + 1hour\"){return d()+60*60}else{if(c==\"now + 1day\"){return d()+60*60*24}else{if(c==\"now + 1month\"){return d()+60*60*24*30}else{if(c==\"now + 1year\"){return d()+60*60*24*365}else{if(c.match(/Z$/)){return a(c)}else{if(c.match(/^[0-9]+$/)){return parseInt(c)}}}}}}}throw\"unsupported format: \"+c};KJUR.jws.IntDate.getZulu=function(a){return zulutosec(a)};KJUR.jws.IntDate.getNow=function(){var a=~~(new Date()/1000);return a};KJUR.jws.IntDate.intDate2UTCString=function(a){var b=new Date(a*1000);return b.toUTCString()};KJUR.jws.IntDate.intDate2Zulu=function(e){var i=new Date(e*1000),h=(\"0000\"+i.getUTCFullYear()).slice(-4),g=(\"00\"+(i.getUTCMonth()+1)).slice(-2),b=(\"00\"+i.getUTCDate()).slice(-2),a=(\"00\"+i.getUTCHours()).slice(-2),c=(\"00\"+i.getUTCMinutes()).slice(-2),f=(\"00\"+i.getUTCSeconds()).slice(-2);return h+g+b+a+c+f+\"Z\"};\nif(typeof KJUR==\"undefined\"||!KJUR){KJUR={}}if(typeof KJUR.jws==\"undefined\"||!KJUR.jws){KJUR.jws={}}KJUR.jws.JWSJS=function(){var c=KJUR,b=c.jws,a=b.JWS,d=a.readSafeJSONString;this.aHeader=[];this.sPayload=\"\";this.aSignature=[];this.init=function(){this.aHeader=[];this.sPayload=undefined;this.aSignature=[]};this.initWithJWS=function(f){this.init();var e=f.split(\".\");if(e.length!=3){throw\"malformed input JWS\"}this.aHeader.push(e[0]);this.sPayload=e[1];this.aSignature.push(e[2])};this.addSignature=function(e,h,m,k){if(this.sPayload===undefined||this.sPayload===null){throw\"there's no JSON-JS signature to add.\"}var l=this.aHeader.length;if(this.aHeader.length!=this.aSignature.length){throw\"aHeader.length != aSignature.length\"}try{var f=KJUR.jws.JWS.sign(e,h,this.sPayload,m,k);var j=f.split(\".\");var n=j[0];var g=j[2];this.aHeader.push(j[0]);this.aSignature.push(j[2])}catch(i){if(this.aHeader.length>l){this.aHeader.pop()}if(this.aSignature.length>l){this.aSignature.pop()}throw\"addSignature failed: \"+i}};this.verifyAll=function(h){if(this.aHeader.length!==h.length||this.aSignature.length!==h.length){return false}for(var g=0;g<h.length;g++){var f=h[g];if(f.length!==2){return false}var e=this.verifyNth(g,f[0],f[1]);if(e===false){return false}}return true};this.verifyNth=function(f,j,g){if(this.aHeader.length<=f||this.aSignature.length<=f){return false}var h=this.aHeader[f];var k=this.aSignature[f];var l=h+\".\"+this.sPayload+\".\"+k;var e=false;try{e=a.verify(l,j,g)}catch(i){return false}return e};this.readJWSJS=function(g){if(typeof g===\"string\"){var f=d(g);if(f==null){throw\"argument is not safe JSON object string\"}this.aHeader=f.headers;this.sPayload=f.payload;this.aSignature=f.signatures}else{try{if(g.headers.length>0){this.aHeader=g.headers}else{throw\"malformed header\"}if(typeof g.payload===\"string\"){this.sPayload=g.payload}else{throw\"malformed signatures\"}if(g.signatures.length>0){this.aSignature=g.signatures}else{throw\"malformed signatures\"}}catch(e){throw\"malformed JWS-JS JSON object: \"+e}}};this.getJSON=function(){return{headers:this.aHeader,payload:this.sPayload,signatures:this.aSignature}};this.isEmpty=function(){if(this.aHeader.length==0){return 1}return 0}};\nexports.SecureRandom = SecureRandom;\nexports.rng_seed_time = rng_seed_time;\n\nexports.BigInteger = BigInteger;\nexports.RSAKey = RSAKey;\nexports.ECDSA = KJUR.crypto.ECDSA;\nexports.DSA = KJUR.crypto.DSA;\nexports.Signature = KJUR.crypto.Signature;\nexports.MessageDigest = KJUR.crypto.MessageDigest;\nexports.Mac = KJUR.crypto.Mac;\nexports.Cipher = KJUR.crypto.Cipher;\nexports.KEYUTIL = KEYUTIL;\nexports.ASN1HEX = ASN1HEX;\nexports.X509 = X509;\nexports.X509CRL = X509CRL;\nexports.CryptoJS = CryptoJS;\n\n// ext/base64.js\nexports.b64tohex = b64tohex;\nexports.b64toBA = b64toBA;\n\n// ext/ec*.js\nexports.ECFieldElementFp = ECFieldElementFp;\nexports.ECPointFp = ECPointFp;\nexports.ECCurveFp = ECCurveFp;\n\n// base64x.js\nexports.stoBA = stoBA;\nexports.BAtos = BAtos;\nexports.BAtohex = BAtohex;\nexports.stohex = stohex;\nexports.stob64 = stob64;\nexports.stob64u = stob64u;\nexports.b64utos = b64utos;\nexports.b64tob64u = b64tob64u;\nexports.b64utob64 = b64utob64;\nexports.hex2b64 = hex2b64;\nexports.hextob64u = hextob64u;\nexports.b64utohex = b64utohex;\nexports.utf8tob64u = utf8tob64u;\nexports.b64utoutf8 = b64utoutf8;\nexports.utf8tob64 = utf8tob64;\nexports.b64toutf8 = b64toutf8;\nexports.utf8tohex = utf8tohex;\nexports.hextoutf8 = hextoutf8;\nexports.hextorstr = hextorstr;\nexports.rstrtohex = rstrtohex;\nexports.hextob64 = hextob64;\nexports.hextob64nl = hextob64nl;\nexports.b64nltohex = b64nltohex;\nexports.hextopem = hextopem;\nexports.pemtohex = pemtohex;\nexports.hextoArrayBuffer = hextoArrayBuffer;\nexports.ArrayBuffertohex = ArrayBuffertohex;\nexports.zulutomsec = zulutomsec;\nexports.zulutosec = zulutosec;\nexports.zulutodate = zulutodate;\nexports.datetozulu = datetozulu;\nexports.uricmptohex = uricmptohex;\nexports.hextouricmp = hextouricmp;\nexports.ipv6tohex = ipv6tohex;\nexports.hextoipv6 = hextoipv6;\nexports.hextoip = hextoip;\nexports.iptohex = iptohex;\nexports.ucs2hextoutf8 = ucs2hextoutf8;\nexports.encodeURIComponentAll = encodeURIComponentAll;\nexports.newline_toUnix = newline_toUnix;\nexports.newline_toDos = newline_toDos;\nexports.hextoposhex = hextoposhex;\nexports.intarystrtohex = intarystrtohex;\nexports.strdiffidx = strdiffidx;\nexports.oidtohex = oidtohex;\nexports.hextooid = hextooid;\nexports.strpad = strpad;\nexports.bitstrtoint = bitstrtoint;\nexports.inttobitstr = inttobitstr;\nexports.bitstrtobinstr = bitstrtobinstr;\nexports.binstrtobitstr = binstrtobitstr;\nexports.isBase64URLDot = isBase64URLDot;\nexports.namearraytobinstr = namearraytobinstr;\nexports.extendClass = extendClass;\n\n// name spaces\nexports.KJUR = KJUR;\nexports.crypto = KJUR.crypto;\nexports.asn1 = KJUR.asn1;\nexports.jws = KJUR.jws;\nexports.lang = KJUR.lang;\n\n\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","var Stack = require('./_Stack'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseFor = require('./_baseFor'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isObject = require('./isObject'),\n    keysIn = require('./keysIn'),\n    safeGet = require('./_safeGet');\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;\n","var assignMergeValue = require('./_assignMergeValue'),\n    cloneBuffer = require('./_cloneBuffer'),\n    cloneTypedArray = require('./_cloneTypedArray'),\n    copyArray = require('./_copyArray'),\n    initCloneObject = require('./_initCloneObject'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isPlainObject = require('./isPlainObject'),\n    isTypedArray = require('./isTypedArray'),\n    safeGet = require('./_safeGet'),\n    toPlainObject = require('./toPlainObject');\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nmodule.exports = baseMergeDeep;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n","var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nmodule.exports = safeGet;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nmodule.exports = merge;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).filter(Boolean).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?#&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encode(key);\n      value = encode(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue;\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;function Lg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(a){var b=Mg.current;E(Mg);a._currentValue=b}\nfunction Sg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}function Tg(a,b){Ng=a;Pg=Og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(Ug=!0),a.firstContext=null)}\nfunction Vg(a){var b=a._currentValue;if(Pg!==a)if(a={context:a,memoizedValue:b,next:null},null===Og){if(null===Ng)throw Error(p(308));Og=a;Ng.dependencies={lanes:0,firstContext:a}}else Og=Og.next=a;return b}var Wg=null;function Xg(a){null===Wg?Wg=[a]:Wg.push(a)}function Yg(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,Xg(b)):(c.next=e.next,e.next=c);b.interleaved=c;return Zg(a,d)}\nfunction Zg(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var $g=!1;function ah(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction bh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function ch(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction dh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return Zg(a,c)}e=d.interleaved;null===e?(b.next=b,Xg(d)):(b.next=e.next,e.next=b);d.interleaved=b;return Zg(a,c)}function eh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction fh(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction gh(a,b,c,d){var e=a.updateQueue;$g=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:$g=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);hh|=g;a.lanes=g;a.memoizedState=q}}\nfunction ih(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var jh=(new aa.Component).refs;function kh(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar nh={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=L(),d=\nlh(a),e=ch(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=dh(a,e,d);null!==b&&(mh(b,a,d,c),eh(b,a,d))}};function oh(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction ph(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Vg(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=nh;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction qh(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&nh.enqueueReplaceState(b,b.state,null)}\nfunction rh(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jh;ah(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Vg(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kh(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&nh.enqueueReplaceState(e,e.state,null),gh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}\nfunction sh(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;b===jh&&(b=e.refs={});null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction th(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function uh(a){var b=a._init;return b(a._payload)}\nfunction vh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=wh(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=xh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&uh(f)===b.type))return d=e(b,c.props),d.ref=sh(a,b,c),d.return=a,d;d=yh(c.type,c.key,c.props,null,a.mode,d);d.ref=sh(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=zh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ah(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=xh(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=yh(b.type,b.key,b.props,null,a.mode,c),\nc.ref=sh(a,null,b),c.return=a,c;case wa:return b=zh(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Ah(b,a.mode,c,null),b.return=a,b;th(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);th(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);th(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&uh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=sh(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Ah(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=yh(f.type,f.key,f.props,null,a.mode,h),h.ref=sh(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=zh(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);th(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=xh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(a){if(a===Dh)throw Error(p(174));return a}function Ih(a,b){G(Gh,b);G(Fh,a);G(Eh,Dh);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(Eh);G(Eh,b)}function Jh(){E(Eh);E(Fh);E(Gh)}\nfunction Kh(a){Hh(Gh.current);var b=Hh(Eh.current);var c=lb(b,a.type);b!==c&&(G(Fh,a),G(Eh,c))}function Lh(a){Fh.current===a&&(E(Eh),E(Fh))}var M=Uf(0);\nfunction Mh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Nh=[];\nfunction Oh(){for(var a=0;a<Nh.length;a++)Nh[a]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p(321));}function Wh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Xh(a,b,c,d,e,f){Rh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Ph.current=null===a||null===a.memoizedState?Yh:Zh;a=c(d,e);if(Th){f=0;do{Th=!1;Uh=0;if(25<=f)throw Error(p(301));f+=1;P=O=null;b.updateQueue=null;Ph.current=$h;a=c(d,e)}while(Th)}Ph.current=ai;b=null!==O&&null!==O.next;Rh=0;P=O=N=null;Sh=!1;if(b)throw Error(p(300));return a}function bi(){var a=0!==Uh;Uh=0;return a}\nfunction ci(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function di(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(p(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\nfunction ei(a,b){return\"function\"===typeof b?b(a):b}\nfunction fi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Rh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;N.lanes|=m;hh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(Ug=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,N.lanes|=f,hh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction gi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(Ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function hi(){}\nfunction ii(a,b){var c=N,d=di(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,Ug=!0);d=d.queue;ji(ki.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==P&&P.memoizedState.tag&1){c.flags|=2048;li(9,mi.bind(null,c,d,e,b),void 0,null);if(null===R)throw Error(p(349));0!==(Rh&30)||ni(c,b,e)}return e}function ni(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction mi(a,b,c,d){b.value=c;b.getSnapshot=d;oi(b)&&pi(a)}function ki(a,b,c){return c(function(){oi(b)&&pi(a)})}function oi(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function pi(a){var b=Zg(a,1);null!==b&&mh(b,a,1,-1)}\nfunction qi(a){var b=ci();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:a};b.queue=a;a=a.dispatch=ri.bind(null,N,a);return[b.memoizedState,a]}\nfunction li(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function si(){return di().memoizedState}function ti(a,b,c,d){var e=ci();N.flags|=a;e.memoizedState=li(1|b,c,void 0,void 0===d?null:d)}\nfunction ui(a,b,c,d){var e=di();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Wh(d,g.deps)){e.memoizedState=li(b,c,f,d);return}}N.flags|=a;e.memoizedState=li(1|b,c,f,d)}function vi(a,b){return ti(8390656,8,a,b)}function ji(a,b){return ui(2048,8,a,b)}function wi(a,b){return ui(4,2,a,b)}function xi(a,b){return ui(4,4,a,b)}\nfunction yi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function zi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ui(4,4,yi.bind(null,b,a),c)}function Ai(){}function Bi(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Ci(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Di(a,b,c){if(0===(Rh&21))return a.baseState&&(a.baseState=!1,Ug=!0),a.memoizedState=c;He(c,b)||(c=yc(),N.lanes|=c,hh|=c,a.baseState=!0);return b}function Ei(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Qh.transition;Qh.transition={};try{a(!1),b()}finally{C=c,Qh.transition=d}}function Fi(){return di().memoizedState}\nfunction Gi(a,b,c){var d=lh(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,c);else if(c=Yg(a,b,c,d),null!==c){var e=L();mh(c,a,d,e);Ji(c,b,d)}}\nfunction ri(a,b,c){var d=lh(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,Xg(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=Yg(a,b,e,d);null!==c&&(e=L(),mh(c,a,d,e),Ji(c,b,d))}}\nfunction Hi(a){var b=a.alternate;return a===N||null!==b&&b===N}function Ii(a,b){Th=Sh=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Ji(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(a,b){ci().memoizedState=[a,void 0===b?null:b];return a},useContext:Vg,useEffect:vi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ti(4194308,\n4,yi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ti(4194308,4,a,b)},useInsertionEffect:function(a,b){return ti(4,2,a,b)},useMemo:function(a,b){var c=ci();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=ci();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Gi.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=\nci();a={current:a};return b.memoizedState=a},useState:qi,useDebugValue:Ai,useDeferredValue:function(a){return ci().memoizedState=a},useTransition:function(){var a=qi(!1),b=a[0];a=Ei.bind(null,a[1]);ci().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=N,e=ci();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===R)throw Error(p(349));0!==(Rh&30)||ni(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;vi(ki.bind(null,d,\nf,a),[a]);d.flags|=2048;li(9,mi.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=ci(),b=R.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Uh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Vh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},\nuseDebugValue:Ai,useDeferredValue:function(a){var b=di();return Di(b,O.memoizedState,a)},useTransition:function(){var a=fi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(a){var b=di();return null===\nO?b.memoizedState=a:Di(b,O.memoizedState,a)},useTransition:function(){var a=gi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}function Li(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}\nfunction Mi(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Ni=\"function\"===typeof WeakMap?WeakMap:Map;function Oi(a,b,c){c=ch(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Pi||(Pi=!0,Qi=d);Mi(a,b)};return c}\nfunction Ri(a,b,c){c=ch(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Mi(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Mi(a,b);\"function\"!==typeof d&&(null===Si?Si=new Set([this]):Si.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Ti(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ni;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ui.bind(null,a,b,c),b.then(a,a))}function Vi(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Wi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=ch(-1,1),b.tag=2,dh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(a,b,c,d){b.child=null===a?Ch(b,null,c,d):Bh(b,a.child,c,d)}\nfunction Zi(a,b,c,d,e){c=c.render;var f=b.ref;Tg(b,e);d=Xh(a,b,c,d,f,e);c=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&c&&vg(b);b.flags|=1;Yi(a,b,d,e);return b.child}\nfunction aj(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!bj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,cj(a,b,f,d,e);a=yh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return $i(a,b,e)}b.flags|=1;a=wh(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction cj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(Ug=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(Ug=!0);else return b.lanes=a.lanes,$i(a,b,e)}return dj(a,b,c,d,e)}\nfunction ej(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(fj,gj),gj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(fj,gj);gj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(fj,gj),gj|=d;Yi(a,b,e,c);return b.child}function hj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function dj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);Tg(b,e);c=Xh(a,b,c,d,f,e);d=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&d&&vg(b);b.flags|=1;Yi(a,b,c,e);return b.child}\nfunction ij(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;Tg(b,e);if(null===b.stateNode)jj(a,b),ph(b,c,d),rh(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Vg(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&qh(b,g,d,l);$g=!1;var r=b.memoizedState;g.state=r;gh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||$g?(\"function\"===typeof m&&(kh(b,c,m,d),k=b.memoizedState),(h=$g||oh(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;bh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Lg(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=Vg(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&qh(b,g,d,k);$g=!1;r=b.memoizedState;g.state=r;gh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||$g?(\"function\"===typeof y&&(kh(b,c,y,d),n=b.memoizedState),(l=$g||oh(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return kj(a,b,c,d,f,e)}\nfunction kj(a,b,c,d,e,f){hj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),$i(a,b,f);d=b.stateNode;Xi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Bh(b,a.child,null,f),b.child=Bh(b,null,h,f)):Yi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function lj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);Ih(a,b.containerInfo)}\nfunction mj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Yi(a,b,c,d);return b.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction pj(a,b,c){var d=b.pendingProps,e=M.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(M,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=qj(g,d,0,null),a=Ah(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=oj(c),b.memoizedState=nj,a):rj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return sj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=wh(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=wh(h,f):(f=Ah(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?oj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=nj;return d}f=a.child;a=f.sibling;d=wh(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction rj(a,b){b=qj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function tj(a,b,c,d){null!==d&&Jg(d);Bh(b,a.child,null,c);a=rj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction sj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Li(Error(p(422))),tj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=qj({mode:\"visible\",children:d.children},e,0,null);f=Ah(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Bh(b,a.child,null,g);b.child.memoizedState=oj(g);b.memoizedState=nj;return f}if(0===(b.mode&1))return tj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Li(f,d,void 0);return tj(a,b,g,d)}h=0!==(g&a.childLanes);if(Ug||h){d=R;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,Zg(a,e),mh(d,a,e,-1))}uj();d=Li(Error(p(421)));return tj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=vj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=rj(b,d.children);b.flags|=4096;return b}function wj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);Sg(a.return,b,c)}\nfunction xj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction yj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Yi(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&wj(a,c,b);else if(19===a.tag)wj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(M,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Mh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);xj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Mh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}xj(b,!0,c,null,f);break;case \"together\":xj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction jj(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function $i(a,b,c){null!==a&&(b.dependencies=a.dependencies);hh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=wh(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=wh(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction zj(a,b,c){switch(b.tag){case 3:lj(b);Ig();break;case 5:Kh(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:Ih(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Mg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(M,M.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return pj(a,b,c);G(M,M.current&1);a=$i(a,b,c);return null!==a?a.sibling:null}G(M,M.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return yj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(M,M.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,ej(a,b,c)}return $i(a,b,c)}var Aj,Bj,Cj,Dj;\nAj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bj=function(){};\nCj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Hh(Eh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Dj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Ej(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Fj(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;Jh();E(Wf);E(H);Oh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Gj(zg),zg=null));Bj(a,b);S(b);return null;case 5:Lh(b);var e=Hh(Gh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Cj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;Aj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Dj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Hh(Gh.current);Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(M);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Gj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(M.current&1)?0===T&&(T=3):uj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return Jh(),\nBj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return Rg(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(M);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Ej(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Mh(a);if(null!==g){b.flags|=128;Ej(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(M,M.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Hj&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304)}else{if(!d)if(a=Mh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Ej(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Hj&&1073741824!==c&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=M.current,G(M,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Ij(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(gj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Jj(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Jh(),E(Wf),E(H),Oh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Lh(b),null;case 13:E(M);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(b.type._context),null;case 22:case 23:return Ij(),\nnull;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Mj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Nj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Oj=!1;\nfunction Pj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Lg(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Oj;Oj=!1;return n}\nfunction Qj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Nj(b,c,f)}e=e.next}while(e!==d)}}function Rj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Sj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Tj(a){var b=a.alternate;null!==b&&(a.alternate=null,Tj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Uj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Vj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Uj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}\nfunction Xj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Xj(a,b,c),a=a.sibling;null!==a;)Xj(a,b,c),a=a.sibling}var X=null,Yj=!1;function Zj(a,b,c){for(c=c.child;null!==c;)ak(a,b,c),c=c.sibling}\nfunction ak(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Mj(c,b);case 6:var d=X,e=Yj;X=null;Zj(a,b,c);X=d;Yj=e;null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Yj;X=c.stateNode.containerInfo;Yj=!0;\nZj(a,b,c);X=d;Yj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Nj(c,b,g):0!==(f&4)&&Nj(c,b,g));e=e.next}while(e!==d)}Zj(a,b,c);break;case 1:if(!U&&(Mj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Zj(a,b,c);break;case 21:Zj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Zj(a,b,c),U=d):Zj(a,b,c);break;default:Zj(a,b,c)}}function bk(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Lj);b.forEach(function(b){var d=ck.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction dk(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Yj=!1;break a;case 3:X=h.stateNode.containerInfo;Yj=!0;break a;case 4:X=h.stateNode.containerInfo;Yj=!0;break a}h=h.return}if(null===X)throw Error(p(160));ak(f,g,e);X=null;Yj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)ek(b,a),b=b.sibling}\nfunction ek(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:dk(b,a);fk(a);if(d&4){try{Qj(3,a,a.return),Rj(3,a)}catch(t){W(a,a.return,t)}try{Qj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);break;case 5:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:dk(b,a);fk(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:dk(b,a);fk(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:dk(b,a);fk(a);break;case 13:dk(b,a);fk(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(gk=B()));d&4&&bk(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,dk(b,a),U=l):dk(b,a);fk(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Qj(4,r,r.return);break;case 1:Mj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Mj(r,r.return);break;case 22:if(null!==r.memoizedState){hk(q);continue}}null!==y?(y.return=r,V=y):hk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:dk(b,a);fk(a);d&4&&bk(a);break;case 21:break;default:dk(b,\na),fk(a)}}function fk(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Uj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Vj(a);Xj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Vj(a);Wj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function ik(a,b,c){V=a;jk(a,b,c)}\nfunction jk(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Kj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Kj;var l=U;Kj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?kk(e):null!==k?(k.return=g,V=k):kk(e);for(;null!==f;)V=f,jk(f,b,c),f=f.sibling;V=e;Kj=h;U=l}lk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):lk(a,b,c)}}\nfunction lk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Rj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Lg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&ih(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}ih(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Sj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function hk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction kk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Rj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Sj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Sj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=Infinity,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return 0!==(K&6)?B():-1!==Bk?Bk:Bk=B()}\nfunction lh(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Ck&&(Ck=yc()),Ck;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function mh(a,b,c,d){if(50<zk)throw zk=0,Ak=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==R)a===R&&(0===(K&2)&&(rk|=c),4===T&&Dk(a,Z)),Ek(a,d),1===c&&0===K&&0===(b.mode&1)&&(Hj=B()+500,fg&&jg())}\nfunction Ek(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===R?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Fk.bind(null,a)):hg(Fk.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Gk(c,Hk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Hk(a,b){Bk=-1;Ck=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Ik()&&a.callbackNode!==c)return null;var d=uc(a,a===R?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Jk(a,d);else{b=d;var e=K;K|=2;var f=Kk();if(R!==a||Z!==b)vk=null,Hj=B()+500,Lk(a,b);do try{Mk();break}catch(h){Nk(a,h)}while(1);Qg();nk.current=f;K=e;null!==Y?b=0:(R=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Ok(a,e)));if(1===b)throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;if(6===b)Dk(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Pk(e)&&(b=Jk(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Ok(a,f))),1===b))throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Qk(a,uk,vk);break;case 3:Dk(a,d);if((d&130023424)===d&&(b=gk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){L();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),b);break}Qk(a,uk,vk);break;case 4:Dk(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*mk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),d);break}Qk(a,uk,vk);break;case 5:Qk(a,uk,vk);break;default:throw Error(p(329));}}}Ek(a,B());return a.callbackNode===c?Hk.bind(null,a):null}\nfunction Ok(a,b){var c=tk;a.current.memoizedState.isDehydrated&&(Lk(a,b).flags|=256);a=Jk(a,b);2!==a&&(b=uk,uk=c,null!==b&&Gj(b));return a}function Gj(a){null===uk?uk=a:uk.push.apply(uk,a)}\nfunction Pk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Dk(a,b){b&=~sk;b&=~rk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Fk(a){if(0!==(K&6))throw Error(p(327));Ik();var b=uc(a,0);if(0===(b&1))return Ek(a,B()),null;var c=Jk(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Ok(a,d))}if(1===c)throw c=qk,Lk(a,0),Dk(a,b),Ek(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Qk(a,uk,vk);Ek(a,B());return null}\nfunction Rk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Hj=B()+500,fg&&jg())}}function Sk(a){null!==xk&&0===xk.tag&&0===(K&6)&&Ik();var b=K;K|=1;var c=pk.transition,d=C;try{if(pk.transition=null,C=1,a)return a()}finally{C=d,pk.transition=c,K=b,0===(K&6)&&jg()}}function Ij(){gj=fj.current;E(fj)}\nfunction Lk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:Jh();E(Wf);E(H);Oh();break;case 5:Lh(d);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(d.type._context);break;case 22:case 23:Ij()}c=c.return}R=a;Y=a=wh(a.current,null);Z=gj=b;T=0;qk=null;sk=rk=hh=0;uk=tk=null;if(null!==Wg){for(b=\n0;b<Wg.length;b++)if(c=Wg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}Wg=null}return a}\nfunction Nk(a,b){do{var c=Y;try{Qg();Ph.current=ai;if(Sh){for(var d=N.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Sh=!1}Rh=0;P=O=N=null;Th=!1;Uh=0;ok.current=null;if(null===c||null===c.return){T=1;qk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Vi(g);if(null!==y){y.flags&=-257;Wi(y,g,h,f,b);y.mode&1&&Ti(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Ti(f,l,b);uj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Vi(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Wi(J,g,h,f,b);Jg(Ki(k,h));break a}}f=k=Ki(k,h);4!==T&&(T=2);null===tk?tk=[f]:tk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Oi(f,k,b);fh(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Si||!Si.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Ri(f,h,b);fh(f,F);break a}}f=f.return}while(null!==f)}Tk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Kk(){var a=nk.current;nk.current=ai;return null===a?ai:a}\nfunction uj(){if(0===T||3===T||2===T)T=4;null===R||0===(hh&268435455)&&0===(rk&268435455)||Dk(R,Z)}function Jk(a,b){var c=K;K|=2;var d=Kk();if(R!==a||Z!==b)vk=null,Lk(a,b);do try{Uk();break}catch(e){Nk(a,e)}while(1);Qg();K=c;nk.current=d;if(null!==Y)throw Error(p(261));R=null;Z=0;return T}function Uk(){for(;null!==Y;)Vk(Y)}function Mk(){for(;null!==Y&&!cc();)Vk(Y)}function Vk(a){var b=Wk(a.alternate,a,gj);a.memoizedProps=a.pendingProps;null===b?Tk(a):Y=b;ok.current=null}\nfunction Tk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Fj(c,b,gj),null!==c){Y=c;return}}else{c=Jj(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Qk(a,b,c){var d=C,e=pk.transition;try{pk.transition=null,C=1,Xk(a,b,c,d)}finally{pk.transition=e,C=d}return null}\nfunction Xk(a,b,c,d){do Ik();while(null!==xk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===R&&(Y=R=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||wk||(wk=!0,Gk(hc,function(){Ik();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=pk.transition;pk.transition=null;\nvar g=C;C=1;var h=K;K|=4;ok.current=null;Pj(a,c);ek(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;ik(c,a,e);dc();K=h;C=g;pk.transition=f}else a.current=c;wk&&(wk=!1,xk=a,yk=e);f=a.pendingLanes;0===f&&(Si=null);mc(c.stateNode,d);Ek(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Pi)throw Pi=!1,a=Qi,Qi=null,a;0!==(yk&1)&&0!==a.tag&&Ik();f=a.pendingLanes;0!==(f&1)?a===Ak?zk++:(zk=0,Ak=a):zk=0;jg();return null}\nfunction Ik(){if(null!==xk){var a=Dc(yk),b=pk.transition,c=C;try{pk.transition=null;C=16>a?16:a;if(null===xk)var d=!1;else{a=xk;xk=null;yk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Qj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Tj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Qj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Rj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,pk.transition=b}}return!1}function Yk(a,b,c){b=Ki(c,b);b=Oi(a,b,1);a=dh(a,b,1);b=L();null!==a&&(Ac(a,1,b),Ek(a,b))}\nfunction W(a,b,c){if(3===a.tag)Yk(a,a,c);else for(;null!==b;){if(3===b.tag){Yk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Si||!Si.has(d))){a=Ki(c,a);a=Ri(b,a,1);b=dh(b,a,1);a=L();null!==b&&(Ac(b,1,a),Ek(b,a));break}}b=b.return}}\nfunction Ui(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=L();a.pingedLanes|=a.suspendedLanes&c;R===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-gk?Lk(a,0):sk|=c);Ek(a,b)}function Zk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=L();a=Zg(a,b);null!==a&&(Ac(a,b,c),Ek(a,c))}function vj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Zk(a,c)}\nfunction ck(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Zk(a,c)}var Wk;\nWk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)Ug=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return Ug=!1,zj(a,b,c);Ug=0!==(a.flags&131072)?!0:!1}else Ug=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;jj(a,b);a=b.pendingProps;var e=Yf(b,H.current);Tg(b,c);e=Xh(null,b,d,a,e,c);var f=bi();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,ah(b),e.updater=nh,b.stateNode=e,e._reactInternals=b,rh(b,d,a,c),b=kj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Yi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{jj(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=$k(d);a=Lg(d,a);switch(e){case 0:b=dj(null,b,d,a,c);break a;case 1:b=ij(null,b,d,a,c);break a;case 11:b=Zi(null,b,d,a,c);break a;case 14:b=aj(null,b,d,Lg(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),dj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),ij(a,b,d,e,c);case 3:a:{lj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;bh(a,b);gh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ki(Error(p(423)),b);b=mj(a,b,d,c,e);break a}else if(d!==e){e=Ki(Error(p(424)),b);b=mj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Ch(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=$i(a,b,c);break a}Yi(a,b,d,c)}b=b.child}return b;case 5:return Kh(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\nhj(a,b),Yi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return pj(a,b,c);case 4:return Ih(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Bh(b,null,d,c):Yi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),Zi(a,b,d,e,c);case 7:return Yi(a,b,b.pendingProps,c),b.child;case 8:return Yi(a,b,b.pendingProps.children,c),b.child;case 12:return Yi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Mg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=$i(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=ch(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);Sg(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);Sg(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Yi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,Tg(b,c),e=Vg(e),d=d(e),b.flags|=1,Yi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Lg(d,b.pendingProps),e=Lg(d.type,e),aj(a,b,d,e,c);case 15:return cj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),jj(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,Tg(b,c),ph(b,d,e),rh(b,d,e,c),kj(null,b,d,!0,a,c);case 19:return yj(a,b,c);case 22:return ej(a,b,c)}throw Error(p(156,b.tag));};function Gk(a,b){return ac(a,b)}\nfunction al(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new al(a,b,c,d)}function bj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction $k(a){if(\"function\"===typeof a)return bj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction wh(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction yh(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)bj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Ah(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return qj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Ah(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function qj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function xh(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction zh(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction bl(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function cl(a,b,c,d,e,f,g,h,k){a=new bl(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};ah(f);return a}function dl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction el(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction fl(a,b,c,d,e,f,g,h,k){a=cl(c,d,!0,a,e,f,g,h,k);a.context=el(null);c=a.current;d=L();e=lh(c);f=ch(d,e);f.callback=void 0!==b&&null!==b?b:null;dh(c,f,e);a.current.lanes=e;Ac(a,e,d);Ek(a,d);return a}function gl(a,b,c,d){var e=b.current,f=L(),g=lh(e);c=el(c);null===b.context?b.context=c:b.pendingContext=c;b=ch(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=dh(e,b,g);null!==a&&(mh(a,e,g,f),eh(a,e,g));return g}\nfunction hl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function il(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function jl(a,b){il(a,b);(a=a.alternate)&&il(a,b)}function kl(){return null}var ll=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ml(a){this._internalRoot=a}\nnl.prototype.render=ml.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));gl(a,b,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Sk(function(){gl(null,a,null,null)});b[uf]=null}};function nl(a){this._internalRoot=a}\nnl.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function pl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function ql(){}\nfunction rl(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=hl(g);f.call(a)}}var g=fl(b,d,a,0,null,!1,!1,\"\",ql);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Sk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=hl(k);h.call(a)}}var k=cl(a,0,!1,null,null,!1,!1,\"\",ql);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Sk(function(){gl(b,k,c,d)});return k}\nfunction sl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=hl(g);h.call(a)}}gl(b,g,a,e)}else g=rl(c,b,a,e,d);return hl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Ek(b,B()),0===(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var b=Zg(a,1);if(null!==b){var c=L();mh(b,a,1,c)}}),jl(a,1)}};\nFc=function(a){if(13===a.tag){var b=Zg(a,134217728);if(null!==b){var c=L();mh(b,a,134217728,c)}jl(a,134217728)}};Gc=function(a){if(13===a.tag){var b=lh(a),c=Zg(a,b);if(null!==c){var d=L();mh(c,a,b,d)}jl(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Rk;Hb=Sk;\nvar tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:\"18.2.0\",rendererPackageName:\"react-dom\"};\nvar vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||\nkl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.2.0-next-9e3b772b8-20220608\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ol(b))throw Error(p(200));return dl(a,b,null,c)};exports.createRoot=function(a,b){if(!ol(a))throw Error(p(299));var c=!1,d=\"\",e=ll;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=cl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ml(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Sk(a)};exports.hydrate=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!ol(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=ll;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=fl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new nl(b)};exports.render=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!pl(a))throw Error(p(40));return a._reactRootContainer?(Sk(function(){sl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Rk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!pl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return sl(a,b,c,!1,d)};exports.version=\"18.2.0-next-9e3b772b8-20220608\";\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","var defaultPlayerName = 'Player Name';\n\nvar adjectives = [\"Black\",\"White\",\"Gray\",\"Brown\",\"Red\",\"Pink\",\"Crimson\",\"Carnelian\",\"Orange\",\"Yellow\",\"Ivory\",\"Cream\",\"Green\",\"Viridian\",\"Aquamarine\",\"Cyan\",\"Blue\",\"Cerulean\",\"Azure\",\"Indigo\",\"Navy\",\"Violet\",\"Purple\",\"Lavender\",\"Magenta\",\"Rainbow\",\"Iridescent\",\"Spectrum\",\"Prism\",\"Bold\",\"Vivid\",\"Pale\",\"Clear\",\"Glass\",\"Translucent\",\"Misty\",\"Dark\",\"Light\",\"Gold\",\"Silver\",\"Copper\",\"Bronze\",\"Steel\",\"Iron\",\"Brass\",\"Mercury\",\"Zinc\",\"Chrome\",\"Platinum\",\"Titanium\",\"Nickel\",\"Lead\",\"Pewter\",\"Rust\",\"Metal\",\"Stone\",\"Quartz\",\"Granite\",\"Marble\",\"Alabaster\",\"Agate\",\"Jasper\",\"Pebble\",\"Pyrite\",\"Crystal\",\"Geode\",\"Obsidian\",\"Mica\",\"Flint\",\"Sand\",\"Gravel\",\"Boulder\",\"Basalt\",\"Ruby\",\"Beryl\",\"Scarlet\",\"Citrine\",\"Sulpher\",\"Topaz\",\"Amber\",\"Emerald\",\"Malachite\",\"Jade\",\"Abalone\",\"Lapis\",\"Sapphire\",\"Diamond\",\"Peridot\",\"Gem\",\"Jewel\",\"Bevel\",\"Coral\",\"Jet\",\"Ebony\",\"Wood\",\"Tree\",\"Cherry\",\"Maple\",\"Cedar\",\"Branch\",\"Bramble\",\"Rowan\",\"Ash\",\"Fir\",\"Pine\",\"Cactus\",\"Alder\",\"Grove\",\"Forest\",\"Jungle\",\"Palm\",\"Bush\",\"Mulberry\",\"Juniper\",\"Vine\",\"Ivy\",\"Rose\",\"Lily\",\"Tulip\",\"Daffodil\",\"Honeysuckle\",\"Fuschia\",\"Hazel\",\"Walnut\",\"Almond\",\"Lime\",\"Lemon\",\"Apple\",\"Blossom\",\"Bloom\",\"Crocus\",\"Rose\",\"Buttercup\",\"Dandelion\",\"Iris\",\"Carnation\",\"Fern\",\"Root\",\"Branch\",\"Leaf\",\"Seed\",\"Flower\",\"Petal\",\"Pollen\",\"Orchid\",\"Mangrove\",\"Cypress\",\"Sequoia\",\"Sage\",\"Heather\",\"Snapdragon\",\"Daisy\",\"Mountain\",\"Hill\",\"Alpine\",\"Chestnut\",\"Valley\",\"Glacier\",\"Forest\",\"Grove\",\"Glen\",\"Tree\",\"Thorn\",\"Stump\",\"Desert\",\"Canyon\",\"Dune\",\"Oasis\",\"Mirage\",\"Well\",\"Spring\",\"Meadow\",\"Field\",\"Prairie\",\"Grass\",\"Tundra\",\"Island\",\"Shore\",\"Sand\",\"Shell\",\"Surf\",\"Wave\",\"Foam\",\"Tide\",\"Lake\",\"River\",\"Brook\",\"Stream\",\"Pool\",\"Pond\",\"Sun\",\"Sprinkle\",\"Shade\",\"Shadow\",\"Rain\",\"Cloud\",\"Storm\",\"Hail\",\"Snow\",\"Sleet\",\"Thunder\",\"Lightning\",\"Wind\",\"Hurricane\",\"Typhoon\",\"Dawn\",\"Sunrise\",\"Morning\",\"Noon\",\"Twilight\",\"Evening\",\"Sunset\",\"Midnight\",\"Night\",\"Sky\",\"Star\",\"Stellar\",\"Comet\",\"Nebula\",\"Quasar\",\"Solar\",\"Lunar\",\"Planet\",\"Meteor\",\"Sprout\",\"Pear\",\"Plum\",\"Kiwi\",\"Berry\",\"Apricot\",\"Peach\",\"Mango\",\"Pineapple\",\"Coconut\",\"Olive\",\"Ginger\",\"Root\",\"Plain\",\"Fancy\",\"Stripe\",\"Spot\",\"Speckle\",\"Spangle\",\"Ring\",\"Band\",\"Blaze\",\"Paint\",\"Pinto\",\"Shade\",\"Tabby\",\"Brindle\",\"Patch\",\"Calico\",\"Checker\",\"Dot\",\"Pattern\",\"Glitter\",\"Glimmer\",\"Shimmer\",\"Dull\",\"Dust\",\"Dirt\",\"Glaze\",\"Scratch\",\"Quick\",\"Swift\",\"Fast\",\"Slow\",\"Clever\",\"Fire\",\"Flicker\",\"Flash\",\"Spark\",\"Ember\",\"Coal\",\"Flame\",\"Chocolate\",\"Vanilla\",\"Sugar\",\"Spice\",\"Cake\",\"Pie\",\"Cookie\",\"Candy\",\"Caramel\",\"Spiral\",\"Round\",\"Jelly\",\"Square\",\"Narrow\",\"Long\",\"Short\",\"Small\",\"Tiny\",\"Big\",\"Giant\",\"Great\",\"Atom\",\"Peppermint\",\"Mint\",\"Butter\",\"Fringe\",\"Rag\",\"Quilt\",\"Truth\",\"Lie\",\"Holy\",\"Curse\",\"Noble\",\"Sly\",\"Brave\",\"Shy\",\"Lava\",\"Foul\",\"Leather\",\"Fantasy\",\"Keen\",\"Luminous\",\"Feather\",\"Sticky\",\"Gossamer\",\"Cotton\",\"Rattle\",\"Silk\",\"Satin\",\"Cord\",\"Denim\",\"Flannel\",\"Plaid\",\"Wool\",\"Linen\",\"Silent\",\"Flax\",\"Weak\",\"Valiant\",\"Fierce\",\"Gentle\",\"Rhinestone\",\"Splash\",\"North\",\"South\",\"East\",\"West\",\"Summer\",\"Winter\",\"Autumn\",\"Spring\",\"Season\",\"Equinox\",\"Solstice\",\"Paper\",\"Motley\",\"Torch\",\"Ballistic\",\"Rampant\",\"Shag\",\"Freckle\",\"Wild\",\"Free\",\"Chain\",\"Sheer\",\"Crazy\",\"Mad\",\"Candle\",\"Ribbon\",\"Lace\",\"Notch\",\"Wax\",\"Shine\",\"Shallow\",\"Deep\",\"Bubble\",\"Harvest\",\"Fluff\",\"Venom\",\"Boom\",\"Slash\",\"Rune\",\"Cold\",\"Quill\",\"Love\",\"Hate\",\"Garnet\",\"Zircon\",\"Power\",\"Bone\",\"Void\",\"Horn\",\"Glory\",\"Cyber\",\"Nova\",\"Hot\",\"Helix\",\"Cosmic\",\"Quark\",\"Quiver\",\"Holly\",\"Clover\",\"Polar\",\"Regal\",\"Ripple\",\"Ebony\",\"Wheat\",\"Phantom\",\"Dew\",\"Chisel\",\"Crack\",\"Chatter\",\"Laser\",\"Foil\",\"Tin\",\"Clever\",\"Treasure\",\"Maze\",\"Twisty\",\"Curly\",\"Fortune\",\"Fate\",\"Destiny\",\"Cute\",\"Slime\",\"Ink\",\"Disco\",\"Plume\",\"Time\",\"Psychadelic\",\"Relic\",\"Fossil\",\"Water\",\"Savage\",\"Ancient\",\"Rapid\",\"Road\",\"Trail\",\"Stitch\",\"Button\",\"Bow\",\"Nimble\",\"Zest\",\"Sour\",\"Bitter\",\"Phase\",\"Fan\",\"Frill\",\"Plump\",\"Pickle\",\"Mud\",\"Puddle\",\"Pond\",\"River\",\"Spring\",\"Stream\",\"Battle\",\"Arrow\",\"Plume\",\"Roan\",\"Pitch\",\"Tar\",\"Cat\",\"Dog\",\"Horse\",\"Lizard\",\"Bird\",\"Fish\",\"Saber\",\"Scythe\",\"Sharp\",\"Soft\",\"Razor\",\"Neon\",\"Dandy\",\"Weed\",\"Swamp\",\"Marsh\",\"Bog\",\"Peat\",\"Moor\",\"Muck\",\"Mire\",\"Grave\",\"Fair\",\"Just\",\"Brick\",\"Puzzle\",\"Skitter\",\"Prong\",\"Fork\",\"Dent\",\"Dour\",\"Warp\",\"Luck\",\"Coffee\",\"Split\",\"Chip\",\"Hollow\",\"Heavy\",\"Legend\",\"Hickory\",\"Mesquite\",\"Nettle\",\"Rogue\",\"Charm\",\"Prickle\",\"Bead\",\"Sponge\",\"Whip\",\"Bald\",\"Frost\",\"Fog\",\"Oil\",\"Veil\",\"Cliff\",\"Volcano\",\"Rift\",\"Maze\",\"Proud\",\"Dew\",\"Mirror\",\"Shard\",\"Salt\",\"Pepper\",\"Honey\",\"Thread\",\"Bristle\",\"Ripple\",\"Glow\",\"Zenith\"];\n\nvar nouns = [\"head\",\"crest\",\"crown\",\"tooth\",\"fang\",\"horn\",\"frill\",\"skull\",\"bone\",\"tongue\",\"throat\",\"voice\",\"nose\",\"snout\",\"chin\",\"eye\",\"sight\",\"seer\",\"speaker\",\"singer\",\"song\",\"chanter\",\"howler\",\"chatter\",\"shrieker\",\"shriek\",\"jaw\",\"bite\",\"biter\",\"neck\",\"shoulder\",\"fin\",\"wing\",\"arm\",\"lifter\",\"grasp\",\"grabber\",\"hand\",\"paw\",\"foot\",\"finger\",\"toe\",\"thumb\",\"talon\",\"palm\",\"touch\",\"racer\",\"runner\",\"hoof\",\"fly\",\"flier\",\"swoop\",\"roar\",\"hiss\",\"hisser\",\"snarl\",\"dive\",\"diver\",\"rib\",\"chest\",\"back\",\"ridge\",\"leg\",\"legs\",\"tail\",\"beak\",\"walker\",\"lasher\",\"swisher\",\"carver\",\"kicker\",\"roarer\",\"crusher\",\"spike\",\"shaker\",\"charger\",\"hunter\",\"weaver\",\"crafter\",\"binder\",\"scribe\",\"muse\",\"snap\",\"snapper\",\"slayer\",\"stalker\",\"track\",\"tracker\",\"scar\",\"scarer\",\"fright\",\"killer\",\"death\",\"doom\",\"healer\",\"saver\",\"friend\",\"foe\",\"guardian\",\"thunder\",\"lightning\",\"cloud\",\"storm\",\"forger\",\"scale\",\"hair\",\"braid\",\"nape\",\"belly\",\"thief\",\"stealer\",\"reaper\",\"giver\",\"taker\",\"dancer\",\"player\",\"gambler\",\"twister\",\"turner\",\"painter\",\"dart\",\"drifter\",\"sting\",\"stinger\",\"venom\",\"spur\",\"ripper\",\"swallow\",\"devourer\",\"knight\",\"lady\",\"lord\",\"queen\",\"king\",\"master\",\"mistress\",\"prince\",\"princess\",\"duke\",\"dutchess\",\"samurai\",\"ninja\",\"knave\",\"slave\",\"servant\",\"sage\",\"wizard\",\"witch\",\"warlock\",\"warrior\",\"jester\",\"paladin\",\"bard\",\"trader\",\"sword\",\"shield\",\"knife\",\"dagger\",\"arrow\",\"bow\",\"fighter\",\"bane\",\"follower\",\"leader\",\"scourge\",\"watcher\",\"cat\",\"panther\",\"tiger\",\"cougar\",\"puma\",\"jaguar\",\"ocelot\",\"lynx\",\"lion\",\"leopard\",\"ferret\",\"weasel\",\"wolverine\",\"bear\",\"raccoon\",\"dog\",\"wolf\",\"kitten\",\"puppy\",\"cub\",\"fox\",\"hound\",\"terrier\",\"coyote\",\"hyena\",\"jackal\",\"pig\",\"horse\",\"donkey\",\"stallion\",\"mare\",\"zebra\",\"antelope\",\"gazelle\",\"deer\",\"buffalo\",\"bison\",\"boar\",\"elk\",\"whale\",\"dolphin\",\"shark\",\"fish\",\"minnow\",\"salmon\",\"ray\",\"fisher\",\"otter\",\"gull\",\"duck\",\"goose\",\"crow\",\"raven\",\"bird\",\"eagle\",\"raptor\",\"hawk\",\"falcon\",\"moose\",\"heron\",\"owl\",\"stork\",\"crane\",\"sparrow\",\"robin\",\"parrot\",\"cockatoo\",\"carp\",\"lizard\",\"gecko\",\"iguana\",\"snake\",\"python\",\"viper\",\"boa\",\"condor\",\"vulture\",\"spider\",\"fly\",\"scorpion\",\"heron\",\"oriole\",\"toucan\",\"bee\",\"wasp\",\"hornet\",\"rabbit\",\"bunny\",\"hare\",\"brow\",\"mustang\",\"ox\",\"piper\",\"soarer\",\"flasher\",\"moth\",\"mask\",\"hide\",\"hero\",\"antler\",\"chill\",\"chiller\",\"gem\",\"ogre\",\"myth\",\"elf\",\"fairy\",\"pixie\",\"dragon\",\"griffin\",\"unicorn\",\"pegasus\",\"sprite\",\"fancier\",\"chopper\",\"slicer\",\"skinner\",\"butterfly\",\"legend\",\"wanderer\",\"rover\",\"raver\",\"loon\",\"lancer\",\"glass\",\"glazer\",\"flame\",\"crystal\",\"lantern\",\"lighter\",\"cloak\",\"bell\",\"ringer\",\"keeper\",\"centaur\",\"bolt\",\"catcher\",\"whimsey\",\"quester\",\"rat\",\"mouse\",\"serpent\",\"wyrm\",\"gargoyle\",\"thorn\",\"whip\",\"rider\",\"spirit\",\"sentry\",\"bat\",\"beetle\",\"burn\",\"cowl\",\"stone\",\"gem\",\"collar\",\"mark\",\"grin\",\"scowl\",\"spear\",\"razor\",\"edge\",\"seeker\",\"jay\",\"ape\",\"monkey\",\"gorilla\",\"koala\",\"kangaroo\",\"yak\",\"sloth\",\"ant\",\"roach\",\"weed\",\"seed\",\"eater\",\"razor\",\"shirt\",\"face\",\"goat\",\"mind\",\"shift\",\"rider\",\"face\",\"mole\",\"vole\",\"pirate\",\"llama\",\"stag\",\"bug\",\"cap\",\"boot\",\"drop\",\"hugger\",\"sargent\",\"snagglefoot\",\"carpet\",\"curtain\"];\n\nfunction randomNoun(generator){\n    generator = generator || Math.random;\n\n    return nouns[Math.floor(generator()*nouns.length)];\n}\n\nfunction randomAdjective(generator){\n    generator = generator || Math.random;\n\n    return adjectives[Math.floor(generator()*adjectives.length)];\n}\n\nfunction generateStupidName(generator){\n    var noun1 = randomNoun(generator);\n    var noun2 = randomNoun(generator);\n    noun2 = noun2.substr(0, 1).toUpperCase() + noun2.substr(1);\n    var adjective = randomAdjective(generator);\n    return adjective + noun1 + ' ' + noun2;\n}\n\nmodule.exports = generateStupidName;\nmodule.exports.randomNoun = randomNoun;\nmodule.exports.randomAdjective = randomAdjective;\n","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , controlOrWhitespace = /^[\\x00-\\x20\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+/\n  , CRHTLF = /[\\n\\r\\t]/g\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//\n  , port = /:\\d+$/\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\\\/]+)?([\\S\\s]*)/i\n  , windowsDriveLetter = /^[a-zA-Z]:/;\n\n/**\n * Remove control characters and whitespace from the beginning of a string.\n *\n * @param {Object|String} str String to trim.\n * @returns {String} A new string representing `str` stripped of control\n *     characters and whitespace from its beginning.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(controlOrWhitespace, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address, url) {     // Sanitize what is left of the address\n    return isSpecial(url.protocol) ? address.replace(/\\\\/g, '/') : address;\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d*)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') globalVar = window;\n  else if (typeof global !== 'undefined') globalVar = global;\n  else if (typeof self !== 'undefined') globalVar = self;\n  else globalVar = {};\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * Check whether a protocol scheme is special.\n *\n * @param {String} The protocol scheme of the URL\n * @return {Boolean} `true` if the protocol scheme is special, else `false`\n * @private\n */\nfunction isSpecial(scheme) {\n  return (\n    scheme === 'file:' ||\n    scheme === 'ftp:' ||\n    scheme === 'http:' ||\n    scheme === 'https:' ||\n    scheme === 'ws:' ||\n    scheme === 'wss:'\n  );\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @param {Object} location\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address, location) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n  location = location || {};\n\n  var match = protocolre.exec(address);\n  var protocol = match[1] ? match[1].toLowerCase() : '';\n  var forwardSlashes = !!match[2];\n  var otherSlashes = !!match[3];\n  var slashesCount = 0;\n  var rest;\n\n  if (forwardSlashes) {\n    if (otherSlashes) {\n      rest = match[2] + match[3] + match[4];\n      slashesCount = match[2].length + match[3].length;\n    } else {\n      rest = match[2] + match[4];\n      slashesCount = match[2].length;\n    }\n  } else {\n    if (otherSlashes) {\n      rest = match[3] + match[4];\n      slashesCount = match[3].length;\n    } else {\n      rest = match[4]\n    }\n  }\n\n  if (protocol === 'file:') {\n    if (slashesCount >= 2) {\n      rest = rest.slice(2);\n    }\n  } else if (isSpecial(protocol)) {\n    rest = match[4];\n  } else if (protocol) {\n    if (forwardSlashes) {\n      rest = rest.slice(2);\n    }\n  } else if (slashesCount >= 2 && isSpecial(location.protocol)) {\n    rest = match[4];\n  }\n\n  return {\n    protocol: protocol,\n    slashes: forwardSlashes || isSpecial(protocol),\n    slashesCount: slashesCount,\n    rest: rest\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '', location);\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (\n    extracted.protocol === 'file:' && (\n      extracted.slashesCount !== 2 || windowsDriveLetter.test(address)) ||\n    (!extracted.slashes &&\n      (extracted.protocol ||\n        extracted.slashesCount < 2 ||\n        !isSpecial(url.protocol)))\n  ) {\n    instructions[3] = [/(.*)/, 'pathname'];\n  }\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address, url);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      index = parse === '@'\n        ? address.lastIndexOf(parse)\n        : address.indexOf(parse);\n\n      if (~index) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // Default to a / for pathname if none exists. This normalizes the URL\n  // to always have a /\n  //\n  if (url.pathname.charAt(0) !== '/' && isSpecial(url.protocol)) {\n    url.pathname = '/' + url.pathname;\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n\n  if (url.auth) {\n    index = url.auth.indexOf(':');\n\n    if (~index) {\n      url.username = url.auth.slice(0, index);\n      url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n      url.password = url.auth.slice(index + 1);\n      url.password = encodeURIComponent(decodeURIComponent(url.password))\n    } else {\n      url.username = encodeURIComponent(decodeURIComponent(url.auth));\n    }\n\n    url.auth = url.password ? url.username +':'+ url.password : url.username;\n  }\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (port.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    case 'username':\n    case 'password':\n      url[part] = encodeURIComponent(value);\n      break;\n\n    case 'auth':\n      var index = value.indexOf(':');\n\n      if (~index) {\n        url.username = value.slice(0, index);\n        url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n        url.password = value.slice(index + 1);\n        url.password = encodeURIComponent(decodeURIComponent(url.password));\n      } else {\n        url.username = encodeURIComponent(decodeURIComponent(value));\n      }\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.auth = url.password ? url.username +':'+ url.password : url.username;\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , host = url.host\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result =\n    protocol +\n    ((url.protocol && url.slashes) || isSpecial(url.protocol) ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  } else if (url.password) {\n    result += ':'+ url.password;\n    result += '@';\n  } else if (\n    url.protocol !== 'file:' &&\n    isSpecial(url.protocol) &&\n    !host &&\n    url.pathname !== '/'\n  ) {\n    //\n    // Add back the empty userinfo, otherwise the original invalid URL\n    // might be transformed into a valid one with `url.pathname` as host.\n    //\n    result += '@';\n  }\n\n  //\n  // Trailing colon is removed from `url.host` when it is parsed. If it still\n  // ends with a colon, then add back the trailing colon that was removed. This\n  // prevents an invalid URL from being transformed into a valid one.\n  //\n  if (host[host.length - 1] === ':' || (port.test(url.hostname) && !url.port)) {\n    host += ':';\n  }\n\n  result += host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = qs;\n\nmodule.exports = Url;\n","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + (chunkId === 564 ? \"FluidFramework-HashFallback\" : chunkId) + \".\" + {\"564\":\"c123d41e\",\"988\":\"3ce4386a\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"FluidBoard:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkFluidBoard\"] = self[\"webpackChunkFluidBoard\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    IRequest,\n    IResponse,\n    IFluidRouter,\n} from \"@fluidframework/core-interfaces\";\nimport {\n    IClientDetails,\n    IDocumentMessage,\n    IQuorumClients,\n    ISequencedDocumentMessage,\n    ISequencedProposal,\n    ISnapshotTree,\n} from \"@fluidframework/protocol-definitions\";\nimport { IResolvedUrl } from \"@fluidframework/driver-definitions\";\nimport { IEvent, IEventProvider } from \"@fluidframework/common-definitions\";\nimport { IAudience } from \"./audience\";\nimport { IDeltaManager, ReadOnlyInfo } from \"./deltas\";\nimport { ICriticalContainerError, ContainerWarning } from \"./error\";\nimport { IFluidModule } from \"./fluidModule\";\nimport { AttachState } from \"./runtime\";\nimport {\n    IFluidCodeDetails,\n    IFluidPackage,\n    IProvideFluidCodeDetailsComparer,\n} from \"./fluidPackage\";\n\n/**\n * Code loading interface\n *\n * @deprecated in favor of {@link @fluidframework/container-loader#ICodeDetailsLoader}\n */\nexport interface ICodeLoader extends Partial<IProvideFluidCodeDetailsComparer> {\n    /**\n     * Loads the package specified by code details and returns a promise to its entry point exports.\n     */\n    load(source: IFluidCodeDetails): Promise<IFluidModule>;\n}\n\n/**\n * Encapsulates a module entry point with corresponding code details.\n */\nexport interface IFluidModuleWithDetails {\n    /** Fluid code module that implements the runtime factory needed to instantiate the container runtime. */\n    module: IFluidModule;\n    /**\n     * Code details associated with the module. Represents a document schema this module supports.\n     * If the code loader implements the {@link @fluidframework/core-interfaces#IFluidCodeDetailsComparer} interface,\n     * it'll be called to determine whether the module code details satisfy the new code proposal in the quorum.\n     */\n    details: IFluidCodeDetails;\n}\n\n/**\n * Fluid code loader resolves a code module matching the document schema, i.e. code details, such as\n * a package name and package version range.\n */\nexport interface ICodeDetailsLoader\n    extends Partial<IProvideFluidCodeDetailsComparer> {\n    /**\n     * Load the code module (package) that is capable to interact with the document.\n     *\n     * @param source - Code proposal that articulates the current schema the document is written in.\n     * @returns - Code module entry point along with the code details associated with it.\n     */\n    load(source: IFluidCodeDetails): Promise<IFluidModuleWithDetails>;\n}\n\n/**\n* The interface returned from a IFluidCodeResolver which represents IFluidCodeDetails\n * that have been resolved and are ready to load\n */\nexport interface IResolvedFluidCodeDetails extends IFluidCodeDetails {\n    /**\n     * A resolved version of the Fluid package. All Fluid browser file entries should be absolute urls.\n     */\n    readonly resolvedPackage: Readonly<IFluidPackage>;\n    /**\n     * If not undefined, this id will be used to cache the entry point for the code package\n     */\n    readonly resolvedPackageCacheId: string | undefined;\n}\n\n/**\n * Fluid code resolvers take a Fluid code details, and resolve the\n * full Fluid package including absolute urls for the browser file entries.\n * The Fluid code resolver is coupled to a specific cdn and knows how to resolve\n * the code detail for loading from that cdn. This include resolving to the most recent\n * version of package that supports the provided code details.\n */\nexport interface IFluidCodeResolver {\n    /**\n     * Resolves a Fluid code details into a form that can be loaded\n     * @param details - The Fluid code details to resolve\n     * @returns - A IResolvedFluidCodeDetails where the\n     *            resolvedPackage's Fluid file entries are absolute urls, and\n     *            an optional resolvedPackageCacheId if the loaded package should be\n     *            cached.\n     */\n    resolveCodeDetails(details: IFluidCodeDetails): Promise<IResolvedFluidCodeDetails>;\n}\n\n/**\n * Code AllowListing Interface\n */\nexport interface ICodeAllowList {\n    testSource(source: IResolvedFluidCodeDetails): Promise<boolean>;\n}\n\n/**\n * Events emitted by the Container \"upwards\" to the Loader and Host\n */\nexport interface IContainerEvents extends IEvent {\n    (event: \"readonly\", listener: (readonly: boolean) => void): void;\n    (event: \"connected\", listener: (clientId: string) => void);\n    (event: \"codeDetailsProposed\", listener: (codeDetails: IFluidCodeDetails, proposal: ISequencedProposal) => void);\n    (event: \"contextChanged\", listener: (codeDetails: IFluidCodeDetails) => void);\n    (event: \"disconnected\" | \"attached\", listener: () => void);\n    (event: \"closed\", listener: (error?: ICriticalContainerError) => void);\n    (event: \"warning\", listener: (error: ContainerWarning) => void);\n    (event: \"op\", listener: (message: ISequencedDocumentMessage) => void);\n    (event: \"dirty\" | \"saved\", listener: (dirty: boolean) => void);\n}\n\n/**\n * Namespace for the different connection states a container can be in\n * PLEASE NOTE: The sequence of the numerical values does no correspond to the typical connection state progression\n */\nexport namespace ConnectionState {\n    /**\n     * The container is not connected to the delta server\n     * Note - When in this state the container may be about to reconnect,\n     * or may remain disconnected until explicitly told to connect.\n     */\n    export type Disconnected = 0;\n\n    /**\n     * The container is disconnected but actively trying to establish a new connection\n     * PLEASE NOTE that this numerical value falls out of the order you may expect for this state\n     */\n    export type EstablishingConnection = 3;\n\n    /**\n    * The container has an inbound connection only, and is catching up to the latest known state from the service.\n    */\n    export type CatchingUp = 1;\n\n    /**\n     * See ConnectionState.CatchingUp, which is the new name for this state.\n     * @deprecated - This state itself is not gone, just being renamed. Please use ConnectionState.CatchingUp.\n     */\n    export type Connecting = 1;\n\n    /**\n     * The container is fully connected and syncing\n     */\n    export type Connected = 2;\n}\n\n/**\n * Type defining the different states of connectivity a container can be in\n */\nexport type ConnectionState =\n    | ConnectionState.Disconnected\n    | ConnectionState.EstablishingConnection\n    | ConnectionState.CatchingUp\n    | ConnectionState.Connecting\n    | ConnectionState.Connected;\n\n/**\n * The Host's view of the Container and its connection to storage\n */\nexport interface IContainer extends IEventProvider<IContainerEvents>, IFluidRouter {\n\n    /**\n     * The Delta Manager supporting the op stream for this Container\n     */\n    deltaManager: IDeltaManager<ISequencedDocumentMessage, IDocumentMessage>;\n\n    /**\n     * The collection of write clients which were connected as of the current sequence number.\n     * Also contains a map of key-value pairs that must be agreed upon by all clients before being accepted.\n     */\n    getQuorum(): IQuorumClients;\n\n    /**\n     * Represents the resolved url to the Container\n     * Will be undefined only when the container is in the {@link AttachState.Detached | detatched} state.\n     */\n    resolvedUrl: IResolvedUrl | undefined;\n\n    /**\n     * Indicates the attachment state of the container to a host service.\n     */\n    readonly attachState: AttachState;\n\n    /**\n     * Get the code details that are currently specified for the container.\n     * @returns The current code details if any are specified, undefined if none are specified.\n     */\n    getSpecifiedCodeDetails(): IFluidCodeDetails | undefined;\n\n    /**\n     * Get the code details that were used to load the container.\n     * @returns The code details that were used to load the container if it is loaded, undefined if it is not yet\n     * loaded.\n     */\n    getLoadedCodeDetails(): IFluidCodeDetails | undefined;\n\n    /**\n     * Returns true if the container has been closed, otherwise false\n     */\n    readonly closed: boolean;\n\n    /**\n     * Returns true if the container is dirty, i.e. there are user changes that has not been saved\n     * Closing container in this state results in data loss for user.\n     * Container usually gets into this situation due to loss of connectivity.\n     */\n    readonly isDirty: boolean;\n\n    /**\n     * Closes the container\n     */\n    close(error?: ICriticalContainerError): void;\n\n    /**\n     * Closes the container and returns serialized local state intended to be\n     * given to a newly loaded container\n     */\n    closeAndGetPendingLocalState(): string;\n\n    /**\n     * Propose new code details that define the code to be loaded\n     * for this container's runtime. The returned promise will\n     * be true when the proposal is accepted, and false if\n     * the proposal is rejected.\n     */\n    proposeCodeDetails(codeDetails: IFluidCodeDetails): Promise<boolean>;\n\n    /**\n     * Attaches the Container to the Container specified by the given Request.\n     *\n     * TODO - in the case of failure options should give a retry policy. Or some continuation function\n     * that allows attachment to a secondary document.\n     */\n    attach(request: IRequest): Promise<void>;\n\n    /**\n     * Extract the snapshot from the detached container.\n     */\n    serialize(): string;\n\n    /**\n     * Get an absolute url for a provided container-relative request url.\n     * If the container is not attached, this will return undefined.\n     *\n     * @param relativeUrl - A container-relative request URL\n     */\n    getAbsoluteUrl(relativeUrl: string): Promise<string | undefined>;\n\n    /**\n     * Issue a request against the container for a resource.\n     * @param request - The request to be issued against the container\n     */\n    request(request: IRequest): Promise<IResponse>;\n\n    /**\n     * Provides the current state of the container's connection to the ordering service\n     */\n    readonly connectionState: ConnectionState;\n\n    /**\n     * Attempts to connect the container to the delta stream and process ops\n     */\n    connect(): void;\n\n    /**\n     * Disconnects the container from the delta stream and stops processing ops\n     */\n    disconnect(): void;\n\n    /**\n     * The audience information for all clients currently associated with the document in the current session\n     */\n    readonly audience: IAudience;\n\n    /**\n     * The server provided ID of the client.\n     * Set once this.connectionState === ConnectionState.Connected is true, otherwise undefined\n     * @alpha\n     */\n    readonly clientId?: string | undefined;\n\n    /**\n     * Tells if container is in read-only mode.\n     * Data stores should listen for \"readonly\" notifications and disallow user making changes to data stores.\n     * Readonly state can be because of no storage write permission,\n     * or due to host forcing readonly mode for container.\n     *\n     * We do not differentiate here between no write access to storage vs. host disallowing changes to container -\n     * in all cases container runtime and data stores should respect readonly state and not allow local changes.\n     *\n     * It is undefined if we have not yet established websocket connection\n     * and do not know if user has write access to a file.\n     */\n    readonly readOnlyInfo: ReadOnlyInfo;\n\n    /**\n     * Allows the host to have the container force to be in read-only mode\n     * @param readonly - Boolean that toggles if read-only policies will be enforced\n     * @alpha\n     */\n    forceReadonly?(readonly: boolean);\n}\n\n/**\n * The Runtime's view of the Loader, used for loading Containers\n */\nexport interface ILoader extends IFluidRouter, Partial<IProvideLoader> {\n    /**\n     * Resolves the resource specified by the URL + headers contained in the request object\n     * to the underlying container that will resolve the request.\n     *\n     * An analogy for this is resolve is a DNS resolve of a Fluid container. Request then executes\n     * a request against the server found from the resolve step.\n     */\n    resolve(request: IRequest, pendingLocalState?: string): Promise<IContainer>;\n}\n\n/**\n * The Host's view of the Loader, used for loading Containers\n */\nexport interface IHostLoader extends ILoader {\n    /**\n     * Creates a new container using the specified chaincode but in an unattached state. While unattached all\n     * updates will only be local until the user explicitly attaches the container to a service provider.\n     */\n    createDetachedContainer(codeDetails: IFluidCodeDetails): Promise<IContainer>;\n\n    /**\n     * Creates a new container using the specified snapshot but in an unattached state. While unattached all\n     * updates will only be local until the user explicitly attaches the container to a service provider.\n     */\n    rehydrateDetachedContainerFromSnapshot(snapshot: string): Promise<IContainer>;\n}\n\nexport type ILoaderOptions = {\n    [key in string | number]: any;\n} & {\n    /**\n     * Set caching behavior for the loader.  If true, we will load a container from cache if one\n     * with the same id/version exists or create a new container and cache it if it does not. If\n     * false, always load a new container and don't cache it. If the container has already been\n     * closed, it will not be cached.  A cache option in the LoaderHeader for an individual\n     * request will override the Loader's value.\n     * Defaults to true.\n     */\n    cache?: boolean;\n\n    /**\n     * Provide the current Loader through the scope object when creating Containers.  It is added\n     * as the `ILoader` property, and will overwrite an existing property of the same name on the\n     * scope.  Useful for when the host wants to provide the current Loader's functionality to\n     * individual Data Stores, which is typically expected when creating with a Loader.\n     * Defaults to true.\n     */\n    provideScopeLoader?: boolean;\n\n    /**\n     * Max time(in ms) container will wait for a leave message of a disconnected client.\n    */\n    maxClientLeaveWaitTime?: number;\n};\n\n/**\n * Accepted header keys for requests coming to the Loader\n */\nexport enum LoaderHeader {\n    /**\n     * Override the Loader's default caching behavior for this container.\n     */\n    cache = \"fluid-cache\",\n\n    clientDetails = \"fluid-client-details\",\n\n    /**\n     * Start the container in a paused, unconnected state. Defaults to false\n     */\n    loadMode = \"loadMode\",\n    reconnect = \"fluid-reconnect\",\n    sequenceNumber = \"fluid-sequence-number\",\n\n    /**\n     * One of the following:\n     * null or \"null\": use ops, no snapshots\n     * undefined: fetch latest snapshot\n     * otherwise, version sha to load snapshot\n     */\n    version = \"version\",\n}\n\nexport interface IContainerLoadMode {\n    opsBeforeReturn?:\n    /*\n     * No trailing ops are applied before container is returned.\n     * Default value.\n     */\n    | undefined\n    /*\n     * Only cached trailing ops are applied before returning container.\n     * Caching is optional and could be implemented by the driver.\n     * If driver does not implement any kind of local caching strategy, this is same as above.\n     * Driver may cache a lot of ops, so care needs to be exercised (see below).\n     */\n    | \"cached\"\n    /*\n     * All trailing ops in storage are fetched and applied before container is returned\n     * This mode might have significant impact on boot speed (depends on storage perf characteristics)\n     * Also there might be a lot of trailing ops and applying them might take time, so hosts are\n     * recommended to have some progress UX / cancellation built into loading flow when using this option.\n     */\n    | \"all\";\n    deltaConnection?:\n    /*\n     * Connection to delta stream is made only when Container.connect() call is made. Op processing\n     * is paused (when container is returned from Loader.resolve()) until Container.connect() call is made.\n     */\n    | \"none\"\n    /*\n     * Connection to delta stream is made only when Container.connect() call is made.\n     * Op fetching from storage is performed and ops are applied as they come in.\n     * This is useful option if connection to delta stream is expensive and thus it's beneficial to move it\n     * out from critical boot sequence, but it's beneficial to allow catch up to happen as fast as possible.\n     */\n    | \"delayed\"\n    /*\n     * Connection to delta stream is made right away.\n     * Ops processing is enabled and ops are flowing through the system.\n     * Default value.\n     */\n    | undefined;\n}\n\n/**\n * Set of Request Headers that the Loader understands and may inspect or modify\n */\nexport interface ILoaderHeader {\n    [LoaderHeader.cache]: boolean;\n    [LoaderHeader.clientDetails]: IClientDetails;\n    [LoaderHeader.loadMode]: IContainerLoadMode;\n    [LoaderHeader.sequenceNumber]: number;\n    [LoaderHeader.reconnect]: boolean;\n    [LoaderHeader.version]: string | undefined;\n}\n\nexport interface IProvideLoader {\n    readonly ILoader: ILoader;\n}\n\n/**\n * @deprecated 0.48, This API will be removed in 0.50\n * No replacement since it is not expected anyone will depend on this outside container-loader\n * See https://github.com/microsoft/FluidFramework/issues/9711 for context\n */\nexport interface IPendingLocalState {\n    url: string;\n    pendingRuntimeState: unknown;\n}\n\n/**\n * This is used when we rehydrate a container from the snapshot. Here we put the blob contents\n * in separate property: blobContents. This is used as the ContainerContext's base snapshot\n * when attaching.\n */\nexport interface ISnapshotTreeWithBlobContents extends ISnapshotTree {\n    blobsContents: { [path: string]: ArrayBufferLike; };\n    trees: { [path: string]: ISnapshotTreeWithBlobContents; };\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n  * Helper class for lazy initialized values. Ensures the value is only generated once, and remain immutable\n  */\nexport class Lazy<T> {\n    private _value: T | undefined;\n    private _evaluated: boolean = false;\n    /**\n     * Instantiates an instance of Lazy<T>\n     * @param valueGenerator - the function that will generate the value when value is accessed the first time\n     */\n    constructor(private readonly valueGenerator: () => T) { }\n\n    /**\n     * Return true if the value as been generated, otherwise false\n     */\n    public get evaluated(): boolean {\n        return this._evaluated;\n    }\n\n    /**\n     * Get the value. If this is the first call the value will be generated\n     */\n    public get value(): T {\n        if (!this._evaluated) {\n            this._evaluated = true;\n            this._value = this.valueGenerator();\n        }\n        return this._value!;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { ITelemetryBaseLogger, ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { Lazy } from \"@fluidframework/common-utils\";\n\nexport type ConfigTypes = string | number | boolean | number[] | string[] | boolean[] | undefined;\n\n/**\n * Base interface for providing configurations to enable/disable/control features\n */\nexport interface IConfigProviderBase {\n    getRawConfig(name: string): ConfigTypes;\n}\n\n/**\n * Explicitly typed interface for reading configurations\n */\n export interface IConfigProvider extends IConfigProviderBase {\n    getBoolean(name: string): boolean | undefined;\n    getNumber(name: string): number | undefined;\n    getString(name: string): string | undefined;\n    getBooleanArray(name: string): boolean[] | undefined;\n    getNumberArray(name: string): number[] | undefined;\n    getStringArray(name: string): string[] | undefined;\n }\n/**\n * Creates a base configuration provider based on `sessionStorage`\n *\n * @returns A lazy initialized base configuration provider with `sessionStorage` as the underlying config store\n */\nexport const sessionStorageConfigProvider =\n    new Lazy<IConfigProviderBase>(() => inMemoryConfigProvider(safeSessionStorage()));\n\nconst NullConfigProvider: IConfigProviderBase = {\n    getRawConfig: () => undefined,\n};\n\n/**\n * Creates a base configuration provider based on the supplied `Storage` instance\n *\n * @param storage - instance of `Storage` to be used as storage media for the config\n * @returns A base configuration provider with\n * the supplied `Storage` instance as the underlying config store\n */\nexport const inMemoryConfigProvider =\n    (storage: Storage | undefined): IConfigProviderBase => {\n    if (storage !== undefined && storage !== null) {\n        return new CachedConfigProvider({\n            getRawConfig: (name: string) => {\n                try {\n                    return stronglyTypedParse(storage.getItem(name) ?? undefined)?.raw;\n                } catch { }\n                return undefined;\n            },\n        });\n    }\n    return NullConfigProvider;\n};\n\ninterface ConfigTypeStringToType {\n    number: number;\n    string: string;\n    boolean: boolean;\n    [\"number[]\"]: number[];\n    [\"string[]\"]: string[];\n    [\"boolean[]\"]: boolean[];\n}\n\ntype PrimitiveTypeStrings = \"number\" | \"string\" | \"boolean\";\n\nfunction isPrimitiveType(type: string): type is PrimitiveTypeStrings {\n    switch (type) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n            return true;\n        default:\n            return false;\n    }\n}\n\ninterface StronglyTypedValue extends Partial<ConfigTypeStringToType> {\n    raw: ConfigTypes;\n}\n/**\n * Takes any supported config type, and returns the value with a strong type. If the type of\n * the config is not a supported type undefined will be returned.\n * The user of this function should cache the result to avoid duplicated work.\n *\n * Strings will be attempted to be parsed and coerced into a strong config type.\n * if it is not possible to parsed and coerce a string to a strong config type the original string\n * will be return with a string type for the consumer to handle further if necessary.\n */\nfunction stronglyTypedParse(input: ConfigTypes): StronglyTypedValue | undefined {\n    let output: ConfigTypes = input;\n    let defaultReturn: Pick<StronglyTypedValue, \"raw\" | \"string\"> | undefined;\n    // we do special handling for strings to try and coerce\n    // them into a config type if we can. This makes it easy\n    // for config sources like sessionStorage which only\n    // holds strings\n    if (typeof input === \"string\") {\n        try {\n            output = JSON.parse(input);\n            // we succeeded in parsing, but we don't support parsing\n            // for any object as we can't do it type safely\n            // so in this case, the default return will be string\n            // rather than undefined, and the consumer\n            // can parse, as we don't want to provide\n            // a false sense of security by just\n            // casting.\n            defaultReturn = { raw: input, string: input };\n        } catch { }\n    }\n\n    if (output === undefined) {\n        return defaultReturn;\n    }\n\n    const outputType = typeof output;\n    if (isPrimitiveType(outputType)) {\n        return { ...defaultReturn, raw: input, [outputType]: output };\n    }\n\n    if (Array.isArray(output)) {\n        const firstType = typeof output[0];\n        // ensure the first elements is a primitive type\n        if (!isPrimitiveType(firstType)) {\n            return defaultReturn;\n        }\n        // ensue all the elements types are homogeneous\n        // aka they all have the same type as the first\n        for (const v of output) {\n            if (typeof v !== firstType) {\n                return defaultReturn;\n            }\n        }\n        return { ...defaultReturn, raw: input, [`${firstType}[]`]: output };\n    }\n\n    return defaultReturn;\n}\n\n/** Referencing the `sessionStorage` variable can throw in some environments such as Node */\nconst safeSessionStorage = (): Storage | undefined => {\n    try {\n        return sessionStorage !== null ? sessionStorage : undefined;\n    } catch { return undefined; }\n};\n\n/**\n * Implementation of {@link IConfigProvider} which contains nested {@link IConfigProviderBase} instances\n */\nexport class CachedConfigProvider implements IConfigProvider {\n    private readonly configCache = new Map<string, StronglyTypedValue>();\n    private readonly orderedBaseProviders: (IConfigProviderBase | undefined)[];\n\n    constructor(\n        ... orderedBaseProviders: (IConfigProviderBase | undefined)[]\n    ) {\n        this.orderedBaseProviders = [];\n        const knownProviders = new Set<IConfigProviderBase>();\n        const candidateProviders = [...orderedBaseProviders];\n        while (candidateProviders.length > 0) {\n            const baseProvider = candidateProviders.shift()!;\n            if (baseProvider !== undefined\n                && isConfigProviderBase(baseProvider)\n                && !knownProviders.has(baseProvider)\n            ) {\n                knownProviders.add(baseProvider);\n                if (baseProvider instanceof CachedConfigProvider) {\n                    candidateProviders.push(...baseProvider.orderedBaseProviders);\n                } else {\n                    this.orderedBaseProviders.push(baseProvider);\n                }\n            }\n        }\n    }\n    getBoolean(name: string): boolean | undefined {\n        return this.getCacheEntry(name)?.boolean;\n    }\n    getNumber(name: string): number | undefined {\n        return this.getCacheEntry(name)?.number;\n    }\n    getString(name: string): string | undefined {\n        return this.getCacheEntry(name)?.string;\n    }\n    getBooleanArray(name: string): boolean[] | undefined {\n        return this.getCacheEntry(name)?.[\"boolean[]\"];\n    }\n    getNumberArray(name: string): number[] | undefined {\n        return this.getCacheEntry(name)?.[\"number[]\"];\n    }\n    getStringArray(name: string): string[] | undefined {\n        return this.getCacheEntry(name)?.[\"string[]\"];\n    }\n\n    getRawConfig(name: string): ConfigTypes {\n        return this.getCacheEntry(name)?.raw;\n    }\n\n    private getCacheEntry(name: string): StronglyTypedValue | undefined {\n        if (!this.configCache.has(name)) {\n            for (const provider of this.orderedBaseProviders) {\n                const parsed = stronglyTypedParse(provider?.getRawConfig(name));\n                if (parsed !== undefined) {\n                    this.configCache.set(name, parsed);\n                    return parsed;\n                }\n            }\n            // configs are immutable, if the first lookup returned no results, all lookups should\n            this.configCache.set(name, { raw: undefined });\n        }\n        return this.configCache.get(name);\n    }\n}\n\n/**\n * A type containing both a telemetry logger and a configuration provider\n */\nexport interface MonitoringContext<\n    L extends ITelemetryBaseLogger = ITelemetryLogger,\n> {\n    config: IConfigProvider;\n    logger: L;\n}\n\nexport function loggerIsMonitoringContext<L extends ITelemetryBaseLogger = ITelemetryLogger>(\n    obj: L): obj is L & MonitoringContext<L> {\n    const maybeConfig = obj as Partial<MonitoringContext<L>> | undefined;\n    return isConfigProviderBase(maybeConfig?.config) && maybeConfig?.logger !== undefined;\n}\n\nexport function loggerToMonitoringContext<L extends ITelemetryBaseLogger = ITelemetryLogger>(\n    logger: L): MonitoringContext<L> {\n    if (loggerIsMonitoringContext<L>(logger)) {\n        return logger;\n    }\n    return mixinMonitoringContext<L>(logger, sessionStorageConfigProvider.value);\n}\n\nexport function mixinMonitoringContext<L extends ITelemetryBaseLogger = ITelemetryLogger>(\n    logger: L, ... configs: (IConfigProviderBase | undefined)[]) {\n    if (loggerIsMonitoringContext<L>(logger)) {\n        throw new Error(\"Logger is already a monitoring context\");\n    }\n    /**\n     * this is the tricky bit we use for now to smuggle monitoring context around.\n     * To the logger we mixin both config and  itself, so mc.logger === logger as it is self-referential.\n     * We then expose it as a Monitoring context, so via types we hide the outer logger methods.\n     * To layers that expect just a logger we can pass mc.logger, but this is still a MonitoringContext\n     * so if a deeper layer then converts that logger to a monitoring context it can find the smuggled properties\n     * of the MonitoringContext and get the config provider.\n     */\n    const mc: L & Partial<MonitoringContext<L>> = logger;\n    mc.config = new CachedConfigProvider(...configs);\n    mc.logger = logger;\n    return mc as MonitoringContext<L>;\n}\n\nfunction isConfigProviderBase(obj: unknown): obj is IConfigProviderBase {\n    const maybeConfig = obj as Partial<IConfigProviderBase> | undefined;\n    return typeof (maybeConfig?.getRawConfig) === \"function\";\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IsomorphicPerformance } from \"./performanceIsomorphic\";\n\nexport const performance: IsomorphicPerformance = window.performance;\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ITelemetryBaseEvent,\n    ITelemetryBaseLogger,\n    ITelemetryErrorEvent,\n    ITelemetryGenericEvent,\n    ITelemetryLogger,\n    ITelemetryPerformanceEvent,\n} from \"@fluidframework/common-definitions\";\n\n/**\n * Null logger\n * It can be used in places where logger instance is required, but events should be not send over.\n */\nexport class BaseTelemetryNullLogger implements ITelemetryBaseLogger {\n    /**\n     * Send an event with the logger\n     *\n     * @param event - the event to send\n     */\n    public send(event: ITelemetryBaseEvent): void {\n        return;\n    }\n}\n\n/**\n * Null logger\n * It can be used in places where logger instance is required, but events should be not send over.\n */\nexport class TelemetryNullLogger implements ITelemetryLogger {\n    public send(event: ITelemetryBaseEvent): void {\n    }\n    public sendTelemetryEvent(event: ITelemetryGenericEvent, error?: any) {\n    }\n    public sendErrorEvent(event: ITelemetryErrorEvent, error?: any) {\n    }\n    public sendPerformanceEvent(event: ITelemetryPerformanceEvent, error?: any): void {\n    }\n}\n\nexport function extractLogSafeErrorProperties(error: any) {\n    const isRegularObject = (value: any): boolean => {\n        return value !== null && !Array.isArray(value) && typeof value === \"object\";\n    };\n\n    const removeMessageFromStack = (stack: string, errorName?: string) => {\n        const stackFrames = stack.split(\"\\n\");\n        stackFrames.shift(); // Remove \"[ErrorName]: [ErrorMessage]\"\n        if (errorName !== undefined) {\n            stackFrames.unshift(errorName); // Add \"[ErrorName]\"\n        }\n        return stackFrames.join(\"\\n\");\n    };\n\n    const message = (typeof error?.message === \"string\")\n        ? error.message as string\n        : String(error);\n\n    const safeProps: { message: string; errorType?: string; stack?: string } = {\n        message,\n    };\n\n    if (isRegularObject(error)) {\n        const { errorType, stack, name } = error;\n\n        if (typeof errorType === \"string\") {\n            safeProps.errorType = errorType;\n        }\n\n        if (typeof stack === \"string\") {\n            const errorName = (typeof name === \"string\") ? name : undefined;\n            safeProps.stack = removeMessageFromStack(stack, errorName);\n        }\n    }\n\n    return safeProps;\n}\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITelemetryProperties } from \"@fluidframework/common-definitions\";\n\n/**\n * All normalized errors flowing through the Fluid Framework adhere to this readonly interface.\n * It features errorType and errorInstanceId on top of Error's members as readonly,\n * and a getter/setter for telemetry props to be included when the error is logged.\n */\nexport interface IFluidErrorBase extends Error {\n    /** Classification of what type of error this is, used programmatically by consumers to interpret the error */\n    readonly errorType: string;\n\n    /**\n     * Error's message property, made readonly.\n     * Be specific, but also take care when including variable data to consider suitability for aggregation in telemetry\n     * Also avoid including any data that jeopardizes the user's privacy.  Add a tagged telemetry property instead.\n     */\n    readonly message: string;\n\n    /** Error's stack property, made readonly */\n    readonly stack?: string;\n\n    /** Error's name property, made readonly */\n    readonly name: string;\n\n    /**\n     * A Guid identifying this error instance.\n     * Useful in telemetry for deduping multiple logging events arising from the same error,\n     * or correlating an error with an inner error that caused it, in case of error wrapping.\n     */\n    readonly errorInstanceId: string;\n\n    /** Get the telemetry properties stashed on this error for logging */\n    getTelemetryProperties(): ITelemetryProperties;\n    /** Add telemetry properties to this error which will be logged with the error */\n    addTelemetryProperties: (props: ITelemetryProperties) => void;\n}\n\nconst hasTelemetryPropFunctions = (x: any): boolean =>\n    typeof x?.getTelemetryProperties === \"function\" &&\n    typeof x?.addTelemetryProperties === \"function\";\n\nexport const hasErrorInstanceId = (x: any): x is { errorInstanceId: string; } =>\n    typeof x?.errorInstanceId === \"string\";\n\n/** type guard for IFluidErrorBase interface */\nexport function isFluidError(e: any): e is IFluidErrorBase {\n    return typeof e?.errorType === \"string\" &&\n        typeof e?.message === \"string\" &&\n        hasErrorInstanceId(e) &&\n        hasTelemetryPropFunctions(e);\n}\n\n/** type guard for old standard of valid/known errors */\nexport function isValidLegacyError(e: any): e is Omit<IFluidErrorBase, \"errorInstanceId\"> {\n    return typeof e?.errorType === \"string\" &&\n        typeof e?.message === \"string\" &&\n        hasTelemetryPropFunctions(e);\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ILoggingError,\n    ITaggedTelemetryPropertyType,\n    ITelemetryLogger,\n    ITelemetryProperties,\n} from \"@fluidframework/common-definitions\";\nimport { v4 as uuid } from \"uuid\";\nimport {\n    hasErrorInstanceId,\n    IFluidErrorBase,\n    isFluidError,\n    isValidLegacyError,\n} from \"./fluidErrorBase\";\n\n/** @returns true if value is an object but neither null nor an array */\nconst isRegularObject = (value: any): boolean => {\n    return value !== null && !Array.isArray(value) && typeof value === \"object\";\n};\n\n/** Inspect the given error for common \"safe\" props and return them */\nexport function extractLogSafeErrorProperties(error: any, sanitizeStack: boolean) {\n    const removeMessageFromStack = (stack: string, errorName?: string) => {\n        if (!sanitizeStack) {\n            return stack;\n        }\n        const stackFrames = stack.split(\"\\n\");\n        stackFrames.shift(); // Remove \"[ErrorName]: [ErrorMessage]\"\n        if (errorName !== undefined) {\n            stackFrames.unshift(errorName); // Add \"[ErrorName]\"\n        }\n        return stackFrames.join(\"\\n\");\n    };\n\n    const message = (typeof error?.message === \"string\")\n        ? error.message as string\n        : String(error);\n\n    const safeProps: { message: string; errorType?: string; stack?: string; } = {\n        message,\n    };\n\n    if (isRegularObject(error)) {\n        const { errorType, stack, name } = error;\n\n        if (typeof errorType === \"string\") {\n            safeProps.errorType = errorType;\n        }\n\n        if (typeof stack === \"string\") {\n            const errorName = (typeof name === \"string\") ? name : undefined;\n            safeProps.stack = removeMessageFromStack(stack, errorName);\n        }\n    }\n\n    return safeProps;\n}\n\n/** type guard for ILoggingError interface */\nexport const isILoggingError = (x: any): x is ILoggingError => typeof x?.getTelemetryProperties === \"function\";\n\n/** Copy props from source onto target, but do not overwrite an existing prop that matches */\nfunction copyProps(target: ITelemetryProperties | LoggingError, source: ITelemetryProperties) {\n    for (const key of Object.keys(source)) {\n        if (target[key] === undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\n/** Metadata to annotate an error object when annotating or normalizing it */\nexport interface IFluidErrorAnnotations {\n    /** Telemetry props to log with the error */\n    props?: ITelemetryProperties;\n}\n\n/** For backwards compatibility with pre-errorInstanceId valid errors */\nfunction patchLegacyError(\n    legacyError: Omit<IFluidErrorBase, \"errorInstanceId\">,\n): asserts legacyError is IFluidErrorBase {\n    const patchMe: { -readonly [P in \"errorInstanceId\"]?: IFluidErrorBase[P] } = legacyError as any;\n    if (patchMe.errorInstanceId === undefined) {\n        patchMe.errorInstanceId = uuid();\n    }\n}\n\n/**\n * Normalize the given error yielding a valid Fluid Error\n * @returns A valid Fluid Error with any provided annotations applied\n * @param error - The error to normalize\n * @param annotations - Annotations to apply to the normalized error\n */\nexport function normalizeError(\n    error: unknown,\n    annotations: IFluidErrorAnnotations = {},\n): IFluidErrorBase {\n    // Back-compat, while IFluidErrorBase is rolled out\n    if (isValidLegacyError(error)) {\n        patchLegacyError(error);\n    }\n\n    if (isFluidError(error)) {\n        // We can simply add the telemetry props to the error and return it\n        error.addTelemetryProperties(annotations.props ?? {});\n        return error;\n    }\n\n    // We have to construct a new Fluid Error, copying safe properties over\n    const { message, stack } = extractLogSafeErrorProperties(error, false /* sanitizeStack */);\n    const fluidError: IFluidErrorBase = new NormalizedExternalError({\n        message,\n        stack,\n    });\n\n    // We need to preserve these properties which are used in a non-typesafe way throughout driver code (see #8743)\n    // Anywhere they are set should be on a valid Fluid Error that would have been returned above,\n    // but we can't prove it with the types, so adding this defensive measure.\n    if (typeof error === \"object\" && error !== null) {\n        const { canRetry, retryAfterSeconds } = error as any;\n        Object.assign(normalizeError, { canRetry, retryAfterSeconds });\n    }\n\n    if (typeof (error) !== \"object\") {\n        // This is only interesting for non-objects\n        fluidError.addTelemetryProperties({ typeofError: typeof (error) });\n    }\n\n    const originalErrorTelemetryProps = isILoggingError(error) ? error.getTelemetryProperties() : {};\n    fluidError.addTelemetryProperties({\n        ...originalErrorTelemetryProps,\n        ...annotations.props,\n        untrustedOrigin: 1, // This will let us filter to errors not originated by our own code\n    });\n\n    return fluidError;\n}\n\nlet stackPopulatedOnCreation: boolean | undefined;\n\n/**\n * The purpose of this function is to provide ability to capture stack context quickly.\n * Accessing new Error().stack is slow, and the slowest part is accessing stack property itself.\n * There are scenarios where we generate error with stack, but error is handled in most cases and\n * stack property is not accessed.\n * For such cases it's better to not read stack property right away, but rather delay it until / if it's needed\n * Some browsers will populate stack right away, others require throwing Error, so we do auto-detection on the fly.\n * @returns Error object that has stack populated.\n */\n export function generateErrorWithStack(): Error {\n    const err = new Error(\"<<generated stack>>\");\n\n    if (stackPopulatedOnCreation === undefined) {\n        stackPopulatedOnCreation = (err.stack !== undefined);\n    }\n\n    if (stackPopulatedOnCreation) {\n        return err;\n    }\n\n    try {\n        throw err;\n    } catch (e) {\n        return e as Error;\n    }\n}\n\nexport function generateStack(): string | undefined {\n    return generateErrorWithStack().stack;\n}\n\n/**\n * Create a new error using newErrorFn, wrapping and caused by the given unknown error.\n * Copies the inner error's stack, errorInstanceId and telemetry props over to the new error if present\n * @param innerError - An error from untrusted/unknown origins\n * @param newErrorFn - callback that will create a new error given the original error's message\n * @returns A new error object \"wrapping\" the given error\n */\nexport function wrapError<T extends LoggingError>(\n    innerError: unknown,\n    newErrorFn: (message: string) => T,\n): T {\n    const {\n        message,\n        stack,\n    } = extractLogSafeErrorProperties(innerError, false /* sanitizeStack */);\n\n    const newError = newErrorFn(message);\n\n    if (stack !== undefined) {\n        overwriteStack(newError, stack);\n    }\n\n    // Mark external errors with untrustedOrigin flag\n    if (isExternalError(innerError)) {\n        newError.addTelemetryProperties({ untrustedOrigin: 1 });\n    }\n\n    // Reuse errorInstanceId\n    if (hasErrorInstanceId(innerError)) {\n        newError.overwriteErrorInstanceId(innerError.errorInstanceId);\n\n        // For \"back-compat\" in the logs\n        newError.addTelemetryProperties({ innerErrorInstanceId: innerError.errorInstanceId });\n    }\n\n    // Lastly, copy over all other telemetry properties. Note these will not overwrite existing properties\n    // This will include the untrustedOrigin property if the inner error itself was created from an external error\n    if (isILoggingError(innerError)) {\n        newError.addTelemetryProperties(innerError.getTelemetryProperties());\n    }\n\n    return newError;\n}\n\n/** The same as wrapError, but also logs the innerError, including the wrapping error's instance id */\nexport function wrapErrorAndLog<T extends LoggingError>(\n    innerError: unknown,\n    newErrorFn: (message: string) => T,\n    logger: ITelemetryLogger,\n) {\n    const newError = wrapError(innerError, newErrorFn);\n\n    // This will match innerError.errorInstanceId if present (see wrapError)\n    const errorInstanceId = newError.errorInstanceId;\n\n    // For \"back-compat\" in the logs\n    const wrappedByErrorInstanceId = errorInstanceId;\n\n    logger.sendTelemetryEvent({\n        eventName: \"WrapError\",\n        errorInstanceId,\n        wrappedByErrorInstanceId,\n    }, innerError);\n\n    return newError;\n}\n\nfunction overwriteStack(error: IFluidErrorBase | LoggingError, stack: string) {\n    // supposedly setting stack on an Error can throw.\n    try {\n        Object.assign(error, { stack });\n    } catch (errorSettingStack) {\n        error.addTelemetryProperties({ stack2: stack });\n    }\n}\n\n/**\n * True for any error object that is an (optionally normalized) external error\n * False for any error we created and raised within the FF codebase, or wrapped in a well-known error type\n */\nexport function isExternalError(e: any): boolean {\n    return !isValidLegacyError(e) ||\n        (e.getTelemetryProperties().untrustedOrigin === 1 &&\n         e.errorType === NormalizedExternalError.normalizedErrorType);\n}\n\n/**\n * Type guard to identify if a particular value (loosely) appears to be a tagged telemetry property\n */\nexport function isTaggedTelemetryPropertyValue(x: any): x is ITaggedTelemetryPropertyType {\n    return (typeof (x?.value) !== \"object\" && typeof (x?.tag) === \"string\");\n}\n\n/**\n * Walk an object's enumerable properties to find those fit for telemetry.\n */\nfunction getValidTelemetryProps(obj: any, keysToOmit: Set<string>): ITelemetryProperties {\n    const props: ITelemetryProperties = {};\n    for (const key of Object.keys(obj)) {\n        if (keysToOmit.has(key)) {\n            continue;\n        }\n        const val = obj[key];\n        switch (typeof val) {\n            case \"string\":\n            case \"number\":\n            case \"boolean\":\n            case \"undefined\":\n                props[key] = val;\n                break;\n            default: {\n                if (isTaggedTelemetryPropertyValue(val)) {\n                    props[key] = val;\n                } else {\n                    // We don't support logging arbitrary objects\n                    props[key] = \"REDACTED (arbitrary object)\";\n                }\n                break;\n            }\n        }\n    }\n    return props;\n}\n\n/**\n * Borrowed from\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Cyclic_object_value#examples}\n * Avoids runtime errors with circular references.\n * Not ideal, as will cut values that are not necessarily circular references.\n * Could be improved by implementing Node's util.inspect() for browser (minus all the coloring code)\n*/\nexport const getCircularReplacer = () => {\n    const seen = new WeakSet();\n    return (key: string, value: any): any => {\n        if (typeof value === \"object\" && value !== null) {\n            if (seen.has(value)) {\n                return \"<removed/circular>\";\n            }\n            seen.add(value);\n        }\n        return value;\n    };\n};\n\n/**\n * Base class for \"trusted\" errors we create, whose properties can generally be logged to telemetry safely.\n * All properties set on the object, or passed in (via the constructor or addTelemetryProperties),\n * will be logged in accordance with their tag, if present.\n *\n * PLEASE take care to avoid setting sensitive data on this object without proper tagging!\n */\nexport class LoggingError extends Error implements ILoggingError, Omit<IFluidErrorBase, \"errorType\"> {\n    private _errorInstanceId = uuid();\n    get errorInstanceId() { return this._errorInstanceId; }\n    overwriteErrorInstanceId(id: string) { this._errorInstanceId = id; }\n\n    /** Back-compat to appease isFluidError typeguard in old code that may handle this error */\n    // @ts-expect-error - This field shouldn't be referenced in the current version, but needs to exist at runtime.\n    private readonly fluidErrorCode: \"-\" = \"-\";\n\n    /**\n     * Create a new LoggingError\n     * @param message - Error message to use for Error base class\n     * @param props - telemetry props to include on the error for when it's logged\n     * @param omitPropsFromLogging - properties by name to omit from telemetry props\n     */\n    constructor(\n        message: string,\n        props?: ITelemetryProperties,\n        private readonly omitPropsFromLogging: Set<string> = new Set(),\n    ) {\n        super(message);\n\n        // Don't log this list itself, or the private _errorInstanceId\n        omitPropsFromLogging.add(\"omitPropsFromLogging\");\n        omitPropsFromLogging.add(\"_errorInstanceId\");\n\n        if (props) {\n            this.addTelemetryProperties(props);\n        }\n    }\n\n    /**\n     * Add additional properties to be logged\n     */\n    public addTelemetryProperties(props: ITelemetryProperties) {\n        copyProps(this, props);\n    }\n\n    /**\n     * Get all properties fit to be logged to telemetry for this error\n     */\n    public getTelemetryProperties(): ITelemetryProperties {\n        const taggableProps = getValidTelemetryProps(this, this.omitPropsFromLogging);\n        // Include non-enumerable props that are not returned by getValidTelemetryProps\n        return {\n            ...taggableProps,\n            stack: this.stack,\n            message: this.message,\n            errorInstanceId: this._errorInstanceId,\n        };\n    }\n}\n\n/** The Error class used when normalizing an external error */\nclass NormalizedExternalError extends LoggingError {\n    // errorType \"genericError\" is used as a default value throughout the code.\n    // Note that this matches ContainerErrorType/DriverErrorType's genericError\n    static readonly normalizedErrorType = \"genericError\";\n\n    errorType = NormalizedExternalError.normalizedErrorType;\n\n    constructor(\n        errorProps: Pick<IFluidErrorBase,\n            | \"message\"\n            | \"stack\"\n        >,\n    ) {\n        super(errorProps.message);\n\n        if (errorProps.stack !== undefined) {\n            overwriteStack(this, errorProps.stack);\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ITelemetryBaseEvent,\n    ITelemetryBaseLogger,\n    ITelemetryErrorEvent,\n    ITelemetryGenericEvent,\n    ITelemetryLogger,\n    ITelemetryPerformanceEvent,\n    ITelemetryProperties,\n    TelemetryEventPropertyType,\n    ITaggedTelemetryPropertyType,\n    TelemetryEventCategory,\n} from \"@fluidframework/common-definitions\";\nimport { BaseTelemetryNullLogger, performance } from \"@fluidframework/common-utils\";\nimport {\n    CachedConfigProvider,\n    loggerIsMonitoringContext,\n    mixinMonitoringContext,\n} from \"./config\";\nimport {\n    isILoggingError,\n    extractLogSafeErrorProperties,\n    generateStack,\n} from \"./errorLogging\";\n\n/**\n * Broad classifications to be applied to individual properties as they're prepared to be logged to telemetry.\n * Please do not modify existing entries for backwards compatibility.\n */\nexport enum TelemetryDataTag {\n    /**\n     * Data containing terms from code packages that may have been dynamically loaded\n     * @deprecated 1.0, will be removed in next release (see issue #6603). Use `TelemetryDataTag.CodeArtifact` instead.\n     */\n    PackageData = \"PackageData\",\n    /** Data containing terms or IDs from code packages that may have been dynamically loaded */\n    CodeArtifact = \"CodeArtifact\",\n    /** Personal data of a variety of classifications that pertains to the user */\n    UserData = \"UserData\",\n}\n\nexport type TelemetryEventPropertyTypes = TelemetryEventPropertyType | ITaggedTelemetryPropertyType;\n\nexport interface ITelemetryLoggerPropertyBag {\n    [index: string]: TelemetryEventPropertyTypes | (() => TelemetryEventPropertyTypes);\n}\nexport interface ITelemetryLoggerPropertyBags{\n    all?: ITelemetryLoggerPropertyBag;\n    error?: ITelemetryLoggerPropertyBag;\n}\n\n/**\n * TelemetryLogger class contains various helper telemetry methods,\n * encoding in one place schemas for various types of Fluid telemetry events.\n * Creates sub-logger that appends properties to all events\n */\nexport abstract class TelemetryLogger implements ITelemetryLogger {\n    public static readonly eventNamespaceSeparator = \":\";\n\n    public static formatTick(tick: number): number {\n        return Math.floor(tick);\n    }\n\n    /**\n     * Attempts to parse number from string.\n     * If fails,returns original string.\n     * Used to make telemetry data typed (and support math operations, like comparison),\n     * in places where we do expect numbers (like contentsize/duration property in http header)\n     */\n    public static numberFromString(str: string | null | undefined): string | number | undefined {\n        if (str === undefined || str === null) {\n            return undefined;\n        }\n        const num = Number(str);\n        return Number.isNaN(num) ? str : num;\n    }\n\n    public static sanitizePkgName(name: string) {\n        return name.replace(\"@\", \"\").replace(\"/\", \"-\");\n    }\n\n    /**\n     * Take an unknown error object and add the appropriate info from it to the event. Message and stack will be copied\n     * over from the error object, along with other telemetry properties if it's an ILoggingError.\n     * @param event - Event being logged\n     * @param error - Error to extract info from\n     * @param fetchStack - Whether to fetch the current callstack if error.stack is undefined\n     */\n    public static prepareErrorObject(event: ITelemetryBaseEvent, error: any, fetchStack: boolean) {\n        const { message, errorType, stack } = extractLogSafeErrorProperties(error, true /* sanitizeStack */);\n        // First, copy over error message, stack, and errorType directly (overwrite if present on event)\n        event.stack = stack;\n        event.error = message; // Note that the error message goes on the 'error' field\n        event.errorType = errorType;\n\n        if (isILoggingError(error)) {\n            // Add any other telemetry properties from the LoggingError\n            const telemetryProp = error.getTelemetryProperties();\n            for (const key of Object.keys(telemetryProp)) {\n                if (event[key] !== undefined) {\n                    // Don't overwrite existing properties on the event\n                    continue;\n                }\n                event[key] = telemetryProp[key];\n            }\n        }\n\n        // Collect stack if we were not able to extract it from error\n        if (event.stack === undefined && fetchStack) {\n            event.stack = generateStack();\n        }\n    }\n\n    public constructor(\n        protected readonly namespace?: string,\n        protected readonly properties?: ITelemetryLoggerPropertyBags) {\n    }\n\n    /**\n     * Send an event with the logger\n     *\n     * @param event - the event to send\n     */\n    public abstract send(event: ITelemetryBaseEvent): void;\n\n    /**\n     * Send a telemetry event with the logger\n     *\n     * @param event - the event to send\n     * @param error - optional error object to log\n     */\n    public sendTelemetryEvent(event: ITelemetryGenericEvent, error?: any) {\n        this.sendTelemetryEventCore({ ...event, category: event.category ?? \"generic\" }, error);\n    }\n\n    /**\n     * Send a telemetry event with the logger\n     *\n     * @param event - the event to send\n     * @param error - optional error object to log\n     */\n     protected sendTelemetryEventCore(\n        event: ITelemetryGenericEvent & { category: TelemetryEventCategory; },\n        error?: any) {\n        const newEvent = { ...event };\n        if (error !== undefined) {\n            TelemetryLogger.prepareErrorObject(newEvent, error, false);\n        }\n\n        // Will include Nan & Infinity, but probably we do not care\n        if (typeof newEvent.duration === \"number\") {\n            newEvent.duration = TelemetryLogger.formatTick(newEvent.duration);\n        }\n\n        this.send(newEvent);\n    }\n\n    /**\n     * Send an error telemetry event with the logger\n     *\n     * @param event - the event to send\n     * @param error - optional error object to log\n     */\n    public sendErrorEvent(event: ITelemetryErrorEvent, error?: any) {\n        this.sendTelemetryEventCore({\n            // ensure the error field has some value,\n            // this can and will be overridden by event, or error\n            error: event.eventName,\n            ...event,\n            category: \"error\",\n        }, error);\n    }\n\n    /**\n     * Send a performance telemetry event with the logger\n     *\n     * @param event - Event to send\n     * @param error - optional error object to log\n     */\n    public sendPerformanceEvent(event: ITelemetryPerformanceEvent, error?: any): void {\n        const perfEvent = {\n            ...event,\n            category: event.category ?? \"performance\",\n        };\n\n        this.sendTelemetryEventCore(perfEvent, error);\n    }\n\n    protected prepareEvent(event: ITelemetryBaseEvent): ITelemetryBaseEvent {\n        const includeErrorProps = event.category === \"error\" || event.error !== undefined;\n        const newEvent: ITelemetryBaseEvent = {\n            ...event,\n        };\n        if (this.namespace !== undefined) {\n            newEvent.eventName = `${this.namespace}${TelemetryLogger.eventNamespaceSeparator}${newEvent.eventName}`;\n        }\n        if (this.properties) {\n            const properties: (undefined | ITelemetryLoggerPropertyBag)[] = [];\n            properties.push(this.properties.all);\n            if (includeErrorProps) {\n                properties.push(this.properties.error);\n            }\n            for (const props of properties) {\n                if (props !== undefined) {\n                    for (const key of Object.keys(props)) {\n                        if (event[key] !== undefined) {\n                            continue;\n                        }\n                        const getterOrValue = props[key];\n                        // If this throws, hopefully it is handled elsewhere\n                        const value = typeof getterOrValue === \"function\" ? getterOrValue() : getterOrValue;\n                        if (value !== undefined) {\n                            newEvent[key] = value;\n                        }\n                    }\n                }\n            }\n        }\n        return newEvent;\n    }\n}\n\n/**\n * @deprecated 0.56, remove TaggedLoggerAdapter once its usage is removed from\n * container-runtime. Issue: #8191\n * TaggedLoggerAdapter class can add tag handling to your logger.\n */\n export class TaggedLoggerAdapter implements ITelemetryBaseLogger {\n    public constructor(\n        private readonly logger: ITelemetryBaseLogger) {\n    }\n\n    public send(eventWithTagsMaybe: ITelemetryBaseEvent) {\n        const newEvent: ITelemetryBaseEvent = {\n            category: eventWithTagsMaybe.category,\n            eventName: eventWithTagsMaybe.eventName,\n        };\n        for (const key of Object.keys(eventWithTagsMaybe)) {\n            const taggableProp = eventWithTagsMaybe[key];\n            const { value, tag } = (typeof taggableProp === \"object\")\n                ? taggableProp\n                : { value: taggableProp, tag: undefined };\n            switch (tag) {\n                case undefined:\n                    // No tag means we can log plainly\n                    newEvent[key] = value;\n                    break;\n                case TelemetryDataTag.PackageData:\n                    // For Microsoft applications, PackageData is safe for now\n                    // (we don't load 3P code in 1P apps)\n                    newEvent[key] = value;\n                    break;\n                case TelemetryDataTag.UserData:\n                    // Strip out anything tagged explicitly as PII.\n                    // Alternate strategy would be to hash these props\n                    newEvent[key] = \"REDACTED (UserData)\";\n                    break;\n                default:\n                    // If we encounter a tag we don't recognize\n                    // then we must assume we should scrub.\n                    newEvent[key] = \"REDACTED (unknown tag)\";\n                    break;\n            }\n        }\n        this.logger.send(newEvent);\n    }\n}\n\n/**\n * ChildLogger class contains various helper telemetry methods,\n * encoding in one place schemas for various types of Fluid telemetry events.\n * Creates sub-logger that appends properties to all events\n */\nexport class ChildLogger extends TelemetryLogger {\n    /**\n     * Create child logger\n     * @param baseLogger - Base logger to use to output events. If undefined, proper child logger\n     * is created, but it does not sends telemetry events anywhere.\n     * @param namespace - Telemetry event name prefix to add to all events\n     * @param properties - Base properties to add to all events\n     * @param propertyGetters - Getters to add additional properties to all events\n     */\n    public static create(\n        baseLogger?: ITelemetryBaseLogger,\n        namespace?: string,\n        properties?: ITelemetryLoggerPropertyBags): TelemetryLogger {\n        // if we are creating a child of a child, rather than nest, which will increase\n        // the callstack overhead, just generate a new logger that includes everything from the previous\n        if (baseLogger instanceof ChildLogger) {\n            const combinedProperties: ITelemetryLoggerPropertyBags = {};\n            for (const extendedProps of [baseLogger.properties, properties]) {\n                if (extendedProps !== undefined) {\n                    if (extendedProps.all !== undefined) {\n                        combinedProperties.all = {\n                            ... combinedProperties.all,\n                            ... extendedProps.all,\n                        };\n                    }\n                    if (extendedProps.error !== undefined) {\n                        combinedProperties.error = {\n                            ... combinedProperties.error,\n                            ... extendedProps.error,\n                        };\n                    }\n                }\n            }\n\n            const combinedNamespace = baseLogger.namespace === undefined\n                ? namespace\n                : namespace === undefined\n                    ? baseLogger.namespace\n                    : `${baseLogger.namespace}${TelemetryLogger.eventNamespaceSeparator}${namespace}`;\n\n            return new ChildLogger(\n                baseLogger.baseLogger,\n                combinedNamespace,\n                combinedProperties,\n            );\n        }\n\n        return new ChildLogger(\n            baseLogger ? baseLogger : new BaseTelemetryNullLogger(),\n            namespace,\n            properties);\n    }\n\n    private constructor(\n        protected readonly baseLogger: ITelemetryBaseLogger,\n        namespace: string | undefined,\n        properties: ITelemetryLoggerPropertyBags | undefined,\n    ) {\n        super(namespace, properties);\n\n        // propagate the monitoring context\n        if (loggerIsMonitoringContext(baseLogger)) {\n            mixinMonitoringContext(\n                this,\n                new CachedConfigProvider(baseLogger.config));\n        }\n    }\n\n    /**\n     * Send an event with the logger\n     *\n     * @param event - the event to send\n     */\n    public send(event: ITelemetryBaseEvent): void {\n        this.baseLogger.send(this.prepareEvent(event));\n    }\n}\n\n/**\n * Multi-sink logger\n * Takes multiple ITelemetryBaseLogger objects (sinks) and logs all events into each sink\n * Implements ITelemetryBaseLogger (through static create() method)\n */\nexport class MultiSinkLogger extends TelemetryLogger {\n    protected loggers: ITelemetryBaseLogger[] = [];\n\n    /**\n     * Create multiple sink logger (i.e. logger that sends events to multiple sinks)\n     * @param namespace - Telemetry event name prefix to add to all events\n     * @param properties - Base properties to add to all events\n     * @param propertyGetters - Getters to add additional properties to all events\n     */\n    constructor(\n        namespace?: string,\n        properties?: ITelemetryLoggerPropertyBags) {\n        super(namespace, properties);\n    }\n\n    /**\n     * Add logger to send all events to\n     * @param logger - Logger to add\n     */\n    public addLogger(logger?: ITelemetryBaseLogger) {\n        if (logger !== undefined && logger !== null) {\n            this.loggers.push(logger);\n        }\n    }\n\n    /**\n     * Send an event to the loggers\n     *\n     * @param event - the event to send to all the registered logger\n     */\n    public send(event: ITelemetryBaseEvent): void {\n        const newEvent = this.prepareEvent(event);\n        this.loggers.forEach((logger: ITelemetryBaseLogger) => {\n            logger.send(newEvent);\n        });\n    }\n}\n\n/**\n * Describes what events PerformanceEvent should log\n * By default, all events are logged, but client can override this behavior\n * For example, there is rarely a need to record start event, as we really after\n * success / failure tracking, including duration (on success).\n */\nexport interface IPerformanceEventMarkers {\n    start?: true;\n    end?: true;\n    cancel?: \"generic\" | \"error\"; // tells wether to issue \"generic\" or \"error\" category cancel event\n}\n\n/**\n * Helper class to log performance events\n */\nexport class PerformanceEvent {\n    public static start(logger: ITelemetryLogger, event: ITelemetryGenericEvent, markers?: IPerformanceEventMarkers) {\n        return new PerformanceEvent(logger, event, markers);\n    }\n\n    public static timedExec<T>(\n        logger: ITelemetryLogger,\n        event: ITelemetryGenericEvent,\n        callback: (event: PerformanceEvent) => T,\n        markers?: IPerformanceEventMarkers,\n    ) {\n        const perfEvent = PerformanceEvent.start(logger, event, markers);\n        try {\n            const ret = callback(perfEvent);\n            perfEvent.autoEnd();\n            return ret;\n        } catch (error) {\n            perfEvent.cancel(undefined, error);\n            throw error;\n        }\n    }\n\n    public static async timedExecAsync<T>(\n        logger: ITelemetryLogger,\n        event: ITelemetryGenericEvent,\n        callback: (event: PerformanceEvent) => Promise<T>,\n        markers?: IPerformanceEventMarkers,\n    ) {\n        const perfEvent = PerformanceEvent.start(logger, event, markers);\n        try {\n            const ret = await callback(perfEvent);\n            perfEvent.autoEnd();\n            return ret;\n        } catch (error) {\n            perfEvent.cancel(undefined, error);\n            throw error;\n        }\n    }\n\n    public get duration() { return performance.now() - this.startTime; }\n\n    private event?: ITelemetryGenericEvent;\n    private readonly startTime = performance.now();\n    private startMark?: string;\n\n    protected constructor(\n        private readonly logger: ITelemetryLogger,\n        event: ITelemetryGenericEvent,\n        private readonly markers: IPerformanceEventMarkers = { end: true, cancel: \"generic\" },\n    ) {\n        this.event = { ...event };\n        if (this.markers.start) {\n            this.reportEvent(\"start\");\n        }\n\n        if (typeof window === \"object\" && window != null && window.performance) {\n            this.startMark = `${event.eventName}-start`;\n            window.performance.mark(this.startMark);\n        }\n    }\n\n    public reportProgress(props?: ITelemetryProperties, eventNameSuffix: string = \"update\"): void {\n        this.reportEvent(eventNameSuffix, props);\n    }\n\n    private autoEnd() {\n        // Event might have been cancelled or ended in the callback\n        if (this.event && this.markers.end) {\n            this.reportEvent(\"end\");\n        }\n        this.performanceEndMark();\n        this.event = undefined;\n    }\n\n    public end(props?: ITelemetryProperties): void {\n        this.reportEvent(\"end\", props);\n        this.performanceEndMark();\n        this.event = undefined;\n    }\n\n    private performanceEndMark() {\n        if (this.startMark && this.event) {\n            const endMark = `${this.event.eventName}-end`;\n            window.performance.mark(endMark);\n            window.performance.measure(`${this.event.eventName}`, this.startMark, endMark);\n            this.startMark = undefined;\n        }\n    }\n\n    public cancel(props?: ITelemetryProperties, error?: any): void {\n        if (this.markers.cancel !== undefined) {\n            this.reportEvent(\"cancel\", { category: this.markers.cancel, ...props }, error);\n        }\n        this.event = undefined;\n    }\n\n    /**\n     * Report the event, if it hasn't already been reported.\n     */\n    public reportEvent(eventNameSuffix: string, props?: ITelemetryProperties, error?: any) {\n        // There are strange sequences involving multiple Promise chains\n        // where the event can be cancelled and then later a callback is invoked\n        // and the caller attempts to end directly, e.g. issue #3936. Just return.\n        if (!this.event) {\n            return;\n        }\n\n        const event: ITelemetryPerformanceEvent = { ...this.event, ...props };\n        event.eventName = `${event.eventName}_${eventNameSuffix}`;\n        if (eventNameSuffix !== \"start\") {\n            event.duration = this.duration;\n        }\n\n        this.logger.sendPerformanceEvent(event, error);\n    }\n}\n\n/**\n * Logger that is useful for UT\n * It can be used in places where logger instance is required, but events should be not send over.\n */\n export class TelemetryUTLogger implements ITelemetryLogger {\n    public send(event: ITelemetryBaseEvent): void {\n    }\n    public sendTelemetryEvent(event: ITelemetryGenericEvent, error?: any) {\n    }\n    public sendErrorEvent(event: ITelemetryErrorEvent, error?: any) {\n        this.reportError(\"errorEvent in UT logger!\", event, error);\n    }\n    public sendPerformanceEvent(event: ITelemetryPerformanceEvent, error?: any): void {\n    }\n    public logGenericError(eventName: string, error: any) {\n        this.reportError(`genericError in UT logger!`, { eventName }, error);\n    }\n    public logException(event: ITelemetryErrorEvent, exception: any): void {\n        this.reportError(\"exception in UT logger!\", event, exception);\n    }\n    public debugAssert(condition: boolean, event?: ITelemetryErrorEvent): void {\n        this.reportError(\"debugAssert in UT logger!\");\n    }\n    public shipAssert(condition: boolean, event?: ITelemetryErrorEvent): void {\n        this.reportError(\"shipAssert in UT logger!\");\n    }\n\n    private reportError(message: string, event?: ITelemetryErrorEvent, err?: any) {\n        const error = new Error(message);\n        (error as any).error = error;\n        (error as any).event = event;\n        // report to console as exception can be eaten\n        console.error(message);\n        console.error(error);\n        throw error;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ITelemetryBaseEvent,\n    ITelemetryBaseLogger,\n    ITelemetryProperties,\n} from \"@fluidframework/common-definitions\";\nimport { performance } from \"@fluidframework/common-utils\";\nimport { debug as registerDebug, IDebugger } from \"debug\";\nimport { TelemetryLogger, MultiSinkLogger, ChildLogger, ITelemetryLoggerPropertyBags } from \"./logger\";\n\n/**\n * Implementation of debug logger\n */\nexport class DebugLogger extends TelemetryLogger {\n    /**\n     * Create debug logger - all events are output to debug npm library\n     * @param namespace - Telemetry event name prefix to add to all events\n     * @param properties - Base properties to add to all events\n     * @param propertyGetters - Getters to add additional properties to all events\n     */\n    public static create(\n        namespace: string,\n        properties?: ITelemetryLoggerPropertyBags,\n    ): TelemetryLogger {\n        // Setup base logger upfront, such that host can disable it (if needed)\n        const debug = registerDebug(namespace);\n\n        const debugErr = registerDebug(namespace);\n        debugErr.log = console.error.bind(console);\n        debugErr.enabled = true;\n\n        return new DebugLogger(debug, debugErr, properties);\n    }\n\n    /**\n     * Mix in debug logger with another logger.\n     * Returned logger will output events to both newly created debug logger, as well as base logger\n     * @param namespace - Telemetry event name prefix to add to all events\n     * @param properties - Base properties to add to all events\n     * @param propertyGetters - Getters to add additional properties to all events\n     * @param baseLogger - Base logger to output events (in addition to debug logger being created). Can be undefined.\n     */\n    public static mixinDebugLogger(\n        namespace: string,\n        baseLogger?: ITelemetryBaseLogger,\n        properties?: ITelemetryLoggerPropertyBags,\n    ): TelemetryLogger {\n        if (!baseLogger) {\n            return DebugLogger.create(namespace, properties);\n        }\n\n        const multiSinkLogger = new MultiSinkLogger(undefined, properties);\n        multiSinkLogger.addLogger(DebugLogger.create(namespace, this.tryGetBaseLoggerProps(baseLogger)));\n        multiSinkLogger.addLogger(ChildLogger.create(baseLogger, namespace));\n\n        return multiSinkLogger;\n    }\n\n    private static tryGetBaseLoggerProps(baseLogger?: ITelemetryBaseLogger) {\n        if (baseLogger instanceof TelemetryLogger) {\n            return (baseLogger as any as { properties: ITelemetryLoggerPropertyBags; }).properties;\n        }\n        return undefined;\n    }\n\n    constructor(\n        private readonly debug: IDebugger,\n        private readonly debugErr: IDebugger,\n        properties?: ITelemetryLoggerPropertyBags,\n    ) {\n        super(undefined, properties);\n    }\n\n    /**\n     * Send an event to debug loggers\n     *\n     * @param event - the event to send\n     */\n    public send(event: ITelemetryBaseEvent): void {\n        const newEvent: ITelemetryProperties = this.prepareEvent(event);\n        const isError = newEvent.category === \"error\";\n        let logger = isError ? this.debugErr : this.debug;\n\n        // Use debug's coloring schema for base of the event\n        const index = event.eventName.lastIndexOf(TelemetryLogger.eventNamespaceSeparator);\n        const name = event.eventName.substring(index + 1);\n        if (index > 0) {\n            logger = logger.extend(event.eventName.substring(0, index));\n        }\n        newEvent.eventName = undefined;\n\n        let tick = \"\";\n        tick = `tick=${TelemetryLogger.formatTick(performance.now())}`;\n\n        // Extract stack to put it last, but also to avoid escaping '\\n' in it by JSON.stringify below\n        const stack = newEvent.stack ? newEvent.stack : \"\";\n        newEvent.stack = undefined;\n\n        // Watch out for circular references - they can come from two sources\n        // 1) error object - we do not control it and should remove it and retry\n        // 2) properties supplied by telemetry caller - that's a bug that should be addressed!\n        let payload: string;\n        try {\n            payload = JSON.stringify(newEvent);\n        } catch (error) {\n            newEvent.error = undefined;\n            payload = JSON.stringify(newEvent);\n        }\n\n        if (payload === \"{}\") {\n            payload = \"\";\n        }\n\n        // Force errors out, to help with diagnostics\n        if (isError) {\n            logger.enabled = true;\n        }\n\n        // Print multi-line.\n        logger(`${name} ${payload} ${tick} ${stack}`);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IResolvedUrl, IFluidResolvedUrl } from \"@fluidframework/driver-definitions\";\n\nexport const isFluidResolvedUrl =\n    (resolved: IResolvedUrl | undefined): resolved is IFluidResolvedUrl => resolved?.type === \"fluid\";\n\nexport function ensureFluidResolvedUrl(resolved: IResolvedUrl | undefined): asserts resolved is IFluidResolvedUrl {\n    if (!isFluidResolvedUrl(resolved)) {\n        throw new Error(`resolved is not a Fluid url. Type: ${resolved?.type}`);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IRequest } from \"@fluidframework/core-interfaces\";\nimport { IResolvedUrl, IUrlResolver } from \"@fluidframework/driver-definitions\";\n\n/**\n * Resolver that takes a list of url resolvers and then try each of them to resolve the url.\n * @param resolversList - List of url resolvers to be used to resolve the request.\n * @param request - Request to be resolved.\n */\nexport async function configurableUrlResolver(\n    resolversList: IUrlResolver[],\n    request: IRequest,\n): Promise<IResolvedUrl | undefined> {\n    let resolved: IResolvedUrl | undefined;\n    for (const resolver of resolversList) {\n        resolved = await resolver.resolve({ ...request });\n        if (resolved !== undefined) {\n            return resolved;\n        }\n    }\n    return undefined;\n}\n\nexport class MultiUrlResolver implements IUrlResolver {\n    public static create(urlResolver: IUrlResolver | IUrlResolver[]) {\n        if (Array.isArray(urlResolver)) {\n            if (urlResolver.length === 1) {\n                return urlResolver[0];\n            }\n            return new MultiUrlResolver(urlResolver);\n        }\n        return urlResolver;\n    }\n\n    private constructor(private readonly urlResolvers: IUrlResolver[]) { }\n\n    async resolve(request: IRequest): Promise<IResolvedUrl | undefined> {\n        return configurableUrlResolver(this.urlResolvers, request);\n    }\n\n    public async getAbsoluteUrl(\n        resolvedUrl: IResolvedUrl,\n        relativeUrl: string,\n    ): Promise<string> {\n        throw new Error(\"Not implmented\");\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITelemetryBaseLogger, IDisposable } from \"@fluidframework/common-definitions\";\nimport {\n    FluidObject,\n    IRequest,\n    IResponse,\n} from \"@fluidframework/core-interfaces\";\nimport { IDocumentStorageService } from \"@fluidframework/driver-definitions\";\nimport {\n    IClientConfiguration,\n    IClientDetails,\n    ISequencedDocumentMessage,\n    ISnapshotTree,\n    MessageType,\n    ISummaryTree,\n    IVersion,\n    IDocumentMessage,\n    IQuorumClients,\n} from \"@fluidframework/protocol-definitions\";\nimport { IAudience } from \"./audience\";\nimport { IDeltaManager } from \"./deltas\";\nimport { ICriticalContainerError } from \"./error\";\nimport { ILoader, ILoaderOptions, ISnapshotTreeWithBlobContents } from \"./loader\";\nimport { IFluidCodeDetails } from \"./fluidPackage\";\n\n/**\n * The attachment state of some Fluid data (e.g. a container or data store), denoting whether it is uploaded to the\n * service.  The transition from detached to attached state is a one-way transition.\n */\nexport enum AttachState {\n    /**\n     * In detached state, the data is only present on the local client's machine.  It has not yet been uploaded\n     * to the service.\n     */\n    Detached = \"Detached\",\n\n    /**\n     * In attaching state, the data has started the upload to the service, but has not yet completed.\n     */\n    Attaching = \"Attaching\",\n\n    /**\n     * In attached state, the data has completed upload to the service.  It can be accessed by other clients after\n     * reaching attached state.\n     */\n    Attached = \"Attached\",\n}\n\n// Represents the bind state of the entity.\nexport enum BindState {\n    NotBound = \"NotBound\",\n    Binding = \"Binding\",\n    Bound = \"Bound\",\n}\n\n/**\n * The IRuntime represents an instantiation of a code package within a Container.\n * Primarily held by the ContainerContext to be able to interact with the running instance of the Container.\n */\nexport interface IRuntime extends IDisposable {\n\n    /**\n     * Executes a request against the runtime\n     */\n    request(request: IRequest): Promise<IResponse>;\n\n    /**\n     * Notifies the runtime of a change in the connection state\n     */\n    setConnectionState(connected: boolean, clientId?: string);\n\n    /**\n     * Processes the given op (message)\n     */\n    process(message: ISequencedDocumentMessage, local: boolean, context: any);\n\n    /**\n     * Processes the given signal\n     */\n    processSignal(message: any, local: boolean);\n\n    /**\n     * Create a summary. Used when attaching or serializing a detached container.\n     *\n     * @param blobRedirectTable - A table passed during the attach process. While detached, blob upload is supported\n     * using IDs generated locally. After attach, these IDs cannot be used, so this table maps the old local IDs to the\n     * new storage IDs so requests can be redirected.\n     */\n    createSummary(blobRedirectTable?: Map<string, string>): ISummaryTree;\n\n    /**\n     * Propagate the container state when container is attaching or attached.\n     * @param attachState - State of the container.\n     */\n    setAttachState(attachState: AttachState.Attaching | AttachState.Attached): void;\n\n    /**\n     * Get pending local state in a serializable format to be given back to a newly loaded container\n     */\n    getPendingLocalState(): unknown;\n\n    /**\n     * Notify runtime that container is moving to \"Attaching\" state\n     * @param snapshot - snapshot created at attach time\n     */\n    notifyAttaching(snapshot: ISnapshotTreeWithBlobContents): void;\n}\n\n/**\n * The ContainerContext is a proxy standing between the Container and the Container's IRuntime.\n * This allows the Container to terminate the connection to the IRuntime.\n *\n * Specifically, there is an event on Container, onContextChanged, which mean a new code proposal has been loaded,\n * so the old IRuntime is no longer valid, as its ContainerContext has been revoked,\n * and the Container has created a new ContainerContext.\n */\nexport interface IContainerContext extends IDisposable {\n    readonly existing: boolean | undefined;\n    readonly options: ILoaderOptions;\n    readonly clientId: string | undefined;\n    readonly clientDetails: IClientDetails;\n    readonly storage: IDocumentStorageService;\n    readonly connected: boolean;\n    readonly baseSnapshot: ISnapshotTree | undefined;\n    readonly submitFn: (type: MessageType, contents: any, batch: boolean, appData?: any) => number;\n    readonly submitSignalFn: (contents: any) => void;\n    readonly closeFn: (error?: ICriticalContainerError) => void;\n    readonly deltaManager: IDeltaManager<ISequencedDocumentMessage, IDocumentMessage>;\n    readonly quorum: IQuorumClients;\n    /**\n     * @deprecated This method is provided as a migration tool for customers currently reading the code details\n     * from within the Container by directly accessing the Quorum proposals.  The code details should not be accessed\n     * from within the Container as this requires coupling between the container contents and the code loader.\n     * Direct access to Quorum proposals will be removed in an upcoming release, and in a further future release this\n     * migration tool will be removed.\n     */\n    getSpecifiedCodeDetails?(): IFluidCodeDetails | undefined;\n    readonly audience: IAudience | undefined;\n    readonly loader: ILoader;\n    // The logger implementation, which would support tagged events, should be provided by the loader.\n    readonly taggedLogger: ITelemetryBaseLogger;\n    readonly serviceConfiguration: IClientConfiguration | undefined;\n    pendingLocalState?: unknown;\n\n    /**\n     * Ambient services provided with the context\n     */\n    readonly scope: FluidObject;\n\n    /**\n     * Get an absolute url for a provided container-relative request.\n     * @param relativeUrl - A relative request within the container\n     *\n     * TODO: Optional for backwards compatibility. Make non-optional in version 0.19\n     */\n    getAbsoluteUrl?(relativeUrl: string): Promise<string | undefined>;\n\n    /**\n     * Indicates the attachment state of the container to a host service.\n     */\n    readonly attachState: AttachState;\n\n    getLoadedFromVersion(): IVersion | undefined;\n\n    updateDirtyContainerState(dirty: boolean): void;\n    /**\n     * WARNING: this id is meant for telemetry usages ONLY, not recommended for other consumption\n     * This id is not supposed to be exposed anywhere else. It is dependant on usage or drivers\n     * and scenarios which can change in the future.\n     */\n    readonly id: string;\n}\n\nexport const IRuntimeFactory: keyof IProvideRuntimeFactory = \"IRuntimeFactory\";\n\nexport interface IProvideRuntimeFactory {\n    readonly IRuntimeFactory: IRuntimeFactory;\n}\n\n/**\n * Exported module definition\n *\n * Provides the entry point for the ContainerContext to load the proper IRuntime\n * to start up the running instance of the Container.\n */\nexport interface IRuntimeFactory extends IProvideRuntimeFactory {\n    /**\n     * Instantiates a new IRuntime for the given IContainerContext to proxy to\n     * This is the main entry point to the Container's business logic\n     *\n     * @param context - container context to be supplied to the runtime\n     * @param existing - whether to instantiate for the first time or from an existing context\n     */\n    instantiateRuntime(context: IContainerContext, existing?: boolean): Promise<IRuntime>;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { parse } from \"url\";\nimport {\n    IDocumentServiceFactory,\n    IResolvedUrl,\n    IDocumentService,\n} from \"@fluidframework/driver-definitions\";\nimport { ISummaryTree } from \"@fluidframework/protocol-definitions\";\nimport { ITelemetryBaseLogger } from \"@fluidframework/common-definitions\";\nimport { ensureFluidResolvedUrl } from \"./fluidResolvedUrl\";\n\nexport class MultiDocumentServiceFactory implements IDocumentServiceFactory {\n    public static create(documentServiceFactory: IDocumentServiceFactory | IDocumentServiceFactory[]) {\n        if (Array.isArray(documentServiceFactory)) {\n            const factories: IDocumentServiceFactory[] = [];\n            documentServiceFactory.forEach((factory) => {\n                const maybeMulti = factory as MultiDocumentServiceFactory;\n                if (maybeMulti.protocolToDocumentFactoryMap !== undefined) {\n                    factories.push(...maybeMulti.protocolToDocumentFactoryMap.values());\n                } else {\n                    factories.push(factory);\n                }\n            });\n            if (factories.length === 1) {\n                return factories[0];\n            }\n            return new MultiDocumentServiceFactory(factories);\n        }\n        return documentServiceFactory;\n    }\n\n    private readonly protocolToDocumentFactoryMap: Map<string, IDocumentServiceFactory>;\n\n    constructor(documentServiceFactories: IDocumentServiceFactory[]) {\n        this.protocolToDocumentFactoryMap = new Map();\n        documentServiceFactories.forEach((factory: IDocumentServiceFactory) => {\n            this.protocolToDocumentFactoryMap.set(factory.protocolName, factory);\n        });\n    }\n    public readonly protocolName = \"none:\";\n    async createDocumentService(\n        resolvedUrl: IResolvedUrl,\n        logger?: ITelemetryBaseLogger,\n        clientIsSummarizer?: boolean,\n    ): Promise<IDocumentService> {\n        ensureFluidResolvedUrl(resolvedUrl);\n        const urlObj = parse(resolvedUrl.url);\n        if (urlObj.protocol === undefined || urlObj.protocol === null) {\n            throw new Error(\"No protocol provided\");\n        }\n        const factory: IDocumentServiceFactory | undefined = this.protocolToDocumentFactoryMap.get(urlObj.protocol);\n        if (factory === undefined) {\n            throw new Error(\"Unknown Fluid protocol\");\n        }\n\n        return factory.createDocumentService(resolvedUrl, logger, clientIsSummarizer);\n    }\n\n    public async createContainer(\n        createNewSummary: ISummaryTree,\n        createNewResolvedUrl: IResolvedUrl,\n        logger?: ITelemetryBaseLogger,\n        clientIsSummarizer?: boolean,\n    ): Promise<IDocumentService> {\n        ensureFluidResolvedUrl(createNewResolvedUrl);\n        const urlObj = parse(createNewResolvedUrl.url);\n        if (urlObj.protocol === undefined || urlObj.protocol === null) {\n            throw new Error(\"No protocol provided\");\n        }\n        const factory: IDocumentServiceFactory | undefined = this.protocolToDocumentFactoryMap.get(urlObj.protocol);\n        if (factory === undefined) {\n            throw new Error(\"Unknown Fluid protocol\");\n        }\n        return factory.createContainer(createNewSummary, createNewResolvedUrl, logger, clientIsSummarizer);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * A browser friendly version of the node assert library. Use this instead of the 'assert' package, which has a big\n * impact on bundle sizes.\n * @param condition - The condition that should be true, if the condition is false an error will be thrown.\n * @param message - The message to include in the error when the condition does not hold.\n *  A number should not be specificed manually. Run policy-check to get shortcode number assigned.\n */\n export function assert(condition: boolean, message: string | number): asserts condition {\n     if (!condition) {\n         throw new Error(typeof message === \"number\" ? `0x${message.toString(16).padStart(3,\"0\")}` : message);\n     }\n }\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * This function can be used to assert at compile time that a given value has type never.\n * One common usage is in the default case of a switch block,\n * to ensure that all cases are explicitly handled.\n */\nexport function unreachableCase(_: never, message = \"Unreachable Case\"): never {\n    throw new Error(message);\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITelemetryProperties } from \"@fluidframework/common-definitions\";\n\n/**\n * Different error types the Container may report out to the Host\n */\nexport enum ContainerErrorType {\n    /**\n     * Some error, most likely an exception caught by runtime and propagated to container as critical error\n     */\n    genericError = \"genericError\",\n\n    /**\n     * Throttling error from server. Server is busy and is asking not to reconnect for some time\n     */\n    throttlingError = \"throttlingError\",\n\n    /**\n     * Data loss error detected by Container / DeltaManager. Likely points to storage issue.\n     */\n    dataCorruptionError = \"dataCorruptionError\",\n\n    /**\n     * Error encountered when processing an operation. May correlate with data corruption.\n     */\n    dataProcessingError = \"dataProcessingError\",\n\n    /**\n     * Error indicating an API is being used improperly resulting in an invalid operation.\n     */\n     usageError = \"usageError\",\n\n    /**\n     * Error indicating an client session has expired. Currently this only happens when GC is allowed on a document and\n     * aids in safely deleting unused objects.\n     */\n    clientSessionExpiredError = \"clientSessionExpiredError\",\n}\n\n/**\n * Base interface for all errors and warnings at container level\n */\nexport interface IErrorBase extends Partial<Error> {\n    /** errorType is a union of error types from\n     * - container\n     * - runtime\n     * - drivers\n     */\n    readonly errorType: string;\n\n    /**\n     * See Error.message\n     * Privacy Note - This is a freeform string that we may not control in all cases (e.g. a dependency throws an error)\n     * If there are known cases where this contains privacy-sensitive data it will be tagged and included in the result\n     * of getTelemetryProperties. When logging, consider fetching it that way rather than straight from this field.\n     */\n    readonly message: string;\n    /** See Error.name */\n    readonly name?: string;\n    /** See Error.stack */\n    readonly stack?: string;\n    /**\n     * Returns all properties of this error object that are either safe to log\n     * or explicitly tagged as containing privacy-sensitive data.\n     */\n    getTelemetryProperties?(): ITelemetryProperties;\n}\n\n/**\n * Represents warnings raised on container.\n */\nexport interface ContainerWarning extends IErrorBase {\n    /**\n     * Whether this error has already been logged. Used to avoid logging errors twice.\n     * Default is false.\n     */\n    logged?: boolean;\n}\n\n/**\n * Represents errors raised on container.\n */\nexport type ICriticalContainerError = IErrorBase;\n\n/**\n * Generic wrapper for an unrecognized/uncategorized error object\n */\nexport interface IGenericError extends IErrorBase {\n    readonly errorType: ContainerErrorType.genericError;\n    error?: any;\n}\n\n/**\n * Error indicating an API is being used improperly resulting in an invalid operation.\n */\n export interface IUsageError extends IErrorBase {\n    readonly errorType: ContainerErrorType.usageError;\n}\n\n/**\n * Warning emitted when requests to storage are being throttled\n */\nexport interface IThrottlingWarning extends IErrorBase {\n    readonly errorType: ContainerErrorType.throttlingError;\n    readonly retryAfterSeconds: number;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\n /**\n  * Specifies an environment on Fluid property of a IFluidPackage\n  */\nexport interface IFluidPackageEnvironment {\n\n    /**\n     * The name of the target. For a browser environment, this could be umd for scripts\n     * or css for styles.\n     */\n    [target: string]: undefined | {\n        /**\n         * List of files for the target. These can be relative or absolute.\n         * The code loader should resolve relative paths, and validate all\n         * full urls.\n         */\n        files: string[];\n\n        /**\n         * General access for extended fields as specific usages will\n         * likely have additional infornamation like a definition\n         * of Library, the entrypoint for umd packages\n         */\n        [key: string]: unknown;\n    };\n}\n\n/**\n * Fluid-specific properties expected on a package to be loaded by the code loader.\n * While compatible with the npm package format it is not necessary that that package is an\n * npm package:\n * {@link https://stackoverflow.com/questions/10065564/add-custom-metadata-or-config-to-package-json-is-it-valid}\n */\nexport interface IFluidPackage {\n    /**\n     * The name of the package that this code represnets\n     */\n    name: string;\n    /**\n     * This object represents the Fluid specific properties of the package\n     */\n    fluid: {\n        /**\n         * The name of the of the environment. This should be something like browser, or node\n         * and contain the necessary targets for loading this code in that environment.\n         */\n        [environment: string]: undefined | IFluidPackageEnvironment;\n    };\n    /**\n     * General access for extended fields as specific usages will\n     * likely have additional infornamation like a definition of\n     * compatible versions, or deployment information like rings or rollouts.\n     */\n    [key: string]: unknown;\n}\n\n/**\n * Check if the package.json defines a Fluid package\n * @param pkg - the package json data to check if it is a Fluid package.\n */\nexport const isFluidPackage = (pkg: any): pkg is Readonly<IFluidPackage> =>\n    typeof pkg === \"object\"\n    && typeof pkg?.name === \"string\"\n    && typeof pkg?.fluid === \"object\";\n\n/**\n * Package manager configuration. Provides a key value mapping of config values\n */\nexport interface IFluidCodeDetailsConfig {\n    readonly [key: string]: string;\n}\n\n/**\n * Data structure used to describe the code to load on the Fluid document\n */\nexport interface IFluidCodeDetails {\n    /**\n     * The code package to be used on the Fluid document. This is either the package name which will be loaded\n     * from a package manager. Or the expanded Fluid package.\n     */\n    readonly package: string | Readonly<IFluidPackage>;\n\n    /**\n     * Configuration details. This includes links to the package manager and base CDNs.\n     *\n     * @remarks This is strictly consumer-defined data.\n     * Its contents and semantics (including whether or not this data is present) are completely up to the consumer.\n     */\n    readonly config?: IFluidCodeDetailsConfig;\n}\n\nexport const isFluidCodeDetails = (details: unknown): details is Readonly<IFluidCodeDetails> => {\n    const maybeCodeDetails = details as Partial<IFluidCodeDetails> | undefined;\n    return typeof maybeCodeDetails === \"object\"\n        && (typeof maybeCodeDetails?.package === \"string\" || isFluidPackage(maybeCodeDetails?.package))\n        && (maybeCodeDetails?.config === undefined || typeof maybeCodeDetails?.config === \"object\");\n};\n\nexport const IFluidCodeDetailsComparer: keyof IProvideFluidCodeDetailsComparer = \"IFluidCodeDetailsComparer\";\n\nexport interface IProvideFluidCodeDetailsComparer {\n    readonly IFluidCodeDetailsComparer: IFluidCodeDetailsComparer ;\n}\n\n/**\n * Provides capability to compare Fluid code details.\n */\nexport interface IFluidCodeDetailsComparer extends IProvideFluidCodeDetailsComparer {\n\n    /**\n     * Determines if the `candidate` code details satisfy the constraints specified in `constraint` code details.\n     *\n     * Similar semantics to:\n     * {@link https://github.com/npm/node-semver#usage}\n     */\n    satisfies(candidate: IFluidCodeDetails, constraint: IFluidCodeDetails): Promise<boolean>;\n\n/* eslint-disable max-len */\n    /**\n     * Return a number representing the ascending sort order of the `a` and `b` code details;\n     *      `< 0` if `a < b`.\n     *      `= 0` if `a === b`.\n     *      `> 0` if `a > b`.\n     *      `undefined` if `a` is not comparable to `b`.\n     *\n     * Similar semantics to:\n     * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Description | Array.sort}\n     */\n    compare(a: IFluidCodeDetails, b: IFluidCodeDetails): Promise<number | undefined>;\n/* eslint-enable max-len */\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ContainerErrorType,\n    IGenericError,\n    IErrorBase,\n    IThrottlingWarning,\n} from \"@fluidframework/container-definitions\";\nimport {\n    LoggingError,\n    IFluidErrorBase,\n    normalizeError,\n    wrapError,\n    wrapErrorAndLog,\n    isExternalError,\n} from \"@fluidframework/telemetry-utils\";\nimport { ITelemetryLogger, ITelemetryProperties } from \"@fluidframework/common-definitions\";\nimport { ISequencedDocumentMessage } from \"@fluidframework/protocol-definitions\";\n\n/**\n * Generic wrapper for an unrecognized/uncategorized error object\n */\nexport class GenericError extends LoggingError implements IGenericError, IFluidErrorBase {\n    readonly errorType = ContainerErrorType.genericError;\n\n    /**\n     * Create a new GenericError\n     * @param message - Error message\n     * @param error - inner error object\n     * @param props - Telemetry props to include when the error is logged\n     */\n    constructor(\n        message: string,\n        readonly error?: any,\n        props?: ITelemetryProperties,\n    ) {\n        // Don't try to log the inner error\n        super(message, props, new Set([\"error\"]));\n    }\n}\n\n/**\n * Warning emitted when requests to storage are being throttled.\n */\nexport class ThrottlingWarning extends LoggingError implements IThrottlingWarning, IFluidErrorBase {\n    readonly errorType = ContainerErrorType.throttlingError;\n\n    private constructor(\n        message: string,\n        readonly retryAfterSeconds: number,\n        props?: ITelemetryProperties,\n    ) {\n        super(message, props);\n    }\n\n    /**\n     * Wrap the given error as a ThrottlingWarning\n     * Only preserves the error message, and applies the given retry after to the new warning object\n     */\n    static wrap(\n        error: unknown,\n        retryAfterSeconds: number,\n        logger: ITelemetryLogger,\n    ): IThrottlingWarning {\n        const newErrorFn =\n            (errMsg: string) => new ThrottlingWarning(errMsg, retryAfterSeconds);\n        return wrapErrorAndLog(error, newErrorFn, logger);\n    }\n}\n\n/** Error indicating an API is being used improperly resulting in an invalid operation. */\nexport class UsageError extends LoggingError implements IFluidErrorBase {\n    // TODO: implement IUsageError once available\n    readonly errorType = \"usageError\";\n\n    constructor(\n        message: string,\n    ) {\n        super(message, { usageError: true });\n    }\n}\n\n/** Error indicating that a client's session has reached its time limit and is closed. */\nexport class ClientSessionExpiredError extends LoggingError implements IFluidErrorBase {\n    readonly errorType = ContainerErrorType.clientSessionExpiredError;\n\n    constructor(\n        message: string,\n        readonly expiryMs: number,\n    ) {\n        super(message, { timeoutMs: expiryMs });\n    }\n}\n\n/**\n * DataCorruptionError indicates that we encountered definitive evidence that the data at rest\n * backing this container is corrupted, and this container would never be expected to load properly again\n */\nexport class DataCorruptionError extends LoggingError implements IErrorBase, IFluidErrorBase {\n    readonly errorType = ContainerErrorType.dataCorruptionError;\n    readonly canRetry = false;\n\n    constructor(\n        message: string,\n        props: ITelemetryProperties,\n    ) {\n        super(message, { ...props, dataProcessingError: 1 });\n    }\n}\n\n/**\n * DataProcessingError indicates we hit a fatal error while processing incoming data from the Fluid Service.\n * The error will often originate in the dataStore or DDS implementation that is responding to incoming changes.\n * This differs from DataCorruptionError in that this may be a transient error that will not repro in another\n * client or session.\n */\nexport class DataProcessingError extends LoggingError implements IErrorBase, IFluidErrorBase {\n    readonly errorType = ContainerErrorType.dataProcessingError;\n    readonly canRetry = false;\n\n    private constructor(errorMessage: string) {\n        super(errorMessage);\n    }\n\n    /** Create a new DataProcessingError detected and raised with the FF code */\n    static create(\n        errorMessage: string,\n        dataProcessingCodepath: string,\n        sequencedMessage?: ISequencedDocumentMessage,\n        props: ITelemetryProperties = {},\n    ) {\n        const dataProcessingError = DataProcessingError.wrapIfUnrecognized(\n            errorMessage,\n            dataProcessingCodepath,\n            sequencedMessage);\n        dataProcessingError.addTelemetryProperties(props);\n\n        return dataProcessingError;\n    }\n\n    /**\n     * Wrap the given error in a DataProcessingError, unless the error is already of a known type.\n     * In either case, the error will have some relevant properties added for telemetry\n     * We wrap conditionally since known error types represent well-understood failure modes, and ideally\n     * one day we will move away from throwing these errors but rather we'll return them.\n     * But an unrecognized error needs to be classified as DataProcessingError.\n     * @param originalError - error to be converted\n     * @param dataProcessingCodepath - which codepath failed while processing data\n     * @param sequencedMessage - Sequenced message to include info about via telemetry props\n     * @returns Either a new DataProcessingError, or (if wrapping is deemed unnecessary) the given error\n     */\n    static wrapIfUnrecognized(\n        originalError: any,\n        dataProcessingCodepath: string,\n        sequencedMessage?: ISequencedDocumentMessage,\n    ): IFluidErrorBase {\n        const props = {\n            dataProcessingError: 1,\n            dataProcessingCodepath,\n            ...(sequencedMessage === undefined ? undefined : extractSafePropertiesFromMessage(sequencedMessage)),\n        };\n\n        const normalizedError = normalizeError(originalError, { props });\n\n        if (!isExternalError(normalizedError)) {\n            return normalizedError;\n        }\n\n        // Create a new DataProcessingError to wrap this external error\n        const dataProcessingError =\n            wrapError(normalizedError, (message: string) => new DataProcessingError(message));\n\n        // Copy over the props above and any others added to this error since first being normalized\n        dataProcessingError.addTelemetryProperties(normalizedError.getTelemetryProperties());\n\n        return dataProcessingError;\n    }\n}\n\nexport const extractSafePropertiesFromMessage = (message: ISequencedDocumentMessage) => ({\n    messageClientId: message.clientId,\n    messageSequenceNumber: message.sequenceNumber,\n    messageClientSequenceNumber: message.clientSequenceNumber,\n    messageReferenceSequenceNumber: message.referenceSequenceNumber,\n    messageMinimumSequenceNumber: message.minimumSequenceNumber,\n    messageTimestamp: message.timestamp,\n});\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport type SummaryObject = ISummaryTree | ISummaryBlob | ISummaryHandle | ISummaryAttachment;\n\nexport type SummaryTree = ISummaryTree | ISummaryHandle;\n\nexport interface ISummaryAuthor {\n    name: string;\n    email: string;\n    // ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ\n    date: string;\n}\n\nexport interface ISummaryCommitter {\n    name: string;\n    email: string;\n    // ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ\n    date: string;\n}\n\n/**\n *  Type tag used to distinguish different types of nodes in a {@link ISummaryTree}.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace SummaryType {\n    export type Tree = 1;\n    export type Blob = 2;\n    export type Handle = 3;\n    export type Attachment = 4;\n\n    /**\n     *  Represents a sub-tree in the summary.\n     */\n     export const Tree: Tree = 1 as const;\n\n     /**\n      * Represents a blob of data that is added to the summary.\n      * Such as the user data that is added to the DDS or metadata added by runtime\n      * such as data store / channel attributes.\n      */\n     export const Blob: Blob = 2 as const;\n\n     /**\n      * Path to a summary tree object from the last successful summary.\n      */\n     export const Handle: Handle = 3 as const;\n\n     /**\n      * Unique identifier to larger blobs uploaded outside of the summary.\n      * Ex. DDS has large images or video that will be uploaded by the BlobManager and\n      * receive an Id that can be used in the summary.\n      */\n     export const Attachment: Attachment = 4 as const;\n}\nexport type SummaryType = SummaryType.Attachment | SummaryType.Blob | SummaryType.Handle | SummaryType.Tree;\n\nexport type SummaryTypeNoHandle = SummaryType.Tree | SummaryType.Blob | SummaryType.Attachment;\n\n/**\n * Path to a summary tree object from the last successful summary indicating the summary object hasn't\n * changed since it was uploaded.\n * To illustrate, if a DataStore did not change since last summary, the framework runtime will use a handle for the\n * entire DataStore instead of re-sending the entire subtree. The same concept applies for a DDS.\n * An example of handle would be: '/<DataStoreId>/<DDSId>'.\n */\nexport interface ISummaryHandle {\n    type: SummaryType.Handle;\n\n    /**\n     * Type of Summary Handle (SummaryType.Handle is not supported).\n     */\n    handleType: SummaryTypeNoHandle;\n\n    /**\n     * Unique path that identifies the corresponding sub-tree in a previous summary.\n     */\n    handle: string;\n}\n\n/**\n * String or Binary data to be uploaded to the server as part of the container's Summary.\n * Note: Already uploaded blobs would be referenced by a ISummaryAttachment.\n * Additional information can be found here: https://github.com/microsoft/FluidFramework/issues/6568\n * Ex. \"content\": \"\\{ \\\"pkg\\\":\\\"[\\\\\\\"OfficeRootComponent\\\\\\\",\\\\\\\"LastEditedComponent\\\\\\\"]\\\",\n *                    \\\"summaryFormatVersion\\\":2,\\\"isRootDataStore\\\":false \\}\"\n */\nexport interface ISummaryBlob {\n    type: SummaryType.Blob;\n    content: string | Uint8Array;\n}\n\n/**\n * Unique identifier for blobs uploaded outside of the summary. Attachment Blobs are uploaded and\n * downloaded separately and do not take part of the snapshot payload.\n * The id gets returned from the backend after the attachment has been uploaded.\n * Additional information can be found here: https://github.com/microsoft/FluidFramework/issues/6374\n * Ex. \"id\": \"bQAQKARDdMdTgqICmBa_ZB86YXwGP\"\n */\nexport interface ISummaryAttachment {\n    type: SummaryType.Attachment;\n    id: string;\n}\n\n/**\n * Tree Node data structure with children that are nodes of SummaryObject type:\n * Blob, Handle, Attachment or another Tree.\n */\nexport interface ISummaryTree {\n    type: SummaryType.Tree;\n\n    // TODO type I can infer from SummaryObject. File mode I may want to directly specify so have symlink+exec access\n    tree: { [path: string]: SummaryObject; };\n\n    // Indicates that this tree entry is unreferenced. If this is not present, the tree entry is considered referenced.\n    unreferenced?: true;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ISummaryTree,\n    SummaryType,\n    ISummaryBlob,\n    ICommittedProposal,\n    IDocumentAttributes,\n} from \"@fluidframework/protocol-definitions\";\n\n/**\n * Combine the app summary and protocol summary in 1 tree.\n * @param appSummary - Summary of the app.\n * @param protocolSummary - Summary of the protocol.\n */\nexport function combineAppAndProtocolSummary(\n    appSummary: ISummaryTree,\n    protocolSummary: ISummaryTree,\n): ISummaryTree {\n    const createNewSummary: ISummaryTree = {\n        type: SummaryType.Tree,\n        tree: {\n            \".protocol\": protocolSummary,\n            \".app\": appSummary,\n        },\n    };\n    return createNewSummary;\n}\n\n/**\n * Extract the attributes from the protocol summary.\n * @param protocolSummary - protocol summary from which the values are to be extracted.\n */\nexport function getDocAttributesFromProtocolSummary(\n    protocolSummary: ISummaryTree,\n): IDocumentAttributes {\n    const attributesBlob = protocolSummary.tree.attributes as ISummaryBlob;\n    const documentAttributes = JSON.parse(attributesBlob.content as string) as IDocumentAttributes;\n    documentAttributes.term = documentAttributes.term ?? 1;\n    return documentAttributes;\n}\n\n/**\n * Extract quorum values from the protocol summary.\n * @param protocolSummary - protocol summary from which the values are to be extracted.\n */\nexport function getQuorumValuesFromProtocolSummary(\n    protocolSummary: ISummaryTree,\n): [string, ICommittedProposal][] {\n    const quorumValuesBlob = protocolSummary.tree.quorumValues as ISummaryBlob;\n    const quorumValues = JSON.parse(quorumValuesBlob.content as string) as [string, ICommittedProposal][];\n    return quorumValues;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Returns a promise that resolves after timeMs\n * @param timeMs - time in milliseconds to wait\n */\nexport const delay = async (timeMs: number): Promise<void> =>\n    new Promise((resolve) => setTimeout(() => resolve(), timeMs));\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IResolvedUrl } from \"./urlResolver\";\n\n/**\n * Driver Error types\n * Lists types that are likely to be used by all drivers\n */\nexport enum DriverErrorType {\n    /**\n     * A fatal error with no specific interpretation covered by other DriverErrorType values\n     */\n    genericError = \"genericError\",\n\n    /**\n     * Some non-categorized (below) networking error\n     * Include errors like  fatal server error (usually 500).\n     */\n    genericNetworkError = \"genericNetworkError\",\n\n    /**\n     * Access denied - user does not have enough privileges to open a file, or continue to operate on a file\n     */\n    authorizationError = \"authorizationError\",\n\n    /**\n     * File not found, or file deleted during session\n     */\n    fileNotFoundOrAccessDeniedError = \"fileNotFoundOrAccessDeniedError\",\n\n    /**\n     * Throttling error from server. Server is busy and is asking not to reconnect for some time\n     */\n    throttlingError = \"throttlingError\",\n\n    /**\n     * We can not reach server due to computer being offline.\n     */\n    offlineError = \"offlineError\",\n\n    /*\n     * Unsupported client protocol\n     */\n    unsupportedClientProtocolVersion = \"unsupportedClientProtocolVersion\",\n\n    /**\n     * User does not have write permissions to a file, but is changing content of a file.\n     * That might be indication of some data store error - data stores should not generate ops in readonly mode.\n     */\n    writeError = \"writeError\",\n\n    /**\n     * A generic fetch failure that indicates we were not able to get a response from the server.\n     * This may be due to the client being offline (though, if we are able to detect offline state it will be\n     * logged as an offlineError instead).  Other possibilities could be DNS errors, malformed fetch request,\n     * CSP violation, etc.\n     */\n    fetchFailure = \"fetchFailure\",\n\n    /**\n     * Unexpected response from server. Either JSON is malformed, or some required properties are missing\n     */\n    incorrectServerResponse = \"incorrectServerResponse\",\n\n    /**\n     * This error occurs when the file is modified externally (not through Fluid protocol) in storage.\n     * It will occur in cases where client has some state or cache that is based on old content (identity) of a file,\n     * and storage / driver / loader detects such mismatch.\n     * When it's hit, client needs to forget all the knowlege about this file and start over.\n     */\n     fileOverwrittenInStorage = \"fileOverwrittenInStorage\",\n\n     /**\n      * The document is read-only and delta stream connection is forbidden.\n      */\n     deltaStreamConnectionForbidden = \"deltaStreamConnectionForbidden\",\n\n    /**\n     * The location of file/container can change on server. So if the file location moves and we try to access the old\n     * location, then this error is thrown to let the client know about the new location info.\n     */\n    locationRedirection = \"locationRedirection\",\n}\n\n/**\n * Base interface for all errors and warnings\n */\nexport interface IDriverErrorBase {\n    /** Classification of what type of error this is, used programmatically by consumers to interpret the error */\n    readonly errorType: DriverErrorType;\n    /** Free-form error message */\n    readonly message: string;\n    /** True indicates the caller may retry the failed action. False indicates it's a fatal error */\n    canRetry: boolean;\n    /**\n     * Best guess as to network conditions (online/offline) when the error arose.\n     * See OnlineStatus enum in driver-utils package for expected values.\n     */\n    online?: string;\n}\n\nexport interface IThrottlingWarning extends IDriverErrorBase {\n    readonly errorType: DriverErrorType.throttlingError;\n    readonly retryAfterSeconds: number;\n}\n\nexport interface IGenericNetworkError extends IDriverErrorBase {\n    readonly errorType: DriverErrorType.genericNetworkError;\n    readonly statusCode?: number;\n}\n\nexport interface IAuthorizationError extends IDriverErrorBase {\n    readonly errorType: DriverErrorType.authorizationError;\n    readonly claims?: string;\n    readonly tenantId?: string;\n}\n\nexport interface ILocationRedirectionError extends IDriverErrorBase {\n    readonly errorType: DriverErrorType.locationRedirection;\n    readonly redirectUrl: IResolvedUrl;\n}\n\n/**\n * Having this uber interface without types that have their own interfaces\n * allows compiler to differentiate interfaces based on error type\n */\nexport interface IDriverBasicError extends IDriverErrorBase {\n    readonly errorType:\n    DriverErrorType.genericError\n    | DriverErrorType.fileNotFoundOrAccessDeniedError\n    | DriverErrorType.offlineError\n    | DriverErrorType.unsupportedClientProtocolVersion\n    | DriverErrorType.writeError\n    | DriverErrorType.fetchFailure\n    | DriverErrorType.incorrectServerResponse\n    | DriverErrorType.fileOverwrittenInStorage;\n    readonly statusCode?: number;\n}\n\nexport type DriverError =\n    | IThrottlingWarning\n    | IGenericNetworkError\n    | IAuthorizationError\n    | ILocationRedirectionError\n    | IDriverBasicError;\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    IThrottlingWarning,\n    IDriverErrorBase,\n    IAuthorizationError,\n    DriverErrorType,\n} from \"@fluidframework/driver-definitions\";\nimport { ITelemetryProperties } from \"@fluidframework/common-definitions\";\nimport { IFluidErrorBase, LoggingError } from \"@fluidframework/telemetry-utils\";\n\nexport enum OnlineStatus {\n    Offline,\n    Online,\n    Unknown,\n}\n\n// It tells if we have local connection only - we might not have connection to web.\n// No solution for node.js (other than resolve dns names / ping specific sites)\n// Can also use window.addEventListener(\"online\" / \"offline\")\nexport function isOnline(): OnlineStatus {\n    if (typeof navigator === \"object\" && navigator !== null && typeof navigator.onLine === \"boolean\") {\n        return navigator.onLine ? OnlineStatus.Online : OnlineStatus.Offline;\n    }\n    return OnlineStatus.Unknown;\n}\n\n/**\n * Interface describing errors and warnings raised by any driver code.\n * Not expected to be implemented by a class or an object literal, but rather used in place of\n * any or unknown in various function signatures that pass errors around.\n *\n * \"Any\" in the interface name is a nod to the fact that errorType has lost its type constraint.\n * It will be either DriverErrorType or the specific driver's specialized error type enum,\n * but we can't reference a specific driver's error type enum in this code.\n */\n export interface IAnyDriverError extends Omit<IDriverErrorBase, \"errorType\"> {\n    readonly errorType: string;\n}\n\n/** Telemetry props with driver-specific required properties */\nexport type DriverErrorTelemetryProps = ITelemetryProperties & { driverVersion: string | undefined; };\n\n/**\n * Generic network error class.\n */\nexport class GenericNetworkError extends LoggingError implements IDriverErrorBase, IFluidErrorBase {\n    readonly errorType = DriverErrorType.genericNetworkError;\n\n    constructor(\n        message: string,\n        readonly canRetry: boolean,\n        props: DriverErrorTelemetryProps,\n    ) {\n        super(message, props);\n    }\n}\n\n// Todo GH #6214: Remove after next drive def bump. This is necessary as there is no\n// compatible way to augment an enum, as it can't be optional. So for now\n// we need to duplicate the value here. We likely need to rethink our\n// DriverErrorType strategy so that it supports extension with optional\n// value.\nconst deltaStreamConnectionForbiddenStr = \"deltaStreamConnectionForbidden\";\nexport class DeltaStreamConnectionForbiddenError extends LoggingError implements IFluidErrorBase {\n    static readonly errorType: string =\n        DriverErrorType[deltaStreamConnectionForbiddenStr] ?? deltaStreamConnectionForbiddenStr;\n    readonly errorType: string = DeltaStreamConnectionForbiddenError.errorType;\n    readonly canRetry = false;\n\n    constructor(message: string, props: DriverErrorTelemetryProps) {\n        super(message, { ...props, statusCode: 400 });\n    }\n}\n\nexport class AuthorizationError extends LoggingError implements IAuthorizationError, IFluidErrorBase {\n    readonly errorType = DriverErrorType.authorizationError;\n    readonly canRetry = false;\n\n    constructor(\n        message: string,\n        readonly claims: string | undefined,\n        readonly tenantId: string | undefined,\n        props: DriverErrorTelemetryProps,\n    ) {\n        // don't log claims or tenantId\n        super(message, props, new Set([\"claims\", \"tenantId\"]));\n    }\n}\n\nexport class NetworkErrorBasic<T extends string> extends LoggingError implements IFluidErrorBase {\n    constructor(\n        message: string,\n        readonly errorType: T,\n        readonly canRetry: boolean,\n        props: DriverErrorTelemetryProps,\n    ) {\n        super(message, props);\n    }\n}\n\nexport class NonRetryableError<T extends string> extends NetworkErrorBasic<T> {\n    constructor(\n        message: string,\n        readonly errorType: T,\n        props: DriverErrorTelemetryProps,\n    ) {\n        super(message, errorType, false, props);\n    }\n}\n\nexport class RetryableError<T extends string> extends NetworkErrorBasic<T> {\n    constructor(\n        message: string,\n        readonly errorType: T,\n        props: DriverErrorTelemetryProps,\n    ) {\n        super(message, errorType, true, props);\n    }\n}\n\n/**\n * Throttling error class - used to communicate all throttling errors\n */\nexport class ThrottlingError extends LoggingError implements IThrottlingWarning, IFluidErrorBase {\n    readonly errorType = DriverErrorType.throttlingError;\n    readonly canRetry = true;\n\n    constructor(\n        message: string,\n        readonly retryAfterSeconds: number,\n        props: DriverErrorTelemetryProps,\n    ) {\n        super(message, props);\n    }\n}\n\nexport const createWriteError = (message: string, props: DriverErrorTelemetryProps) =>\n    new NonRetryableError(message, DriverErrorType.writeError, props);\n\nexport function createGenericNetworkError(\n    message: string,\n    retryInfo: { canRetry: boolean; retryAfterMs?: number; },\n    props: DriverErrorTelemetryProps,\n): ThrottlingError | GenericNetworkError {\n    if (retryInfo.retryAfterMs !== undefined && retryInfo.canRetry) {\n        return new ThrottlingError(\n            message, retryInfo.retryAfterMs / 1000, props);\n    }\n    return new GenericNetworkError(message, retryInfo.canRetry, props);\n}\n\n/**\n * Check if a connection error can be retried.  Unless explicitly allowed, retry is disallowed.\n * I.e. asserts or unexpected exceptions in our code result in container failure.\n * @param error - The error to inspect for ability to retry\n */\nexport const canRetryOnError = (error: any): boolean => error?.canRetry === true;\n\n/** Check retryAfterSeconds property on error */\nexport const getRetryDelaySecondsFromError = (error: any): number | undefined =>\n    error?.retryAfterSeconds as number | undefined;\n\n/** Check retryAfterSeconds property on error and convert to ms */\nexport const getRetryDelayFromError = (error: any): number | undefined => error?.retryAfterSeconds !== undefined ?\n    error.retryAfterSeconds * 1000 : undefined;\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n *\n * THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY\n */\n\nexport const pkgName = \"@fluidframework/driver-utils\";\nexport const pkgVersion = \"1.2.3\";\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { delay, performance } from \"@fluidframework/common-utils\";\nimport { DriverErrorType } from \"@fluidframework/driver-definitions\";\nimport { canRetryOnError, getRetryDelayFromError } from \"./network\";\nimport { pkgVersion } from \"./packageVersion\";\nimport { NonRetryableError } from \".\";\n\n/**\n * Interface describing an object passed to various network APIs.\n * It allows caller to control cancellation, as well as learn about any delays.\n */\nexport interface IProgress {\n    /**\n     * Abort signal used to cancel operation\n     * Note that most of the layers do not use this signal yet. We need to change that over time.\n     * Please consult with API documentation / implementation.\n     * Note that  number of layers may not check this signal while holding this request in a queue,\n     * so it may take a while it takes effect. This can be improved in the future.\n     * Layers in question are:\n     *    - driver (RateLimiter)\n     *    - runWithRetry\n     */\n    cancel?: AbortSignal;\n\n    /**\n     * Called whenever api returns cancellable error and the call is going to be retried.\n     * Any exception thrown from this call back result in cancellation of operation\n     * and propagation of thrown exception.\n     * @param delayInMs - delay before next retry. This value will depend on internal back-off logic,\n     * as well as information provided by service (like 429 error asking to wait for some time before retry)\n     * @param error - error object returned from the call.\n     */\n    onRetry?(delayInMs: number, error: any): void;\n}\n\nexport async function runWithRetry<T>(\n    api: (cancel?: AbortSignal) => Promise<T>,\n    fetchCallName: string,\n    logger: ITelemetryLogger,\n    progress: IProgress,\n): Promise<T> {\n    let result: T | undefined;\n    let success = false;\n    let retryAfterMs = 1000; // has to be positive!\n    let numRetries = 0;\n    const startTime = performance.now();\n    let lastError: any;\n    do {\n        try {\n            result = await api(progress.cancel);\n            success = true;\n        } catch (err) {\n            // If it is not retriable, then just throw the error.\n            if (!canRetryOnError(err)) {\n                logger.sendTelemetryEvent({\n                    eventName: `${fetchCallName}_cancel`,\n                    retry: numRetries,\n                    duration: performance.now() - startTime,\n                    fetchCallName,\n                }, err);\n                throw err;\n            }\n\n            if (progress.cancel?.aborted === true) {\n                logger.sendTelemetryEvent({\n                    eventName: `${fetchCallName}_runWithRetryAborted`,\n                    retry: numRetries,\n                    duration: performance.now() - startTime,\n                    fetchCallName,\n                }, err);\n                throw new NonRetryableError(\n                    \"runWithRetry was Aborted\",\n                    DriverErrorType.genericError,\n                    { driverVersion: pkgVersion, fetchCallName },\n                );\n            }\n\n            numRetries++;\n            lastError = err;\n            // If the error is throttling error, then wait for the specified time before retrying.\n            // If the waitTime is not specified, then we start with retrying immediately to max of 8s.\n            retryAfterMs = getRetryDelayFromError(err) ?? Math.min(retryAfterMs * 2, 8000);\n            if (progress.onRetry) {\n                progress.onRetry(retryAfterMs, err);\n            }\n            await delay(retryAfterMs);\n        }\n    } while (!success);\n    if (numRetries > 0) {\n        logger.sendTelemetryEvent({\n            eventName: `${fetchCallName}_lastError`,\n            retry: numRetries,\n            duration: performance.now() - startTime,\n            fetchCallName,\n        },\n        lastError);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return result!;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as base64js from \"base64-js\";\nimport { assert } from \"./assert\";\n\n/**\n * Converts a Uint8Array to a string of the provided encoding\n * Useful when the array might be an IsoBuffer\n * @param arr - The array to convert\n * @param encoding - Optional target encoding; only \"utf8\" and \"base64\" are\n * supported, with \"utf8\" being default\n * @returns The converted string\n */\nexport function Uint8ArrayToString(arr: Uint8Array, encoding?: string): string {\n    switch (encoding) {\n        case \"base64\": {\n            return base64js.fromByteArray(arr);\n        }\n        case \"utf8\":\n        case \"utf-8\":\n        case undefined: {\n            return new TextDecoder().decode(arr);\n        }\n        default: {\n            throw new Error(\"invalid/unsupported encoding\");\n        }\n    }\n}\n\n/**\n * Convert base64 or utf8 string to array buffer\n * @param encoding - input string's encoding\n */\nexport const stringToBuffer = (input: string, encoding: string): ArrayBufferLike =>\n    IsoBuffer.from(input, encoding).buffer;\n\n/**\n * Convert binary blob to string format\n *\n * @param blob - the binary blob\n * @param encoding - output string's encoding\n * @returns the blob in string format\n */\nexport const bufferToString = (blob: ArrayBufferLike, encoding: string): string =>\n     IsoBuffer.from(blob).toString(encoding);\n\n/**\n * Determines if an object is an array buffer\n * Will detect and reject TypedArrays, like Uint8Array.\n * Reason - they can be viewport into Array, they can be accepted, but caller has to deal with\n * math properly (i.e. take into account byteOffset at minimum).\n * For example, construction of new TypedArray can be in the form of new TypedArray(typedArray) or\n * new TypedArray(buffer, byteOffset, length), but passing TypedArray will result in fist path (and\n * ignoring byteOffice, length)\n * @param obj - The object to determine if it is an ArrayBuffer\n */\nexport function isArrayBuffer(obj: any): obj is ArrayBuffer {\n    const maybe = obj as (Partial<ArrayBuffer> & Partial<Uint8Array>) | undefined;\n    return obj instanceof ArrayBuffer\n    || (typeof maybe === \"object\"\n        && maybe !== null\n        && typeof maybe.byteLength === \"number\"\n        && typeof maybe.slice === \"function\"\n        && maybe.byteOffset === undefined\n        && maybe.buffer === undefined);\n}\n\n/**\n * Minimal implementation of Buffer for our usages in the browser environment.\n */\nexport class IsoBuffer extends Uint8Array {\n    /**\n     * Convert the buffer to a string.\n     * Only supports encoding the whole string (unlike the Node Buffer equivalent)\n     * and only utf8 and base64 encodings\n     * @param encoding\n     */\n    public toString(encoding?: string): string {\n        return Uint8ArrayToString(this, encoding);\n    }\n\n    /**\n     * @param value - string | ArrayBuffer\n     * @param encodingOrOffset - string | number\n     * @param length - number\n     */\n    static from(value, encodingOrOffset?, length?): IsoBuffer {\n        if (typeof value === \"string\") {\n            return IsoBuffer.fromString(value, encodingOrOffset as string | undefined);\n        // Capture any typed arrays, including Uint8Array (and thus - IsoBuffer!)\n        } else if (value !== null && typeof value === \"object\" && isArrayBuffer(value.buffer)) {\n            // Support currently for full array, no view ports! (though it can be added in future)\n            assert(value.byteOffset === 0, 0x000 /* \"nonzero isobuffer byte offset\" */);\n            assert(value.byteLength === value.buffer.byteLength, 0x001 /* \"unexpected isobuffer byte length\" */);\n            return IsoBuffer.fromArrayBuffer(value.buffer, encodingOrOffset as number | undefined, length);\n        } else if (isArrayBuffer(value)) {\n            return IsoBuffer.fromArrayBuffer(value, encodingOrOffset as number | undefined, length);\n        } else {\n            throw new TypeError();\n        }\n    }\n\n    static fromArrayBuffer(arrayBuffer: ArrayBuffer, byteOffset?: number, byteLength?: number): IsoBuffer {\n        const offset = byteOffset ?? 0;\n        const validLength = byteLength ?? arrayBuffer.byteLength - offset;\n        if (offset < 0 ||\n            offset > arrayBuffer.byteLength ||\n            validLength < 0 ||\n            validLength + offset > arrayBuffer.byteLength) {\n            throw new RangeError();\n        }\n\n        return new IsoBuffer(arrayBuffer, offset, validLength);\n    }\n\n    static fromString(str: string, encoding?: string): IsoBuffer {\n        switch (encoding) {\n            case \"base64\": {\n                const sanitizedString = this.sanitizeBase64(str);\n                const encoded = base64js.toByteArray(sanitizedString);\n                return new IsoBuffer(encoded.buffer);\n            }\n            case \"utf8\":\n            case \"utf-8\":\n            case undefined: {\n                const encoded = new TextEncoder().encode(str);\n                return new IsoBuffer(encoded.buffer);\n            }\n            default: {\n                throw new Error(\"invalid/unsupported encoding\");\n            }\n        }\n    }\n\n    static isBuffer(obj: any): boolean {\n        throw new Error(\"unimplemented\");\n    }\n\n    /**\n     * Sanitize a base64 string to provide to base64-js library.  base64-js\n     * is not as tolerant of the same malformed base64 as Node's Buffer is.\n     * @param str\n     */\n    private static sanitizeBase64(str: string): string {\n        let sanitizedStr = str;\n        // Remove everything after padding - Node buffer ignores everything\n        // after any padding whereas base64-js does not\n        sanitizedStr = sanitizedStr.split(\"=\")[0];\n\n        // Remove invalid characters - Node buffer strips invalid characters\n        // whereas base64-js replaces them with \"A\"\n        sanitizedStr = sanitizedStr.replace(/[^\\w+-/]/g, \"\");\n\n        // Check for missing padding - Node buffer tolerates missing padding\n        // whereas base64-js does not\n        if (sanitizedStr.length % 4 !== 0) {\n            const paddingArray = [\"\", \"===\", \"==\", \"=\"];\n            sanitizedStr += paddingArray[sanitizedStr.length % 4];\n        }\n        return sanitizedStr;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport enum MessageType {\n    // Empty operation message. Used to send an updated reference sequence number.\n    NoOp = \"noop\",\n\n    // System message sent to indicate a new client has joined the collaboration\n    ClientJoin = \"join\",\n\n    // System message sent to indicate a client has left the collaboration\n    ClientLeave = \"leave\",\n\n    // Proposes a new consensus value\n    Propose = \"propose\",\n\n    // Message used to reject a pending proposal\n    Reject = \"reject\",\n\n    // Summary op\n    Summarize = \"summarize\",\n\n    // Summary op written\n    SummaryAck = \"summaryAck\",\n\n    // Summary op write failure\n    SummaryNack = \"summaryNack\",\n\n    // Channel operation.\n    Operation = \"op\",\n\n    // Message to indicate the need of a remote agent for a document.\n    RemoteHelp = \"remoteHelp\",\n\n    // Message to indicate that no active clients are present.\n    NoClient = \"noClient\",\n\n    // Message to indicate successful round trip.\n    RoundTrip = \"tripComplete\",\n\n    // Service specific control messages that are never sequenced.\n    Control = \"control\",\n}\n\n/**\n * Messages to track latency trace\n */\nexport interface ITrace {\n    // Service generating the trace.\n    service: string;\n\n    // Denotes receiving/sending.\n    action: string;\n\n    // Floating point time in milliseconds with up to nanosecond precision\n    timestamp: number;\n}\n\nexport interface INack {\n    // The operation that was just nacked\n    operation: IDocumentMessage | undefined;\n\n    // The sequence number the client needs to catch up to before retrying\n    sequenceNumber: number;\n\n    // Detail info about the nack.\n    content: INackContent;\n}\n\n/**\n * Document specific message\n */\nexport interface IDocumentMessage {\n    // The document's client sequence number\n    clientSequenceNumber: number;\n\n    // The reference sequence number the message was sent relative to\n    referenceSequenceNumber: number;\n\n    // The type of document message being sent\n    type: string;\n\n    // The contents of the message\n    contents: any;\n\n    // App provided metadata about the operation\n    metadata?: any;\n\n    // Server provided metadata about the operation\n    serverMetadata?: any;\n\n    // Traces related to the packet.\n    traces?: ITrace[];\n}\n\n/**\n * Document Message with optional system level data field.\n */\nexport interface IDocumentSystemMessage extends IDocumentMessage {\n\n    data: string;\n}\n\n/**\n * Branch origin information\n */\nexport interface IBranchOrigin {\n    // Origin branch of the message\n    id: string;\n\n    // Sequence number for the message in branch id\n    sequenceNumber: number;\n\n    // Min sequence number for the message in branch id\n    minimumSequenceNumber: number;\n}\n\n/**\n * Sequenced message for a distributed document\n */\nexport interface ISequencedDocumentMessage {\n    // The client ID that submitted the delta\n    clientId: string;\n\n    // The sequenced identifier\n    sequenceNumber: number;\n\n    // The term identifier\n    term: number | undefined;\n\n    // The minimum sequence number for all connected clients\n    minimumSequenceNumber: number;\n\n    // The document's client sequence number\n    clientSequenceNumber: number;\n\n    // The reference sequence number the message was sent relative to\n    referenceSequenceNumber: number;\n\n    // The type of operation\n    type: string;\n\n    // The contents of the message\n    contents: any;\n\n    // App provided metadata about the operation\n    metadata?: any;\n\n    // Server provided metadata about the operation\n    serverMetadata?: any;\n\n    // Origin branch information for the message. Can be marked undefined if the current\n    // message is also the origin.\n    origin?: IBranchOrigin;\n\n    // Traces related to the packet.\n    traces?: ITrace[];\n\n    // Timestamp when the server ticketed the message\n    timestamp: number;\n\n    /**\n     * Experimental field for storing the rolling hash at sequence number.\n     * @alpha\n     */\n    expHash1?: string;\n}\n\nexport interface ISequencedDocumentSystemMessage extends ISequencedDocumentMessage {\n    data: string;\n}\n\nexport interface ISequencedDocumentAugmentedMessage extends ISequencedDocumentMessage {\n    additionalContent: string;\n}\n\nexport interface ISignalMessage {\n\n    clientId: string | null;\n\n    content: any;\n\n    /**\n     * Counts the number of signals sent by the client\n     */\n    clientConnectionNumber?: number;\n\n    /**\n     * Sequence number that indicates when the signal was created in relation to the delta stream\n     */\n    referenceSequenceNumber?: number;\n}\n\nexport interface IUploadedSummaryDetails {\n    // Indicates whether the uploaded summary contains \".protocol\" tree\n    includesProtocolTree?: boolean;\n}\n\nexport interface ISummaryContent {\n    // Handle reference to the summary data\n    handle: string;\n\n    // Message included as part of the summary\n    message: string;\n\n    // Handles to parent summaries of the proposed new summary\n    parents: string[];\n\n    // Handle to the current latest summary stored by the service\n    head: string;\n\n    // Details of the uploaded summary\n    details?: IUploadedSummaryDetails;\n\n    // TODO - need an epoch/reload bit to indicate to clients that the summary has changed and requires a reload\n    // This could be encoded in the summary itself as well but then would require the client to download it to check\n}\n\n/**\n * General errors returned from the server.\n * May want to add error code or something similar in the future.\n */\nexport interface IServerError {\n    /**\n     * Message describing the server error.\n     */\n    errorMessage: string;\n}\n\n/**\n * Data about the original proposed summary op.\n */\nexport interface ISummaryProposal {\n    /**\n     * Actual sequence number of the summary op proposal.\n     */\n    summarySequenceNumber: number;\n}\n\n/**\n * Contents of summary ack expected from the server.\n */\nexport interface ISummaryAck {\n    /**\n     * Handle of the complete summary.\n     */\n    handle: string;\n\n    /**\n     * Information about the proposed summary op.\n     */\n    summaryProposal: ISummaryProposal;\n}\n\n/**\n * Contents of summary nack expected from the server.\n */\nexport interface ISummaryNack {\n    /**\n     * Information about the proposed summary op.\n     */\n    summaryProposal: ISummaryProposal;\n\n    /**\n     * An error code number that represents the error. It will be a valid HTTP error code.\n     * 403 errors are non retryable.\n     * 400 errors are always immediately retriable.\n     * 429 errors are retriable or non retriable (depends on type field).\n     */\n    code?: number;\n\n    /**\n     * A message about the error for debugging/logging/telemetry purposes\n     */\n    message?: string;\n\n    /**\n     * Optional Retry-After time in seconds.\n     * If specified, the client should wait this many seconds before retrying.8\n     */\n    retryAfter?: number;\n}\n\n/**\n * Represents a message containing tasks.\n */\nexport interface IHelpMessage {\n\n    tasks: string[];\n\n    // Temporary version field for back-compat.\n    version?: string;\n}\n\n/**\n * Represents a message in task queue to be processed.\n */\nexport interface IQueueMessage {\n\n    message: IHelpMessage;\n\n    tenantId: string;\n\n    documentId: string;\n\n    token: string;\n}\n\n/**\n * Interface for nack content.\n */\nexport interface INackContent {\n    /**\n     * An error code number that represents the error. It will be a valid HTTP error code.\n     * 403 errors are non retryable and client should acquire a new identity before reconnection.\n     * 400 errors are always immediately retriable\n     * 429 errors are retriable or non retriable (depends on type field).\n     */\n    code: number;\n\n    /**\n     * Type of the Nack.\n     */\n    type: NackErrorType;\n\n    /**\n     * A message about the nack for debugging/logging/telemetry purposes\n     */\n    message: string;\n\n    /**\n     * Optional Retry-After time in seconds\n     * If specified, the client should wait this many seconds before retrying\n     */\n    retryAfter?: number;\n}\n\n/**\n * Type of the Nack.\n * InvalidScopeError: Client's token is not valid for the intended op.\n * ThrottlingError: Retryable after retryAfter number.\n * BadRequestError: Clients op is invalid and should retry immediately with a valid op.\n * LimitExceededError: Service is having issues. Client should not retry.\n */\nexport enum NackErrorType {\n    ThrottlingError = \"ThrottlingError\",\n    InvalidScopeError = \"InvalidScopeError\",\n    BadRequestError = \"BadRequestError\",\n    LimitExceededError = \"LimitExceededError\",\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { IDocumentMessage, ISequencedDocumentMessage, MessageType } from \"@fluidframework/protocol-definitions\";\n\n/**\n *\n * @param message-message\n * @returns whether or not the message type is one listed below\n * \"op\"\n * \"summarize\"\n * \"propose\"\n * \"reject\"\n * \"noop\"\n */\nexport function isClientMessage(message: ISequencedDocumentMessage | IDocumentMessage): boolean {\n    if (isRuntimeMessage(message)) {\n        return true;\n    }\n    switch (message.type) {\n        case MessageType.Propose:\n        case MessageType.Reject:\n        case MessageType.NoOp:\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n *\n * @param message-message\n * @returns whether or not the message type is one listed below\n * \"op\"\n * \"summarize\"\n */\nexport function isRuntimeMessage(message: ISequencedDocumentMessage | IDocumentMessage): boolean {\n    return message.type === MessageType.Operation || message.type === MessageType.Summarize;\n}\n\nenum RuntimeMessage {\n    FluidDataStoreOp = \"component\",\n    Attach = \"attach\",\n    ChunkedOp = \"chunkedOp\",\n    BlobAttach = \"blobAttach\",\n    Rejoin = \"rejoin\",\n    Alias = \"alias\",\n    Operation = \"op\",\n}\n\n/**\n *\n * @param message-message\n * @returns whether or not the message type is one listed below (legacy)\n * \"component\"\n * \"attach\"\n * \"chunkedOp\"\n * \"blobAttach\"\n * \"rejoin\"\n * \"alias\"\n * \"op\"\n */\nexport function isUnpackedRuntimeMessage(message: ISequencedDocumentMessage): boolean {\n    if ((Object.values(RuntimeMessage) as string[]).includes(message.type)) {\n        return true;\n    }\n    return false;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { bufferToString } from \"@fluidframework/common-utils\";\nimport { IDocumentStorageService } from \"@fluidframework/driver-definitions\";\n\n/**\n * Read a blob from IDocumentStorageService and JSON.parse it into object of type T\n *\n * @param storage - the IDocumentStorageService to read from\n * @param id - the id of the blob to read and parse\n * @returns the object that we decoded and JSON.parse\n */\nexport async function readAndParse<T>(storage: Pick<IDocumentStorageService, \"readBlob\">, id: string): Promise<T> {\n    const blob = await storage.readBlob(id);\n    const decoded = bufferToString(blob, \"utf8\");\n    return JSON.parse(decoded) as T;\n}\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { EventEmitter } from \"events\";\nimport { IEvent, TransformedEvent, IEventTransformer, IEventProvider } from \"@fluidframework/common-definitions\";\n\n// the event emitter polyfill and the node event emitter have different event types:\n// string | symbol vs. string | number\n// this allow us to correctly handle either type\nexport type EventEmitterEventType = EventEmitter extends { on(event: infer E, listener: any) } ? E : never;\n\nexport type TypedEventTransform<TThis, TEvent extends IEvent> =\n    // Event emitter supports some special events for the emitter itself to use\n    // this exposes those events for the TypedEventEmitter.\n    // Since we know what the shape of these events are, we can describe them directly via a TransformedEvent\n    // which easier than trying to extend TEvent directly\n    // eslint-disable-next-line max-len\n    TransformedEvent<TThis, \"newListener\" | \"removeListener\", Parameters<(event: string, listener: (...args: any[]) => void) => void>> &\n    // Expose all the events provides by TEvent\n    IEventTransformer<TThis, TEvent> &\n    // Add the default overload so this is covertable to EventEmitter regardless of environment\n    TransformedEvent<TThis, EventEmitterEventType, any[]>;\n\n/**\n * Event Emitter helper class the supports emitting typed events\n */\nexport class TypedEventEmitter<TEvent extends IEvent> extends EventEmitter implements IEventProvider<TEvent> {\n    constructor() {\n        super();\n        this.addListener = super.addListener.bind(this) as TypedEventTransform<this, TEvent>;\n        this.on = super.on.bind(this) as TypedEventTransform<this, TEvent>;\n        this.once = super.once.bind(this) as TypedEventTransform<this, TEvent>;\n        this.prependListener = super.prependListener.bind(this) as TypedEventTransform<this, TEvent>;\n        this.prependOnceListener = super.prependOnceListener.bind(this) as TypedEventTransform<this, TEvent>;\n        this.removeListener = super.removeListener.bind(this) as TypedEventTransform<this, TEvent>;\n        this.off = super.off.bind(this) as TypedEventTransform<this, TEvent>;\n    }\n    readonly addListener: TypedEventTransform<this, TEvent>;\n    readonly on: TypedEventTransform<this, TEvent>;\n    readonly once: TypedEventTransform<this, TEvent>;\n    readonly prependListener: TypedEventTransform<this, TEvent>;\n    readonly prependOnceListener: TypedEventTransform<this, TEvent>;\n    readonly removeListener: TypedEventTransform<this, TEvent>;\n    readonly off: TypedEventTransform<this, TEvent>;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { EventEmitter } from \"events\";\n\n// eslint-disable-next-line import/no-internal-modules\nimport cloneDeep from \"lodash/cloneDeep\";\n\nimport { assert, TypedEventEmitter } from \"@fluidframework/common-utils\";\nimport {\n    ICommittedProposal,\n    IQuorum,\n    IQuorumClients,\n    IQuorumClientsEvents,\n    IQuorumEvents,\n    IQuorumProposals,\n    IQuorumProposalsEvents,\n    ISequencedClient,\n    ISequencedDocumentMessage,\n    ISequencedProposal,\n} from \"@fluidframework/protocol-definitions\";\n\n/**\n * Structure for tracking proposals that have been sequenced but not approved yet.\n */\nclass PendingProposal implements ISequencedProposal {\n    constructor(\n        public readonly sequenceNumber: number,\n        public readonly key: string,\n        public readonly value: any,\n        public readonly local: boolean,\n    ) { }\n}\n\n/**\n * Snapshot format for a QuorumClients\n */\nexport type QuorumClientsSnapshot = [string, ISequencedClient][];\n\n/**\n * Snapshot format for a QuorumProposals\n */\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport type QuorumProposalsSnapshot = {\n    proposals: [number, ISequencedProposal, string[]][];\n    values: [string, ICommittedProposal][];\n};\n\n/**\n * Snapshot format for a Quorum\n */\nexport interface IQuorumSnapshot {\n    members: QuorumClientsSnapshot;\n    proposals: QuorumProposalsSnapshot[\"proposals\"];\n    values: QuorumProposalsSnapshot[\"values\"];\n}\n\n/**\n * The QuorumClients is used to track members joining and leaving the collaboration session.\n */\nexport class QuorumClients extends TypedEventEmitter<IQuorumClientsEvents> implements IQuorumClients {\n    private readonly members: Map<string, ISequencedClient>;\n    private isDisposed: boolean = false;\n    public get disposed() { return this.isDisposed; }\n\n    /**\n     * Cached snapshot state, to avoid unnecessary deep clones on repeated snapshot calls.\n     * Cleared immediately (set to undefined) when the cache becomes invalid.\n     */\n    private snapshotCache: QuorumClientsSnapshot | undefined;\n\n    constructor(snapshot: QuorumClientsSnapshot) {\n        super();\n\n        this.members = new Map(snapshot);\n        this.snapshotCache = snapshot;\n    }\n\n    /**\n     * Snapshots the current state of the QuorumClients\n     * @returns a snapshot of the clients in the quorum\n     */\n    public snapshot(): QuorumClientsSnapshot {\n        this.snapshotCache ??= cloneDeep(Array.from(this.members));\n\n        return this.snapshotCache;\n    }\n\n    /**\n     * Adds a new client to the quorum\n     */\n    public addMember(clientId: string, details: ISequencedClient) {\n        assert(!this.members.has(clientId), 0x1ce /* clientId not found */);\n        this.members.set(clientId, details);\n        this.emit(\"addMember\", clientId, details);\n\n        // clear the cache\n        this.snapshotCache = undefined;\n    }\n\n    /**\n     * Removes a client from the quorum\n     */\n    public removeMember(clientId: string) {\n        assert(this.members.has(clientId), 0x1cf /* clientId not found */);\n        this.members.delete(clientId);\n        this.emit(\"removeMember\", clientId);\n\n        // clear the cache\n        this.snapshotCache = undefined;\n    }\n\n    /**\n     * Retrieves all the members in the quorum\n     */\n    public getMembers(): Map<string, ISequencedClient> {\n        return new Map(this.members);\n    }\n\n    /**\n     * Retrieves a specific member of the quorum\n     */\n    public getMember(clientId: string): ISequencedClient | undefined {\n        return this.members.get(clientId);\n    }\n\n    public dispose(): void {\n        this.isDisposed = true;\n    }\n}\n\n/**\n * The QuorumProposals holds a key/value store.  Proposed values become finalized in the store once all connected\n * clients have seen the proposal.\n */\nexport class QuorumProposals extends TypedEventEmitter<IQuorumProposalsEvents> implements IQuorumProposals {\n    private readonly proposals: Map<number, PendingProposal>;\n    private readonly values: Map<string, ICommittedProposal>;\n    private isDisposed: boolean = false;\n    public get disposed() { return this.isDisposed; }\n\n    // Event emitter for changes to the environment that affect pending proposal promises.\n    private readonly stateEvents = new EventEmitter();\n\n    /**\n     * Cached snapshot state, to avoid unnecessary deep clones on repeated snapshot calls.\n     * Cleared immediately (set to undefined) when the cache becomes invalid.\n     */\n    private proposalsSnapshotCache: QuorumProposalsSnapshot[\"proposals\"] | undefined;\n    private valuesSnapshotCache: QuorumProposalsSnapshot[\"values\"] | undefined;\n\n    constructor(\n        snapshot: QuorumProposalsSnapshot,\n        private readonly sendProposal: (key: string, value: any) => number,\n    ) {\n        super();\n\n        this.proposals = new Map(\n            snapshot.proposals.map(([, proposal]) => {\n                return [\n                    proposal.sequenceNumber,\n                    new PendingProposal(\n                        proposal.sequenceNumber,\n                        proposal.key,\n                        proposal.value,\n                        false, // local\n                    ),\n                ] as [number, PendingProposal];\n            }));\n        this.values = new Map(snapshot.values);\n        this.proposalsSnapshotCache = snapshot.proposals;\n        this.valuesSnapshotCache = snapshot.values;\n    }\n\n    /**\n     * Snapshots the current state of the QuorumProposals\n     * @returns deep cloned arrays of proposals and values\n     */\n    public snapshot(): QuorumProposalsSnapshot {\n        this.proposalsSnapshotCache ??= Array.from(this.proposals).map(\n            ([sequenceNumber, proposal]) => [\n                sequenceNumber,\n                { sequenceNumber, key: proposal.key, value: proposal.value },\n                [], // rejections, which has been removed\n            ],\n        );\n        this.valuesSnapshotCache ??= cloneDeep(Array.from(this.values));\n\n        return {\n            proposals: this.proposalsSnapshotCache,\n            values: this.valuesSnapshotCache,\n        };\n    }\n\n    /**\n     * Returns whether the quorum has achieved a consensus for the given key.\n     */\n    public has(key: string): boolean {\n        return this.values.has(key);\n    }\n\n    /**\n     * Returns the consensus value for the given key\n     */\n    public get(key: string): any {\n        return this.values.get(key)?.value;\n    }\n\n    /**\n     * Returns additional data about the approved consensus value\n     * @deprecated Removed in recent protocol-definitions.  Use get() instead.\n     */\n    public getApprovalData(key: string): ICommittedProposal | undefined {\n        const proposal = this.values.get(key);\n        return proposal ? cloneDeep(proposal) : undefined;\n    }\n\n    /**\n     * Proposes a new value. Returns a promise that will either:\n     * - Resolve when the proposal is accepted\n     * - Reject if the proposal fails to send or if the QuorumProposals is disposed\n     */\n    public async propose(key: string, value: any): Promise<void> {\n        const clientSequenceNumber = this.sendProposal(key, value);\n        if (clientSequenceNumber < 0) {\n            this.emit(\"error\", { eventName: \"ProposalInDisconnectedState\", key });\n            throw new Error(\"Can't propose in disconnected state\");\n        }\n\n        return new Promise<void>((resolve, reject) => {\n            // The sequence number that our proposal was assigned and went pending.\n            // If undefined, then it's not sequenced yet.\n            let thisProposalSequenceNumber: number | undefined;\n\n            // A proposal goes through two phases before this promise resolves:\n            // 1. Sequencing - waiting for the proposal to be ack'd by the server.\n            // 2. Approval - waiting for the proposal to be approved by connected clients.\n            const localProposalSequencedHandler = (sequencedCSN: number, sequenceNumber: number) => {\n                if (sequencedCSN === clientSequenceNumber) {\n                    thisProposalSequenceNumber = sequenceNumber;\n                    this.stateEvents.off(\"localProposalSequenced\", localProposalSequencedHandler);\n                    this.stateEvents.off(\"disconnected\", disconnectedHandler);\n                    this.stateEvents.on(\"localProposalApproved\", localProposalApprovedHandler);\n                }\n            };\n            const localProposalApprovedHandler = (sequenceNumber: number) => {\n                // Proposals can be uniquely identified by the sequenceNumber they were assigned.\n                if (sequenceNumber === thisProposalSequenceNumber) {\n                    resolve();\n                    removeListeners();\n                }\n            };\n\n            // There are two error flows we consider:  disconnect and disposal.\n            // If we get disconnected before the proposal is sequenced, it has one of two possible futures:\n            // 1. We reconnect and see the proposal was sequenced in the meantime.\n            //    -> The promise can still resolve, once it is approved.\n            // 2. We reconnect and see the proposal was not sequenced in the meantime, so it will never sequence.\n            //    -> The promise rejects.\n            const disconnectedHandler = () => {\n                // If we haven't seen the ack by the time we disconnect, we hope to see it by the time we reconnect.\n                if (thisProposalSequenceNumber === undefined) {\n                    this.stateEvents.once(\"connected\", () => {\n                        // If we don't see the ack by the time reconnection finishes, it failed to send.\n                        if (thisProposalSequenceNumber === undefined) {\n                            reject(new Error(\"Client disconnected without successfully sending proposal\"));\n                            removeListeners();\n                        }\n                    });\n                }\n            };\n            // If the QuorumProposals is disposed of, we assume something catastrophic has happened\n            // All outstanding proposals are considered rejected.\n            const disposedHandler = () => {\n                reject(new Error(\"QuorumProposals was disposed\"));\n                removeListeners();\n            };\n            // Convenience function to clean up our listeners.\n            const removeListeners = () => {\n                this.stateEvents.off(\"localProposalSequenced\", localProposalSequencedHandler);\n                this.stateEvents.off(\"localProposalApproved\", localProposalApprovedHandler);\n                this.stateEvents.off(\"disconnected\", disconnectedHandler);\n                this.stateEvents.off(\"disposed\", disposedHandler);\n            };\n            this.stateEvents.on(\"localProposalSequenced\", localProposalSequencedHandler);\n            this.stateEvents.on(\"disconnected\", disconnectedHandler);\n            this.stateEvents.on(\"disposed\", disposedHandler);\n        });\n    }\n\n    /**\n     * Begins tracking a new proposal\n     */\n    public addProposal(\n        key: string,\n        value: any,\n        sequenceNumber: number,\n        local: boolean,\n        clientSequenceNumber: number) {\n        assert(!this.proposals.has(sequenceNumber), 0x1d0 /* sequenceNumber not found */);\n\n        const proposal = new PendingProposal(\n            sequenceNumber,\n            key,\n            value,\n            local,\n        );\n        this.proposals.set(sequenceNumber, proposal);\n\n        // Legacy event, from rejection support.  May still have some use for clients to learn that a proposal is\n        // likely to be approved soon.\n        this.emit(\"addProposal\", proposal);\n\n        if (local) {\n            this.stateEvents.emit(\"localProposalSequenced\", clientSequenceNumber, sequenceNumber);\n        }\n\n        // clear the proposal cache\n        this.proposalsSnapshotCache = undefined;\n    }\n\n    /**\n     * Updates the minimum sequence number. If the MSN advances past the sequence number for any proposal then it\n     * becomes an approved value.\n     */\n    public updateMinimumSequenceNumber(message: ISequencedDocumentMessage): void {\n        const msn = message.minimumSequenceNumber;\n\n        // Accept proposals proposals whose sequenceNumber is <= the minimumSequenceNumber\n\n        // Return a sorted list of approved proposals. We sort so that we apply them in their sequence number order\n        // TODO this can be optimized if necessary to avoid the linear search+sort\n        const completed: PendingProposal[] = [];\n        for (const [sequenceNumber, proposal] of this.proposals) {\n            if (sequenceNumber <= msn) {\n                completed.push(proposal);\n            }\n        }\n        completed.sort((a, b) => a.sequenceNumber - b.sequenceNumber);\n\n        for (const proposal of completed) {\n            const committedProposal: ICommittedProposal = {\n                approvalSequenceNumber: message.sequenceNumber,\n                // No longer used.  We still stamp a -1 for compat with older versions of the quorum.\n                // Can be removed after 0.1035 and higher is ubiquitous.\n                commitSequenceNumber: -1,\n                key: proposal.key,\n                sequenceNumber: proposal.sequenceNumber,\n                value: proposal.value,\n            };\n\n            this.values.set(committedProposal.key, committedProposal);\n\n            // clear the values cache\n            this.valuesSnapshotCache = undefined;\n\n            this.emit(\n                \"approveProposal\",\n                committedProposal.sequenceNumber,\n                committedProposal.key,\n                committedProposal.value,\n                committedProposal.approvalSequenceNumber);\n\n            this.proposals.delete(proposal.sequenceNumber);\n\n            // clear the proposals cache\n            this.proposalsSnapshotCache = undefined;\n            if (proposal.local) {\n                this.stateEvents.emit(\"localProposalApproved\", proposal.sequenceNumber);\n            }\n        }\n    }\n\n    public setConnectionState(connected: boolean) {\n        if (connected) {\n            this.stateEvents.emit(\"connected\");\n        } else {\n            this.stateEvents.emit(\"disconnected\");\n        }\n    }\n\n    public dispose(): void {\n        this.isDisposed = true;\n        this.stateEvents.emit(\"disposed\");\n    }\n}\n\n/**\n * A quorum represents all clients currently within the collaboration window. As well as the values\n * they have agreed upon and any pending proposals.\n */\nexport class Quorum extends TypedEventEmitter<IQuorumEvents> implements IQuorum {\n    private readonly quorumClients: QuorumClients;\n    private readonly quorumProposals: QuorumProposals;\n    private isDisposed: boolean = false;\n    public get disposed() { return this.isDisposed; }\n\n    constructor(\n        members: QuorumClientsSnapshot,\n        proposals: QuorumProposalsSnapshot[\"proposals\"],\n        values: QuorumProposalsSnapshot[\"values\"],\n        sendProposal: (key: string, value: any) => number,\n    ) {\n        super();\n\n        this.quorumClients = new QuorumClients(members);\n        this.quorumClients.on(\"addMember\", (clientId: string, details: ISequencedClient) => {\n            this.emit(\"addMember\", clientId, details);\n        });\n        this.quorumClients.on(\"removeMember\", (clientId: string) => {\n            this.emit(\"removeMember\", clientId);\n        });\n\n        this.quorumProposals = new QuorumProposals({ proposals, values }, sendProposal);\n        this.quorumProposals.on(\"addProposal\", (proposal: ISequencedProposal) => {\n            this.emit(\"addProposal\", proposal);\n        });\n        this.quorumProposals.on(\n            \"approveProposal\",\n            (sequenceNumber: number, key: string, value: any, approvalSequenceNumber: number) => {\n                this.emit(\"approveProposal\", sequenceNumber, key, value, approvalSequenceNumber);\n            },\n        );\n    }\n\n    public close() {\n        this.removeAllListeners();\n    }\n\n    /**\n     * Snapshots the entire quorum\n     * @returns a quorum snapshot\n     */\n    public snapshot(): IQuorumSnapshot {\n        const members = this.quorumClients.snapshot();\n        const { proposals, values } = this.quorumProposals.snapshot();\n        return {\n            members,\n            proposals,\n            values,\n        };\n    }\n\n    /**\n     * Returns whether the quorum has achieved a consensus for the given key.\n     */\n    public has(key: string): boolean {\n        return this.quorumProposals.has(key);\n    }\n\n    /**\n     * Returns the consensus value for the given key\n     */\n    public get(key: string): any {\n        return this.quorumProposals.get(key);\n    }\n\n    /**\n     * Returns additional data about the approved consensus value\n     * @deprecated Removed in recent protocol-definitions.  Use get() instead.\n     */\n    public getApprovalData(key: string): ICommittedProposal | undefined {\n        return this.quorumProposals.getApprovalData(key);\n    }\n\n    /**\n     * Adds a new client to the quorum\n     */\n    public addMember(clientId: string, details: ISequencedClient) {\n        this.quorumClients.addMember(clientId, details);\n    }\n\n    /**\n     * Removes a client from the quorum\n     */\n    public removeMember(clientId: string) {\n        this.quorumClients.removeMember(clientId);\n    }\n\n    /**\n     * Retrieves all the members in the quorum\n     */\n    public getMembers(): Map<string, ISequencedClient> {\n        return this.quorumClients.getMembers();\n    }\n\n    /**\n     * Retrieves a specific member of the quorum\n     */\n    public getMember(clientId: string): ISequencedClient | undefined {\n        return this.quorumClients.getMember(clientId);\n    }\n\n    /**\n     * Proposes a new value. Returns a promise that will resolve when the proposal is either accepted, or reject if\n     * the proposal fails to send.\n     */\n    public async propose(key: string, value: any): Promise<void> {\n        return this.quorumProposals.propose(key, value);\n    }\n\n    /**\n     * Begins tracking a new proposal\n     */\n    public addProposal(\n        key: string,\n        value: any,\n        sequenceNumber: number,\n        local: boolean,\n        clientSequenceNumber: number,\n    ) {\n        return this.quorumProposals.addProposal(key, value, sequenceNumber, local, clientSequenceNumber);\n    }\n\n    /**\n     * Updates the minimum sequence number. If the MSN advances past the sequence number for any proposal then it\n     * becomes an approved value.\n     */\n    public updateMinimumSequenceNumber(message: ISequencedDocumentMessage): void {\n        this.quorumProposals.updateMinimumSequenceNumber(message);\n    }\n\n    public setConnectionState(connected: boolean, clientId?: string) {\n        this.quorumProposals.setConnectionState(connected);\n    }\n\n    public dispose(): void {\n        throw new Error(\"Not implemented.\");\n        this.isDisposed = true;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    IDocumentAttributes,\n    IClientJoin,\n    ICommittedProposal,\n    IProcessMessageResult,\n    IProposal,\n    IQuorum,\n    ISequencedClient,\n    ISequencedDocumentMessage,\n    ISequencedDocumentSystemMessage,\n    ISequencedProposal,\n    MessageType,\n} from \"@fluidframework/protocol-definitions\";\nimport { IQuorumSnapshot, Quorum } from \"./quorum\";\n\nexport interface IScribeProtocolState {\n    sequenceNumber: number;\n    minimumSequenceNumber: number;\n    members: [string, ISequencedClient][];\n    proposals: [number, ISequencedProposal, string[]][];\n    values: [string, ICommittedProposal][];\n}\n\nexport function isSystemMessage(message: ISequencedDocumentMessage) {\n    switch (message.type) {\n        case MessageType.ClientJoin:\n        case MessageType.ClientLeave:\n        case MessageType.Propose:\n        case MessageType.Reject:\n        case MessageType.NoOp:\n        case MessageType.NoClient:\n        case MessageType.Summarize:\n        case MessageType.SummaryAck:\n        case MessageType.SummaryNack:\n            return true;\n        default:\n            return false;\n    }\n}\n\nexport interface ILocalSequencedClient extends ISequencedClient {\n    /**\n     * True if the client should have left the quorum, false otherwise\n     */\n    shouldHaveLeft?: boolean;\n}\n\nexport interface IProtocolHandler {\n    readonly quorum: IQuorum;\n    readonly attributes: IDocumentAttributes;\n\n    setConnectionState(connected: boolean, clientId: string | undefined);\n    snapshot(): IQuorumSnapshot;\n\n    close(): void;\n    processMessage(message: ISequencedDocumentMessage, local: boolean): IProcessMessageResult;\n    getProtocolState(): IScribeProtocolState;\n}\n\n/**\n * Handles protocol specific ops.\n */\nexport class ProtocolOpHandler implements IProtocolHandler {\n    public readonly _quorum: Quorum;\n    public get quorum(): Quorum {\n        return this._quorum;\n    }\n\n    public readonly term: number;\n\n    constructor(\n        public minimumSequenceNumber: number,\n        public sequenceNumber: number,\n        term: number | undefined,\n        members: [string, ISequencedClient][],\n        proposals: [number, ISequencedProposal, string[]][],\n        values: [string, ICommittedProposal][],\n        sendProposal: (key: string, value: any) => number,\n    ) {\n        this.term = term ?? 1;\n        this._quorum = new Quorum(\n            members,\n            proposals,\n            values,\n            sendProposal,\n        );\n    }\n\n    public get attributes(): IDocumentAttributes {\n        return {\n            minimumSequenceNumber: this.minimumSequenceNumber,\n            sequenceNumber: this.sequenceNumber,\n            term: this.term,\n        };\n    }\n\n    setConnectionState(connected: boolean, clientId: string | undefined) {\n        this._quorum.setConnectionState(connected, clientId);\n    }\n\n    snapshot(): IQuorumSnapshot {\n        return this._quorum.snapshot();\n    }\n\n    public close() {\n        this._quorum.close();\n    }\n\n    public processMessage(message: ISequencedDocumentMessage, local: boolean): IProcessMessageResult {\n        // verify it's moving sequentially\n        if (message.sequenceNumber !== this.sequenceNumber + 1) {\n            throw new Error(\n                `Protocol state is not moving sequentially. ` +\n                `Current is ${this.sequenceNumber}. Next is ${message.sequenceNumber}`);\n        }\n\n        // Update tracked sequence numbers\n        this.sequenceNumber = message.sequenceNumber;\n        this.minimumSequenceNumber = message.minimumSequenceNumber;\n\n        let immediateNoOp = false;\n\n        switch (message.type) {\n            case MessageType.ClientJoin:\n                const systemJoinMessage = message as ISequencedDocumentSystemMessage;\n                const join = JSON.parse(systemJoinMessage.data) as IClientJoin;\n                const member: ISequencedClient = {\n                    client: join.detail,\n                    sequenceNumber: systemJoinMessage.sequenceNumber,\n                };\n                this._quorum.addMember(join.clientId, member);\n                break;\n\n            case MessageType.ClientLeave:\n                const systemLeaveMessage = message as ISequencedDocumentSystemMessage;\n                const clientId = JSON.parse(systemLeaveMessage.data) as string;\n                this._quorum.removeMember(clientId);\n                break;\n\n            case MessageType.Propose:\n                const proposal = message.contents as IProposal;\n                this._quorum.addProposal(\n                    proposal.key,\n                    proposal.value,\n                    message.sequenceNumber,\n                    local,\n                    message.clientSequenceNumber);\n\n                // On a quorum proposal, immediately send a response to expedite the approval.\n                immediateNoOp = true;\n                break;\n\n            case MessageType.Reject:\n                throw new Error(\"Quorum rejection is removed.\");\n\n            default:\n        }\n\n        // Notify the quorum of the MSN from the message. We rely on it to handle duplicate values but may\n        // want to move that logic to this class.\n        this._quorum.updateMinimumSequenceNumber(message);\n\n        return { immediateNoOp };\n    }\n\n    /**\n     * Gets the scribe protocol state\n     */\n    public getProtocolState(): IScribeProtocolState {\n        // return a new object every time\n        // this ensures future state changes will not affect outside callers\n        return {\n            sequenceNumber: this.sequenceNumber,\n            minimumSequenceNumber: this.minimumSequenceNumber,\n            ...this._quorum.snapshot(),\n        };\n    }\n}\n\nexport class ProtocolOpHandlerWithClientValidation extends ProtocolOpHandler {\n    public processMessage(message: ISequencedDocumentMessage, local: boolean): IProcessMessageResult {\n        const client: ILocalSequencedClient | undefined = this._quorum.getMember(message.clientId);\n\n        // Check and report if we're getting messages from a clientId that we previously\n        // flagged as shouldHaveLeft, or from a client that's not in the quorum but should be\n        if (message.clientId != null) {\n            if (client === undefined && message.type !== MessageType.ClientJoin) {\n                // pre-0.58 error message: messageClientIdMissingFromQuorum\n                throw new Error(\"Remote message's clientId is missing from the quorum\");\n            }\n\n            if (client?.shouldHaveLeft === true && message.type !== MessageType.NoOp) {\n                // pre-0.58 error message: messageClientIdShouldHaveLeft\n                throw new Error(\"Remote message's clientId already should have left\");\n            }\n        }\n\n        return super.processMessage(message, local);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { EventEmitter } from \"events\";\nimport {\n    ITelemetryLogger,\n} from \"@fluidframework/common-definitions\";\n\nexport const connectedEventName = \"connected\";\nexport const disconnectedEventName = \"disconnected\";\n\nexport function safeRaiseEvent(\n    emitter: EventEmitter,\n    logger: ITelemetryLogger,\n    event: string,\n    ...args) {\n    try {\n        emitter.emit(event, ...args);\n    } catch (error) {\n        logger.sendErrorEvent({ eventName: \"RaiseEventError\", event }, error);\n    }\n}\n\nexport function raiseConnectedEvent(\n    logger: ITelemetryLogger,\n    emitter: EventEmitter,\n    connected: boolean,\n    clientId?: string) {\n    try {\n        if (connected) {\n            emitter.emit(connectedEventName, clientId);\n        } else {\n            emitter.emit(disconnectedEventName);\n        }\n    } catch (error) {\n        logger.sendErrorEvent({ eventName: \"RaiseConnectedEventError\" }, error);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { IEvent } from \"@fluidframework/common-definitions\";\nimport { TypedEventEmitter, EventEmitterEventType } from \"@fluidframework/common-utils\";\n\n/**\n * Event Emitter helper class\n * Any exceptions thrown by listeners will be caught and raised through \"error\" event.\n * Any exception thrown by \"error\" listeners will propagate to the caller.\n */\nexport class EventEmitterWithErrorHandling<TEvent extends IEvent = IEvent> extends TypedEventEmitter<TEvent> {\n    constructor(private readonly errorHandler: (eventName: EventEmitterEventType, error: any) => void) {\n        super();\n    }\n\n    public emit(event: EventEmitterEventType, ...args: any[]): boolean {\n        try {\n            return super.emit(event, ...args);\n        } catch (error) {\n            this.errorHandler(event, error);\n            return true;\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ITelemetryProperties,\n} from \"@fluidframework/common-definitions\";\nimport {\n    IDeltaQueue,\n    ReadOnlyInfo,\n    IConnectionDetails,\n    ICriticalContainerError,\n    IFluidCodeDetails,\n    isFluidPackage,\n} from \"@fluidframework/container-definitions\";\nimport {\n    ConnectionMode,\n    IDocumentMessage,\n    ISequencedDocumentMessage,\n    IClientConfiguration,\n    IClientDetails,\n    ISignalMessage,\n} from \"@fluidframework/protocol-definitions\";\nimport { IContainerPackageInfo } from \"@fluidframework/driver-definitions\";\n\nexport enum ReconnectMode {\n    Never = \"Never\",\n    Disabled = \"Disabled\",\n    Enabled = \"Enabled\",\n}\n\n/**\n * Connection manager (implements this interface) is responsible for maintaining connection\n * to relay service.\n */\nexport interface IConnectionManager {\n    readonly connected: boolean;\n\n    readonly clientId: string | undefined;\n\n    /** The queue of outbound delta messages */\n    readonly outbound: IDeltaQueue<IDocumentMessage[]>;\n\n    /** Details of client */\n    readonly clientDetails: IClientDetails;\n\n    /** Protocol version being used to communicate with the service */\n    readonly version: string;\n\n    /** Max message size allowed to the delta manager */\n    readonly maxMessageSize: number;\n\n    /** Service configuration provided by the service. */\n    readonly serviceConfiguration: IClientConfiguration | undefined;\n\n    readonly readOnlyInfo: ReadOnlyInfo;\n\n    // Various connectivity propetries for telemetry describing type of current connection\n    // Things like connection mode, service info, etc.\n    // Called when connection state changes (connect / disconnect)\n    readonly connectionProps: ITelemetryProperties;\n\n    // Verbose information about connection logged to telemetry in case of issues with\n    // maintaining healphy connection, including op gaps, not receiving join op in time, etc.\n    // Contains details information, like sequence numbers at connection time, initial ops info, etc.\n    readonly connectionVerboseProps: ITelemetryProperties;\n\n    /**\n     * Prepares message to be sent. Fills in clientSequenceNumber.\n     * Called only when active connection is present.\n     */\n    prepareMessageToSend(message: Omit<IDocumentMessage, \"clientSequenceNumber\">): IDocumentMessage | undefined;\n\n    /**\n     * Called before incomming message is processed. Incomming messages can be comming from connection,\n     * but also could come from storage.\n     * This call allows connection manager to adjust knowledge about acked ops sent on previous connection.\n     * Can be called at any time, including when there is no active connection.\n     */\n    beforeProcessingIncomingOp(message: ISequencedDocumentMessage): void;\n\n    /**\n     * Submits signal to relay service.\n     * Called only when active connection is present.\n     */\n    submitSignal(content: any): void;\n\n    /**\n     * Submits messages to relay service.\n     * Called only when active connection is present.\n     */\n    sendMessages(messages: IDocumentMessage[]): void;\n\n    /**\n     * Initiates connection to relay service (noop if already connected).\n     */\n    connect(connectionMode?: ConnectionMode): void;\n\n    /**\n     * Disposed connection manager\n     */\n    dispose(error?: ICriticalContainerError): void;\n\n    get connectionMode(): ConnectionMode;\n}\n\n/**\n * This interface represents a set of callbacks provided by DeltaManager to IConnectionManager on its creation\n * IConnectionManager instance will use them to communicate to DeltaManager abour various events.\n */\nexport interface IConnectionManagerFactoryArgs {\n    /**\n     * Called by connection manager for each incomming op. Some ops maybe delivered before\n     * connectHandler is called (initial ops on socket connection)\n     */\n    readonly incomingOpHandler: (messages: ISequencedDocumentMessage[], reason: string) => void;\n\n    /**\n     * Called by connection manager for each incoming signals.\n     * Maybe called before connectHandler is called (initial signals on socket connection)\n     */\n    readonly signalHandler: (message: ISignalMessage) => void;\n\n    /**\n     * Called when connection manager experiences delay in connecting to relay service.\n     * This can happen because client is offline, or service is busy and asks to not connect for some time.\n     * Can be called many times while not connected.\n     * Situation is considered resolved when connection is established and connectHandler is called.\n     */\n    readonly reconnectionDelayHandler: (delayMs: number, error: unknown) => void;\n\n    /**\n     * Called by connection manager whwnever critical error happens and container should be closed.\n     * Expects dispose() call in respose to this call.\n     */\n    readonly closeHandler: (error?: any) => void;\n\n    /**\n     * Called whenever connection to relay service is lost.\n     */\n    readonly disconnectHandler: (reason: string) => void;\n\n    /**\n     * Called whenever new connection to rely service is established\n     */\n    readonly connectHandler: (connection: IConnectionDetails) => void;\n\n    /**\n     * Called whenever ping/pong messages are roundtripped on connection.\n     */\n    readonly pongHandler: (latency: number) => void;\n\n    /**\n     * Called whenever connection type changes from writable to read-only or vice versa.\n     * Connection can be read-only if user has no edit permissions, or if container forced\n     * connection to be read-only.\n     * This should not be confused with \"read\" / \"write\"connection mode which is internal\n     * optimization.\n     */\n    readonly readonlyChangeHandler: (readonly?: boolean) => void;\n}\n\n/**\n *\n * @param codeDetails- - Data structure used to describe the code to load on the Fluid document\n * @returns The name of the Fluid package\n */\nexport const getPackageName = (codeDetails: IFluidCodeDetails | undefined): IContainerPackageInfo => {\n    let containerPackageName;\n    if (codeDetails && \"name\" in codeDetails) {\n        containerPackageName = codeDetails;\n    } else if (isFluidPackage(codeDetails?.package)) {\n        containerPackageName = codeDetails?.package.name;\n    } else {\n        containerPackageName = codeDetails?.package;\n    }\n    return { name: containerPackageName };\n};\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { EventEmitter } from \"events\";\nimport { IAudience } from \"@fluidframework/container-definitions\";\nimport { IClient } from \"@fluidframework/protocol-definitions\";\n\n/**\n * Audience represents all clients connected to the op stream.\n */\nexport class Audience extends EventEmitter implements IAudience {\n    private readonly members = new Map<string, IClient>();\n\n    public on(event: \"addMember\" | \"removeMember\", listener: (clientId: string, client: IClient) => void): this;\n    public on(event: string, listener: (...args: any[]) => void): this {\n        return super.on(event, listener);\n    }\n\n    /**\n     * Adds a new client to the audience\n     */\n    public addMember(clientId: string, details: IClient) {\n        this.members.set(clientId, details);\n        this.emit(\"addMember\", clientId, details);\n    }\n\n    /**\n     * Removes a client from the audience. Only emits an event if a client is actually removed\n     * @returns if a client was removed from the audience\n     */\n    public removeMember(clientId: string): boolean {\n        const removedClient = this.members.get(clientId);\n        if (removedClient !== undefined) {\n            this.members.delete(clientId);\n            this.emit(\"removeMember\", clientId, removedClient);\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Retrieves all the members in the audience\n     */\n    public getMembers(): Map<string, IClient> {\n        return new Map(this.members);\n    }\n\n    /**\n     * Retrieves a specific member of the audience\n     */\n    public getMember(clientId: string): IClient | undefined {\n        return this.members.get(clientId);\n    }\n\n    /**\n     * Clears the audience\n     */\n    public clear(): void {\n        const clientIds = this.members.keys();\n        for (const clientId of clientIds) {\n            this.removeMember(clientId);\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * A deferred creates a promise and the ability to resolve or reject it\n */\nexport class Deferred<T> {\n    private readonly p: Promise<T>;\n    private res: ((value: T | PromiseLike<T>) => void) | undefined;\n    private rej: ((reason?: any) => void) | undefined;\n    private completed: boolean = false;\n\n    constructor() {\n        this.p = new Promise<T>((resolve, reject) => {\n            this.res = resolve;\n            this.rej = reject;\n        });\n    }\n    /**\n     * Returns whether the underlying promise has been completed\n     */\n    public get isCompleted() {\n        return this.completed;\n    }\n\n    /**\n     * Retrieves the underlying promise for the deferred\n     *\n     * @returns the underlying promise\n     */\n    public get promise(): Promise<T> {\n        return this.p;\n    }\n\n    /**\n     * Resolves the promise\n     *\n     * @param value - the value to resolve the promise with\n     */\n    public resolve(value: T | PromiseLike<T>) {\n        if (this.res !== undefined) {\n            this.completed = true;\n            this.res(value);\n        }\n    }\n\n    /**\n     * Rejects the promise\n     *\n     * @param value - the value to reject the promise with\n     */\n    public reject(error: any) {\n        if (this.rej !== undefined) {\n            this.completed = true;\n            this.rej(error);\n        }\n    }\n}\n\n/**\n * A lazy evaluated promise. The execute function is delayed until\n * the promise is used, e.g. await, then, catch ...\n * The execute function is only called once.\n * All calls are then proxied to the promise returned by the execute method.\n */\nexport class LazyPromise<T> implements Promise<T> {\n    public get [Symbol.toStringTag](): string {\n        return this.getPromise()[Symbol.toStringTag];\n    }\n\n    private result: Promise<T> | undefined;\n\n    constructor(private readonly execute: () => Promise<T>) { }\n\n    public async then<TResult1 = T, TResult2 = never>(\n        onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null | undefined,\n        onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null | undefined):\n        Promise<TResult1 | TResult2> {\n        return this.getPromise().then<TResult1, TResult2>(...arguments);\n    }\n\n    public async catch<TResult = never>(\n        onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null | undefined):\n        Promise<T | TResult> {\n        return this.getPromise().catch<TResult>(...arguments);\n    }\n\n    public async finally(onfinally?: (() => void) | null | undefined): Promise<T> {\n        return this.getPromise().finally(...arguments);\n    }\n\n    private async getPromise(): Promise<T> {\n        if (this.result === undefined) {\n            this.result = this.execute();\n        }\n        return this.result;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { assert, LazyPromise } from \"@fluidframework/common-utils\";\nimport {\n    IAudience,\n    IContainerContext,\n    IDeltaManager,\n    ILoader,\n    IRuntime,\n    ICriticalContainerError,\n    AttachState,\n    ILoaderOptions,\n    IRuntimeFactory,\n    IProvideRuntimeFactory,\n    IFluidCodeDetails,\n    IFluidCodeDetailsComparer,\n    IProvideFluidCodeDetailsComparer,\n    ICodeDetailsLoader,\n    IFluidModuleWithDetails,\n    ISnapshotTreeWithBlobContents,\n} from \"@fluidframework/container-definitions\";\nimport {\n    IRequest,\n    IResponse,\n    FluidObject,\n} from \"@fluidframework/core-interfaces\";\nimport { IDocumentStorageService } from \"@fluidframework/driver-definitions\";\nimport { isFluidResolvedUrl } from \"@fluidframework/driver-utils\";\nimport {\n    IClientConfiguration,\n    IClientDetails,\n    IDocumentMessage,\n    IQuorum,\n    IQuorumClients,\n    ISequencedDocumentMessage,\n    ISignalMessage,\n    ISnapshotTree,\n    ISummaryTree,\n    IVersion,\n    MessageType,\n} from \"@fluidframework/protocol-definitions\";\nimport { PerformanceEvent } from \"@fluidframework/telemetry-utils\";\nimport { Container } from \"./container\";\n\nconst PackageNotFactoryError = \"Code package does not implement IRuntimeFactory\";\n\nexport class ContainerContext implements IContainerContext {\n    public static async createOrLoad(\n        container: Container,\n        scope: FluidObject,\n        codeLoader: ICodeDetailsLoader,\n        codeDetails: IFluidCodeDetails,\n        baseSnapshot: ISnapshotTree | undefined,\n        deltaManager: IDeltaManager<ISequencedDocumentMessage, IDocumentMessage>,\n        quorum: IQuorum,\n        loader: ILoader,\n        submitFn: (type: MessageType, contents: any, batch: boolean, appData: any) => number,\n        submitSignalFn: (contents: any) => void,\n        closeFn: (error?: ICriticalContainerError) => void,\n        version: string,\n        updateDirtyContainerState: (dirty: boolean) => void,\n        existing: boolean,\n        pendingLocalState?: unknown,\n    ): Promise<ContainerContext> {\n        const context = new ContainerContext(\n            container,\n            scope,\n            codeLoader,\n            codeDetails,\n            baseSnapshot,\n            deltaManager,\n            quorum,\n            loader,\n            submitFn,\n            submitSignalFn,\n            closeFn,\n            version,\n            updateDirtyContainerState,\n            existing,\n            pendingLocalState);\n        await context.instantiateRuntime(existing);\n        return context;\n    }\n\n    public readonly taggedLogger: ITelemetryLogger;\n\n    public get clientId(): string | undefined {\n        return this.container.clientId;\n    }\n\n    /**\n     * DISCLAIMER: this id is only for telemetry purposes. Not suitable for any other usages.\n     */\n    public get id(): string {\n        const resolvedUrl = this.container.resolvedUrl;\n        if (isFluidResolvedUrl(resolvedUrl)) {\n            return resolvedUrl.id;\n        }\n        return \"\";\n    }\n\n    public get clientDetails(): IClientDetails {\n        return this.container.clientDetails;\n    }\n\n    public get connected(): boolean {\n        return this.container.connected;\n    }\n\n    public get canSummarize(): boolean {\n        return \"summarize\" in this.runtime;\n    }\n\n    public get serviceConfiguration(): IClientConfiguration | undefined {\n        return this.container.serviceConfiguration;\n    }\n\n    public get audience(): IAudience {\n        return this.container.audience;\n    }\n\n    public get options(): ILoaderOptions {\n        return this.container.options;\n    }\n\n    public get baseSnapshot() {\n        return this._baseSnapshot;\n    }\n\n    public get storage(): IDocumentStorageService {\n        return this.container.storage;\n    }\n\n    private _runtime: IRuntime | undefined;\n    private get runtime() {\n        if (this._runtime === undefined) {\n            throw new Error(\"Attempted to access runtime before it was defined\");\n        }\n        return this._runtime;\n    }\n\n    private _disposed = false;\n\n    public get disposed() {\n        return this._disposed;\n    }\n\n    public get codeDetails() { return this._codeDetails; }\n\n    private readonly _quorum: IQuorum;\n    public get quorum(): IQuorumClients { return this._quorum; }\n\n    private readonly _fluidModuleP: Promise<IFluidModuleWithDetails>;\n\n    constructor(\n        private readonly container: Container,\n        public readonly scope: FluidObject,\n        private readonly codeLoader: ICodeDetailsLoader,\n        private readonly _codeDetails: IFluidCodeDetails,\n        private _baseSnapshot: ISnapshotTree | undefined,\n        public readonly deltaManager: IDeltaManager<ISequencedDocumentMessage, IDocumentMessage>,\n        quorum: IQuorum,\n        public readonly loader: ILoader,\n        public readonly submitFn: (type: MessageType, contents: any, batch: boolean, appData: any) => number,\n        public readonly submitSignalFn: (contents: any) => void,\n        public readonly closeFn: (error?: ICriticalContainerError) => void,\n        public readonly version: string,\n        public readonly updateDirtyContainerState: (dirty: boolean) => void,\n        public readonly existing: boolean,\n        public readonly pendingLocalState?: unknown,\n\n    ) {\n        this._quorum = quorum;\n        this.taggedLogger = container.subLogger;\n        this._fluidModuleP = new LazyPromise<IFluidModuleWithDetails>(\n            async () => this.loadCodeModule(_codeDetails),\n        );\n        this.attachListener();\n    }\n\n    /**\n     * @deprecated - Temporary migratory API, to be removed when customers no longer need it.  When removed,\n     * ContainerContext should only take an IQuorumClients rather than an IQuorum.  See IContainerContext for more\n     * details.\n     */\n    public getSpecifiedCodeDetails(): IFluidCodeDetails | undefined {\n        return (this._quorum.get(\"code\") ?? this._quorum.get(\"code2\")) as IFluidCodeDetails | undefined;\n    }\n\n    public dispose(error?: Error): void {\n        if (this._disposed) {\n            return;\n        }\n        this._disposed = true;\n\n        this.runtime.dispose(error);\n        this._quorum.dispose();\n        this.deltaManager.dispose();\n    }\n\n    public getLoadedFromVersion(): IVersion | undefined {\n        return this.container.loadedFromVersion;\n    }\n\n    public get attachState(): AttachState {\n        return this.container.attachState;\n    }\n\n    /**\n     * Create a summary. Used when attaching or serializing a detached container.\n     *\n     * @param blobRedirectTable - A table passed during the attach process. While detached, blob upload is supported\n     * using IDs generated locally. After attach, these IDs cannot be used, so this table maps the old local IDs to the\n     * new storage IDs so requests can be redirected.\n     */\n    public createSummary(blobRedirectTable?: Map<string, string>): ISummaryTree {\n        return this.runtime.createSummary(blobRedirectTable);\n    }\n\n    public setConnectionState(connected: boolean, clientId?: string) {\n        const runtime = this.runtime;\n\n        assert(connected === this.connected, 0x0de /* \"Mismatch in connection state while setting\" */);\n\n        runtime.setConnectionState(connected, clientId);\n    }\n\n    public process(message: ISequencedDocumentMessage, local: boolean, context: any) {\n        this.runtime.process(message, local, context);\n    }\n\n    public processSignal(message: ISignalMessage, local: boolean) {\n        this.runtime.processSignal(message, local);\n    }\n\n    public async request(path: IRequest): Promise<IResponse> {\n        return this.runtime.request(path);\n    }\n\n    public async getAbsoluteUrl(relativeUrl: string): Promise<string | undefined> {\n        return this.container.getAbsoluteUrl(relativeUrl);\n    }\n\n    public getPendingLocalState(): unknown {\n        return this.runtime.getPendingLocalState();\n    }\n\n    /**\n     * Determines if the current code details of the context\n     * satisfy the incoming constraint code details\n     */\n    public async satisfies(constraintCodeDetails: IFluidCodeDetails) {\n        const comparers: IFluidCodeDetailsComparer[] = [];\n\n        const maybeCompareCodeLoader = this.codeLoader;\n        if (maybeCompareCodeLoader.IFluidCodeDetailsComparer !== undefined) {\n            comparers.push(maybeCompareCodeLoader.IFluidCodeDetailsComparer);\n        }\n\n        const moduleWithDetails = await this._fluidModuleP;\n        const maybeCompareExport: Partial<IProvideFluidCodeDetailsComparer> | undefined =\n            moduleWithDetails.module?.fluidExport;\n        if (maybeCompareExport?.IFluidCodeDetailsComparer !== undefined) {\n            comparers.push(maybeCompareExport.IFluidCodeDetailsComparer);\n        }\n\n        // if there are not comparers it is not possible to know\n        // if the current satisfy the incoming, so return false,\n        // as assuming they do not satisfy is safer .e.g we will\n        // reload, rather than potentially running with\n        // incompatible code\n        if (comparers.length === 0) {\n            return false;\n        }\n\n        for (const comparer of comparers) {\n            const satisfies = await comparer.satisfies(\n                moduleWithDetails.details,\n                constraintCodeDetails,\n            );\n            if (satisfies === false) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public notifyAttaching(snapshot: ISnapshotTreeWithBlobContents) {\n        this._baseSnapshot = snapshot;\n        this.runtime.notifyAttaching?.(snapshot);\n        this.runtime.setAttachState(AttachState.Attaching);\n    }\n\n    // #region private\n\n    private async getRuntimeFactory(): Promise<IRuntimeFactory> {\n        const fluidExport: FluidObject<IProvideRuntimeFactory> | undefined =\n            (await this._fluidModuleP).module?.fluidExport;\n        const runtimeFactory = fluidExport?.IRuntimeFactory;\n        if (runtimeFactory === undefined) {\n            throw new Error(PackageNotFactoryError);\n        }\n\n        return runtimeFactory;\n    }\n\n    private async instantiateRuntime(existing: boolean) {\n        const runtimeFactory = await this.getRuntimeFactory();\n        this._runtime = await runtimeFactory.instantiateRuntime(this, existing);\n    }\n\n    private attachListener() {\n        this.container.once(\"attached\", () => {\n            this.runtime.setAttachState(AttachState.Attached);\n        });\n    }\n\n    private async loadCodeModule(codeDetails: IFluidCodeDetails): Promise<IFluidModuleWithDetails> {\n        const loadCodeResult = await PerformanceEvent.timedExecAsync(\n            this.taggedLogger,\n            { eventName: \"CodeLoad\" },\n            async () => this.codeLoader.load(codeDetails),\n        );\n\n        if (\"module\" in loadCodeResult) {\n            const { module, details } = loadCodeResult;\n            return {\n                module,\n                details: details ?? codeDetails,\n            };\n        } else {\n            // If \"module\" is not in the result, we are using a legacy ICodeLoader.  Fix the result up with details.\n            // Once usage drops to 0 we can remove this compat path.\n            this.taggedLogger.sendTelemetryEvent({ eventName: \"LegacyCodeLoader\" });\n            return loadCodeResult;\n        }\n    }\n    // #endregion\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IDeltaQueue, IDeltaQueueEvents } from \"@fluidframework/container-definitions\";\nimport { assert, performance, Deferred, TypedEventEmitter } from \"@fluidframework/common-utils\";\nimport Deque from \"double-ended-queue\";\n\nexport interface IDeltaQueueWriter<T> {\n    push(task: T): void;\n    clear(): void;\n}\n\nexport class DeltaQueue<T>\n    extends TypedEventEmitter<IDeltaQueueEvents<T>>\n    implements IDeltaQueue<T>, IDeltaQueueWriter<T> {\n    private isDisposed: boolean = false;\n    private readonly q = new Deque<T>();\n\n    /**\n     * Tracks the number of pause requests for the queue\n     * The DeltaQueue is create initially paused.\n     */\n    private pauseCount = 1;\n\n    private error: any | undefined;\n\n    /**\n     * When processing is ongoing, holds a deferred that will resolve once processing stops.\n     * Undefined when not processing.\n     */\n    private processingDeferred: Deferred<void> | undefined;\n\n    public get disposed(): boolean {\n        return this.isDisposed;\n    }\n\n    /**\n     * @returns True if the queue is paused, false if not.\n     */\n    public get paused(): boolean {\n        return this.pauseCount !== 0;\n    }\n\n    public get length(): number {\n        return this.q.length;\n    }\n\n    public get idle(): boolean {\n        return this.processingDeferred === undefined && this.q.length === 0;\n    }\n\n    public async waitTillProcessingDone(): Promise<void> {\n        if (this.processingDeferred !== undefined) {\n            return this.processingDeferred.promise;\n        }\n    }\n\n    /**\n     * @param worker - A callback to process a delta.\n     * @param logger - For logging telemetry.\n     */\n    constructor(\n        private readonly worker: (delta: T) => void,\n    ) {\n        super();\n    }\n\n    public dispose() {\n        throw new Error(\"Not implemented.\");\n        this.isDisposed = true;\n    }\n\n    public clear(): void {\n        this.q.clear();\n    }\n\n    public peek(): T | undefined {\n        return this.q.peekFront();\n    }\n\n    public toArray(): T[] {\n        return this.q.toArray();\n    }\n\n    public push(task: T) {\n        try {\n            this.q.push(task);\n            this.emit(\"push\", task);\n            this.ensureProcessing();\n        } catch (error) {\n            this.emit(\"error\", error);\n        }\n    }\n\n    public async pause(): Promise<void> {\n        this.pauseCount++;\n        // If called from within the processing loop, we are in the middle of processing an op. Return a promise\n        // that will resolve when processing has actually stopped.\n        return this.waitTillProcessingDone();\n    }\n\n    public resume(): void {\n        assert(this.pauseCount > 0, 0x0f4 /* \"Nonzero pause-count on resume()\" */);\n        this.pauseCount--;\n        this.ensureProcessing();\n    }\n\n    /**\n     * There are several actions that may need to kick off delta processing, so we want to guard against\n     * accidental reentrancy. ensureProcessing can be called safely to start the processing loop if it is\n     * not already started.\n     */\n    private ensureProcessing() {\n        if (!this.paused && this.processingDeferred === undefined) {\n            this.processingDeferred = new Deferred<void>();\n            // Use a resolved promise to start the processing on a separate stack.\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            Promise.resolve().then(() => {\n                this.processDeltas();\n                if (this.processingDeferred !== undefined) {\n                    this.processingDeferred.resolve();\n                    this.processingDeferred = undefined;\n                }\n            });\n        }\n    }\n\n    /**\n     * Executes the delta processing loop until a stop condition is reached.\n     */\n    private processDeltas() {\n        const start = performance.now();\n        let count = 0;\n\n        // For grouping to work we must process all local messages immediately and in the single turn.\n        // So loop over them until no messages to process, we have become paused, or hit an error.\n        while (!(this.q.length === 0 || this.paused || this.error !== undefined)) {\n            // Get the next message in the queue\n            const next = this.q.shift();\n            count++;\n            // Process the message.\n            try {\n                // We know next is defined since we did a length check just prior to shifting.\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                this.worker(next!);\n                this.emit(\"op\", next);\n            } catch (error) {\n                this.error = error;\n                this.emit(\"error\", error);\n            }\n        }\n\n        if (this.q.length === 0) {\n            this.emit(\"idle\", count, performance.now() - start);\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { default as AbortController } from \"abort-controller\";\nimport { v4 as uuid } from \"uuid\";\nimport {\n    ITelemetryLogger,\n    IEventProvider,\n    ITelemetryProperties,\n    ITelemetryErrorEvent,\n} from \"@fluidframework/common-definitions\";\nimport {\n    IDeltaHandlerStrategy,\n    IDeltaManager,\n    IDeltaManagerEvents,\n    IDeltaQueue,\n    ICriticalContainerError,\n    IThrottlingWarning,\n    IConnectionDetails,\n} from \"@fluidframework/container-definitions\";\nimport { assert, TypedEventEmitter } from \"@fluidframework/common-utils\";\nimport {\n    normalizeError,\n    logIfFalse,\n    safeRaiseEvent,\n} from \"@fluidframework/telemetry-utils\";\nimport {\n    IDocumentDeltaStorageService,\n    IDocumentService,\n    DriverErrorType,\n} from \"@fluidframework/driver-definitions\";\nimport {\n    IDocumentMessage,\n    ISequencedDocumentMessage,\n    ISignalMessage,\n    MessageType,\n    ConnectionMode,\n} from \"@fluidframework/protocol-definitions\";\nimport {\n    NonRetryableError,\n    isClientMessage,\n} from \"@fluidframework/driver-utils\";\nimport {\n    ThrottlingWarning,\n    DataCorruptionError,\n    extractSafePropertiesFromMessage,\n    DataProcessingError,\n} from \"@fluidframework/container-utils\";\nimport { DeltaQueue } from \"./deltaQueue\";\nimport {\n    IConnectionManagerFactoryArgs,\n    IConnectionManager,\n } from \"./contracts\";\n\nexport interface IConnectionArgs {\n    mode?: ConnectionMode;\n    fetchOpsFromStorage?: boolean;\n    reason: string;\n}\n\n/**\n * Includes events emitted by the concrete implementation DeltaManager\n * but not exposed on the public interface IDeltaManager\n */\nexport interface IDeltaManagerInternalEvents extends IDeltaManagerEvents {\n    (event: \"throttled\", listener: (error: IThrottlingWarning) => void);\n    (event: \"closed\", listener: (error?: ICriticalContainerError) => void);\n}\n\n/**\n * Manages the flow of both inbound and outbound messages. This class ensures that shared objects receive delta\n * messages in order regardless of possible network conditions or timings causing out of order delivery.\n */\nexport class DeltaManager<TConnectionManager extends IConnectionManager>\n    extends TypedEventEmitter<IDeltaManagerInternalEvents>\n    implements\n    IDeltaManager<ISequencedDocumentMessage, IDocumentMessage>,\n    IEventProvider<IDeltaManagerInternalEvents> {\n    public readonly connectionManager: TConnectionManager;\n\n    public get active(): boolean { return this._active(); }\n\n    public get disposed() { return this.closed; }\n\n    public get IDeltaSender() { return this; }\n\n    private pending: ISequencedDocumentMessage[] = [];\n    private fetchReason: string | undefined;\n\n    // The minimum sequence number and last sequence number received from the server\n    private minSequenceNumber: number = 0;\n\n    // There are three numbers we track\n    // * lastQueuedSequenceNumber is the last queued sequence number. If there are gaps in seq numbers, then this number\n    //   is not updated until we cover that gap, so it increases each time by 1.\n    // * lastObservedSeqNumber is  an estimation of last known sequence number for container in storage. It's initially\n    //   populated at web socket connection time (if storage provides that info) and is  updated once ops shows up.\n    //   It's never less than lastQueuedSequenceNumber\n    // * lastProcessedSequenceNumber - last processed sequence number\n    private lastQueuedSequenceNumber: number = 0;\n    private lastObservedSeqNumber: number = 0;\n    private lastProcessedSequenceNumber: number = 0;\n    private lastProcessedMessage: ISequencedDocumentMessage | undefined;\n    private baseTerm: number = 0;\n\n    /**\n     * Track down the ops size.\n    */\n    private opsSize: number = 0;\n    private prevEnqueueMessagesReason: string | undefined;\n    private previouslyProcessedMessage: ISequencedDocumentMessage | undefined;\n\n    // The sequence number we initially loaded from\n    private initSequenceNumber: number = 0;\n\n    private readonly _inbound: DeltaQueue<ISequencedDocumentMessage>;\n    private readonly _inboundSignal: DeltaQueue<ISignalMessage>;\n\n    private closed = false;\n\n    private handler: IDeltaHandlerStrategy | undefined;\n    private deltaStorage: IDocumentDeltaStorageService | undefined;\n\n    private readonly throttlingIdSet = new Set<string>();\n    private timeTillThrottling: number = 0;\n\n    public readonly closeAbortController = new AbortController();\n\n    private readonly deltaStorageDelayId = uuid();\n    private readonly deltaStreamDelayId = uuid();\n\n    private messageBuffer: IDocumentMessage[] = [];\n\n    private _checkpointSequenceNumber: number | undefined;\n\n    public get inbound(): IDeltaQueue<ISequencedDocumentMessage> {\n        return this._inbound;\n    }\n\n    public get inboundSignal(): IDeltaQueue<ISignalMessage> {\n        return this._inboundSignal;\n    }\n\n    public get initialSequenceNumber(): number {\n        return this.initSequenceNumber;\n    }\n\n    public get lastSequenceNumber(): number {\n        return this.lastProcessedSequenceNumber;\n    }\n\n    public get lastMessage() {\n        return this.lastProcessedMessage;\n    }\n\n    public get lastKnownSeqNumber() {\n        return this.lastObservedSeqNumber;\n    }\n\n    public get referenceTerm(): number {\n        return this.baseTerm;\n    }\n\n    public get minimumSequenceNumber(): number {\n        return this.minSequenceNumber;\n    }\n\n    /**\n     * Tells if  current connection has checkpoint information.\n     * I.e. we know how far behind the client was at the time of establishing connection\n     */\n     public get hasCheckpointSequenceNumber() {\n        // Valid to be called only if we have active connection.\n        assert(this.connectionManager.connected, 0x0df /* \"Missing active connection\" */);\n        return this._checkpointSequenceNumber !== undefined;\n    }\n\n    // Forwarding connection manager properties / IDeltaManager implementation\n    public get maxMessageSize(): number { return this.connectionManager.maxMessageSize; }\n    public get version() { return this.connectionManager.version; }\n    public get serviceConfiguration() { return this.connectionManager.serviceConfiguration; }\n    public get outbound() { return this.connectionManager.outbound; }\n    public get readOnlyInfo() { return this.connectionManager.readOnlyInfo; }\n    public get clientDetails() { return this.connectionManager.clientDetails; }\n\n    public submit(type: MessageType, contents: any, batch = false, metadata?: any) {\n        const messagePartial: Omit<IDocumentMessage, \"clientSequenceNumber\"> = {\n            contents: JSON.stringify(contents),\n            metadata,\n            referenceSequenceNumber: this.lastProcessedSequenceNumber,\n            type,\n        };\n\n        if (!batch) {\n            this.flush();\n        }\n\n        const message = this.connectionManager.prepareMessageToSend(messagePartial);\n        if (message === undefined) {\n            return -1;\n        }\n\n        this.opsSize += message.contents.length;\n\n        this.messageBuffer.push(message);\n\n        this.emit(\"submitOp\", message);\n\n        if (!batch) {\n            this.flush();\n        }\n\n        return message.clientSequenceNumber;\n    }\n\n    public submitSignal(content: any) { return this.connectionManager.submitSignal(content); }\n\n    public flush() {\n        if (this.messageBuffer.length === 0) {\n            return;\n        }\n\n        // The prepareFlush event allows listeners to append metadata to the batch prior to submission.\n        this.emit(\"prepareSend\", this.messageBuffer);\n\n        this.connectionManager.sendMessages(this.messageBuffer);\n        this.messageBuffer = [];\n    }\n\n    public get connectionProps(): ITelemetryProperties {\n        return {\n            sequenceNumber: this.lastSequenceNumber,\n            opsSize: this.opsSize > 0 ? this.opsSize : undefined,\n            ...this.connectionManager.connectionProps,\n        };\n    }\n\n    /**\n     * Log error event with a bunch of internal to DeltaManager information about state of op processing\n     * Used to diagnose connectivity issues related to op processing (i.e. cases where for some reason\n     * we stop processing ops that results in no processing join op and thus moving to connected state)\n     * @param event - Event to log.\n     */\n    public logConnectionIssue(event: ITelemetryErrorEvent) {\n        assert(this.connectionManager.connected, 0x238 /* \"called only in connected state\" */);\n\n        const pendingSorted = this.pending.sort((a, b) => a.sequenceNumber - b.sequenceNumber);\n        this.logger.sendErrorEvent({\n            ...event,\n            // This directly tells us if fetching ops is in flight, and thus likely the reason of\n            // stalled op processing\n            fetchReason: this.fetchReason,\n            // A bunch of useful sequence numbers to understand if we are holding some ops from processing\n            lastQueuedSequenceNumber: this.lastQueuedSequenceNumber, // last sequential op\n            lastProcessedSequenceNumber: this.lastProcessedSequenceNumber, // same as above, but after processing\n            lastObserved: this.lastObservedSeqNumber, // last sequence we ever saw; may have gaps with above.\n            // connection info\n            ...this.connectionManager.connectionVerboseProps,\n            pendingOps: this.pending.length, // Do we have any pending ops?\n            pendingFirst: pendingSorted[0]?.sequenceNumber, // is the first pending op the one that we are missing?\n            haveHandler: this.handler !== undefined, // do we have handler installed?\n            inboundLength: this.inbound.length,\n            inboundPaused: this.inbound.paused,\n        });\n    }\n\n    constructor(\n        private readonly serviceProvider: () => IDocumentService | undefined,\n        private readonly logger: ITelemetryLogger,\n        private readonly _active: () => boolean,\n        createConnectionManager: (props: IConnectionManagerFactoryArgs) => TConnectionManager,\n    ) {\n        super();\n        const props: IConnectionManagerFactoryArgs = {\n            incomingOpHandler: (messages: ISequencedDocumentMessage[], reason: string) => {\n                try {\n                    this.enqueueMessages(messages, reason);\n                } catch (error) {\n                    this.logger.sendErrorEvent({ eventName: \"EnqueueMessages_Exception\" }, error);\n                    this.close(normalizeError(error));\n                }\n            },\n            signalHandler: (message: ISignalMessage) => this._inboundSignal.push(message),\n            reconnectionDelayHandler: (delayMs: number, error: unknown) =>\n                this.emitDelayInfo(this.deltaStreamDelayId, delayMs, error),\n            closeHandler: (error: any) => this.close(error),\n            disconnectHandler: (reason: string) => this.disconnectHandler(reason),\n            connectHandler: (connection: IConnectionDetails) => this.connectHandler(connection),\n            pongHandler: (latency: number) => this.emit(\"pong\", latency),\n            readonlyChangeHandler: (readonly?: boolean) => safeRaiseEvent(this, this.logger, \"readonly\", readonly),\n        };\n\n        this.connectionManager = createConnectionManager(props);\n\n        this._inbound = new DeltaQueue<ISequencedDocumentMessage>(\n            (op) => {\n                this.processInboundMessage(op);\n            });\n\n        this._inbound.on(\"error\", (error) => {\n            this.close(\n                DataProcessingError.wrapIfUnrecognized(error, \"deltaManagerInboundErrorHandler\", this.lastMessage));\n        });\n\n        // Inbound signal queue\n        this._inboundSignal = new DeltaQueue<ISignalMessage>((message) => {\n            if (this.handler === undefined) {\n                throw new Error(\"Attempted to process an inbound signal without a handler attached\");\n            }\n            this.handler.processSignal({\n                clientId: message.clientId,\n                content: JSON.parse(message.content as string),\n            });\n        });\n\n        this._inboundSignal.on(\"error\", (error) => {\n            this.close(normalizeError(error));\n        });\n\n        // Initially, all queues are created paused.\n        // - outbound is flipped back and forth in setupNewSuccessfulConnection / disconnectFromDeltaStream\n        // - inbound & inboundSignal are resumed in attachOpHandler() when we have handler setup\n    }\n\n    private connectHandler(connection: IConnectionDetails) {\n        this.refreshDelayInfo(this.deltaStreamDelayId);\n\n        const props = this.connectionManager.connectionVerboseProps;\n        props.connectionLastQueuedSequenceNumber = this.lastQueuedSequenceNumber;\n        props.connectionLastObservedSeqNumber = this.lastObservedSeqNumber;\n\n        const checkpointSequenceNumber = connection.checkpointSequenceNumber;\n        this._checkpointSequenceNumber = checkpointSequenceNumber;\n        if (checkpointSequenceNumber !== undefined) {\n            this.updateLatestKnownOpSeqNumber(checkpointSequenceNumber);\n        }\n\n        // We cancel all ops on lost of connectivity, and rely on DDSes to resubmit them.\n        // Semantics are not well defined for batches (and they are broken right now on disconnects anyway),\n        // but it's safe to assume (until better design is put into place) that batches should not exist\n        // across multiple connections. Right now we assume runtime will not submit any ops in disconnected\n        // state. As requirements change, so should these checks.\n        assert(this.messageBuffer.length === 0, 0x0e9 /* \"messageBuffer is not empty on new connection\" */);\n\n        this.opsSize = 0;\n\n        this.emit(\n            \"connect\",\n            connection,\n            checkpointSequenceNumber !== undefined ?\n                this.lastObservedSeqNumber - this.lastSequenceNumber : undefined);\n\n        // If we got some initial ops, then we know the gap and call above fetched ops to fill it.\n        // Same is true for \"write\" mode even if we have no ops - we will get \"join\" own op very very soon.\n        // However if we are connecting as view-only, then there is no good signal to realize if client is behind.\n        // Thus we have to hit storage to see if any ops are there.\n        if (checkpointSequenceNumber !== undefined) {\n            // We know how far we are behind (roughly). If it's non-zero gap, fetch ops right away.\n            if (checkpointSequenceNumber > this.lastQueuedSequenceNumber) {\n                this.fetchMissingDeltas(\"AfterConnection\");\n            }\n        // we do not know the gap, and we will not learn about it if socket is quite - have to ask.\n        } else if (connection.mode === \"read\") {\n            this.fetchMissingDeltas(\"AfterReadConnection\");\n        }\n    }\n\n    public dispose() {\n        throw new Error(\"Not implemented.\");\n    }\n\n    /**\n     * Sets the sequence number from which inbound messages should be returned\n     */\n    public async attachOpHandler(\n        minSequenceNumber: number,\n        sequenceNumber: number,\n        term: number,\n        handler: IDeltaHandlerStrategy,\n        prefetchType: \"cached\" | \"all\" | \"none\" = \"none\",\n    ) {\n        this.initSequenceNumber = sequenceNumber;\n        this.lastProcessedSequenceNumber = sequenceNumber;\n        this.baseTerm = term;\n        this.minSequenceNumber = minSequenceNumber;\n        this.lastQueuedSequenceNumber = sequenceNumber;\n        this.lastObservedSeqNumber = sequenceNumber;\n\n        // We will use same check in other places to make sure all the seq number above are set properly.\n        assert(this.handler === undefined, 0x0e2 /* \"DeltaManager already has attached op handler!\" */);\n        this.handler = handler;\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        assert(!!(this.handler as any), 0x0e3 /* \"Newly set op handler is null/undefined!\" */);\n\n        // There should be no pending fetch!\n        // This API is called right after attachOpHandler by Container.load().\n        // We might have connection already and it might have called fetchMissingDeltas() from\n        // setupNewSuccessfulConnection. But it should do nothing, because there is no way to fetch ops before\n        // we know snapshot sequence number that is set in attachOpHandler. So all such calls should be noop.\n        assert(this.fetchReason === undefined, 0x268 /* \"There can't be pending fetch that early in boot sequence!\" */);\n\n        if (this.closed) {\n            return;\n        }\n\n        this._inbound.resume();\n        this._inboundSignal.resume();\n\n        if (prefetchType !== \"none\") {\n            const cacheOnly = prefetchType === \"cached\";\n            await this.fetchMissingDeltasCore(\"DocumentOpen\", cacheOnly, this.lastQueuedSequenceNumber);\n\n            // Keep going with fetching ops from storage once we have all cached ops in.\n            // But do not block load and make this request async / not blocking this api.\n            // Ops processing will start once cached ops are in and and will stop when queue is empty\n            // (which in most cases will happen when we are done processing cached ops)\n            if (cacheOnly) {\n                // fire and forget\n                this.fetchMissingDeltas(\"DocumentOpen\");\n            }\n        }\n\n        // Ensure there is no need to call this.processPendingOps() at the end of boot sequence\n        assert(this.fetchReason !== undefined || this.pending.length === 0, 0x269 /* \"pending ops are not dropped\" */);\n    }\n\n    public connect(args: IConnectionArgs) {\n        const fetchOpsFromStorage = args.fetchOpsFromStorage ?? true;\n        logIfFalse(\n            this.handler !== undefined || !fetchOpsFromStorage,\n            this.logger,\n            \"CantFetchWithoutBaseline\"); // can't fetch if no baseline\n\n        // Note: There is race condition here.\n        // We want to issue request to storage as soon as possible, to\n        // reduce latency of becoming current, thus this code here.\n        // But there is no ordering between fetching OPs and connection to delta stream\n        // As result, we might be behind by the time we connect to delta stream\n        // In case of r/w connection, that's not an issue, because we will hear our\n        // own \"join\" message and realize any gap client has in ops.\n        // But for view-only connection, we have no such signal, and with no traffic\n        // on the wire, we might be always behind.\n        // See comment at the end of \"connect\" handler\n        if (fetchOpsFromStorage) {\n            this.fetchMissingDeltas(args.reason);\n        }\n\n        this.connectionManager.connect(args.mode);\n    }\n\n    private async getDeltas(\n        from: number, // inclusive\n        to: number | undefined, // exclusive\n        callback: (messages: ISequencedDocumentMessage[]) => void,\n        cacheOnly: boolean) {\n        const docService = this.serviceProvider();\n        if (docService === undefined) {\n            throw new Error(\"Delta manager is not attached\");\n        }\n\n        if (this.deltaStorage === undefined) {\n            this.deltaStorage = await docService.connectToDeltaStorage();\n        }\n\n        let cancelFetch: (op: ISequencedDocumentMessage) => boolean;\n\n        if (to !== undefined) {\n            const lastExpectedOp = to - 1; // make it inclusive!\n\n            // It is possible that due to asynchrony (including await above), required ops were already\n            // received through delta stream. Validate that before moving forward.\n            if (this.lastQueuedSequenceNumber >= lastExpectedOp) {\n                this.logger.sendPerformanceEvent({\n                    reason: this.fetchReason,\n                    eventName: \"ExtraStorageCall\",\n                    early: true,\n                    from,\n                    to,\n                    ...this.connectionManager.connectionVerboseProps,\n                });\n                return;\n            }\n\n            // Be prepared for the case where webSocket would receive the ops that we are trying to fill through\n            // storage. Ideally it should never happen (i.e. ops on socket are always ordered, and thus once we\n            // detected gap, this gap can't be filled in later on through websocket).\n            // And in practice that does look like the case. The place where this code gets hit is if we lost\n            // connection and reconnected (likely to another box), and new socket's initial ops contains these ops.\n            cancelFetch = (op: ISequencedDocumentMessage) => op.sequenceNumber >= lastExpectedOp;\n        } else {\n            // Unbound requests are made to proactively fetch ops, but also get up to date in cases where socket\n            // is silent (and connection is \"read\", thus we might not have any data on how far client is behind).\n            // Once we have any op coming in from socket, we can cancel it as it's not needed any more.\n            // That said, if we have socket connection, make sure we got ops up to checkpointSequenceNumber!\n            cancelFetch = (op: ISequencedDocumentMessage) => op.sequenceNumber >= this.lastObservedSeqNumber;\n        }\n\n        const controller = new AbortController();\n        let opsFromFetch = false;\n\n        const opListener = (op: ISequencedDocumentMessage) => {\n            assert(op.sequenceNumber === this.lastQueuedSequenceNumber, 0x23a /* \"seq#'s\" */);\n            // Ops that are coming from this request should not cancel itself.\n            // This is useless for known ranges (to is defined) as it means request is over either way.\n            // And it will cancel unbound request too early, not allowing us to learn where the end of the file is.\n            if (!opsFromFetch && cancelFetch(op)) {\n                controller.abort();\n                this._inbound.off(\"push\", opListener);\n            }\n        };\n\n        try {\n            this._inbound.on(\"push\", opListener);\n            assert(this.closeAbortController.signal.onabort === null, 0x1e8 /* \"reentrancy\" */);\n            this.closeAbortController.signal.onabort = () => controller.abort();\n\n            const stream = this.deltaStorage.fetchMessages(\n                from, // inclusive\n                to, // exclusive\n                controller.signal,\n                cacheOnly,\n                this.fetchReason);\n\n            // eslint-disable-next-line no-constant-condition\n            while (true) {\n                const result = await stream.read();\n                if (result.done) {\n                    break;\n                }\n                try {\n                    opsFromFetch = true;\n                    callback(result.value);\n                } finally {\n                    opsFromFetch = false;\n                }\n            }\n        } finally {\n            this.closeAbortController.signal.onabort = null;\n            this._inbound.off(\"push\", opListener);\n            assert(!opsFromFetch, 0x289 /* \"logic error\" */);\n        }\n    }\n\n    /**\n     * Closes the connection and clears inbound & outbound queues.\n     */\n    public close(error?: ICriticalContainerError): void {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n\n        this.connectionManager.dispose(error);\n\n        this.closeAbortController.abort();\n\n        this._inbound.clear();\n        this._inboundSignal.clear();\n\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this._inbound.pause();\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this._inboundSignal.pause();\n\n        // Drop pending messages - this will ensure catchUp() does not go into infinite loop\n        this.pending = [];\n\n        // This needs to be the last thing we do (before removing listeners), as it causes\n        // Container to dispose context and break ability of data stores / runtime to \"hear\"\n        // from delta manager, including notification (above) about readonly state.\n        this.emit(\"closed\", error);\n\n        this.removeAllListeners();\n    }\n\n    public refreshDelayInfo(id: string) {\n        this.throttlingIdSet.delete(id);\n        if (this.throttlingIdSet.size === 0) {\n            this.timeTillThrottling = 0;\n        }\n    }\n\n    private disconnectHandler(reason: string) {\n        this.messageBuffer.length = 0;\n        this.emit(\"disconnect\", reason);\n    }\n\n    /**\n     * Emit info about a delay in service communication on account of throttling.\n     * @param id - Id of the connection that is delayed\n     * @param delayMs - Duration of the delay\n     * @param error - error object indicating the throttling\n     */\n    public emitDelayInfo(id: string, delayMs: number, error: unknown) {\n        const timeNow = Date.now();\n        this.throttlingIdSet.add(id);\n        if (delayMs > 0 && (timeNow + delayMs > this.timeTillThrottling)) {\n            this.timeTillThrottling = timeNow + delayMs;\n\n            const throttlingWarning: IThrottlingWarning = ThrottlingWarning.wrap(\n                error,\n                delayMs / 1000 /* retryAfterSeconds */,\n                this.logger,\n            );\n            this.emit(\"throttled\", throttlingWarning);\n        }\n    }\n\n    // returns parts of message (in string format) that should never change for a given message.\n    // Used for message comparison. It attempts to avoid comparing fields that potentially may differ.\n    // for example, it's not clear if serverMetadata or timestamp property is a property of message or server state.\n    // We only extract the most obvious fields that are sufficient (with high probability) to detect sequence number\n    // reuse.\n    // Also payload goes to telemetry, so no PII, including content!!\n    // Note: It's possible for a duplicate op to be broadcasted and have everything the same except the timestamp.\n    private comparableMessagePayload(m: ISequencedDocumentMessage) {\n        return `${m.clientId}-${m.type}-${m.minimumSequenceNumber}-${m.referenceSequenceNumber}-${m.timestamp}`;\n    }\n\n    private enqueueMessages(\n        messages: ISequencedDocumentMessage[],\n        reason: string,\n        allowGaps = false,\n    ): void {\n        if (this.handler === undefined) {\n            // We did not setup handler yet.\n            // This happens when we connect to web socket faster than we get attributes for container\n            // and thus faster than attachOpHandler() is called\n            // this.lastProcessedSequenceNumber is still zero, so we can't rely on this.fetchMissingDeltas()\n            // to do the right thing.\n            this.pending = this.pending.concat(messages);\n            return;\n        }\n\n        // Pending ops should never just hang around for nothing.\n        // This invariant will stay true through this function execution,\n        // so there is no need to process pending ops here.\n        // It's responsibility of\n        // - attachOpHandler()\n        // - fetchMissingDeltas() after it's done with querying storage\n        assert(this.pending.length === 0 || this.fetchReason !== undefined, 0x1e9 /* \"Pending ops\" */);\n\n        if (messages.length === 0) {\n            return;\n        }\n\n        const from = messages[0].sequenceNumber;\n        const last = messages[messages.length - 1].sequenceNumber;\n\n        // Report stats about missing and duplicate ops\n        // This helps better understand why we fetch ops from storage, and thus may delay\n        // getting current / sending ops\n        // It's possible that this batch is already too late - do not bother\n        if (last > this.lastQueuedSequenceNumber) {\n            let prev = from - 1;\n            const initialGap = prev - this.lastQueuedSequenceNumber;\n            let firstMissing: number | undefined;\n            let duplicate = 0;\n            let gap = 0;\n\n            // Count all gaps and duplicates\n            for (const message of messages) {\n                if (message.sequenceNumber === prev) {\n                    duplicate++;\n                } else if (message.sequenceNumber !== prev + 1) {\n                    gap++;\n                    if (firstMissing === undefined) {\n                        firstMissing = prev + 1;\n                    }\n                }\n                prev = message.sequenceNumber;\n            }\n\n            let eventName: string | undefined;\n\n            // Report if we found some issues\n            if (duplicate !== 0 || gap !== 0 && !allowGaps || initialGap > 0 && this.fetchReason === undefined) {\n                eventName = \"enqueueMessages\";\n            // Also report if we are fetching ops, and same range comes in, thus making this fetch obsolete.\n            } else if (this.fetchReason !== undefined && this.fetchReason !== reason &&\n                    (from <= this.lastQueuedSequenceNumber + 1 && last > this.lastQueuedSequenceNumber)) {\n                eventName = \"enqueueMessagesExtraFetch\";\n            }\n\n            // Report if there is something to report\n            // Do not report when pending fetch is in progress, as such reporting will not\n            // correctly take into account pending ops.\n            if (eventName !== undefined) {\n                this.logger.sendPerformanceEvent({\n                    eventName,\n                    reason,\n                    previousReason: this.prevEnqueueMessagesReason,\n                    from,\n                    to: last + 1, // exclusive, being consistent with the other telemetry / APIs\n                    length: messages.length,\n                    fetchReason: this.fetchReason,\n                    duplicate: duplicate > 0 ? duplicate : undefined,\n                    initialGap: initialGap !== 0 ? initialGap : undefined,\n                    gap: gap > 0 ? gap : undefined,\n                    firstMissing,\n                    dmInitialSeqNumber: this.initialSequenceNumber,\n                    ...this.connectionManager.connectionVerboseProps,\n                });\n            }\n        }\n\n        this.updateLatestKnownOpSeqNumber(messages[messages.length - 1].sequenceNumber);\n\n        const n = this.previouslyProcessedMessage?.sequenceNumber;\n        assert(n === undefined || n === this.lastQueuedSequenceNumber,\n            0x0ec /* \"Unexpected value for previously processed message's sequence number\" */);\n\n        for (const message of messages) {\n            // Check that the messages are arriving in the expected order\n            if (message.sequenceNumber <= this.lastQueuedSequenceNumber) {\n                // Validate that we do not have data loss, i.e. sequencing is reset and started again\n                // with numbers that this client already observed before.\n                if (this.previouslyProcessedMessage?.sequenceNumber === message.sequenceNumber) {\n                    const message1 = this.comparableMessagePayload(this.previouslyProcessedMessage);\n                    const message2 = this.comparableMessagePayload(message);\n                    if (message1 !== message2) {\n                        const error = new NonRetryableError(\n                            // This looks like a data corruption but the culprit was that the file was overwritten\n                            // in storage.  See PR #5882.\n                            // Likely to be an issue with Fluid Services. Content does not match previous client\n                            // knowledge about this file. If the file is overwritten for any reason, this error can be\n                            // hit. One example is that some clients could be submitting ops to two different service\n                            // instances such that the same sequence number is reused for two different ops.\n                            // pre-0.58 error message: twoMessagesWithSameSeqNumAndDifferentPayload\n                            \"Found two messages with the same sequenceNumber but different payloads. Likely to be a \"\n                            + \"service issue\",\n                            DriverErrorType.fileOverwrittenInStorage,\n                            {\n                                clientId: this.connectionManager.clientId,\n                                sequenceNumber: message.sequenceNumber,\n                                message1,\n                                message2,\n                                driverVersion: undefined,\n                            },\n                        );\n                        this.close(error);\n                    }\n                }\n            } else if (message.sequenceNumber !== this.lastQueuedSequenceNumber + 1) {\n                this.pending.push(message);\n                this.fetchMissingDeltas(reason, message.sequenceNumber);\n            } else {\n                this.lastQueuedSequenceNumber = message.sequenceNumber;\n                this.previouslyProcessedMessage = message;\n                this._inbound.push(message);\n            }\n        }\n\n        // When / if we report a gap in ops in the future, we want telemetry to correctly reflect source\n        // of prior ops. But if we have some out of order ops (this.pending), then reporting current reason\n        // becomes not accurate, as the gap existed before current batch, so we should just report \"unknown\".\n        this.prevEnqueueMessagesReason = this.pending.length > 0 ? \"unknown\" : reason;\n    }\n\n    private processInboundMessage(message: ISequencedDocumentMessage): void {\n        const startTime = Date.now();\n        this.lastProcessedMessage = message;\n\n        // All non-system messages are coming from some client, and should have clientId\n        // System messages may have no clientId (but some do, like propose, noop, summarize)\n        assert(\n            message.clientId !== undefined\n            || !(isClientMessage(message)),\n            0x0ed /* \"non-system message have to have clientId\" */,\n        );\n\n        // TODO Remove after SPO picks up the latest build.\n        if (\n            typeof message.contents === \"string\"\n            && message.contents !== \"\"\n            && message.type !== MessageType.ClientLeave\n        ) {\n            message.contents = JSON.parse(message.contents);\n        }\n\n        this.connectionManager.beforeProcessingIncomingOp(message);\n\n        // Watch the minimum sequence number and be ready to update as needed\n        if (this.minSequenceNumber > message.minimumSequenceNumber) {\n            // pre-0.58 error message: msnMovesBackwards\n            throw new DataCorruptionError(\"Found a lower minimumSequenceNumber (msn) than previously recorded\", {\n                ...extractSafePropertiesFromMessage(message),\n                clientId: this.connectionManager.clientId,\n            });\n        }\n        this.minSequenceNumber = message.minimumSequenceNumber;\n\n        if (message.sequenceNumber !== this.lastProcessedSequenceNumber + 1) {\n            // pre-0.58 error message: nonSequentialSequenceNumber\n            throw new DataCorruptionError(\"Found a non-Sequential sequenceNumber\", {\n                ...extractSafePropertiesFromMessage(message),\n                clientId: this.connectionManager.clientId,\n            });\n        }\n        this.lastProcessedSequenceNumber = message.sequenceNumber;\n\n        // a bunch of code assumes that this is true\n        assert(this.lastProcessedSequenceNumber <= this.lastObservedSeqNumber,\n            0x267 /* \"lastObservedSeqNumber should be updated first\" */);\n\n        // Back-compat for older server with no term\n        if (message.term === undefined) {\n            message.term = 1;\n        }\n        this.baseTerm = message.term;\n\n        if (this.handler === undefined) {\n            throw new Error(\"Attempted to process an inbound message without a handler attached\");\n        }\n        this.handler.process(message);\n\n        const endTime = Date.now();\n\n        // Should be last, after changing this.lastProcessedSequenceNumber above, as many callers\n        // test this.lastProcessedSequenceNumber instead of using op.sequenceNumber itself.\n        this.emit(\"op\", message, endTime - startTime);\n    }\n\n    /**\n     * Retrieves the missing deltas between the given sequence numbers\n     */\n     private fetchMissingDeltas(reasonArg: string, to?: number) {\n         this.fetchMissingDeltasCore(reasonArg, false /* cacheOnly */, to).catch((error) => {\n             this.logger.sendErrorEvent({ eventName: \"fetchMissingDeltasException\" }, error);\n         });\n     }\n\n     /**\n     * Retrieves the missing deltas between the given sequence numbers\n     */\n    private async fetchMissingDeltasCore(\n        reason: string,\n        cacheOnly: boolean,\n        to?: number) {\n        // Exit out early if we're already fetching deltas\n        if (this.fetchReason !== undefined) {\n            return;\n        }\n\n        if (this.closed) {\n            this.logger.sendTelemetryEvent({ eventName: \"fetchMissingDeltasClosedConnection\", reason });\n            return;\n        }\n\n        if (this.handler === undefined) {\n            // We do not poses yet any information\n            assert(this.lastQueuedSequenceNumber === 0, 0x26b /* \"initial state\" */);\n            return;\n        }\n\n        try {\n            let from = this.lastQueuedSequenceNumber + 1;\n\n            const n = this.previouslyProcessedMessage?.sequenceNumber;\n            if (n !== undefined) {\n                // If we already processed at least one op, then we have this.previouslyProcessedMessage populated\n                // and can use it to validate that we are operating on same file, i.e. it was not overwritten.\n                // Knowing about this mechanism, we could ask for op we already observed to increase validation.\n                // This is especially useful when coming out of offline mode or loading from\n                // very old cached (by client / driver) snapshot.\n                assert(n === this.lastQueuedSequenceNumber, 0x0f2 /* \"previouslyProcessedMessage\" */);\n                assert(from > 1, 0x0f3 /* \"not positive\" */);\n                from--;\n            }\n\n            const fetchReason = `${reason}_fetch`;\n            this.fetchReason = fetchReason;\n\n            await this.getDeltas(\n                from,\n                to,\n                (messages) => {\n                    this.refreshDelayInfo(this.deltaStorageDelayId);\n                    this.enqueueMessages(messages, fetchReason);\n                },\n                cacheOnly);\n        } catch (error) {\n            this.logger.sendErrorEvent({ eventName: \"GetDeltas_Exception\" }, error);\n            this.close(normalizeError(error));\n        } finally {\n            this.refreshDelayInfo(this.deltaStorageDelayId);\n            this.fetchReason = undefined;\n            this.processPendingOps(reason);\n        }\n    }\n\n    /**\n     * Sorts pending ops and attempts to apply them\n     */\n    private processPendingOps(reason?: string): void {\n        if (this.closed) {\n            return;\n        }\n\n        assert(this.handler !== undefined, 0x26c /* \"handler should be installed\" */);\n\n        const pendingSorted = this.pending.sort((a, b) => a.sequenceNumber - b.sequenceNumber);\n        this.pending = [];\n        // Given that we do not track where these ops came from any more, it's not very\n        // actionably to report gaps in this range.\n        this.enqueueMessages(pendingSorted, `${reason}_pending`, true /* allowGaps */);\n\n        // Re-entrancy is ignored by fetchMissingDeltas, execution will come here when it's over\n        if (this.fetchReason === undefined) {\n            // See issue #7312 for more details\n            // We observe cases where client gets into situation where it is not aware of missing ops\n            // (i.e. client being behind), and as such, does not attempt to fetch them.\n            // In some cases client may not have enough signal (example - \"read\" connection that is silent -\n            // there is no easy way for client to realize it's behind, see a bit of commentary / logic at the\n            // end of setupNewSuccessfulConnection). In other cases it should be able to learn that info (\"write\"\n            // connection, learn by receiving its own join op), but data suggest it does not happen.\n            // In 50% of these cases we do know we are behind through checkpointSequenceNumber on connection object\n            // and thus can leverage that to trigger recovery. But this is not going to solve all the problems\n            // (the other 50%), and thus these errors below should be looked at even if code below results in\n            // recovery.\n            if (this.lastQueuedSequenceNumber < this.lastObservedSeqNumber) {\n                this.fetchMissingDeltas(\"OpsBehind\");\n            }\n        }\n    }\n\n    private updateLatestKnownOpSeqNumber(seq: number) {\n        if (this.lastObservedSeqNumber < seq) {\n            this.lastObservedSeqNumber = seq;\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport {\n    ITelemetryBaseEvent,\n    ITelemetryBaseLogger,\n    ITelemetryGenericEvent,\n} from \"@fluidframework/common-definitions\";\n\n/**\n * Like assert, but logs only if the condition is false, rather than throwing\n * @param condition - The condition to attest too\n * @param logger - The logger to log with\n * @param event - The string or event to log\n * @returns - The outcome of the condition\n */\nexport function logIfFalse(\n    condition: any,\n    logger: ITelemetryBaseLogger,\n    event: string | ITelemetryGenericEvent,\n): condition is true {\n    if (condition) {\n        return true;\n    }\n    const newEvent: ITelemetryBaseEvent =\n        typeof event === \"string\"\n        ? { eventName: event, category: \"error\" }\n        : { category: \"error\", ...event };\n    logger.send(newEvent);\n    return false;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { EventEmitter } from \"events\";\nimport { IDisposable, IEvent, IEventProvider } from \"@fluidframework/common-definitions\";\nimport { TypedEventEmitter } from \"./typedEventEmitter\";\n\n/**\n * Base class used for forwarding events from a source EventEmitter.\n * This can be useful when all arbitrary listeners need to be removed,\n * but the primary source needs to stay intact.\n */\nexport class EventForwarder<TEvent extends IEvent = IEvent>\n    extends TypedEventEmitter<TEvent> implements IDisposable {\n    protected static isEmitterEvent(event: string): boolean {\n        return event === EventForwarder.newListenerEvent || event === EventForwarder.removeListenerEvent;\n    }\n\n    private static readonly newListenerEvent = \"newListener\";\n    private static readonly removeListenerEvent = \"removeListener\";\n\n    public get disposed() { return this.isDisposed; }\n    private isDisposed: boolean = false;\n\n    private readonly forwardingEvents = new Map<string, Map<EventEmitter | IEventProvider<TEvent>, () => void>>();\n\n    constructor(source?: EventEmitter | IEventProvider<TEvent>) {\n        super();\n        if (source !== undefined) {\n            // NewListener event is raised whenever someone starts listening to this events, so\n            // we keep track of events being listened to, and start forwarding from the source\n            // event emitter per event listened to on this\n            const removeListenerHandler = (event: string) => this.unforwardEvent(source, event);\n            const newListenerHandler = (event: string) => this.forwardEvent(source, event);\n            this.on(EventForwarder.removeListenerEvent, removeListenerHandler);\n            this.on(EventForwarder.newListenerEvent, newListenerHandler);\n        }\n    }\n\n    public dispose() {\n        this.isDisposed = true;\n        for (const listenerRemovers of this.forwardingEvents.values()) {\n            for (const listenerRemover of listenerRemovers.values()) {\n                try {\n                    listenerRemover();\n                } catch {\n                    // Should be fine because of removeAllListeners below\n                }\n            }\n        }\n        this.removeAllListeners();\n        this.forwardingEvents.clear();\n    }\n\n    protected forwardEvent(source: EventEmitter | IEventProvider<TEvent>, ...events: string[]): void {\n        for (const event of events) {\n            if (source !== undefined && event !== undefined && !EventForwarder.isEmitterEvent(event)) {\n                let sources = this.forwardingEvents.get(event);\n                if (sources === undefined) {\n                    sources = new Map();\n                    this.forwardingEvents.set(event, sources);\n                }\n                if (!sources.has(source)) {\n                    const listener = (...args: any[]) => this.emit(event, ...args);\n                    sources.set(source, () => source.off(event, listener));\n                    source.on(event, listener);\n                }\n            }\n        }\n    }\n\n    protected unforwardEvent(source: EventEmitter | IEventProvider<TEvent>, ...events: string[]): void {\n        for (const event of events) {\n            if (event !== undefined && !EventForwarder.isEmitterEvent(event)) {\n                const sources = this.forwardingEvents.get(event);\n                if (sources?.has(source)) {\n                    if (this.listenerCount(event) === 0) {\n                        const listenerRemover = sources.get(source);\n                        if (listenerRemover !== undefined) {\n                            listenerRemover();\n                        }\n                        sources.delete(source);\n                        if (sources.size === 0) {\n                            this.forwardingEvents.delete(event);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    IDeltaManager,\n    IDeltaManagerEvents,\n    IDeltaQueue,\n    IDeltaSender,\n    IDeltaQueueEvents,\n    ReadOnlyInfo,\n} from \"@fluidframework/container-definitions\";\nimport { EventForwarder } from \"@fluidframework/common-utils\";\nimport {\n    IClientConfiguration,\n    IClientDetails,\n    IDocumentMessage,\n    ISequencedDocumentMessage,\n    ISignalMessage,\n} from \"@fluidframework/protocol-definitions\";\n\n/**\n * Proxy to the real IDeltaQueue - used to restrict access\n */\nexport class DeltaQueueProxy<T> extends EventForwarder<IDeltaQueueEvents<T>> implements IDeltaQueue<T> {\n    public get paused(): boolean {\n        return this.queue.paused;\n    }\n\n    public get length(): number {\n        return this.queue.length;\n    }\n\n    public get idle(): boolean {\n        return this.queue.idle;\n    }\n\n    constructor(private readonly queue: IDeltaQueue<T>) {\n        super(queue);\n    }\n\n    public peek(): T | undefined {\n        return this.queue.peek();\n    }\n\n    public toArray(): T[] {\n        return this.queue.toArray();\n    }\n\n    // back-compat: usage removed in 0.33, remove in future versions\n    public async systemPause(): Promise<void> {\n        return this.pause();\n    }\n\n    public async pause(): Promise<void> {\n        return this.queue.pause();\n    }\n\n    // back-compat: usage removed in 0.33, remove in future versions\n    public async systemResume(): Promise<void> {\n        return this.resume();\n    }\n\n    public async resume(): Promise<void> {\n        this.queue.resume();\n    }\n\n    public async waitTillProcessingDone() {\n        return this.queue.waitTillProcessingDone();\n    }\n}\n\n/**\n * Proxy to the real IDeltaManager - used to restrict access\n */\nexport class DeltaManagerProxy\n    extends EventForwarder<IDeltaManagerEvents>\n    implements IDeltaManager<ISequencedDocumentMessage, IDocumentMessage> {\n    public readonly inbound: IDeltaQueue<ISequencedDocumentMessage>;\n    public readonly outbound: IDeltaQueue<IDocumentMessage[]>;\n    public readonly inboundSignal: IDeltaQueue<ISignalMessage>;\n\n    public get IDeltaSender(): IDeltaSender {\n        return this;\n    }\n\n    public get minimumSequenceNumber(): number {\n        return this.deltaManager.minimumSequenceNumber;\n    }\n\n    public get lastSequenceNumber(): number {\n        return this.deltaManager.lastSequenceNumber;\n    }\n\n    public get lastMessage() {\n        return this.deltaManager.lastMessage;\n    }\n\n    public get lastKnownSeqNumber() {\n        return this.deltaManager.lastKnownSeqNumber;\n    }\n\n    public get initialSequenceNumber(): number {\n        return this.deltaManager.initialSequenceNumber;\n    }\n\n    public get hasCheckpointSequenceNumber() {\n        return this.deltaManager.hasCheckpointSequenceNumber;\n    }\n\n    public get clientDetails(): IClientDetails {\n        return this.deltaManager.clientDetails;\n    }\n\n    public get version(): string {\n        return this.deltaManager.version;\n    }\n\n    public get maxMessageSize(): number {\n        return this.deltaManager.maxMessageSize;\n    }\n\n    public get serviceConfiguration(): IClientConfiguration | undefined {\n        return this.deltaManager.serviceConfiguration;\n    }\n\n    public get active(): boolean {\n        return this.deltaManager.active;\n    }\n\n    public get readOnlyInfo(): ReadOnlyInfo {\n        return this.deltaManager.readOnlyInfo;\n    }\n\n    constructor(private readonly deltaManager: IDeltaManager<ISequencedDocumentMessage, IDocumentMessage>) {\n        super(deltaManager);\n\n        this.inbound = new DeltaQueueProxy(deltaManager.inbound);\n        this.outbound = new DeltaQueueProxy(deltaManager.outbound);\n        this.inboundSignal = new DeltaQueueProxy(deltaManager.inboundSignal);\n    }\n\n    public dispose(): void {\n        this.inbound.dispose();\n        this.outbound.dispose();\n        this.inboundSignal.dispose();\n        super.dispose();\n    }\n\n    public submitSignal(content: any): void {\n        return this.deltaManager.submitSignal(content);\n    }\n\n    public flush(): void {\n        return this.deltaManager.flush();\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport enum ConnectionState {\n    /**\n     * The container is not connected to the ordering service\n     * Note - When in this state the container may be about to reconnect,\n     * or may remain disconnected until explicitly told to connect.\n     */\n    Disconnected = 0,\n\n    /**\n     * The container is disconnected but actively trying to establish a new connection\n     * PLEASE NOTE that this numerical value falls out of the order you may expect for this state\n     */\n    EstablishingConnection = 3,\n\n    /**\n     * See {@link ConnectionState.CatchingUp}, which is the new name for this state.\n     * @deprecated - This state itself is not gone, just being renamed. Please use {@link ConnectionState.CatchingUp}.\n     */\n    Connecting = 1,\n\n    /**\n     * The container has an inbound connection only, and is catching up to the latest known state from the service.\n     */\n    CatchingUp = 1,\n\n    /**\n     * The container is fully connected and syncing\n     */\n    Connected = 2,\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n *\n * THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY\n */\n\nexport const pkgName = \"@fluidframework/container-loader\";\nexport const pkgVersion = \"1.2.3\";\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { assert } from \"./assert\";\nimport { Deferred } from \"./promises\";\n\nexport interface ITimer {\n    /**\n     * True if timer is currently running\n     */\n    readonly hasTimer: boolean;\n\n    /**\n     * Starts the timer\n     */\n    start(): void;\n\n    /**\n     * Cancels the timer if already running\n     */\n    clear(): void;\n}\n\ninterface ITimeout {\n    /**\n     * Tick that timeout was started.\n     */\n    startTick: number;\n\n    /**\n     * Timeout duration in ms.\n     */\n    duration: number;\n\n    /**\n     * Handler to execute when timeout ends.\n     */\n    handler: () => void;\n}\n\ninterface IRunningTimerState extends ITimeout {\n    /**\n     * JavaScript Timeout object.\n     */\n    timeout: ReturnType<typeof setTimeout>;\n\n    /**\n     * Intended duration in ms.\n     */\n    intendedDuration: number;\n\n    /**\n     * Intended restart timeout.\n     */\n    restart?: ITimeout;\n}\n\n/**\n * This class is a thin wrapper over setTimeout and clearTimeout which\n * makes it simpler to keep track of recurring timeouts with the same\n * or similar handlers and timeouts.\n */\nexport class Timer implements ITimer {\n    /**\n     * Returns true if the timer is running.\n     */\n    public get hasTimer() {\n        return !!this.runningState;\n    }\n\n    private runningState: IRunningTimerState | undefined;\n\n    constructor(\n        private readonly defaultTimeout: number,\n        private readonly defaultHandler: () => void,\n        private readonly getCurrentTick: () => number = () => Date.now()) { }\n\n    /**\n     * Calls setTimeout and tracks the resulting timeout.\n     * @param ms - overrides default timeout in ms\n     * @param handler - overrides default handler\n     */\n    public start(ms: number = this.defaultTimeout, handler: () => void = this.defaultHandler) {\n        this.startCore(ms, handler, ms);\n    }\n\n    /**\n     * Calls clearTimeout on the underlying timeout if running.\n     */\n    public clear() {\n        if (!this.runningState) {\n            return;\n        }\n        clearTimeout(this.runningState.timeout);\n        this.runningState = undefined;\n    }\n\n    /**\n     * Restarts the timer with the new handler and duration.\n     * If a new handler is passed, the original handler may\n     * never execute.\n     * This is a potentially more efficient way to clear and start\n     * a new timer.\n     * @param ms - overrides previous or default timeout in ms\n     * @param handler - overrides previous or default handler\n     */\n    public restart(ms?: number, handler?: () => void) {\n        if (!this.runningState) {\n            // If restart is called first, it behaves as a call to start\n            this.start(ms, handler);\n        } else {\n            const duration = ms ?? this.runningState.intendedDuration;\n            const handlerToUse = handler ?? this.runningState.restart?.handler ?? this.runningState.handler;\n            const remainingTime = this.calculateRemainingTime(this.runningState);\n\n            if (duration < remainingTime) {\n                // If remaining time exceeds restart duration, do a hard restart.\n                // The existing timeout time is too long.\n                this.start(duration, handlerToUse);\n            } else if (duration === remainingTime) {\n                // The existing timeout time is perfect, just update handler and data.\n                this.runningState.handler = handlerToUse;\n                this.runningState.restart = undefined;\n                this.runningState.intendedDuration = duration;\n            } else {\n                // If restart duration exceeds remaining time, set restart info.\n                // Existing timeout will start a new timeout for remaining time.\n                this.runningState.restart = {\n                    startTick: this.getCurrentTick(),\n                    duration,\n                    handler: handlerToUse,\n                };\n            }\n        }\n    }\n\n    private startCore(duration: number, handler: () => void, intendedDuration: number) {\n        this.clear();\n        this.runningState = {\n            startTick: this.getCurrentTick(),\n            duration,\n            intendedDuration,\n            handler,\n            timeout: setTimeout(() => this.handler(), duration),\n        };\n    }\n\n    private handler() {\n        assert(!!this.runningState, 0x00a /* \"Running timer missing handler\" */);\n        const restart = this.runningState.restart;\n        if (restart !== undefined) {\n            // Restart with remaining time\n            const remainingTime = this.calculateRemainingTime(restart);\n            this.startCore(remainingTime, () => restart.handler(), restart.duration);\n        } else {\n            // Run clear first, in case the handler decides to start again\n            const handler = this.runningState.handler;\n            this.clear();\n            handler();\n        }\n    }\n\n    private calculateRemainingTime(runningTimeout: ITimeout): number {\n        const elapsedTime = this.getCurrentTick() - runningTimeout.startTick;\n        return runningTimeout.duration - elapsedTime;\n    }\n}\n\nexport interface IPromiseTimerResult {\n    timerResult: \"timeout\" | \"cancel\";\n}\n\n/**\n * Timer which offers a promise that fulfills when the timer\n * completes.\n */\nexport interface IPromiseTimer extends ITimer {\n    /**\n     * Starts the timer and returns a promise that\n     * resolves when the timer times out or is canceled.\n     */\n    start(): Promise<IPromiseTimerResult>;\n}\n\n/**\n * This class is a wrapper over setTimeout and clearTimeout which\n * makes it simpler to keep track of recurring timeouts with the\n * same handlers and timeouts, while also providing a promise that\n * resolves when it times out.\n */\nexport class PromiseTimer implements IPromiseTimer {\n    private deferred?: Deferred<IPromiseTimerResult>;\n    private readonly timer: Timer;\n\n    public get hasTimer() {\n        return this.timer.hasTimer;\n    }\n\n    constructor(\n        defaultTimeout: number,\n        defaultHandler: () => void,\n    ) {\n        this.timer = new Timer(defaultTimeout, () => this.wrapHandler(defaultHandler));\n    }\n\n    public async start(ms?: number, handler?: () => void): Promise<IPromiseTimerResult> {\n        this.clear();\n        this.deferred = new Deferred<IPromiseTimerResult>();\n        this.timer.start(ms, handler ? () => this.wrapHandler(handler) : undefined);\n        return this.deferred.promise;\n    }\n\n    public clear() {\n        this.timer.clear();\n        if (this.deferred) {\n            this.deferred.resolve({ timerResult: \"cancel\" });\n            this.deferred = undefined;\n        }\n    }\n\n    protected wrapHandler(handler: () => void) {\n        handler();\n        assert(!!this.deferred, 0x00b /* \"Handler executed without deferred\" */);\n        this.deferred.resolve({ timerResult: \"timeout\" });\n        this.deferred = undefined;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITelemetryLogger, ITelemetryProperties } from \"@fluidframework/common-definitions\";\nimport { assert, Timer } from \"@fluidframework/common-utils\";\nimport { IConnectionDetails } from \"@fluidframework/container-definitions\";\nimport { ILocalSequencedClient, IProtocolHandler } from \"@fluidframework/protocol-base\";\nimport { ConnectionMode, IQuorumClients } from \"@fluidframework/protocol-definitions\";\nimport { PerformanceEvent } from \"@fluidframework/telemetry-utils\";\nimport { ConnectionState } from \"./connectionState\";\n\n/** Constructor parameter type for passing in dependencies needed by the ConnectionStateHandler */\nexport interface IConnectionStateHandlerInputs {\n    /** Provides access to the clients currently in the quorum */\n    quorumClients: () => IQuorumClients | undefined;\n    /** Log to telemetry any change in state, included to Connecting */\n    logConnectionStateChangeTelemetry:\n        (value: ConnectionState, oldState: ConnectionState, reason?: string | undefined) => void;\n    /** Whether to expect the client to join in write mode on next connection */\n    shouldClientJoinWrite: () => boolean;\n    /** (Optional) How long should we wait on our previous client's Leave op before transitioning to Connected again */\n    maxClientLeaveWaitTime: number | undefined;\n    /** Log an issue encountered while in the Connecting state. details will be logged as a JSON string */\n    logConnectionIssue: (eventName: string, details?: ITelemetryProperties) => void;\n    /** Callback whenever the ConnectionState changes between Disconnected and Connected */\n    connectionStateChanged: () => void;\n}\n\nconst JoinOpTimeoutMs = 45000;\n\n/**\n * In the lifetime of a container, the connection will likely disconnect and reconnect periodically.\n * This class ensures that any ops sent by this container instance on previous connection are either\n * sequenced or blocked by the server before emitting the new \"connected\" event and allowing runtime to resubmit ops.\n *\n * Each connection is assigned a clientId by the service, and the connection is book-ended by a Join and a Leave op\n * generated by the service. Due to the distributed nature of the ordering service, in the case of reconnect we cannot\n * make any assumptions about ordering of operations between the old and new connections - i.e. new Join op could\n * be sequenced before old Leave op (and some acks from pending ops that were in flight when we disconnected).\n *\n * The job of this class is to encapsulate the transition period during reconnect, which is identified by\n * ConnectionState.CatchingUp. Specifically, before moving to Connected state with the new clientId, it ensures that:\n * (A) We process the Leave op for the previous clientId. This allows us to properly handle any acks from in-flight ops\n *     that got sequenced with the old clientId (we'll recognize them as local ops). After the Leave op, any other\n *     pending ops can safely be submitted with the new clientId without fear of duplication in the sequenced op stream.\n * (B) We process the Join op for the new clientId (identified when the underlying connection was first established),\n *     indicating the service is ready to sequence ops sent with the new clientId.\n *\n * For (A) we give up waiting after some time (same timeout as server uses), and go ahead and transition to Connected.\n * For (B) we log telemetry if it takes too long, but still only transition to Connected when the Join op is processed\n * and we are added to the Quorum.\n */\nexport class ConnectionStateHandler {\n    private _connectionState = ConnectionState.Disconnected;\n    private _pendingClientId: string | undefined;\n    private readonly prevClientLeftTimer: Timer;\n    private readonly joinOpTimer: Timer;\n\n    private waitEvent: PerformanceEvent | undefined;\n\n    public get connectionState(): ConnectionState {\n        return this._connectionState;\n    }\n\n    public get connected(): boolean {\n        return this.connectionState === ConnectionState.Connected;\n    }\n\n    public get clientId(): string | undefined {\n        return this._clientId;\n    }\n\n    public get pendingClientId(): string | undefined {\n        return this._pendingClientId;\n    }\n\n    constructor(\n        private readonly handler: IConnectionStateHandlerInputs,\n        private readonly logger: ITelemetryLogger,\n        private _clientId?: string,\n    ) {\n        this.prevClientLeftTimer = new Timer(\n            // Default is 5 min for which we are going to wait for its own \"leave\" message. This is same as\n            // the max time on server after which leave op is sent.\n            this.handler.maxClientLeaveWaitTime ?? 300000,\n            () => {\n                assert(!this.connected,\n                    0x2ac /* \"Connected when timeout waiting for leave from previous session fired!\" */);\n                this.applyForConnectedState(\"timeout\");\n            },\n        );\n\n        // Based on recent data, it looks like majority of cases where we get stuck are due to really slow or\n        // timing out ops fetches. So attempt recovery infrequently. Also fetch uses 30 second timeout, so\n        // if retrying fixes the problem, we should not see these events.\n        this.joinOpTimer = new Timer(\n            JoinOpTimeoutMs,\n            () => {\n                // I've observed timer firing within couple ms from disconnect event, looks like\n                // queued timer callback is not cancelled if timer is cancelled while callback sits in the queue.\n                if (this.connectionState !== ConnectionState.CatchingUp) {\n                    return;\n                }\n                const quorumClients = this.handler.quorumClients();\n                const details = {\n                    quorumInitialized: quorumClients !== undefined,\n                    hasPendingClientId: this.pendingClientId !== undefined,\n                    inQuorum: quorumClients?.getMember(this.pendingClientId ?? \"\") !== undefined,\n                    waitingForLeaveOp: this.waitingForLeaveOp,\n                };\n                this.handler.logConnectionIssue(\"NoJoinOp\", details);\n            },\n        );\n    }\n\n    private startJoinOpTimer() {\n        assert(!this.joinOpTimer.hasTimer, 0x234 /* \"has joinOpTimer\" */);\n        this.joinOpTimer.start();\n    }\n\n    private stopJoinOpTimer() {\n        assert(this.joinOpTimer.hasTimer, 0x235 /* \"no joinOpTimer\" */);\n        this.joinOpTimer.clear();\n    }\n\n    private get waitingForLeaveOp() {\n        return this.prevClientLeftTimer.hasTimer;\n    }\n\n    public dispose() {\n        assert(!this.joinOpTimer.hasTimer, 0x2a5 /* \"join timer\" */);\n        this.prevClientLeftTimer.clear();\n    }\n\n    public containerSaved() {\n        // If we were waiting for moving to Connected state, then only apply for state change. Since the container\n        // is now saved and we don't have any ops to roundtrip, we can clear the timer and apply for connected state.\n        if (this.waitingForLeaveOp) {\n            this.prevClientLeftTimer.clear();\n            this.applyForConnectedState(\"containerSaved\");\n        }\n    }\n\n    private receivedAddMemberEvent(clientId: string) {\n        // This is the only one that requires the pending client ID\n        if (clientId === this.pendingClientId) {\n            if (this.joinOpTimer.hasTimer) {\n                this.stopJoinOpTimer();\n            } else {\n                // timer has already fired, meaning it took too long to get join on.\n                // Record how long it actually took to recover.\n                this.handler.logConnectionIssue(\"ReceivedJoinOp\");\n            }\n            // Start the event in case we are waiting for leave or timeout.\n            if (this.waitingForLeaveOp) {\n                this.waitEvent = PerformanceEvent.start(this.logger, {\n                    eventName: \"WaitBeforeClientLeave\",\n                    details: JSON.stringify({\n                        waitOnClientId: this._clientId,\n                        hadOutstandingOps: this.handler.shouldClientJoinWrite(),\n                    }),\n                });\n            }\n            this.applyForConnectedState(\"addMemberEvent\");\n        }\n    }\n\n    private applyForConnectedState(source: \"removeMemberEvent\" | \"addMemberEvent\" | \"timeout\" | \"containerSaved\") {\n        const quorumClients = this.handler.quorumClients();\n        assert(quorumClients !== undefined, 0x236 /* \"In all cases it should be already installed\" */);\n\n        assert(this.waitingForLeaveOp === false ||\n            (this.clientId !== undefined && quorumClients.getMember(this.clientId) !== undefined),\n            0x2e2 /* \"Must only wait for leave message when clientId in quorum\" */);\n\n        // Move to connected state only if we are in Connecting state, we have seen our join op\n        // and there is no timer running which means we are not waiting for previous client to leave\n        // or timeout has occurred while doing so.\n        if (this.pendingClientId !== this.clientId\n            && this.pendingClientId !== undefined\n            && quorumClients.getMember(this.pendingClientId) !== undefined\n            && !this.waitingForLeaveOp\n        ) {\n            this.waitEvent?.end({ source });\n            this.setConnectionState(ConnectionState.Connected);\n        } else {\n            // Adding this event temporarily so that we can get help debugging if something goes wrong.\n            this.logger.sendTelemetryEvent({\n                eventName: \"connectedStateRejected\",\n                category: source === \"timeout\" ? \"error\" : \"generic\",\n                details: JSON.stringify({\n                    source,\n                    pendingClientId: this.pendingClientId,\n                    clientId: this.clientId,\n                    waitingForLeaveOp: this.waitingForLeaveOp,\n                    inQuorum: quorumClients?.getMember(this.pendingClientId ?? \"\") !== undefined,\n                }),\n            });\n        }\n    }\n\n    private receivedRemoveMemberEvent(clientId: string) {\n        // If the client which has left was us, then finish the timer.\n        if (this.clientId === clientId) {\n            this.prevClientLeftTimer.clear();\n            this.applyForConnectedState(\"removeMemberEvent\");\n        }\n    }\n\n    public receivedDisconnectEvent(reason: string) {\n        if (this.joinOpTimer.hasTimer) {\n            this.stopJoinOpTimer();\n        }\n        this.setConnectionState(ConnectionState.Disconnected, reason);\n    }\n\n    /**\n     * The \"connect\" event indicates the connection to the Relay Service is live.\n     * However, some additional conditions must be met before we can fully transition to\n     * \"Connected\" state. This function handles that interim period, known as \"Connecting\" state.\n     * @param connectionMode - Read or Write connection\n     * @param details - Connection details returned from the ordering service\n     */\n    public receivedConnectEvent(\n        connectionMode: ConnectionMode,\n        details: IConnectionDetails,\n    ) {\n        const oldState = this._connectionState;\n        this._connectionState = ConnectionState.CatchingUp;\n\n        const writeConnection = connectionMode === \"write\";\n        assert(writeConnection || !this.handler.shouldClientJoinWrite(),\n            0x30a /* shouldClientJoinWrite should imply this is a writeConnection */);\n        assert(writeConnection || !this.waitingForLeaveOp,\n            0x2a6 /* \"waitingForLeaveOp should imply writeConnection (we need to be ready to flush pending ops)\" */);\n\n        // Note that this may be undefined since the connection is established proactively on load\n        // and the quorum may still be under initialization.\n        const quorumClients: IQuorumClients | undefined = this.handler.quorumClients();\n\n        // Stash the clientID to detect when transitioning from connecting (socket.io channel open) to connected\n        // (have received the join message for the client ID)\n        // This is especially important in the reconnect case. It's possible there could be outstanding\n        // ops sent by this client, so we should keep the old client id until we see our own client's\n        // join message. after we see the join message for our new connection with our new client id,\n        // we know there can no longer be outstanding ops that we sent with the previous client id.\n        this._pendingClientId = details.clientId;\n\n        // IMPORTANT: Report telemetry after we set _pendingClientId, but before transitioning to Connected state\n        this.handler.logConnectionStateChangeTelemetry(ConnectionState.CatchingUp, oldState);\n\n        // For write connections, this pending clientId could be in the quorum already (i.e. join op already processed).\n        // We are fetching ops from storage in parallel to connecting to Relay Service,\n        // and given async processes, it's possible that we have already processed our own join message before\n        // connection was fully established.\n        // If quorumClients itself is undefined, we expect it will process the join op after it's initialized.\n        const waitingForJoinOp = writeConnection && quorumClients?.getMember(this._pendingClientId) === undefined;\n\n        if (waitingForJoinOp) {\n            // Previous client left, and we are waiting for our own join op. When it is processed we'll join the quorum\n            // and attempt to transition to Connected state via receivedAddMemberEvent.\n            this.startJoinOpTimer();\n        } else if (!this.waitingForLeaveOp) {\n            // We're not waiting for Join or Leave op (if read-only connection those don't even apply),\n            // go ahead and declare the state to be Connected!\n            // If we are waiting for Leave op still, do nothing for now, we will transition to Connected later.\n            this.setConnectionState(ConnectionState.Connected);\n        }\n    }\n\n    private setConnectionState(value: ConnectionState.Disconnected, reason: string): void;\n    private setConnectionState(value: ConnectionState.Connected): void;\n    private setConnectionState(value: ConnectionState, reason?: string): void {\n        if (this.connectionState === value) {\n            // Already in the desired state - exit early\n            this.logger.sendErrorEvent({ eventName: \"setConnectionStateSame\", value });\n            return;\n        }\n\n        const oldState = this._connectionState;\n        this._connectionState = value;\n        const quorumClients = this.handler.quorumClients();\n        let client: ILocalSequencedClient | undefined;\n        if (this._clientId !== undefined) {\n            client = quorumClients?.getMember(this._clientId);\n        }\n        if (value === ConnectionState.Connected) {\n            assert(oldState === ConnectionState.CatchingUp,\n                0x1d8 /* \"Should only transition from Connecting state\" */);\n            // Mark our old client should have left in the quorum if it's still there\n            if (client !== undefined) {\n                client.shouldHaveLeft = true;\n            }\n            this._clientId = this.pendingClientId;\n        } else if (value === ConnectionState.Disconnected) {\n            // Important as we process our own joinSession message through delta request\n            this._pendingClientId = undefined;\n            // Only wait for \"leave\" message if the connected client exists in the quorum because only the write\n            // client will exist in the quorum and only for those clients we will receive \"removeMember\" event and\n            // the client has some unacked ops.\n            // Also server would not accept ops from read client. Also check if the timer is not already running as\n            // we could receive \"Disconnected\" event multiple times without getting connected and in that case we\n            // don't want to reset the timer as we still want to wait on original client which started this timer.\n            if (client !== undefined\n                && this.handler.shouldClientJoinWrite()\n                && this.prevClientLeftTimer.hasTimer === false\n            ) {\n                this.prevClientLeftTimer.restart();\n            } else {\n                // Adding this event temporarily so that we can get help debugging if something goes wrong.\n                this.logger.sendTelemetryEvent({\n                    eventName: \"noWaitOnDisconnected\",\n                    details: JSON.stringify({\n                        inQuorum: client !== undefined,\n                        waitingForLeaveOp: this.waitingForLeaveOp,\n                        hadOutstandingOps: this.handler.shouldClientJoinWrite(),\n                    }),\n                });\n            }\n        }\n\n        // Report transition before we propagate event across layers\n        this.handler.logConnectionStateChangeTelemetry(this._connectionState, oldState, reason);\n\n        // Propagate event across layers\n        this.handler.connectionStateChanged();\n    }\n\n    public initProtocol(protocol: IProtocolHandler) {\n        protocol.quorum.on(\"addMember\", (clientId, _details) => {\n            this.receivedAddMemberEvent(clientId);\n        });\n\n        protocol.quorum.on(\"removeMember\", (clientId) => {\n            this.receivedRemoveMemberEvent(clientId);\n        });\n\n        // if we have a clientId from a previous container we need to wait for its leave message\n        if (this.clientId !== undefined && protocol.quorum.getMember(this.clientId) !== undefined) {\n            this.prevClientLeftTimer.restart();\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { assert } from \"@fluidframework/common-utils\";\nimport { GenericError } from \"@fluidframework/container-utils\";\nimport {\n    IDocumentStorageService,\n    IDocumentStorageServicePolicies,\n    ISummaryContext,\n} from \"@fluidframework/driver-definitions\";\nimport {\n    ICreateBlobResponse,\n    ISnapshotTree,\n    ISummaryHandle,\n    ISummaryTree,\n    IVersion,\n} from \"@fluidframework/protocol-definitions\";\nimport { IDisposable, ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { runWithRetry } from \"@fluidframework/driver-utils\";\n\nexport class RetriableDocumentStorageService implements IDocumentStorageService, IDisposable {\n    private _disposed = false;\n    constructor(\n        private readonly internalStorageService: IDocumentStorageService,\n        private readonly logger: ITelemetryLogger,\n    ) {\n    }\n\n    public get policies(): IDocumentStorageServicePolicies | undefined {\n        return this.internalStorageService.policies;\n    }\n    public get disposed() { return this._disposed; }\n    public dispose() {\n        this._disposed = true;\n    }\n\n    public get repositoryUrl(): string {\n        return this.internalStorageService.repositoryUrl;\n    }\n\n    public async getSnapshotTree(version?: IVersion, scenarioName?: string): Promise<ISnapshotTree | null> {\n        return this.runWithRetry(\n            async () => this.internalStorageService.getSnapshotTree(version, scenarioName),\n            \"storage_getSnapshotTree\",\n        );\n    }\n\n    public async readBlob(id: string): Promise<ArrayBufferLike> {\n        return this.runWithRetry(\n            async () => this.internalStorageService.readBlob(id),\n            \"storage_readBlob\",\n        );\n    }\n\n    public async getVersions(versionId: string | null, count: number, scenarioName?: string): Promise<IVersion[]> {\n        return this.runWithRetry(\n            async () => this.internalStorageService.getVersions(versionId, count, scenarioName),\n            \"storage_getVersions\",\n        );\n    }\n\n    public async uploadSummaryWithContext(summary: ISummaryTree, context: ISummaryContext): Promise<string> {\n        // Not using retry loop here. Couple reasons:\n        // 1. If client lost connectivity, then retry loop will result in uploading stale summary\n        //    by stale summarizer after connectivity comes back. It will cause failures for this client and for\n        //    real (new) summarizer. This problem in particular should be solved in future by supplying abort handle\n        //    on all APIs and caller (ContainerRuntime.submitSummary) aborting call on loss of connectivity\n        // 2. Similar, if we get 429 with retryAfter = 10 minutes, it's likely not the right call to retry summary\n        //    upload in 10 minutes - it's better to keep processing ops and retry later. Though caller needs to take\n        //    retryAfter into account!\n        // But retry loop is required for creation flow (Container.attach)\n        assert((context.referenceSequenceNumber === 0) === (context.ackHandle === undefined),\n            0x251 /* \"creation summary has to have seq=0 && handle === undefined\" */);\n        if (context.referenceSequenceNumber !== 0) {\n            return this.internalStorageService.uploadSummaryWithContext(summary, context);\n        }\n\n        // Creation flow with attachment blobs - need to do retries!\n        return this.runWithRetry(\n            async () => this.internalStorageService.uploadSummaryWithContext(summary, context),\n            \"storage_uploadSummaryWithContext\",\n        );\n    }\n\n    public async downloadSummary(handle: ISummaryHandle): Promise<ISummaryTree> {\n        return this.runWithRetry(\n            async () => this.internalStorageService.downloadSummary(handle),\n            \"storage_downloadSummary\",\n        );\n    }\n\n    public async createBlob(file: ArrayBufferLike): Promise<ICreateBlobResponse> {\n        return this.runWithRetry(\n            async () => this.internalStorageService.createBlob(file),\n            \"storage_createBlob\",\n        );\n    }\n\n    private checkStorageDisposed() {\n        if (this._disposed) {\n            // pre-0.58 error message: storageServiceDisposedCannotRetry\n            throw new GenericError(\"Storage Service is disposed. Cannot retry\", { canRetry: false });\n        }\n        return undefined;\n    }\n\n    private async runWithRetry<T>(api: () => Promise<T>, callName: string): Promise<T> {\n        return runWithRetry(\n            api,\n            callName,\n            this.logger,\n            {\n                onRetry: () => this.checkStorageDisposed(),\n            },\n        );\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IDisposable } from \"@fluidframework/common-definitions\";\nimport {\n    IDocumentStorageService,\n    ISummaryContext,\n} from \"@fluidframework/driver-definitions\";\nimport { combineAppAndProtocolSummary } from \"@fluidframework/driver-utils\";\nimport {\n    ISummaryTree,\n} from \"@fluidframework/protocol-definitions\";\n\nexport class ProtocolTreeStorageService implements IDocumentStorageService, IDisposable {\n    constructor(\n        private readonly internalStorageService: IDocumentStorageService & IDisposable,\n        private readonly generateProtocolTree: () => ISummaryTree,\n    ) {\n    }\n    public get policies() {\n        return this.internalStorageService.policies;\n    }\n    public get repositoryUrl() {\n        return this.internalStorageService.repositoryUrl;\n    }\n    public get disposed() {\n        return this.internalStorageService.disposed;\n    }\n\n    getSnapshotTree = this.internalStorageService.getSnapshotTree.bind(this.internalStorageService);\n    getVersions = this.internalStorageService.getVersions.bind(this.internalStorageService);\n    createBlob = this.internalStorageService.createBlob.bind(this.internalStorageService);\n    readBlob = this.internalStorageService.readBlob.bind(this.internalStorageService);\n    downloadSummary = this.internalStorageService.downloadSummary.bind(this.internalStorageService);\n    dispose = this.internalStorageService.dispose.bind(this.internalStorageService);\n\n    async uploadSummaryWithContext(summary: ISummaryTree, context: ISummaryContext): Promise<string> {\n        return this.internalStorageService.uploadSummaryWithContext(\n            combineAppAndProtocolSummary(summary, this.generateProtocolTree()),\n            context,\n        );\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { ISnapshotTreeWithBlobContents } from \"@fluidframework/container-definitions\";\nimport {\n    IDocumentStorageService,\n    IDocumentStorageServicePolicies,\n    ISummaryContext,\n} from \"@fluidframework/driver-definitions\";\nimport {\n    ICreateBlobResponse,\n    ISnapshotTree,\n    ISummaryHandle,\n    ISummaryTree,\n    IVersion,\n} from \"@fluidframework/protocol-definitions\";\nimport { IDetachedBlobStorage } from \"./loader\";\n\n/**\n * This class wraps the actual storage and make sure no wrong apis are called according to\n * container attach state.\n */\nexport class ContainerStorageAdapter implements IDocumentStorageService {\n    private readonly blobContents: { [id: string]: ArrayBufferLike; } = {};\n    constructor(private readonly storageGetter: () => IDocumentStorageService) {}\n\n    public loadSnapshotForRehydratingContainer(snapshotTree: ISnapshotTreeWithBlobContents) {\n        this.getBlobContents(snapshotTree);\n    }\n\n    private getBlobContents(snapshotTree: ISnapshotTreeWithBlobContents) {\n        for (const [id, value] of Object.entries(snapshotTree.blobsContents)) {\n            this.blobContents[id] = value;\n        }\n        for (const [_, tree] of Object.entries(snapshotTree.trees)) {\n            this.getBlobContents(tree);\n        }\n    }\n\n    public get policies(): IDocumentStorageServicePolicies | undefined {\n        // back-compat 0.40 containerRuntime requests policies even in detached container if storage is present\n        // and storage is always present in >=0.41.\n        try {\n            return this.storageGetter().policies;\n        } catch (e) {}\n        return undefined;\n    }\n\n    public get repositoryUrl(): string {\n        return this.storageGetter().repositoryUrl;\n    }\n\n    public async getSnapshotTree(version?: IVersion, scenarioName?: string): Promise<ISnapshotTree | null> {\n        return this.storageGetter().getSnapshotTree(version, scenarioName);\n    }\n\n    public async readBlob(id: string): Promise<ArrayBufferLike> {\n        const blob = this.blobContents[id];\n        if (blob !== undefined) {\n            return blob;\n        }\n        return this.storageGetter().readBlob(id);\n    }\n\n    public async getVersions(versionId: string | null, count: number, scenarioName?: string): Promise<IVersion[]> {\n        return this.storageGetter().getVersions(versionId, count, scenarioName);\n    }\n\n    public async uploadSummaryWithContext(summary: ISummaryTree, context: ISummaryContext): Promise<string> {\n        return this.storageGetter().uploadSummaryWithContext(summary, context);\n    }\n\n    public async downloadSummary(handle: ISummaryHandle): Promise<ISummaryTree> {\n        return this.storageGetter().downloadSummary(handle);\n    }\n\n    public async createBlob(file: ArrayBufferLike): Promise<ICreateBlobResponse> {\n        return this.storageGetter().createBlob(file);\n    }\n}\n\n/**\n * Storage which only supports createBlob() and readBlob(). This is used with IDetachedBlobStorage to support\n * blobs in detached containers.\n */\nexport class BlobOnlyStorage implements IDocumentStorageService {\n    constructor(\n        private readonly blobStorage: IDetachedBlobStorage,\n        private readonly logger: ITelemetryLogger,\n    ) { }\n\n    public async createBlob(content: ArrayBufferLike): Promise<ICreateBlobResponse> {\n        return this.blobStorage.createBlob(content);\n    }\n\n    public async readBlob(blobId: string): Promise<ArrayBufferLike> {\n        return this.blobStorage.readBlob(blobId);\n    }\n\n    public get policies(): IDocumentStorageServicePolicies | undefined {\n        return this.notCalled();\n    }\n\n    public get repositoryUrl(): string {\n        return this.notCalled();\n    }\n\n    /* eslint-disable @typescript-eslint/unbound-method */\n    public getSnapshotTree: () => Promise<ISnapshotTree | null> = this.notCalled;\n    public getVersions: () => Promise<IVersion[]> = this.notCalled;\n    public write: () => Promise<IVersion> = this.notCalled;\n    public uploadSummaryWithContext: () => Promise<string> = this.notCalled;\n    public downloadSummary: () => Promise<ISummaryTree> = this.notCalled;\n    /* eslint-enable @typescript-eslint/unbound-method */\n\n    private notCalled(): never {\n        try {\n            // some browsers may not populate stack unless exception is thrown\n            throw new Error(\"BlobOnlyStorage not implemented method used\");\n        } catch (err) {\n            this.logger.sendErrorEvent({ eventName: \"BlobOnlyStorageWrongCall\" }, err);\n            throw err;\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { parse } from \"url\";\nimport { v4 as uuid } from \"uuid\";\nimport {\n    assert,\n    stringToBuffer,\n    Uint8ArrayToArrayBuffer,\n    unreachableCase,\n} from \"@fluidframework/common-utils\";\nimport { ISummaryTree, ISnapshotTree, SummaryType } from \"@fluidframework/protocol-definitions\";\nimport { LoggingError } from \"@fluidframework/telemetry-utils\";\n\n// This is used when we rehydrate a container from the snapshot. Here we put the blob contents\n// in separate property: blobContents.\nexport interface ISnapshotTreeWithBlobContents extends ISnapshotTree {\n    blobsContents: { [path: string]: ArrayBufferLike; };\n    trees: { [path: string]: ISnapshotTreeWithBlobContents; };\n}\n\nexport interface IParsedUrl {\n    id: string;\n    path: string;\n    query: string;\n    /**\n     * Null means do not use snapshots, undefined means load latest snapshot\n     * otherwise it's version ID passed to IDocumentStorageService.getVersions() to figure out what snapshot to use.\n     * If needed, can add undefined which is treated by Container.load() as load latest snapshot.\n     */\n    version: string | null | undefined;\n}\n\nexport function parseUrl(url: string): IParsedUrl | undefined {\n    const parsed = parse(url, true);\n    if (typeof parsed.pathname !== \"string\") {\n        throw new LoggingError(\"Failed to parse pathname\");\n    }\n    const query = parsed.search ?? \"\";\n    const regex = /^\\/([^/]*\\/[^/]*)(\\/?.*)$/;\n    const match = regex.exec(parsed.pathname);\n    return (match?.length === 3)\n        ? { id: match[1], path: match[2], query, version: parsed.query.version as string }\n        : undefined;\n}\n\n/**\n * Converts summary tree (for upload) to snapshot tree (for download).\n * Summary tree blobs contain contents, but snapshot tree blobs normally\n * contain IDs pointing to storage. This will create 2 blob entries in the\n * snapshot tree for each blob in the summary tree. One will be the regular\n * path pointing to a uniquely generated ID. Then there will be another\n * entry with the path as that uniquely generated ID, and value as the\n * blob contents as a base-64 string.\n * @param summary - summary to convert\n */\nfunction convertSummaryToSnapshotWithEmbeddedBlobContents(\n    summary: ISummaryTree,\n): ISnapshotTreeWithBlobContents {\n    const treeNode: ISnapshotTreeWithBlobContents = {\n        blobs: {},\n        blobsContents: {},\n        trees: {},\n        id: uuid(),\n        unreferenced: summary.unreferenced,\n    };\n    const keys = Object.keys(summary.tree);\n    for (const key of keys) {\n        const summaryObject = summary.tree[key];\n\n        switch (summaryObject.type) {\n            case SummaryType.Tree: {\n                treeNode.trees[key] = convertSummaryToSnapshotWithEmbeddedBlobContents(summaryObject);\n                break;\n            }\n            case SummaryType.Attachment:\n                treeNode.blobs[key] = summaryObject.id;\n                break;\n            case SummaryType.Blob: {\n                const blobId = uuid();\n                treeNode.blobs[key] = blobId;\n                const contentBuffer = typeof summaryObject.content === \"string\" ?\n                    stringToBuffer(summaryObject.content, \"utf8\") : Uint8ArrayToArrayBuffer(summaryObject.content);\n                treeNode.blobsContents[blobId] = contentBuffer;\n                break;\n            }\n            case SummaryType.Handle:\n                throw new LoggingError(\"No handles should be there in summary in detached container!!\");\n                break;\n            default: {\n                unreachableCase(summaryObject, `Unknown tree type ${(summaryObject as any).type}`);\n            }\n        }\n    }\n    return treeNode;\n}\n\n/**\n * Combine and convert protocol and app summary tree to format which is readable by container while rehydrating.\n * @param protocolSummaryTree - Protocol Summary Tree\n * @param appSummaryTree - App Summary Tree\n */\nexport function convertProtocolAndAppSummaryToSnapshotTree(\n    protocolSummaryTree: ISummaryTree,\n    appSummaryTree: ISummaryTree,\n): ISnapshotTreeWithBlobContents {\n    // Shallow copy is fine, since we are doing a deep clone below.\n    const combinedSummary: ISummaryTree = {\n        type: SummaryType.Tree,\n        tree: { ...appSummaryTree.tree },\n    };\n\n    combinedSummary.tree[\".protocol\"] = protocolSummaryTree;\n    const snapshotTreeWithBlobContents =\n        convertSummaryToSnapshotWithEmbeddedBlobContents(combinedSummary);\n    return snapshotTreeWithBlobContents;\n}\n\n// This function converts the snapshot taken in detached container(by serialize api) to snapshotTree with which\n// a detached container can be rehydrated.\nexport const getSnapshotTreeFromSerializedContainer = (detachedContainerSnapshot: ISummaryTree) => {\n    const protocolSummaryTree = detachedContainerSnapshot.tree[\".protocol\"] as ISummaryTree;\n    const appSummaryTree = detachedContainerSnapshot.tree[\".app\"] as ISummaryTree;\n    assert(protocolSummaryTree !== undefined && appSummaryTree !== undefined,\n        0x1e0 /* \"Protocol and App summary trees should be present\" */);\n    const snapshotTreeWithBlobContents = convertProtocolAndAppSummaryToSnapshotTree(\n        protocolSummaryTree,\n        appSummaryTree,\n    );\n    return snapshotTreeWithBlobContents;\n};\n\nexport function getProtocolSnapshotTree(snapshot: ISnapshotTree): ISnapshotTree {\n    return \".protocol\" in snapshot.trees ? snapshot.trees[\".protocol\"] : snapshot;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Convert Uint8Array array to ArrayBuffer\n * @param array - array to convert to ArrayBuffer\n */\nexport function Uint8ArrayToArrayBuffer(array: Uint8Array): ArrayBuffer {\n    if (array.byteOffset === 0 && array.byteLength === array.buffer.byteLength) {\n        return array.buffer;\n    }\n    return array.buffer.slice(array.byteOffset, array.byteOffset + array.byteLength);\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IDisposable } from \"@fluidframework/common-definitions\";\n\nexport function doIfNotDisposed<T>(\n    disposable: IDisposable,\n    f: (...args: any[]) => T,\n): (...args: any[]) => T {\n    return (...args: any[]) => {\n        if (disposable.disposed) {\n            throw new Error(\"Already disposed\");\n        } else {\n            return f(...args);\n        }\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { assert, EventForwarder, doIfNotDisposed } from \"@fluidframework/common-utils\";\nimport { IFluidCodeDetails } from \"@fluidframework/core-interfaces\";\nimport {\n    ICommittedProposal,\n    IQuorum,\n    IQuorumEvents,\n    ISequencedClient,\n} from \"@fluidframework/protocol-definitions\";\n\n/**\n * Proxies Quorum events.\n */\nexport class QuorumProxy extends EventForwarder<IQuorumEvents> implements IQuorum {\n    public readonly propose: (key: string, value: any) => Promise<void>;\n    public readonly has: (key: string) => boolean;\n    public readonly get: (key: string) => any;\n    public readonly getMembers: () => Map<string, ISequencedClient>;\n    public readonly getMember: (clientId: string) => ISequencedClient | undefined;\n\n    constructor(quorum: IQuorum) {\n        super(quorum);\n\n        // This is heavily used object, increase limit at which Node prints warnings.\n        super.setMaxListeners(50);\n\n        this.propose = doIfNotDisposed(this, quorum.propose.bind(quorum));\n        this.has = doIfNotDisposed(this, quorum.has.bind(quorum));\n        this.get = doIfNotDisposed(this, quorum.get.bind(quorum));\n        this.getMembers = doIfNotDisposed(this, quorum.getMembers.bind(quorum));\n        this.getMember = doIfNotDisposed(this, quorum.getMember.bind(quorum));\n    }\n}\n\nexport function getCodeDetailsFromQuorumValues(\n    quorumValues: [string, ICommittedProposal][],\n): IFluidCodeDetails {\n    const qValuesMap = new Map(quorumValues);\n    const proposal = qValuesMap.get(\"code\");\n    assert(proposal !== undefined, 0x2dc /* \"Cannot find code proposal\" */);\n    return proposal?.value as IFluidCodeDetails;\n}\n\nexport function initQuorumValuesFromCodeDetails(\n    source: IFluidCodeDetails,\n): [string, ICommittedProposal][] {\n    // Seed the base quorum to be an empty list with a code quorum set\n    const committedCodeProposal: ICommittedProposal = {\n        key: \"code\",\n        value: source,\n        approvalSequenceNumber: 0,\n        commitSequenceNumber: 0,\n        sequenceNumber: 0,\n    };\n    return [[\"code\", committedCodeProposal]];\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { assert, Timer } from \"@fluidframework/common-utils\";\nimport { ISequencedDocumentMessage, MessageType } from \"@fluidframework/protocol-definitions\";\nimport { isRuntimeMessage } from \"@fluidframework/driver-utils\";\n\nconst defaultNoopTimeFrequency = 2000;\nconst defaultNoopCountFrequency = 50;\n\n// Here are key considerations when deciding conditions for when to send non-immediate noops:\n// 1. Sending them too often results in increase in file size and bandwidth, as well as catch up performance\n// 2. Sending too infrequently ensures that collab window is large, and as result Sequence DDS would have\n//    large catchUp blobs - see Issue #6364\n// 3. Similarly, processes that rely on \"core\" snapshot (and can't parse trailing ops, including above), like search\n//    parser in SPO, will result in non-accurate results due to presence of catch up blobs.\n// 4. Ordering service used 250ms timeout to coalesce non-immediate noops. It was changed to 2000 ms to allow more\n//    aggressive noop sending from client side.\n// 5. Number of ops sent by all clients is proportional to number of \"write\" clients (every client sends noops),\n//    but number of sequenced noops is a function of time (one op per 2 seconds at most).\n//    We should consider impact to both outbound traffic (might be huge, depends on number of clients) and file size.\n// Please also see Issue #5629 for more discussions.\n//\n// With that, the current algorithm is as follows:\n// 1. Sent noop 2000 ms of receiving an op if no ops were sent by this client within this timeframe.\n//    This will ensure that MSN moves forward with reasonable speed. If that results in too many sequenced noops,\n//    server timeout of 2000ms should be reconsidered to be increased.\n// 2. If there are more than 50 ops received without sending any ops, send noop to keep collab window small.\n//    Note that system ops (including noops themselves) are excluded, so it's 1 noop per 50 real ops.\nexport class CollabWindowTracker {\n    private opsCountSinceNoop = 0;\n    private readonly timer: Timer | undefined;\n\n    constructor(\n        private readonly submit: (type: MessageType, contents: any) => void,\n        NoopTimeFrequency: number = defaultNoopTimeFrequency,\n        private readonly NoopCountFrequency: number = defaultNoopCountFrequency,\n    ) {\n        if (NoopTimeFrequency !== Infinity) {\n            this.timer = new Timer(NoopTimeFrequency, () => {\n                // Can get here due to this.stopSequenceNumberUpdate() not resetting timer.\n                // Also timer callback can fire even after timer cancellation if it was queued before cancellation.\n                if (this.opsCountSinceNoop !== 0) {\n                    this.submitNoop(false /* immediate */);\n                }\n            });\n        }\n    }\n\n    /**\n     * Schedules as ack to the server to update the reference sequence number\n     */\n    public scheduleSequenceNumberUpdate(message: ISequencedDocumentMessage, immediateNoOp: boolean): void {\n        // While processing a message, an immediate no-op can be requested.\n        // i.e. to expedite approve or commit phase of quorum.\n        if (immediateNoOp) {\n            this.submitNoop(true /* immediate */);\n            return;\n        }\n\n        // We don't acknowledge no-ops to avoid acknowledgement cycles (i.e. ack the MSN\n        // update, which updates the MSN, then ack the update, etc...).\n        // Intent here is for runtime (and DDSes) not to keep too much tracking state / memory\n        // due to runtime ops from other clients.\n        if (!isRuntimeMessage(message)) {\n            return;\n        }\n\n        this.opsCountSinceNoop++;\n        if (this.opsCountSinceNoop >= this.NoopCountFrequency) {\n            this.submitNoop(false /* immediate */);\n            return;\n        }\n\n        if (this.timer !== undefined) {\n            if (this.opsCountSinceNoop === 1) {\n                this.timer.restart();\n            }\n\n            assert(this.timer.hasTimer, 0x242 /* \"has timer\" */);\n        }\n    }\n\n    private submitNoop(immediate: boolean) {\n        // Anything other than null is immediate noop\n        this.submit(MessageType.NoOp, immediate ? \"\" : null);\n        assert(this.opsCountSinceNoop === 0,\n            0x243 /* \"stopSequenceNumberUpdate should be called as result of sending any op!\" */);\n    }\n\n    public stopSequenceNumberUpdate(): void {\n        this.opsCountSinceNoop = 0;\n        // Ideally, we cancel timer here. But that will result in too often set/reset cycle if this client\n        // keeps sending ops. In most cases it's actually better to let it expire (at most - 4 times per second)\n        // for nothing, then have a ton of set/reset cycles.\n        // Note that Timer.restart() is smart and will not change timer expiration if we keep extending timer\n        // expiration - it will restart the timer instead when it fires with adjusted expiration.\n        // this.timer.clear();\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport enum ScopeType {\n    DocRead = \"doc:read\",\n    DocWrite = \"doc:write\",\n    SummaryWrite = \"summary:write\",\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITelemetryErrorEvent, ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { isOnline, OnlineStatus, canRetryOnError } from \"./network\";\n\nexport function logNetworkFailure(logger: ITelemetryLogger, event: ITelemetryErrorEvent, error?: any) {\n    const newEvent = { ...event };\n\n    const errorOnlineProp = error.online;\n    newEvent.online = typeof errorOnlineProp === \"string\"\n        ? errorOnlineProp\n        : OnlineStatus[isOnline()];\n\n    if (typeof navigator === \"object\" && navigator !== null) {\n        const nav = navigator as any;\n        const connection = nav.connection ?? nav.mozConnection ?? nav.webkitConnection;\n        if (connection !== null && typeof connection === \"object\") {\n            newEvent.connectionType = connection.type;\n        }\n    }\n\n    // non-retryable errors are fatal and should be logged as errors\n    newEvent.category = canRetryOnError(error) ? \"generic\" : \"error\";\n    logger.sendTelemetryEvent(newEvent, error);\n}\n\n/**\n * Wait for browser to get to connected state.\n * If connected, waits minimum of minDelay anyway (between network retries)\n * If disconnected, polls every 30 seconds anyway, to make sure we are not getting stuck because of wrong signal\n * Note that browsers will have false positives (like having Hyper-V adapter on machine,\n * or machine connected to router that is not connected to internet)\n * But there should be no false negatives.\n * The only exception - Opera returns false when user enters \"Work Offline\" mode, regardless of actual connectivity.\n */\n// eslint-disable-next-line @typescript-eslint/promise-function-async\nexport function waitForConnectedState(minDelay: number): Promise<void> {\n    // Use this frequency to poll even when we are offline and able to setup online/offline listener\n    // This is mostly safety net\n    const offlinePollFrequency = 30000;\n\n    return new Promise((resolve) => {\n        let listener: () => void = resolve;\n        let delay = minDelay;\n        if (isOnline() === OnlineStatus.Offline) {\n            if (window?.addEventListener !== undefined) {\n                listener = () => {\n                    resolve();\n                    window.removeEventListener(\"online\", listener);\n                };\n                window.addEventListener(\"online\", listener, false);\n                delay = Math.max(minDelay, offlinePollFrequency);\n            }\n        }\n        setTimeout(listener, delay);\n    });\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { default as AbortController } from \"abort-controller\";\nimport {\n    IDisposable,\n    ITelemetryLogger,\n    ITelemetryProperties,\n} from \"@fluidframework/common-definitions\";\nimport { assert, performance, TypedEventEmitter } from \"@fluidframework/common-utils\";\nimport {\n    IDeltaQueue,\n    ReadOnlyInfo,\n    IConnectionDetails,\n    ICriticalContainerError,\n} from \"@fluidframework/container-definitions\";\nimport { GenericError, UsageError } from \"@fluidframework/container-utils\";\nimport {\n    IDocumentService,\n    IDocumentDeltaConnection,\n    IDocumentDeltaConnectionEvents,\n} from \"@fluidframework/driver-definitions\";\nimport {\n    canRetryOnError,\n    createWriteError,\n    createGenericNetworkError,\n    getRetryDelayFromError,\n    IAnyDriverError,\n    waitForConnectedState,\n    DeltaStreamConnectionForbiddenError,\n    logNetworkFailure,\n    // isRuntimeMessage,\n} from \"@fluidframework/driver-utils\";\nimport {\n    ConnectionMode,\n    IClient,\n    IClientConfiguration,\n    IClientDetails,\n    IDocumentMessage,\n    INack,\n    INackContent,\n    ISequencedDocumentMessage,\n    ISignalClient,\n    ISignalMessage,\n    ITokenClaims,\n    MessageType,\n    ScopeType,\n    ISequencedDocumentSystemMessage,\n} from \"@fluidframework/protocol-definitions\";\nimport {\n    TelemetryLogger,\n    normalizeError,\n} from \"@fluidframework/telemetry-utils\";\nimport {\n    ReconnectMode,\n    IConnectionManager,\n    IConnectionManagerFactoryArgs,\n} from \"./contracts\";\nimport { DeltaQueue } from \"./deltaQueue\";\n\nconst MaxReconnectDelayInMs = 8000;\nconst InitialReconnectDelayInMs = 1000;\nconst DefaultChunkSize = 16 * 1024;\n\nconst fatalConnectErrorProp = { fatalConnectError: true };\n\nfunction getNackReconnectInfo(nackContent: INackContent) {\n    const message = `Nack (${nackContent.type}): ${nackContent.message}`;\n    const canRetry = nackContent.code !== 403;\n    const retryAfterMs = nackContent.retryAfter !== undefined ? nackContent.retryAfter * 1000 : undefined;\n    return createGenericNetworkError(\n        message,\n        { canRetry, retryAfterMs },\n        { statusCode: nackContent.code, driverVersion: undefined });\n}\n\n/**\n * Implementation of IDocumentDeltaConnection that does not support submitting\n * or receiving ops. Used in storage-only mode.\n */\nclass NoDeltaStream\n    extends TypedEventEmitter<IDocumentDeltaConnectionEvents>\n    implements IDocumentDeltaConnection, IDisposable {\n    clientId: string = \"storage-only client\";\n    claims: ITokenClaims = {\n        scopes: [ScopeType.DocRead],\n    } as any;\n    mode: ConnectionMode = \"read\";\n    existing: boolean = true;\n    maxMessageSize: number = 0;\n    version: string = \"\";\n    initialMessages: ISequencedDocumentMessage[] = [];\n    initialSignals: ISignalMessage[] = [];\n    initialClients: ISignalClient[] = [];\n    serviceConfiguration: IClientConfiguration = {\n        maxMessageSize: 0,\n        blockSize: 0,\n        summary: undefined as any,\n    };\n    checkpointSequenceNumber?: number | undefined = undefined;\n    submit(messages: IDocumentMessage[]): void {\n        this.emit(\"nack\", this.clientId, messages.map((operation) => {\n            return {\n                operation,\n                content: { message: \"Cannot submit with storage-only connection\", code: 403 },\n            };\n        }));\n    }\n    submitSignal(message: any): void {\n        this.emit(\"nack\", this.clientId, {\n            operation: message,\n            content: { message: \"Cannot submit signal with storage-only connection\", code: 403 },\n        });\n    }\n\n    private _disposed = false;\n    public get disposed() { return this._disposed; }\n    public dispose() { this._disposed = true; }\n}\n\n/**\n * Interface to track the current in-progress connection attempt.\n */\ninterface IPendingConnection {\n    /**\n     * Used to cancel an in-progress connection attempt.\n     */\n    abort(): void;\n\n    /**\n     * Desired ConnectionMode of this in-progress connection attempt.\n     */\n    connectionMode: ConnectionMode;\n}\n\n/**\n * Implementation of IConnectionManager, used by Container class\n * Implements constant connectivity to relay service, by reconnecting in case of loast connection or error.\n * Exposes various controls to influecen this process, including manual reconnects, forced read-only mode, etc.\n */\nexport class ConnectionManager implements IConnectionManager {\n    /** Connection mode used when reconnecting on error or disconnect. */\n    private readonly defaultReconnectionMode: ConnectionMode;\n\n    /**\n     * Tracks the current in-progress connection attempt. Undefined if there is none.\n     * Note: Once the connection attempt fires and the code becomes asynchronous, its possible that a new connection\n     * attempt was fired and this.pendingConnection was overwritten to reflect the new attempt.\n     */\n    private pendingConnection: IPendingConnection | undefined;\n    private connection: IDocumentDeltaConnection | undefined;\n\n    /** file ACL - whether user has only read-only access to a file */\n    private _readonlyPermissions: boolean | undefined;\n\n    /** tracks host requiring read-only mode. */\n    private _forceReadonly = false;\n\n    /**\n     * Controls whether the DeltaManager will automatically reconnect to the delta stream after receiving a disconnect.\n     */\n    private _reconnectMode: ReconnectMode;\n\n    /** True if there is pending (async) reconnection from \"read\" to \"write\" */\n    private pendingReconnect = false;\n\n    private clientSequenceNumber = 0;\n    private clientSequenceNumberObserved = 0;\n    /** Counts the number of noops sent by the client which may not be acked. */\n    private trailingNoopCount = 0;\n\n    /** track clientId used last time when we sent any ops */\n    private lastSubmittedClientId: string | undefined;\n\n    private connectFirstConnection = true;\n\n    private _connectionVerboseProps: Record<string, string | number> = {};\n\n    private _connectionProps: ITelemetryProperties = {};\n\n    private closed = false;\n\n    private readonly _outbound: DeltaQueue<IDocumentMessage[]>;\n\n    public get connectionVerboseProps() { return this._connectionVerboseProps; }\n\n    public readonly clientDetails: IClientDetails;\n\n    /**\n     * The current connection mode, initially read.\n     */\n    public get connectionMode(): ConnectionMode {\n        return this.connection?.mode ?? \"read\";\n    }\n\n    public get connected() { return this.connection !== undefined; }\n\n    public get clientId() { return this.connection?.clientId; }\n    /**\n     * Automatic reconnecting enabled or disabled.\n     * If set to Never, then reconnecting will never be allowed.\n     */\n     public get reconnectMode(): ReconnectMode {\n        return this._reconnectMode;\n    }\n\n    public get maxMessageSize(): number {\n        return this.connection?.serviceConfiguration?.maxMessageSize\n            ?? DefaultChunkSize;\n    }\n\n    public get version(): string {\n        if (this.connection === undefined) {\n            throw new Error(\"Cannot check version without a connection\");\n        }\n        return this.connection.version;\n    }\n\n    public get serviceConfiguration(): IClientConfiguration | undefined {\n        return this.connection?.serviceConfiguration;\n    }\n\n    public get scopes(): string[] | undefined {\n        return this.connection?.claims.scopes;\n    }\n\n    public get outbound(): IDeltaQueue<IDocumentMessage[]> {\n        return this._outbound;\n    }\n\n    /**\n     * Returns set of props that can be logged in telemetry that provide some insights / statistics\n     * about current or last connection (if there is no connection at the moment)\n    */\n     public get connectionProps(): ITelemetryProperties {\n        if (this.connection !== undefined) {\n            return this._connectionProps;\n        } else {\n            return {\n                ...this._connectionProps,\n                // Report how many ops this client sent in last disconnected session\n                sentOps: this.clientSequenceNumber,\n            };\n        }\n    }\n\n    public shouldJoinWrite(): boolean {\n        // We don't have to wait for ack for topmost NoOps. So subtract those.\n        return this.clientSequenceNumberObserved < (this.clientSequenceNumber - this.trailingNoopCount);\n    }\n\n    /**\n     * Tells if container is in read-only mode.\n     * Data stores should listen for \"readonly\" notifications and disallow user\n     * making changes to data stores.\n     * Readonly state can be because of no storage write permission,\n     * or due to host forcing readonly mode for container.\n     * It is undefined if we have not yet established websocket connection\n     * and do not know if user has write access to a file.\n     */\n    private get readonly() {\n        if (this._forceReadonly) {\n            return true;\n        }\n        return this._readonlyPermissions;\n    }\n\n    public get readOnlyInfo(): ReadOnlyInfo {\n        const storageOnly = this.connection !== undefined && this.connection instanceof NoDeltaStream;\n        if (storageOnly || this._forceReadonly || this._readonlyPermissions === true) {\n            return {\n                readonly: true,\n                forced: this._forceReadonly,\n                permissions: this._readonlyPermissions,\n                storageOnly,\n            };\n        }\n\n        return { readonly: this._readonlyPermissions };\n    }\n\n    private static detailsFromConnection(connection: IDocumentDeltaConnection): IConnectionDetails {\n        return {\n            claims: connection.claims,\n            clientId: connection.clientId,\n            existing: connection.existing,\n            checkpointSequenceNumber: connection.checkpointSequenceNumber,\n            get initialClients() { return connection.initialClients; },\n            mode: connection.mode,\n            serviceConfiguration: connection.serviceConfiguration,\n            version: connection.version,\n        };\n    }\n\n    constructor(\n        private readonly serviceProvider: () => IDocumentService | undefined,\n        private client: IClient,\n        reconnectAllowed: boolean,\n        private readonly logger: ITelemetryLogger,\n        private readonly props: IConnectionManagerFactoryArgs,\n    ) {\n        this.clientDetails = this.client.details;\n        this.defaultReconnectionMode = this.client.mode;\n        this._reconnectMode = reconnectAllowed ? ReconnectMode.Enabled : ReconnectMode.Never;\n\n        // Outbound message queue. The outbound queue is represented as a queue of an array of ops. Ops contained\n        // within an array *must* fit within the maxMessageSize and are guaranteed to be ordered sequentially.\n        this._outbound = new DeltaQueue<IDocumentMessage[]>(\n            (messages) => {\n                if (this.connection === undefined) {\n                    throw new Error(\"Attempted to submit an outbound message without connection\");\n                }\n                this.connection.submit(messages);\n            });\n\n        this._outbound.on(\"error\", (error) => {\n            this.props.closeHandler(normalizeError(error));\n        });\n    }\n\n    public dispose(error?: ICriticalContainerError) {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n\n        this.pendingConnection = undefined;\n\n        // Ensure that things like triggerConnect() will short circuit\n        this._reconnectMode = ReconnectMode.Never;\n\n        this._outbound.clear();\n\n        const disconnectReason = error !== undefined\n            ? `Closing DeltaManager (${error.message})`\n            : \"Closing DeltaManager\";\n\n        // This raises \"disconnect\" event if we have active connection.\n        this.disconnectFromDeltaStream(disconnectReason);\n\n        // Notify everyone we are in read-only state.\n        // Useful for data stores in case we hit some critical error,\n        // to switch to a mode where user edits are not accepted\n        this.set_readonlyPermissions(true);\n    }\n\n    /**\n     * Enables or disables automatic reconnecting.\n     * Will throw an error if reconnectMode set to Never.\n    */\n    public setAutoReconnect(mode: ReconnectMode): void {\n        assert(mode !== ReconnectMode.Never && this._reconnectMode !== ReconnectMode.Never,\n            0x278 /* \"API is not supported for non-connecting or closed container\" */);\n\n        this._reconnectMode = mode;\n\n        if (mode !== ReconnectMode.Enabled) {\n            // immediately disconnect - do not rely on service eventually dropping connection.\n            this.disconnectFromDeltaStream(\"setAutoReconnect\");\n        }\n    }\n\n    /**\n     * Sends signal to runtime (and data stores) to be read-only.\n     * Hosts may have read only views, indicating to data stores that no edits are allowed.\n     * This is independent from this._readonlyPermissions (permissions) and this.connectionMode\n     * (server can return \"write\" mode even when asked for \"read\")\n     * Leveraging same \"readonly\" event as runtime & data stores should behave the same in such case\n     * as in read-only permissions.\n     * But this.active can be used by some DDSes to figure out if ops can be sent\n     * (for example, read-only view still participates in code proposals / upgrades decisions)\n     *\n     * Forcing Readonly does not prevent DDS from generating ops. It is up to user code to honour\n     * the readonly flag. If ops are generated, they will accumulate locally and not be sent. If\n     * there are pending in the outbound queue, it will stop sending until force readonly is\n     * cleared.\n     *\n     * @param readonly - set or clear force readonly.\n     */\n     public forceReadonly(readonly: boolean) {\n        if (readonly !== this._forceReadonly) {\n            this.logger.sendTelemetryEvent({\n                eventName: \"ForceReadOnly\",\n                value: readonly,\n            });\n        }\n        const oldValue = this.readonly;\n        this._forceReadonly = readonly;\n\n        if (oldValue !== this.readonly) {\n            if (this._reconnectMode === ReconnectMode.Never) {\n                throw new UsageError(\"API is not supported for non-connecting or closed container\");\n            }\n            let reconnect = false;\n            if (this.readonly === true) {\n                // If we switch to readonly while connected, we should disconnect first\n                // See comment in the \"readonly\" event handler to deltaManager set up by\n                // the ContainerRuntime constructor\n\n                if (this.shouldJoinWrite()) {\n                    // If we have pending changes, then we will never send them - it smells like\n                    // host logic error.\n                    this.logger.sendErrorEvent({ eventName: \"ForceReadonlyPendingChanged\" });\n                }\n\n                reconnect = this.disconnectFromDeltaStream(\"Force readonly\");\n            }\n            this.props.readonlyChangeHandler(this.readonly);\n            if (reconnect) {\n                // reconnect if we disconnected from before.\n                this.triggerConnect(\"read\");\n            }\n        }\n    }\n\n    private set_readonlyPermissions(readonly: boolean) {\n        const oldValue = this.readonly;\n        this._readonlyPermissions = readonly;\n        if (oldValue !== this.readonly) {\n            this.props.readonlyChangeHandler(this.readonly);\n        }\n    }\n\n    public connect(connectionMode?: ConnectionMode) {\n        this.connectCore(connectionMode).catch((error) => {\n            const normalizedError = normalizeError(error, { props: fatalConnectErrorProp });\n            this.props.closeHandler(normalizedError);\n        });\n    }\n\n    private async connectCore(connectionMode?: ConnectionMode): Promise<void> {\n        assert(!this.closed, 0x26a /* \"not closed\" */);\n\n        if (this.connection !== undefined) {\n            return;  // Connection attempt already completed successfully\n        }\n\n        let pendingConnectionMode;\n        if (this.pendingConnection !== undefined) {\n            pendingConnectionMode = this.pendingConnection.connectionMode;\n            this.cancelConnection();  // Throw out in-progress connection attempt in favor of new attempt\n            assert(this.pendingConnection === undefined, 0x344 /* this.pendingConnection should be undefined */);\n        }\n        // If there is no specified ConnectionMode, try the previous mode, if there is no previous mode use default\n        let requestedMode = connectionMode ?? pendingConnectionMode ?? this.defaultReconnectionMode;\n\n        // if we have any non-acked ops from last connection, reconnect as \"write\".\n        // without that we would connect in view-only mode, which will result in immediate\n        // firing of \"connected\" event from Container and switch of current clientId (as tracked\n        // by all DDSes). This will make it impossible to figure out if ops actually made it through,\n        // so DDSes will immediately resubmit all pending ops, and some of them will be duplicates, corrupting document\n        if (this.shouldJoinWrite()) {\n            requestedMode = \"write\";\n        }\n\n        const docService = this.serviceProvider();\n        assert(docService !== undefined, 0x2a7 /* \"Container is not attached\" */);\n\n        let connection: IDocumentDeltaConnection | undefined;\n\n        if (docService.policies?.storageOnly === true) {\n            connection = new NoDeltaStream();\n            this.setupNewSuccessfulConnection(connection, \"read\");\n            assert(this.pendingConnection === undefined, 0x2b3 /* \"logic error\" */);\n            return;\n        }\n\n        let delayMs = InitialReconnectDelayInMs;\n        let connectRepeatCount = 0;\n        const connectStartTime = performance.now();\n        let lastError: any;\n\n        const abortController = new AbortController();\n        const abortSignal = abortController.signal;\n        this.pendingConnection = { abort: () => { abortController.abort(); }, connectionMode: requestedMode };\n\n        // This loop will keep trying to connect until successful, with a delay between each iteration.\n        while (connection === undefined) {\n            if (this.closed) {\n                throw new Error(\"Attempting to connect a closed DeltaManager\");\n            }\n            if (abortSignal.aborted === true) {\n                this.logger.sendTelemetryEvent({\n                    eventName: \"ConnectionAttemptCancelled\",\n                    attempts: connectRepeatCount,\n                    duration: TelemetryLogger.formatTick(performance.now() - connectStartTime),\n                    connectionEstablished: false,\n                });\n                return;\n            }\n            connectRepeatCount++;\n\n            try {\n                this.client.mode = requestedMode;\n                connection = await docService.connectToDeltaStream({ ...this.client, mode: requestedMode });\n\n                if (connection.disposed) {\n                    // Nobody observed this connection, so drop it on the floor and retry.\n                    this.logger.sendTelemetryEvent({ eventName: \"ReceivedClosedConnection\" });\n                    connection = undefined;\n                }\n            } catch (origError: any) {\n                if (typeof origError === \"object\" && origError !== null &&\n                    origError?.errorType === DeltaStreamConnectionForbiddenError.errorType) {\n                    connection = new NoDeltaStream();\n                    requestedMode = \"read\";\n                    break;\n                }\n\n                // Socket.io error when we connect to wrong socket, or hit some multiplexing bug\n                if (!canRetryOnError(origError)) {\n                    const error = normalizeError(origError, { props: fatalConnectErrorProp });\n                    this.props.closeHandler(error);\n                    throw error;\n                }\n\n                // Since the error is retryable this will not log to the error table\n                logNetworkFailure(\n                    this.logger,\n                    {\n                        attempts: connectRepeatCount,\n                        delay: delayMs, // milliseconds\n                        eventName: \"DeltaConnectionFailureToConnect\",\n                        duration: TelemetryLogger.formatTick(performance.now() - connectStartTime),\n                    },\n                    origError);\n\n                lastError = origError;\n\n                const retryDelayFromError = getRetryDelayFromError(origError);\n                delayMs = retryDelayFromError ?? Math.min(delayMs * 2, MaxReconnectDelayInMs);\n\n                if (retryDelayFromError !== undefined) {\n                    this.props.reconnectionDelayHandler(retryDelayFromError, origError);\n                }\n                await waitForConnectedState(delayMs);\n            }\n        }\n\n        // If we retried more than once, log an event about how long it took (this will not log to error table)\n        if (connectRepeatCount > 1) {\n            logNetworkFailure(\n                this.logger,\n                {\n                    eventName: \"MultipleDeltaConnectionFailures\",\n                    attempts: connectRepeatCount,\n                    duration: TelemetryLogger.formatTick(performance.now() - connectStartTime),\n                },\n                lastError,\n            );\n        }\n\n        // Check for abort signal after while loop as well\n        if (abortSignal.aborted === true) {\n            connection.dispose();\n            this.logger.sendTelemetryEvent({\n                eventName: \"ConnectionAttemptCancelled\",\n                attempts: connectRepeatCount,\n                duration: TelemetryLogger.formatTick(performance.now() - connectStartTime),\n                connectionEstablished: true,\n            });\n            return;\n        }\n\n        this.setupNewSuccessfulConnection(connection, requestedMode);\n    }\n\n    /**\n     * Start the connection. Any error should result in container being close.\n     * And report the error if it excape for any reason.\n     * @param args - The connection arguments\n     */\n     private triggerConnect(connectionMode: ConnectionMode) {\n        assert(this.connection === undefined, 0x239 /* \"called only in disconnected state\" */);\n        if (this.reconnectMode !== ReconnectMode.Enabled) {\n            return;\n        }\n        this.connect(connectionMode);\n    }\n\n    /**\n     * Disconnect the current connection.\n     * @param reason - Text description of disconnect reason to emit with disconnect event\n     * @returns A boolean that indicates if there was an existing connection (or pending connection) to disconnect\n     */\n     private disconnectFromDeltaStream(reason: string): boolean {\n        this.pendingReconnect = false;\n\n        if (this.connection === undefined) {\n            if (this.pendingConnection !== undefined) {\n                this.cancelConnection();\n                return true;\n            }\n            return false;\n        }\n\n        assert(this.pendingConnection === undefined, 0x27b /* \"reentrancy may result in incorrect behavior\" */);\n\n        const connection = this.connection;\n        // Avoid any re-entrancy - clear object reference\n        this.connection = undefined;\n\n        // Remove listeners first so we don't try to retrigger this flow accidentally through reconnectOnError\n        connection.off(\"op\", this.opHandler);\n        connection.off(\"signal\", this.props.signalHandler);\n        connection.off(\"nack\", this.nackHandler);\n        connection.off(\"disconnect\", this.disconnectHandlerInternal);\n        connection.off(\"error\", this.errorHandler);\n        connection.off(\"pong\", this.props.pongHandler);\n\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this._outbound.pause();\n        this._outbound.clear();\n        this.props.disconnectHandler(reason);\n\n        connection.dispose();\n\n        this._connectionVerboseProps = {};\n\n        return true;\n    }\n\n    /**\n     * Cancel in-progress connection attempt.\n     */\n    private cancelConnection() {\n        assert(this.pendingConnection !== undefined,\n            0x345 /* this.pendingConnection is undefined when trying to cancel */);\n        this.pendingConnection.abort();\n        this.pendingConnection = undefined;\n        this.logger.sendTelemetryEvent({ eventName: \"ConnectionCancelReceived\" });\n    }\n\n    /**\n     * Once we've successfully gotten a connection, we need to set up state, attach event listeners, and process\n     * initial messages.\n     * @param connection - The newly established connection\n     */\n     private setupNewSuccessfulConnection(connection: IDocumentDeltaConnection, requestedMode: ConnectionMode) {\n        // Old connection should have been cleaned up before establishing a new one\n        assert(this.connection === undefined, 0x0e6 /* \"old connection exists on new connection setup\" */);\n        assert(!connection.disposed, 0x28a /* \"can't be disposed - Callers need to ensure that!\" */);\n\n        this.pendingConnection = undefined;\n\n        this.connection = connection;\n\n        // Does information in scopes & mode matches?\n        // If we asked for \"write\" and got \"read\", then file is read-only\n        // But if we ask read, server can still give us write.\n        const readonly = !connection.claims.scopes.includes(ScopeType.DocWrite);\n\n        // This connection mode validation logic is moving to the driver layer in 0.44.  These two asserts can be\n        // removed after those packages have released and become ubiquitous.\n        assert(requestedMode === \"read\" || readonly === (this.connectionMode === \"read\"),\n            0x0e7 /* \"claims/connectionMode mismatch\" */);\n        assert(!readonly || this.connectionMode === \"read\", 0x0e8 /* \"readonly perf with write connection\" */);\n\n        this.set_readonlyPermissions(readonly);\n\n        if (this.closed) {\n            // Raise proper events, Log telemetry event and close connection.\n            this.disconnectFromDeltaStream(\"ConnectionManager already closed\");\n            return;\n        }\n\n        this._outbound.resume();\n\n        connection.on(\"op\", this.opHandler);\n        connection.on(\"signal\", this.props.signalHandler);\n        connection.on(\"nack\", this.nackHandler);\n        connection.on(\"disconnect\", this.disconnectHandlerInternal);\n        connection.on(\"error\", this.errorHandler);\n        connection.on(\"pong\", this.props.pongHandler);\n\n        // Initial messages are always sorted. However, due to early op handler installed by drivers and appending those\n        // ops to initialMessages, resulting set is no longer sorted, which would result in client hitting storage to\n        // fill in gap. We will recover by cancelling this request once we process remaining ops, but it's a waste that\n        // we could avoid\n        const initialMessages = connection.initialMessages.sort((a, b) => a.sequenceNumber - b.sequenceNumber);\n\n        // Some storages may provide checkpointSequenceNumber to identify how far client is behind.\n        let checkpointSequenceNumber = connection.checkpointSequenceNumber;\n\n        this._connectionVerboseProps = {\n            clientId: connection.clientId,\n            mode: connection.mode,\n        };\n\n        // reset connection props\n        this._connectionProps = {};\n\n        if (connection.relayServiceAgent !== undefined) {\n            this._connectionVerboseProps.relayServiceAgent = connection.relayServiceAgent;\n            this._connectionProps.relayServiceAgent = connection.relayServiceAgent;\n        }\n        this._connectionProps.socketDocumentId = connection.claims.documentId;\n        this._connectionProps.connectionMode = connection.mode;\n\n        let last = -1;\n        if (initialMessages.length !== 0) {\n            this._connectionVerboseProps.connectionInitialOpsFrom = initialMessages[0].sequenceNumber;\n            last = initialMessages[initialMessages.length - 1].sequenceNumber;\n            this._connectionVerboseProps.connectionInitialOpsTo = last + 1;\n            // Update knowledge of how far we are behind, before raising \"connect\" event\n            // This is duplication of what incomingOpHandler() does, but we have to raise event before we get there,\n            // so duplicating update logic here as well.\n            if (checkpointSequenceNumber === undefined || checkpointSequenceNumber < last) {\n                checkpointSequenceNumber = last;\n            }\n        }\n\n        this.props.incomingOpHandler(\n            initialMessages,\n            this.connectFirstConnection ? \"InitialOps\" : \"ReconnectOps\");\n\n        if (connection.initialSignals !== undefined) {\n            for (const signal of connection.initialSignals) {\n                this.props.signalHandler(signal);\n            }\n        }\n\n        const details = ConnectionManager.detailsFromConnection(connection);\n        details.checkpointSequenceNumber = checkpointSequenceNumber;\n        this.props.connectHandler(details);\n\n        this.connectFirstConnection = false;\n    }\n\n    /**\n     * Disconnect the current connection and reconnect. Closes the container if it fails.\n     * @param connection - The connection that wants to reconnect - no-op if it's different from this.connection\n     * @param requestedMode - Read or write\n     * @param error - Error reconnect information including whether or not to reconnect\n     * @returns A promise that resolves when the connection is reestablished or we stop trying\n     */\n     private reconnectOnError(\n        requestedMode: ConnectionMode,\n        error: IAnyDriverError,\n    ) {\n        this.reconnect(\n            requestedMode,\n            error.message,\n            error)\n        .catch(this.props.closeHandler);\n    }\n\n    /**\n     * Disconnect the current connection and reconnect.\n     * @param connection - The connection that wants to reconnect - no-op if it's different from this.connection\n     * @param requestedMode - Read or write\n     * @param error - Error reconnect information including whether or not to reconnect\n     * @returns A promise that resolves when the connection is reestablished or we stop trying\n     */\n    private async reconnect(\n        requestedMode: ConnectionMode,\n        disconnectMessage: string,\n        error?: IAnyDriverError,\n    ) {\n        // We quite often get protocol errors before / after observing nack/disconnect\n        // we do not want to run through same sequence twice.\n        // If we're already disconnected/disconnecting it's not appropriate to call this again.\n        assert(this.connection !== undefined, 0x0eb /* \"Missing connection for reconnect\" */);\n\n        this.disconnectFromDeltaStream(disconnectMessage);\n\n        // We will always trigger reconnect, even if canRetry is false.\n        // Any truly fatal error state will result in container close upon attempted reconnect,\n        // which is a preferable to closing abruptly when a live connection fails.\n        if (error !== undefined && !error.canRetry) {\n            this.logger.sendTelemetryEvent({\n                eventName: \"reconnectingDespiteFatalError\",\n                reconnectMode: this.reconnectMode,\n             }, error);\n        }\n\n        if (this.reconnectMode === ReconnectMode.Never) {\n            // Do not raise container error if we are closing just because we lost connection.\n            // Those errors (like IdleDisconnect) would show up in telemetry dashboards and\n            // are very misleading, as first initial reaction - some logic is broken.\n            this.props.closeHandler();\n        }\n\n        // If closed then we can't reconnect\n        if (this.closed || this.reconnectMode !== ReconnectMode.Enabled) {\n            return;\n        }\n\n        const delayMs = getRetryDelayFromError(error);\n        if (error !== undefined && delayMs !== undefined) {\n            this.props.reconnectionDelayHandler(delayMs, error);\n            await waitForConnectedState(delayMs);\n        }\n\n        this.triggerConnect(requestedMode);\n    }\n\n    public prepareMessageToSend(message: Omit<IDocumentMessage, \"clientSequenceNumber\">): IDocumentMessage | undefined {\n        if (this.readonly === true) {\n            assert(this.readOnlyInfo.readonly === true, 0x1f0 /* \"Unexpected mismatch in readonly\" */);\n            const error = new GenericError(\"deltaManagerReadonlySubmit\", undefined /* error */, {\n                readonly: this.readOnlyInfo.readonly,\n                forcedReadonly: this.readOnlyInfo.forced,\n                readonlyPermissions: this.readOnlyInfo.permissions,\n                storageOnly: this.readOnlyInfo.storageOnly,\n            });\n            this.props.closeHandler(error);\n            return undefined;\n        }\n\n        // reset clientSequenceNumber if we are using new clientId.\n        // we keep info about old connection as long as possible to be able to account for all non-acked ops\n        // that we pick up on next connection.\n        assert(!!this.connection, 0x0e4 /* \"Lost old connection!\" */);\n        if (this.lastSubmittedClientId !== this.connection?.clientId) {\n            this.lastSubmittedClientId = this.connection?.clientId;\n            this.clientSequenceNumber = 0;\n            this.clientSequenceNumberObserved = 0;\n        }\n\n        if (message.type === MessageType.NoOp) {\n            this.trailingNoopCount++;\n        } else {\n            this.trailingNoopCount = 0;\n        }\n\n        return {\n            ...message,\n            clientSequenceNumber: ++this.clientSequenceNumber,\n        };\n    }\n\n    public submitSignal(content: any) {\n        if (this.connection !== undefined) {\n            this.connection.submitSignal(content);\n        } else {\n            this.logger.sendErrorEvent({ eventName: \"submitSignalDisconnected\" });\n        }\n    }\n\n    public sendMessages(messages: IDocumentMessage[]) {\n        assert(this.connected, 0x2b4 /* \"not connected on sending ops!\" */);\n        // If connection is \"read\" or implicit \"read\" (got leave op for \"write\" connection),\n        // then op can't make it through - we will get a nack if op is sent.\n        // We can short-circuit this process.\n        // Note that we also want nacks to be rare and be treated as catastrophic failures.\n        // Be careful with reentrancy though - disconnected event should not be be raised in the\n        // middle of the current workflow, but rather on clean stack!\n        if (this.connectionMode === \"read\") {\n            if (!this.pendingReconnect) {\n                this.pendingReconnect = true;\n                Promise.resolve().then(async () => {\n                    if (this.pendingReconnect) { // still valid?\n                        await this.reconnect(\n                            \"write\", // connectionMode\n                            \"Switch to write\", // message\n                        );\n                    }\n                })\n                .catch(() => {});\n            }\n            return;\n        }\n\n        assert(!this.pendingReconnect, 0x2b5 /* \"logic error\" */);\n\n        this._outbound.push(messages);\n    }\n\n    public beforeProcessingIncomingOp(message: ISequencedDocumentMessage) {\n        // if we have connection, and message is local, then we better treat is as local!\n        assert(this.clientId !== message.clientId || this.lastSubmittedClientId === message.clientId,\n            0x0ee /* \"Not accounting local messages correctly\" */,\n        );\n\n        if (this.lastSubmittedClientId !== undefined && this.lastSubmittedClientId === message.clientId) {\n            const clientSequenceNumber = message.clientSequenceNumber;\n\n            assert(this.clientSequenceNumberObserved < clientSequenceNumber, 0x0ef /* \"client seq# not growing\" */);\n            assert(clientSequenceNumber <= this.clientSequenceNumber,\n                0x0f0 /* \"Incoming local client seq# > generated by this client\" */);\n\n            this.clientSequenceNumberObserved = clientSequenceNumber;\n        }\n\n        if (message.type === MessageType.ClientLeave) {\n            const systemLeaveMessage = message as ISequencedDocumentSystemMessage;\n            const clientId = JSON.parse(systemLeaveMessage.data) as string;\n            if (clientId === this.clientId) {\n                // We have been kicked out from quorum\n                this.logger.sendPerformanceEvent({ eventName: \"ReadConnectionTransition\" });\n\n                // Please see #8483 for more details on why maintaining connection further as is would not work.\n                // Short story - connection properties are immutable, and many processes (consensus DDSes, summarizer)\n                // assume that connection stays \"write\" connection until disconnect, and act accordingly, which may\n                // not work well with de-facto \"read\" connection we are in after receiving own leave op on timeout.\n                // Clients need to be able to transition to \"read\" state after some time of inactivity!\n                // Note - this may close container!\n                this.reconnect(\n                    \"read\", // connectionMode\n                    \"Switch to read\", // message\n                ).catch((error) => {\n                    this.logger.sendErrorEvent({ eventName: \"SwitchToReadConnection\" }, error);\n                });\n            }\n        }\n    }\n\n    private readonly opHandler = (documentId: string, messagesArg: ISequencedDocumentMessage[]) => {\n        const messages = Array.isArray(messagesArg) ? messagesArg : [messagesArg];\n        this.props.incomingOpHandler(messages, \"opHandler\");\n    };\n\n    // Always connect in write mode after getting nacked.\n    private readonly nackHandler = (documentId: string, messages: INack[]) => {\n        const message = messages[0];\n        if (this._readonlyPermissions === true) {\n            this.props.closeHandler(createWriteError(\"writeOnReadOnlyDocument\", { driverVersion: undefined }));\n            return;\n        }\n\n        const reconnectInfo = getNackReconnectInfo(message.content);\n\n        // If the nack indicates we cannot retry, then close the container outright\n        if (!reconnectInfo.canRetry) {\n            this.props.closeHandler(reconnectInfo);\n            return;\n        }\n\n        this.reconnectOnError(\n            \"write\",\n            reconnectInfo,\n        );\n    };\n\n    // Connection mode is always read on disconnect/error unless the system mode was write.\n    private readonly disconnectHandlerInternal = (disconnectReason: IAnyDriverError) => {\n        // Note: we might get multiple disconnect calls on same socket, as early disconnect notification\n        // (\"server_disconnect\", ODSP-specific) is mapped to \"disconnect\"\n        this.reconnectOnError(\n            this.defaultReconnectionMode,\n            disconnectReason,\n        );\n    };\n\n    private readonly errorHandler = (error: IAnyDriverError) => {\n        this.reconnectOnError(\n            this.defaultReconnectionMode,\n            error,\n        );\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\n// eslint-disable-next-line import/no-internal-modules\nimport merge from \"lodash/merge\";\nimport { v4 as uuid } from \"uuid\";\nimport {\n    IDisposable, ITelemetryProperties,\n} from \"@fluidframework/common-definitions\";\nimport { assert, performance, unreachableCase } from \"@fluidframework/common-utils\";\nimport {\n    IRequest,\n    IResponse,\n    IFluidRouter,\n} from \"@fluidframework/core-interfaces\";\nimport {\n    IAudience,\n    IConnectionDetails,\n    IContainer,\n    IContainerEvents,\n    IDeltaManager,\n    ICriticalContainerError,\n    ContainerWarning,\n    AttachState,\n    IThrottlingWarning,\n    ReadOnlyInfo,\n    IContainerLoadMode,\n    IFluidCodeDetails,\n    isFluidCodeDetails,\n} from \"@fluidframework/container-definitions\";\nimport {\n    DataCorruptionError,\n    extractSafePropertiesFromMessage,\n    GenericError,\n    UsageError,\n} from \"@fluidframework/container-utils\";\nimport {\n    IDocumentService,\n    IDocumentStorageService,\n    IFluidResolvedUrl,\n    IResolvedUrl,\n} from \"@fluidframework/driver-definitions\";\nimport {\n    readAndParse,\n    OnlineStatus,\n    isOnline,\n    ensureFluidResolvedUrl,\n    combineAppAndProtocolSummary,\n    runWithRetry,\n    isFluidResolvedUrl,\n    isRuntimeMessage,\n    isUnpackedRuntimeMessage,\n} from \"@fluidframework/driver-utils\";\nimport {\n    IProtocolHandler,\n    ProtocolOpHandlerWithClientValidation,\n} from \"@fluidframework/protocol-base\";\nimport {\n    IClient,\n    IClientConfiguration,\n    IClientDetails,\n    ICommittedProposal,\n    IDocumentAttributes,\n    IDocumentMessage,\n    IProcessMessageResult,\n    IProtocolState,\n    IQuorumClients,\n    IQuorumProposals,\n    ISequencedClient,\n    ISequencedDocumentMessage,\n    ISequencedProposal,\n    ISignalClient,\n    ISignalMessage,\n    ISnapshotTree,\n    ISummaryContent,\n    ISummaryTree,\n    IVersion,\n    MessageType,\n    SummaryType,\n} from \"@fluidframework/protocol-definitions\";\nimport {\n    ChildLogger,\n    EventEmitterWithErrorHandling,\n    PerformanceEvent,\n    raiseConnectedEvent,\n    TelemetryLogger,\n    connectedEventName,\n    disconnectedEventName,\n    normalizeError,\n    MonitoringContext,\n    loggerToMonitoringContext,\n    wrapError,\n} from \"@fluidframework/telemetry-utils\";\nimport { Audience } from \"./audience\";\nimport { ContainerContext } from \"./containerContext\";\nimport { ReconnectMode, IConnectionManagerFactoryArgs, getPackageName } from \"./contracts\";\nimport { DeltaManager, IConnectionArgs } from \"./deltaManager\";\nimport { DeltaManagerProxy } from \"./deltaManagerProxy\";\nimport { ILoaderOptions, Loader, RelativeLoader } from \"./loader\";\nimport { pkgVersion } from \"./packageVersion\";\nimport { ConnectionStateHandler } from \"./connectionStateHandler\";\nimport { RetriableDocumentStorageService } from \"./retriableDocumentStorageService\";\nimport { ProtocolTreeStorageService } from \"./protocolTreeDocumentStorageService\";\nimport { BlobOnlyStorage, ContainerStorageAdapter } from \"./containerStorageAdapter\";\nimport { getProtocolSnapshotTree, getSnapshotTreeFromSerializedContainer } from \"./utils\";\nimport { initQuorumValuesFromCodeDetails, getCodeDetailsFromQuorumValues, QuorumProxy } from \"./quorum\";\nimport { CollabWindowTracker } from \"./collabWindowTracker\";\nimport { ConnectionManager } from \"./connectionManager\";\nimport { ConnectionState } from \"./connectionState\";\n\nconst detachedContainerRefSeqNumber = 0;\n\nconst dirtyContainerEvent = \"dirty\";\nconst savedContainerEvent = \"saved\";\n\nexport interface IContainerLoadOptions {\n    /**\n     * Disables the Container from reconnecting if false, allows reconnect otherwise.\n     */\n    canReconnect?: boolean;\n    /**\n     * Client details provided in the override will be merged over the default client.\n     */\n    clientDetailsOverride?: IClientDetails;\n    resolvedUrl: IFluidResolvedUrl;\n    /**\n     * Control which snapshot version to load from.  See IParsedUrl for detailed information.\n     */\n    version: string | undefined;\n    /**\n     * Loads the Container in paused state if true, unpaused otherwise.\n     */\n    loadMode?: IContainerLoadMode;\n}\n\nexport interface IContainerConfig {\n    resolvedUrl?: IFluidResolvedUrl;\n    canReconnect?: boolean;\n    /**\n     * Client details provided in the override will be merged over the default client.\n     */\n    clientDetailsOverride?: IClientDetails;\n    /**\n     * Serialized state from a previous instance of this container\n     */\n    serializedContainerState?: IPendingContainerState;\n}\n\n/**\n * Waits until container connects to delta storage and gets up-to-date\n * Useful when resolving URIs and hitting 404, due to container being loaded from (stale) snapshot and not being\n * up to date. Host may chose to wait in such case and retry resolving URI.\n * Warning: Will wait infinitely for connection to establish if there is no connection.\n * May result in deadlock if Container.disconnect() is called and never followed by a call to Container.connect().\n * @returns true: container is up to date, it processed all the ops that were know at the time of first connection\n *          false: storage does not provide indication of how far the client is. Container processed\n *          all the ops known to it, but it maybe still behind.\n * @throws an error beginning with `\"Container closed\"` if the container is closed before it catches up.\n */\nexport async function waitContainerToCatchUp(container: IContainer) {\n    // Make sure we stop waiting if container is closed.\n    if (container.closed) {\n        throw new UsageError(\"waitContainerToCatchUp: Container closed\");\n    }\n\n    return new Promise<boolean>((resolve, reject) => {\n        const deltaManager = container.deltaManager;\n\n        const closedCallback = (err?: ICriticalContainerError | undefined) => {\n            container.off(\"closed\", closedCallback);\n            const baseMessage = \"Container closed while waiting to catch up\";\n            reject(\n                err !== undefined\n                    ? wrapError(err, (innerMessage) => new GenericError(`${baseMessage}: ${innerMessage}`))\n                    : new GenericError(baseMessage),\n            );\n        };\n        container.on(\"closed\", closedCallback);\n\n        const waitForOps = () => {\n            assert(container.connectionState === ConnectionState.CatchingUp\n                || container.connectionState === ConnectionState.Connected,\n                0x0cd /* \"Container disconnected while waiting for ops!\" */);\n            const hasCheckpointSequenceNumber = deltaManager.hasCheckpointSequenceNumber;\n\n            const connectionOpSeqNumber = deltaManager.lastKnownSeqNumber;\n            assert(deltaManager.lastSequenceNumber <= connectionOpSeqNumber,\n                0x266 /* \"lastKnownSeqNumber should never be below last processed sequence number\" */);\n            if (deltaManager.lastSequenceNumber === connectionOpSeqNumber) {\n                container.off(\"closed\", closedCallback);\n                resolve(hasCheckpointSequenceNumber);\n                return;\n            }\n            const callbackOps = (message: ISequencedDocumentMessage) => {\n                if (connectionOpSeqNumber <= message.sequenceNumber) {\n                    container.off(\"closed\", closedCallback);\n                    resolve(hasCheckpointSequenceNumber);\n                    deltaManager.off(\"op\", callbackOps);\n                }\n            };\n            deltaManager.on(\"op\", callbackOps);\n        };\n\n        // We can leverage DeltaManager's \"connect\" event here and test for ConnectionState.Disconnected\n        // But that works only if service provides us checkPointSequenceNumber\n        // Our internal testing is based on R11S that does not, but almost all tests connect as \"write\" and\n        // use this function to catch up, so leveraging our own join op as a fence/barrier\n        if (container.connectionState === ConnectionState.Connected) {\n            waitForOps();\n            return;\n        }\n\n        const callback = () => {\n            container.off(connectedEventName, callback);\n            waitForOps();\n        };\n        container.on(connectedEventName, callback);\n\n        if (container.connectionState === ConnectionState.Disconnected) {\n            container.connect();\n        }\n    });\n}\n\nconst getCodeProposal =\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    (quorum: IQuorumProposals) => quorum.get(\"code\") ?? quorum.get(\"code2\");\n\n/**\n * State saved by a container at close time, to be used to load a new instance\n * of the container to the same state\n */\nexport interface IPendingContainerState {\n    pendingRuntimeState: unknown;\n    url: string;\n    protocol: IProtocolState;\n    term: number;\n    clientId?: string;\n}\n\nconst summarizerClientType = \"summarizer\";\n\nexport class Container extends EventEmitterWithErrorHandling<IContainerEvents> implements IContainer {\n    public static version = \"^0.1.0\";\n\n    /**\n     * Load an existing container.\n     */\n    public static async load(\n        loader: Loader,\n        loadOptions: IContainerLoadOptions,\n        pendingLocalState?: IPendingContainerState,\n    ): Promise<Container> {\n        const container = new Container(\n            loader,\n            {\n                clientDetailsOverride: loadOptions.clientDetailsOverride,\n                resolvedUrl: loadOptions.resolvedUrl,\n                canReconnect: loadOptions.canReconnect,\n                serializedContainerState: pendingLocalState,\n            });\n\n        return PerformanceEvent.timedExecAsync(\n            container.mc.logger,\n            { eventName: \"Load\" },\n            async (event) => new Promise<Container>((resolve, reject) => {\n                const version = loadOptions.version;\n\n                const defaultMode: IContainerLoadMode = { opsBeforeReturn: \"cached\" };\n                // if we have pendingLocalState, anything we cached is not useful and we shouldn't wait for connection\n                // to return container, so ignore this value and use undefined for opsBeforeReturn\n                const mode: IContainerLoadMode = pendingLocalState\n                    ? { ...(loadOptions.loadMode ?? defaultMode), opsBeforeReturn: undefined }\n                    : loadOptions.loadMode ?? defaultMode;\n\n                const onClosed = (err?: ICriticalContainerError) => {\n                    // pre-0.58 error message: containerClosedWithoutErrorDuringLoad\n                    reject(err ?? new GenericError(\"Container closed without error during load\"));\n                };\n                container.on(\"closed\", onClosed);\n\n                container.load(version, mode, pendingLocalState)\n                    .finally(() => {\n                        container.removeListener(\"closed\", onClosed);\n                    })\n                    .then((props) => {\n                        event.end({ ...props, ...loadOptions.loadMode });\n                        resolve(container);\n                    },\n                        (error) => {\n                            const err = normalizeError(error);\n                            // Depending where error happens, we can be attempting to connect to web socket\n                            // and continuously retrying (consider offline mode)\n                            // Host has no container to close, so it's prudent to do it here\n                            container.close(err);\n                            onClosed(err);\n                        });\n            }),\n            { start: true, end: true, cancel: \"generic\" },\n        );\n    }\n\n    /**\n     * Create a new container in a detached state.\n     */\n    public static async createDetached(\n        loader: Loader,\n        codeDetails: IFluidCodeDetails,\n    ): Promise<Container> {\n        const container = new Container(\n            loader,\n            {});\n\n        return PerformanceEvent.timedExecAsync(\n            container.mc.logger,\n            { eventName: \"CreateDetached\" },\n            async (_event) => {\n                await container.createDetached(codeDetails);\n                return container;\n            },\n            { start: true, end: true, cancel: \"generic\" });\n    }\n\n    /**\n     * Create a new container in a detached state that is initialized with a\n     * snapshot from a previous detached container.\n     */\n    public static async rehydrateDetachedFromSnapshot(\n        loader: Loader,\n        snapshot: string,\n    ): Promise<Container> {\n        const container = new Container(\n            loader,\n            {});\n        return PerformanceEvent.timedExecAsync(\n            container.mc.logger,\n            { eventName: \"RehydrateDetachedFromSnapshot\" },\n            async (_event) => {\n                const deserializedSummary = JSON.parse(snapshot) as ISummaryTree;\n                await container.rehydrateDetachedFromSnapshot(deserializedSummary);\n                return container;\n            },\n            { start: true, end: true, cancel: \"generic\" });\n    }\n\n    public subLogger: TelemetryLogger;\n\n    // Tells if container can reconnect on losing fist connection\n    // If false, container gets closed on loss of connection.\n    private readonly _canReconnect: boolean = true;\n\n    private readonly mc: MonitoringContext;\n\n    private _lifecycleState: \"loading\" | \"loaded\" | \"closing\" | \"closed\" = \"loading\";\n\n    private setLoaded() {\n        // It's conceivable the container could be closed when this is called\n        // Only transition states if currently loading\n        if (this._lifecycleState === \"loading\") {\n            // Propagate current connection state through the system.\n            this.propagateConnectionState();\n            this._lifecycleState = \"loaded\";\n        }\n    }\n\n    public get closed(): boolean {\n        return (this._lifecycleState === \"closing\" || this._lifecycleState === \"closed\");\n    }\n\n    private _attachState = AttachState.Detached;\n\n    private readonly _storage: ContainerStorageAdapter;\n    public get storage(): IDocumentStorageService {\n        return this._storage;\n    }\n\n    private _storageService: IDocumentStorageService & IDisposable | undefined;\n    private get storageService(): IDocumentStorageService {\n        if (this._storageService === undefined) {\n            throw new Error(\"Attempted to access storageService before it was defined\");\n        }\n        return this._storageService;\n    }\n\n    private readonly clientDetailsOverride: IClientDetails | undefined;\n    private readonly _deltaManager: DeltaManager<ConnectionManager>;\n    private service: IDocumentService | undefined;\n    private readonly _audience: Audience;\n\n    private _context: ContainerContext | undefined;\n    private get context() {\n        if (this._context === undefined) {\n            throw new GenericError(\"Attempted to access context before it was defined\");\n        }\n        return this._context;\n    }\n    private _protocolHandler: IProtocolHandler | undefined;\n    private get protocolHandler() {\n        if (this._protocolHandler === undefined) {\n            throw new Error(\"Attempted to access protocolHandler before it was defined\");\n        }\n        return this._protocolHandler;\n    }\n\n    /** During initialization we pause the inbound queues. We track this state to ensure we only call resume once */\n    private inboundQueuePausedFromInit = true;\n    private firstConnection = true;\n    private readonly connectionTransitionTimes: number[] = [];\n    private messageCountAfterDisconnection: number = 0;\n    private _loadedFromVersion: IVersion | undefined;\n    private _resolvedUrl: IFluidResolvedUrl | undefined;\n    private attachStarted = false;\n    private _dirtyContainer = false;\n\n    private lastVisible: number | undefined;\n    private readonly visibilityEventHandler: (() => void) | undefined;\n    private readonly connectionStateHandler: ConnectionStateHandler;\n\n    private setAutoReconnectTime = performance.now();\n\n    private collabWindowTracker: CollabWindowTracker | undefined;\n\n    private get connectionMode() { return this._deltaManager.connectionManager.connectionMode; }\n\n    public get IFluidRouter(): IFluidRouter { return this; }\n\n    public get resolvedUrl(): IResolvedUrl | undefined {\n        return this._resolvedUrl;\n    }\n\n    public get loadedFromVersion(): IVersion | undefined {\n        return this._loadedFromVersion;\n    }\n\n    public get readOnlyInfo(): ReadOnlyInfo {\n        return this._deltaManager.readOnlyInfo;\n    }\n\n    public get closeSignal(): AbortSignal {\n        return this._deltaManager.closeAbortController.signal;\n    }\n\n    /**\n     * Tracks host requiring read-only mode.\n     */\n    public forceReadonly(readonly: boolean) {\n        this._deltaManager.connectionManager.forceReadonly(readonly);\n    }\n\n    public get deltaManager(): IDeltaManager<ISequencedDocumentMessage, IDocumentMessage> {\n        return this._deltaManager;\n    }\n\n    public get connectionState(): ConnectionState {\n        return this.connectionStateHandler.connectionState;\n    }\n\n    public get connected(): boolean {\n        return this.connectionStateHandler.connected;\n    }\n\n    /**\n     * Service configuration details. If running in offline mode will be undefined otherwise will contain service\n     * configuration details returned as part of the initial connection.\n     */\n    public get serviceConfiguration(): IClientConfiguration | undefined {\n        return this._deltaManager.serviceConfiguration;\n    }\n\n    /**\n     * The server provided id of the client.\n     * Set once this.connected is true, otherwise undefined\n     */\n    public get clientId(): string | undefined {\n        return this.connectionStateHandler.clientId;\n    }\n\n    /**\n     * The server provided claims of the client.\n     * Set once this.connected is true, otherwise undefined\n     */\n    public get scopes(): string[] | undefined {\n        return this._deltaManager.connectionManager.scopes;\n    }\n\n    public get clientDetails(): IClientDetails {\n        return this._deltaManager.clientDetails;\n    }\n\n    /**\n     * Get the code details that are currently specified for the container.\n     * @returns The current code details if any are specified, undefined if none are specified.\n     */\n    public getSpecifiedCodeDetails(): IFluidCodeDetails | undefined {\n        return this.getCodeDetailsFromQuorum();\n    }\n\n    /**\n     * Get the code details that were used to load the container.\n     * @returns The code details that were used to load the container if it is loaded, undefined if it is not yet\n     * loaded.\n     */\n    public getLoadedCodeDetails(): IFluidCodeDetails | undefined {\n        return this._context?.codeDetails;\n    }\n\n    /**\n     * Retrieves the audience associated with the document\n     */\n    public get audience(): IAudience {\n        return this._audience;\n    }\n\n    /**\n     * Returns true if container is dirty.\n     * Which means data loss if container is closed at that same moment\n     * Most likely that happens when there is no network connection to ordering service\n     */\n    public get isDirty() {\n        return this._dirtyContainer;\n    }\n\n    private get serviceFactory() { return this.loader.services.documentServiceFactory; }\n    private get urlResolver() { return this.loader.services.urlResolver; }\n    public readonly options: ILoaderOptions;\n    private get scope() { return this.loader.services.scope; }\n    private get codeLoader() { return this.loader.services.codeLoader; }\n\n    constructor(\n        private readonly loader: Loader,\n        config: IContainerConfig,\n    ) {\n        super((name, error) => {\n            this.mc.logger.sendErrorEvent(\n                {\n                    eventName: \"ContainerEventHandlerException\",\n                    name: typeof name === \"string\" ? name : undefined,\n                },\n                error);\n        });\n        this._audience = new Audience();\n\n        this.clientDetailsOverride = config.clientDetailsOverride;\n        this._resolvedUrl = config.resolvedUrl;\n        if (config.canReconnect !== undefined) {\n            this._canReconnect = config.canReconnect;\n        }\n\n        // Create logger for data stores to use\n        const type = this.client.details.type;\n        const interactive = this.client.details.capabilities.interactive;\n        const clientType =\n            `${interactive ? \"interactive\" : \"noninteractive\"}${type !== undefined && type !== \"\" ? `/${type}` : \"\"}`;\n        // Need to use the property getter for docId because for detached flow we don't have the docId initially.\n        // We assign the id later so property getter is used.\n        this.subLogger = ChildLogger.create(\n            loader.services.subLogger,\n            undefined,\n            {\n                all: {\n                    clientType, // Differentiating summarizer container from main container\n                    containerId: uuid(),\n                    docId: () => this._resolvedUrl?.id ?? undefined,\n                    containerAttachState: () => this._attachState,\n                    containerLifecycleState: () => this._lifecycleState,\n                    containerConnectionState: () => ConnectionState[this.connectionState],\n                },\n                // we need to be judicious with our logging here to avoid generating too much data\n                // all data logged here should be broadly applicable, and not specific to a\n                // specific error or class of errors\n                error: {\n                    // load information to associate errors with the specific load point\n                    dmInitialSeqNumber: () => this._deltaManager?.initialSequenceNumber,\n                    dmLastProcessedSeqNumber: () => this._deltaManager?.lastSequenceNumber,\n                    dmLastKnownSeqNumber: () => this._deltaManager?.lastKnownSeqNumber,\n                    containerLoadedFromVersionId: () => this.loadedFromVersion?.id,\n                    containerLoadedFromVersionDate: () => this.loadedFromVersion?.date,\n                    // message information to associate errors with the specific execution state\n                    dmLastMsqSeqNumber: () => this.deltaManager?.lastMessage?.sequenceNumber,\n                    dmLastMsqSeqTimestamp: () => this.deltaManager?.lastMessage?.timestamp,\n                    dmLastMsqSeqClientId: () => this.deltaManager?.lastMessage?.clientId,\n                    connectionStateDuration:\n                        () => performance.now() - this.connectionTransitionTimes[this.connectionState],\n                },\n            });\n\n        // Prefix all events in this file with container-loader\n        this.mc = loggerToMonitoringContext(ChildLogger.create(this.subLogger, \"Container\"));\n\n        const summarizeProtocolTree =\n            this.mc.config.getBoolean(\"Fluid.Container.summarizeProtocolTree\")\n            ?? this.loader.services.options.summarizeProtocolTree;\n\n        this.options = {\n            ... this.loader.services.options,\n            summarizeProtocolTree,\n        };\n\n        this.connectionStateHandler = new ConnectionStateHandler(\n            {\n                quorumClients: () => this._protocolHandler?.quorum,\n                logConnectionStateChangeTelemetry: (value, oldState, reason) =>\n                    this.logConnectionStateChangeTelemetry(value, oldState, reason),\n                shouldClientJoinWrite: () => this._deltaManager.connectionManager.shouldJoinWrite(),\n                maxClientLeaveWaitTime: this.loader.services.options.maxClientLeaveWaitTime,\n                logConnectionIssue: (eventName: string, details?: ITelemetryProperties) => {\n                    // We get here when socket does not receive any ops on \"write\" connection, including\n                    // its own join op. Attempt recovery option.\n                    this._deltaManager.logConnectionIssue({\n                        eventName,\n                        duration: performance.now() - this.connectionTransitionTimes[ConnectionState.CatchingUp],\n                        ...(details === undefined ? {} : { details: JSON.stringify(details) }),\n                    });\n                },\n                connectionStateChanged: () => {\n                    // Fire events only if container is fully loaded and not closed\n                    if (this._lifecycleState === \"loaded\") {\n                        this.propagateConnectionState();\n                    }\n                },\n            },\n            this.mc.logger,\n            config.serializedContainerState?.clientId,\n        );\n\n        this.on(savedContainerEvent, () => {\n            this.connectionStateHandler.containerSaved();\n        });\n\n        this._deltaManager = this.createDeltaManager();\n        this._storage = new ContainerStorageAdapter(\n            () => {\n                if (this.attachState !== AttachState.Attached) {\n                    if (this.loader.services.detachedBlobStorage !== undefined) {\n                        return new BlobOnlyStorage(this.loader.services.detachedBlobStorage, this.mc.logger);\n                    }\n                    this.mc.logger.sendErrorEvent({\n                        eventName: \"NoRealStorageInDetachedContainer\",\n                    });\n                    throw new Error(\"Real storage calls not allowed in Unattached container\");\n                }\n                return this.storageService;\n            },\n        );\n\n        const isDomAvailable = typeof document === \"object\" &&\n            document !== null &&\n            typeof document.addEventListener === \"function\" &&\n            document.addEventListener !== null;\n        // keep track of last time page was visible for telemetry\n        if (isDomAvailable) {\n            this.lastVisible = document.hidden ? performance.now() : undefined;\n            this.visibilityEventHandler = () => {\n                if (document.hidden) {\n                    this.lastVisible = performance.now();\n                } else {\n                    // settimeout so this will hopefully fire after disconnect event if being hidden caused it\n                    setTimeout(() => { this.lastVisible = undefined; }, 0);\n                }\n            };\n            document.addEventListener(\"visibilitychange\", this.visibilityEventHandler);\n        }\n\n        // We observed that most users of platform do not check Container.connected event on load, causing bugs.\n        // As such, we are raising events when new listener pops up.\n        // Note that we can raise both \"disconnected\" & \"connect\" events at the same time,\n        // if we are in connecting stage.\n        this.on(\"newListener\", (event: string, listener: (...args: any[]) => void) => {\n            // Fire events on the end of JS turn, giving a chance for caller to be in consistent state.\n            Promise.resolve().then(() => {\n                switch (event) {\n                    case dirtyContainerEvent:\n                        if (this._dirtyContainer) {\n                            listener();\n                        }\n                        break;\n                    case savedContainerEvent:\n                        if (!this._dirtyContainer) {\n                            listener();\n                        }\n                        break;\n                    case connectedEventName:\n                        if (this.connected) {\n                            listener(this.clientId);\n                        }\n                        break;\n                    case disconnectedEventName:\n                        if (!this.connected) {\n                            listener();\n                        }\n                        break;\n                    default:\n                }\n            }).catch((error) => {\n                this.mc.logger.sendErrorEvent({ eventName: \"RaiseConnectedEventError\" }, error);\n            });\n        });\n    }\n\n    /**\n     * Retrieves the quorum associated with the document\n     */\n    public getQuorum(): IQuorumClients {\n        return this.protocolHandler.quorum;\n    }\n\n    public close(error?: ICriticalContainerError) {\n        // 1. Ensure that close sequence is exactly the same no matter if it's initiated by host or by DeltaManager\n        // 2. We need to ensure that we deliver disconnect event to runtime properly. See connectionStateChanged\n        //    handler. We only deliver events if container fully loaded. Transitioning from \"loading\" ->\n        //    \"closing\" will lose that info (can also solve by tracking extra state).\n        this._deltaManager.close(error);\n        assert(this.connectionState === ConnectionState.Disconnected,\n            0x0cf /* \"disconnect event was not raised!\" */);\n\n        assert(this._lifecycleState === \"closed\", 0x314 /* Container properly closed */);\n    }\n\n    private closeCore(error?: ICriticalContainerError) {\n        assert(!this.closed, 0x315 /* re-entrancy */);\n\n        try {\n            // Ensure that we raise all key events even if one of these throws\n            try {\n                // Raise event first, to ensure we capture _lifecycleState before transition.\n                // This gives us a chance to know what errors happened on open vs. on fully loaded container.\n                this.mc.logger.sendTelemetryEvent(\n                    {\n                        eventName: \"ContainerClose\",\n                        category: error === undefined ? \"generic\" : \"error\",\n                    },\n                    error,\n                );\n\n                this._lifecycleState = \"closing\";\n\n                this._protocolHandler?.close();\n\n                this.connectionStateHandler.dispose();\n\n                this._context?.dispose(error !== undefined ? new Error(error.message) : undefined);\n\n                this._storageService?.dispose();\n\n                // Notify storage about critical errors. They may be due to disconnect between client & server knowledge\n                // about file, like file being overwritten in storage, but client having stale local cache.\n                // Driver need to ensure all caches are cleared on critical errors\n                this.service?.dispose(error);\n            } catch (exception) {\n                this.mc.logger.sendErrorEvent({ eventName: \"ContainerCloseException\" }, exception);\n            }\n\n            this.emit(\"closed\", error);\n\n            this.removeAllListeners();\n            if (this.visibilityEventHandler !== undefined) {\n                document.removeEventListener(\"visibilitychange\", this.visibilityEventHandler);\n            }\n        } finally {\n            this._lifecycleState = \"closed\";\n        }\n    }\n\n    public closeAndGetPendingLocalState(): string {\n        // runtime matches pending ops to successful ones by clientId and client seq num, so we need to close the\n        // container at the same time we get pending state, otherwise this container could reconnect and resubmit with\n        // a new clientId and a future container using stale pending state without the new clientId would resubmit them\n\n        assert(this.attachState === AttachState.Attached, 0x0d1 /* \"Container should be attached before close\" */);\n        assert(this.resolvedUrl !== undefined && this.resolvedUrl.type === \"fluid\",\n            0x0d2 /* \"resolved url should be valid Fluid url\" */);\n        assert(!!this._protocolHandler, 0x2e3 /* \"Must have a valid protocol handler instance\" */);\n        assert(this._protocolHandler.attributes.term !== undefined,\n            0x30b /* Must have a valid protocol handler instance */);\n        const pendingState: IPendingContainerState = {\n            pendingRuntimeState: this.context.getPendingLocalState(),\n            url: this.resolvedUrl.url,\n            protocol: this.protocolHandler.getProtocolState(),\n            term: this._protocolHandler.attributes.term,\n            clientId: this.clientId,\n        };\n\n        this.close();\n\n        return JSON.stringify(pendingState);\n    }\n\n    public get attachState(): AttachState {\n        return this._attachState;\n    }\n\n    public serialize(): string {\n        assert(this.attachState === AttachState.Detached, 0x0d3 /* \"Should only be called in detached container\" */);\n\n        const appSummary: ISummaryTree = this.context.createSummary();\n        const protocolSummary = this.captureProtocolSummary();\n        const combinedSummary = combineAppAndProtocolSummary(appSummary, protocolSummary);\n\n        if (this.loader.services.detachedBlobStorage && this.loader.services.detachedBlobStorage.size > 0) {\n            combinedSummary.tree[\".hasAttachmentBlobs\"] = { type: SummaryType.Blob, content: \"true\" };\n        }\n        return JSON.stringify(combinedSummary);\n    }\n\n    public async attach(request: IRequest): Promise<void> {\n        await PerformanceEvent.timedExecAsync(this.mc.logger, { eventName: \"Attach\" }, async () => {\n            if (this._lifecycleState !== \"loaded\") {\n                // pre-0.58 error message: containerNotValidForAttach\n                throw new UsageError(`The Container is not in a valid state for attach [${this._lifecycleState}]`);\n            }\n\n            // If container is already attached or attach is in progress, throw an error.\n            assert(this._attachState === AttachState.Detached && !this.attachStarted,\n                0x205 /* \"attach() called more than once\" */);\n            this.attachStarted = true;\n\n            // If attachment blobs were uploaded in detached state we will go through a different attach flow\n            const hasAttachmentBlobs = this.loader.services.detachedBlobStorage !== undefined\n                && this.loader.services.detachedBlobStorage.size > 0;\n\n            try {\n                assert(this.deltaManager.inbound.length === 0,\n                    0x0d6 /* \"Inbound queue should be empty when attaching\" */);\n\n                let summary: ISummaryTree;\n                if (!hasAttachmentBlobs) {\n                    // Get the document state post attach - possibly can just call attach but we need to change the\n                    // semantics around what the attach means as far as async code goes.\n                    const appSummary: ISummaryTree = this.context.createSummary();\n                    const protocolSummary = this.captureProtocolSummary();\n                    summary = combineAppAndProtocolSummary(appSummary, protocolSummary);\n\n                    // Set the state as attaching as we are starting the process of attaching container.\n                    // This should be fired after taking the summary because it is the place where we are\n                    // starting to attach the container to storage.\n                    // Also, this should only be fired in detached container.\n                    this._attachState = AttachState.Attaching;\n                    this.context.notifyAttaching(getSnapshotTreeFromSerializedContainer(summary));\n                }\n\n                // Actually go and create the resolved document\n                const createNewResolvedUrl = await this.urlResolver.resolve(request);\n                ensureFluidResolvedUrl(createNewResolvedUrl);\n                if (this.service === undefined) {\n                    assert(this.client.details.type !== summarizerClientType,\n                        0x2c4 /* \"client should not be summarizer before container is created\" */);\n                    this.service = await runWithRetry(\n                        async () => this.serviceFactory.createContainer(\n                            summary,\n                            createNewResolvedUrl,\n                            this.subLogger,\n                            false, // clientIsSummarizer\n                        ),\n                        \"containerAttach\",\n                        this.mc.logger,\n                        {\n                            cancel: this.closeSignal,\n                        }, // progress\n                    );\n                }\n                const resolvedUrl = this.service.resolvedUrl;\n                ensureFluidResolvedUrl(resolvedUrl);\n                this._resolvedUrl = resolvedUrl;\n                await this.connectStorageService();\n\n                if (hasAttachmentBlobs) {\n                    // upload blobs to storage\n                    assert(!!this.loader.services.detachedBlobStorage, 0x24e /* \"assertion for type narrowing\" */);\n\n                    // build a table mapping IDs assigned locally to IDs assigned by storage and pass it to runtime to\n                    // support blob handles that only know about the local IDs\n                    const redirectTable = new Map<string, string>();\n                    // if new blobs are added while uploading, upload them too\n                    while (redirectTable.size < this.loader.services.detachedBlobStorage.size) {\n                        const newIds = this.loader.services.detachedBlobStorage.getBlobIds().filter(\n                            (id) => !redirectTable.has(id));\n                        for (const id of newIds) {\n                            const blob = await this.loader.services.detachedBlobStorage.readBlob(id);\n                            const response = await this.storageService.createBlob(blob);\n                            redirectTable.set(id, response.id);\n                        }\n                    }\n\n                    // take summary and upload\n                    const appSummary: ISummaryTree = this.context.createSummary(redirectTable);\n                    const protocolSummary = this.captureProtocolSummary();\n                    summary = combineAppAndProtocolSummary(appSummary, protocolSummary);\n\n                    this._attachState = AttachState.Attaching;\n                    this.context.notifyAttaching(getSnapshotTreeFromSerializedContainer(summary));\n\n                    await this.storageService.uploadSummaryWithContext(summary, {\n                        referenceSequenceNumber: 0,\n                        ackHandle: undefined,\n                        proposalHandle: undefined,\n                    });\n                }\n\n                this._attachState = AttachState.Attached;\n                this.emit(\"attached\");\n\n                // Propagate current connection state through the system.\n                this.propagateConnectionState();\n                if (!this.closed) {\n                    this.resumeInternal({ fetchOpsFromStorage: false, reason: \"createDetached\" });\n                }\n            } catch (error) {\n                // add resolved URL on error object so that host has the ability to find this document and delete it\n                const newError = normalizeError(error);\n                const resolvedUrl = this.resolvedUrl;\n                if (isFluidResolvedUrl(resolvedUrl)) {\n                    newError.addTelemetryProperties({ resolvedUrl: resolvedUrl.url });\n                }\n                this.close(newError);\n                throw newError;\n            }\n        },\n            { start: true, end: true, cancel: \"generic\" });\n    }\n\n    public async request(path: IRequest): Promise<IResponse> {\n        return PerformanceEvent.timedExecAsync(\n            this.mc.logger,\n            { eventName: \"Request\" },\n            async () => this.context.request(path),\n            { end: true, cancel: \"error\" },\n        );\n    }\n\n    private setAutoReconnectInternal(mode: ReconnectMode) {\n        const currentMode = this._deltaManager.connectionManager.reconnectMode;\n\n        if (currentMode === mode) {\n            return;\n        }\n\n        const now = performance.now();\n        const duration = now - this.setAutoReconnectTime;\n        this.setAutoReconnectTime = now;\n\n        this.mc.logger.sendTelemetryEvent({\n            eventName: mode === ReconnectMode.Enabled ? \"AutoReconnectEnabled\" : \"AutoReconnectDisabled\",\n            connectionMode: this.connectionMode,\n            connectionState: ConnectionState[this.connectionState],\n            duration,\n        });\n\n        this._deltaManager.connectionManager.setAutoReconnect(mode);\n    }\n\n    public connect() {\n        if (this.closed) {\n            throw new UsageError(`The Container is closed and cannot be connected`);\n        } else if (this._attachState !== AttachState.Attached) {\n            throw new UsageError(`The Container is not attached and cannot be connected`);\n        } else if (!this.connected) {\n            // Note: no need to fetch ops as we do it preemptively as part of DeltaManager.attachOpHandler().\n            // If there is gap, we will learn about it once connected, but the gap should be small (if any),\n            // assuming that connect() is called quickly after initial container boot.\n            this.connectInternal({ reason: \"DocumentConnect\", fetchOpsFromStorage: false });\n        }\n    }\n\n    private connectInternal(args: IConnectionArgs) {\n        assert(!this.closed, 0x2c5 /* \"Attempting to connect() a closed Container\" */);\n        assert(this._attachState === AttachState.Attached,\n            0x2c6 /* \"Attempting to connect() a container that is not attached\" */);\n\n        // Resume processing ops and connect to delta stream\n        this.resumeInternal(args);\n\n        // Set Auto Reconnect Mode\n        const mode = ReconnectMode.Enabled;\n        this.setAutoReconnectInternal(mode);\n    }\n\n    public disconnect() {\n        if (this.closed) {\n            throw new UsageError(`The Container is closed and cannot be disconnected`);\n        } else {\n            this.disconnectInternal();\n        }\n    }\n\n    private disconnectInternal() {\n        assert(!this.closed, 0x2c7 /* \"Attempting to disconnect() a closed Container\" */);\n\n        // Set Auto Reconnect Mode\n        const mode = ReconnectMode.Disabled;\n        this.setAutoReconnectInternal(mode);\n    }\n\n    private resumeInternal(args: IConnectionArgs) {\n        assert(!this.closed, 0x0d9 /* \"Attempting to connect() a closed DeltaManager\" */);\n\n        // Resume processing ops\n        if (this.inboundQueuePausedFromInit) {\n            this.inboundQueuePausedFromInit = false;\n            this._deltaManager.inbound.resume();\n            this._deltaManager.inboundSignal.resume();\n        }\n\n        // Ensure connection to web socket\n        this.connectToDeltaStream(args);\n    }\n\n    public async getAbsoluteUrl(relativeUrl: string): Promise<string | undefined> {\n        if (this.resolvedUrl === undefined) {\n            return undefined;\n        }\n\n        return this.urlResolver.getAbsoluteUrl(\n            this.resolvedUrl,\n            relativeUrl,\n            getPackageName(this._context?.codeDetails));\n    }\n\n    public async proposeCodeDetails(codeDetails: IFluidCodeDetails) {\n        if (!isFluidCodeDetails(codeDetails)) {\n            throw new Error(\"Provided codeDetails are not IFluidCodeDetails\");\n        }\n\n        if (this.codeLoader.IFluidCodeDetailsComparer) {\n            const comparison = await this.codeLoader.IFluidCodeDetailsComparer.compare(\n                codeDetails,\n                this.getCodeDetailsFromQuorum());\n            if (comparison !== undefined && comparison <= 0) {\n                throw new Error(\"Proposed code details should be greater than the current\");\n            }\n        }\n\n        return this.protocolHandler.quorum.propose(\"code\", codeDetails)\n            .then(() => true)\n            .catch(() => false);\n    }\n\n    private async processCodeProposal(): Promise<void> {\n        const codeDetails = this.getCodeDetailsFromQuorum();\n\n        await Promise.all([\n            this.deltaManager.inbound.pause(),\n            this.deltaManager.inboundSignal.pause()]);\n\n        if ((await this.context.satisfies(codeDetails) === true)) {\n            this.deltaManager.inbound.resume();\n            this.deltaManager.inboundSignal.resume();\n            return;\n        }\n\n        // pre-0.58 error message: existingContextDoesNotSatisfyIncomingProposal\n        this.close(new GenericError(\"Existing context does not satisfy incoming proposal\"));\n    }\n\n    private async getVersion(version: string | null): Promise<IVersion | undefined> {\n        const versions = await this.storageService.getVersions(version, 1);\n        return versions[0];\n    }\n\n    private recordConnectStartTime() {\n        if (this.connectionTransitionTimes[ConnectionState.Disconnected] === undefined) {\n            this.connectionTransitionTimes[ConnectionState.Disconnected] = performance.now();\n        }\n    }\n\n    private connectToDeltaStream(args: IConnectionArgs) {\n        this.recordConnectStartTime();\n\n        // All agents need \"write\" access, including summarizer.\n        if (!this._canReconnect || !this.client.details.capabilities.interactive) {\n            args.mode = \"write\";\n        }\n\n        this._deltaManager.connect(args);\n    }\n\n    /**\n     * Load container.\n     *\n     * @param specifiedVersion - one of the following\n     *   - undefined - fetch latest snapshot\n     *   - otherwise, version sha to load snapshot\n     */\n    private async load(\n        specifiedVersion: string | undefined,\n        loadMode: IContainerLoadMode,\n        pendingLocalState?: IPendingContainerState,\n    ) {\n        if (this._resolvedUrl === undefined) {\n            throw new Error(\"Attempting to load without a resolved url\");\n        }\n        this.service = await this.serviceFactory.createDocumentService(\n            this._resolvedUrl,\n            this.subLogger,\n            this.client.details.type === summarizerClientType,\n        );\n\n        // Ideally we always connect as \"read\" by default.\n        // Currently that works with SPO & r11s, because we get \"write\" connection when connecting to non-existing file.\n        // We should not rely on it by (one of them will address the issue, but we need to address both)\n        // 1) switching create new flow to one where we create file by posting snapshot\n        // 2) Fixing quorum workflows (have retry logic)\n        // That all said, \"read\" does not work with memorylicious workflows (that opens two simultaneous\n        // connections to same file) in two ways:\n        // A) creation flow breaks (as one of the clients \"sees\" file as existing, and hits #2 above)\n        // B) Once file is created, transition from view-only connection to write does not work - some bugs to be fixed.\n        const connectionArgs: IConnectionArgs = { reason: \"DocumentOpen\", mode: \"write\", fetchOpsFromStorage: false };\n\n        // Start websocket connection as soon as possible. Note that there is no op handler attached yet, but the\n        // DeltaManager is resilient to this and will wait to start processing ops until after it is attached.\n        if (loadMode.deltaConnection === undefined) {\n            this.connectToDeltaStream(connectionArgs);\n        }\n\n        if (!pendingLocalState) {\n            await this.connectStorageService();\n        } else {\n            // if we have pendingLocalState we can load without storage; don't wait for connection\n            this.connectStorageService().catch((error) => this.close(error));\n        }\n\n        this._attachState = AttachState.Attached;\n\n        // Fetch specified snapshot.\n        const { snapshot, versionId } = pendingLocalState === undefined\n            ? await this.fetchSnapshotTree(specifiedVersion)\n            : { snapshot: undefined, versionId: undefined };\n        assert(snapshot !== undefined || pendingLocalState !== undefined, 0x237 /* \"Snapshot should exist\" */);\n\n        const attributes: IDocumentAttributes = pendingLocalState === undefined\n            ? await this.getDocumentAttributes(this.storageService, snapshot)\n            : {\n                sequenceNumber: pendingLocalState.protocol.sequenceNumber,\n                minimumSequenceNumber: pendingLocalState.protocol.minimumSequenceNumber,\n                term: pendingLocalState.term,\n            };\n\n        let opsBeforeReturnP: Promise<void> | undefined;\n\n        // Attach op handlers to finish initialization and be able to start processing ops\n        // Kick off any ops fetching if required.\n        switch (loadMode.opsBeforeReturn) {\n            case undefined:\n                // Start prefetch, but not set opsBeforeReturnP - boot is not blocked by it!\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                this.attachDeltaManagerOpHandler(attributes, loadMode.deltaConnection !== \"none\" ? \"all\" : \"none\");\n                break;\n            case \"cached\":\n                opsBeforeReturnP = this.attachDeltaManagerOpHandler(attributes, \"cached\");\n                break;\n            case \"all\":\n                opsBeforeReturnP = this.attachDeltaManagerOpHandler(attributes, \"all\");\n                break;\n            default:\n                unreachableCase(loadMode.opsBeforeReturn);\n        }\n\n        // ...load in the existing quorum\n        // Initialize the protocol handler\n        this._protocolHandler = pendingLocalState === undefined\n            ? await this.initializeProtocolStateFromSnapshot(attributes, this.storageService, snapshot)\n            : await this.initializeProtocolState(\n                attributes,\n                pendingLocalState.protocol.members,\n                pendingLocalState.protocol.proposals,\n                pendingLocalState.protocol.values,\n            );\n\n        const codeDetails = this.getCodeDetailsFromQuorum();\n        await this.instantiateContext(\n            true, // existing\n            codeDetails,\n            snapshot,\n            pendingLocalState?.pendingRuntimeState,\n        );\n\n        // Internal context is fully loaded at this point\n        this.setLoaded();\n\n        // We might have hit some failure that did not manifest itself in exception in this flow,\n        // do not start op processing in such case - static version of Container.load() will handle it correctly.\n        if (!this.closed) {\n            if (opsBeforeReturnP !== undefined) {\n                this._deltaManager.inbound.resume();\n\n                await opsBeforeReturnP;\n                await this._deltaManager.inbound.waitTillProcessingDone();\n\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                this._deltaManager.inbound.pause();\n            }\n\n            switch (loadMode.deltaConnection) {\n                case undefined:\n                case \"delayed\":\n                    assert(this.inboundQueuePausedFromInit, 0x346 /* inboundQueuePausedFromInit should be true */);\n                    this.inboundQueuePausedFromInit = false;\n                    this._deltaManager.inbound.resume();\n                    this._deltaManager.inboundSignal.resume();\n                    break;\n                case \"none\":\n                    break;\n                default:\n                    unreachableCase(loadMode.deltaConnection);\n            }\n        }\n\n        // Safety net: static version of Container.load() should have learned about it through \"closed\" handler.\n        // But if that did not happen for some reason, fail load for sure.\n        // Otherwise we can get into situations where container is closed and does not try to connect to ordering\n        // service, but caller does not know that (callers do expect container to be not closed on successful path\n        // and listen only on \"closed\" event)\n        if (this.closed) {\n            throw new Error(\"Container was closed while load()\");\n        }\n\n        return {\n            sequenceNumber: attributes.sequenceNumber,\n            version: versionId,\n        };\n    }\n\n    private async createDetached(source: IFluidCodeDetails) {\n        const attributes: IDocumentAttributes = {\n            sequenceNumber: detachedContainerRefSeqNumber,\n            term: 1,\n            minimumSequenceNumber: 0,\n        };\n\n        await this.attachDeltaManagerOpHandler(attributes);\n\n        // Need to just seed the source data in the code quorum. Quorum itself is empty\n        const qValues = initQuorumValuesFromCodeDetails(source);\n        this._protocolHandler = await this.initializeProtocolState(\n            attributes,\n            [], // members\n            [], // proposals\n            qValues,\n        );\n\n        // The load context - given we seeded the quorum - will be great\n        await this.instantiateContextDetached(\n            false, // existing\n        );\n\n        this.setLoaded();\n    }\n\n    private async rehydrateDetachedFromSnapshot(detachedContainerSnapshot: ISummaryTree) {\n        if (detachedContainerSnapshot.tree[\".hasAttachmentBlobs\"] !== undefined) {\n            assert(!!this.loader.services.detachedBlobStorage && this.loader.services.detachedBlobStorage.size > 0,\n                0x250 /* \"serialized container with attachment blobs must be rehydrated with detached blob storage\" */);\n            delete detachedContainerSnapshot.tree[\".hasAttachmentBlobs\"];\n        }\n\n        const snapshotTree = getSnapshotTreeFromSerializedContainer(detachedContainerSnapshot);\n        this._storage.loadSnapshotForRehydratingContainer(snapshotTree);\n        const attributes = await this.getDocumentAttributes(this._storage, snapshotTree);\n\n        await this.attachDeltaManagerOpHandler(attributes);\n\n        // Initialize the protocol handler\n        const baseTree = getProtocolSnapshotTree(snapshotTree);\n        const qValues = await readAndParse<[string, ICommittedProposal][]>(\n            this._storage,\n            baseTree.blobs.quorumValues,\n        );\n        const codeDetails = getCodeDetailsFromQuorumValues(qValues);\n        this._protocolHandler =\n            await this.initializeProtocolState(\n                attributes,\n                [], // members\n                [], // proposals\n                codeDetails !== undefined ? initQuorumValuesFromCodeDetails(codeDetails) : []);\n\n        await this.instantiateContextDetached(\n            true, // existing\n            snapshotTree,\n        );\n\n        this.setLoaded();\n    }\n\n    private async connectStorageService(): Promise<void> {\n        if (this._storageService !== undefined) {\n            return;\n        }\n\n        assert(this.service !== undefined, 0x1ef /* \"services must be defined\" */);\n        const storageService = await this.service.connectToStorage();\n\n        this._storageService =\n            new RetriableDocumentStorageService(storageService, this.mc.logger);\n\n        if (this.options.summarizeProtocolTree === true) {\n            this.mc.logger.sendTelemetryEvent({ eventName: \"summarizeProtocolTreeEnabled\" });\n            this._storageService =\n                new ProtocolTreeStorageService(this._storageService, () => this.captureProtocolSummary());\n        }\n\n        // ensure we did not lose that policy in the process of wrapping\n        assert(storageService.policies?.minBlobSize === this.storageService.policies?.minBlobSize,\n            0x0e0 /* \"lost minBlobSize policy\" */);\n    }\n\n    private async getDocumentAttributes(\n        storage: IDocumentStorageService,\n        tree: ISnapshotTree | undefined,\n    ): Promise<IDocumentAttributes> {\n        if (tree === undefined) {\n            return {\n                minimumSequenceNumber: 0,\n                sequenceNumber: 0,\n                term: 1,\n            };\n        }\n\n        // Backward compatibility: old docs would have \".attributes\" instead of \"attributes\"\n        const attributesHash = \".protocol\" in tree.trees\n            ? tree.trees[\".protocol\"].blobs.attributes\n            : tree.blobs[\".attributes\"];\n\n        const attributes = await readAndParse<IDocumentAttributes>(storage, attributesHash);\n\n        // Backward compatibility for older summaries with no term\n        if (attributes.term === undefined) {\n            attributes.term = 1;\n        }\n\n        return attributes;\n    }\n\n    private async initializeProtocolStateFromSnapshot(\n        attributes: IDocumentAttributes,\n        storage: IDocumentStorageService,\n        snapshot: ISnapshotTree | undefined,\n    ): Promise<IProtocolHandler> {\n        let members: [string, ISequencedClient][] = [];\n        let proposals: [number, ISequencedProposal, string[]][] = [];\n        let values: [string, any][] = [];\n\n        if (snapshot !== undefined) {\n            const baseTree = getProtocolSnapshotTree(snapshot);\n            [members, proposals, values] = await Promise.all([\n                readAndParse<[string, ISequencedClient][]>(storage, baseTree.blobs.quorumMembers),\n                readAndParse<[number, ISequencedProposal, string[]][]>(storage, baseTree.blobs.quorumProposals),\n                readAndParse<[string, ICommittedProposal][]>(storage, baseTree.blobs.quorumValues),\n            ]);\n        }\n\n        const protocolHandler = await this.initializeProtocolState(\n            attributes,\n            members,\n            proposals,\n            values);\n\n        return protocolHandler;\n    }\n\n    private async initializeProtocolState(\n        attributes: IDocumentAttributes,\n        members: [string, ISequencedClient][],\n        proposals: [number, ISequencedProposal, string[]][],\n        values: [string, any][],\n    ): Promise<IProtocolHandler> {\n        const protocol = new ProtocolOpHandlerWithClientValidation(\n            attributes.minimumSequenceNumber,\n            attributes.sequenceNumber,\n            attributes.term,\n            members,\n            proposals,\n            values,\n            (key, value) => this.submitMessage(MessageType.Propose, { key, value }),\n        );\n\n        const protocolLogger = ChildLogger.create(this.subLogger, \"ProtocolHandler\");\n\n        protocol.quorum.on(\"error\", (error) => {\n            protocolLogger.sendErrorEvent(error);\n        });\n\n        // Track membership changes and update connection state accordingly\n        this.connectionStateHandler.initProtocol(protocol);\n\n        protocol.quorum.on(\"addProposal\", (proposal: ISequencedProposal) => {\n            if (proposal.key === \"code\" || proposal.key === \"code2\") {\n                this.emit(\"codeDetailsProposed\", proposal.value, proposal);\n            }\n        });\n\n        protocol.quorum.on(\n            \"approveProposal\",\n            (sequenceNumber, key, value) => {\n                if (key === \"code\" || key === \"code2\") {\n                    if (!isFluidCodeDetails(value)) {\n                        this.mc.logger.sendErrorEvent({\n                            eventName: \"CodeProposalNotIFluidCodeDetails\",\n                        });\n                    }\n                    this.processCodeProposal().catch((error) => {\n                        this.close(normalizeError(error));\n                        throw error;\n                    });\n                }\n            });\n\n        return protocol;\n    }\n\n    private captureProtocolSummary(): ISummaryTree {\n        const quorumSnapshot = this.protocolHandler.snapshot();\n        const summary: ISummaryTree = {\n            tree: {\n                attributes: {\n                    content: JSON.stringify(this.protocolHandler.attributes),\n                    type: SummaryType.Blob,\n                },\n                quorumMembers: {\n                    content: JSON.stringify(quorumSnapshot.members),\n                    type: SummaryType.Blob,\n                },\n                quorumProposals: {\n                    content: JSON.stringify(quorumSnapshot.proposals),\n                    type: SummaryType.Blob,\n                },\n                quorumValues: {\n                    content: JSON.stringify(quorumSnapshot.values),\n                    type: SummaryType.Blob,\n                },\n            },\n            type: SummaryType.Tree,\n        };\n\n        return summary;\n    }\n\n    private getCodeDetailsFromQuorum(): IFluidCodeDetails {\n        const quorum = this.protocolHandler.quorum;\n\n        const pkg = getCodeProposal(quorum);\n\n        return pkg as IFluidCodeDetails;\n    }\n\n    private get client(): IClient {\n        const client: IClient = this.options?.client !== undefined\n            ? (this.options.client as IClient)\n            : {\n                details: {\n                    capabilities: { interactive: true },\n                },\n                mode: \"read\", // default reconnection mode on lost connection / connection error\n                permission: [],\n                scopes: [],\n                user: { id: \"\" },\n            };\n\n        if (this.clientDetailsOverride !== undefined) {\n            merge(client.details, this.clientDetailsOverride);\n        }\n        client.details.environment = [client.details.environment, ` loaderVersion:${pkgVersion}`].join(\";\");\n        return client;\n    }\n\n    /**\n     * Returns true if connection is active, i.e. it's \"write\" connection and\n     * container runtime was notified about this connection (i.e. we are up-to-date and could send ops).\n     * This happens after client received its own joinOp and thus is in the quorum.\n     * If it's not true, runtime is not in position to send ops.\n     */\n    private activeConnection() {\n        return this.connectionState === ConnectionState.Connected &&\n            this.connectionMode === \"write\";\n    }\n\n    private createDeltaManager() {\n        const serviceProvider = () => this.service;\n        const deltaManager = new DeltaManager<ConnectionManager>(\n            serviceProvider,\n            ChildLogger.create(this.subLogger, \"DeltaManager\"),\n            () => this.activeConnection(),\n            (props: IConnectionManagerFactoryArgs) => new ConnectionManager(\n                serviceProvider,\n                this.client,\n                this._canReconnect,\n                ChildLogger.create(this.subLogger, \"ConnectionManager\"),\n                props),\n        );\n\n        // Disable inbound queues as Container is not ready to accept any ops until we are fully loaded!\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        deltaManager.inbound.pause();\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        deltaManager.inboundSignal.pause();\n\n        deltaManager.on(\"connect\", (details: IConnectionDetails, opsBehind?: number) => {\n            // Back-compat for new client and old server.\n            this._audience.clear();\n\n            for (const priorClient of details.initialClients ?? []) {\n                this._audience.addMember(priorClient.clientId, priorClient.client);\n            }\n\n            this.connectionStateHandler.receivedConnectEvent(\n                this.connectionMode,\n                details,\n            );\n        });\n\n        deltaManager.on(\"disconnect\", (reason: string) => {\n            this.collabWindowTracker?.stopSequenceNumberUpdate();\n            this.connectionStateHandler.receivedDisconnectEvent(reason);\n        });\n\n        deltaManager.on(\"throttled\", (warning: IThrottlingWarning) => {\n            const warn = warning as ContainerWarning;\n            // Some \"warning\" events come from outside the container and are logged\n            // elsewhere (e.g. summarizing container). We shouldn't log these here.\n            if (warn.logged !== true) {\n                this.logContainerError(warn);\n            }\n            this.emit(\"warning\", warn);\n        });\n\n        deltaManager.on(\"readonly\", (readonly) => {\n            this.emit(\"readonly\", readonly);\n        });\n\n        deltaManager.on(\"closed\", (error?: ICriticalContainerError) => {\n            this.closeCore(error);\n        });\n\n        return deltaManager;\n    }\n\n    private async attachDeltaManagerOpHandler(\n        attributes: IDocumentAttributes,\n        prefetchType?: \"cached\" | \"all\" | \"none\") {\n        return this._deltaManager.attachOpHandler(\n            attributes.minimumSequenceNumber,\n            attributes.sequenceNumber,\n            attributes.term ?? 1,\n            {\n                process: (message) => this.processRemoteMessage(message),\n                processSignal: (message) => {\n                    this.processSignal(message);\n                },\n            },\n            prefetchType);\n    }\n\n    private logConnectionStateChangeTelemetry(\n        value: ConnectionState,\n        oldState: ConnectionState,\n        reason?: string,\n    ) {\n        // Log actual event\n        const time = performance.now();\n        this.connectionTransitionTimes[value] = time;\n        const duration = time - this.connectionTransitionTimes[oldState];\n\n        let durationFromDisconnected: number | undefined;\n        let connectionInitiationReason: string | undefined;\n        let autoReconnect: ReconnectMode | undefined;\n        let checkpointSequenceNumber: number | undefined;\n        let opsBehind: number | undefined;\n        if (value === ConnectionState.Disconnected) {\n            autoReconnect = this._deltaManager.connectionManager.reconnectMode;\n        } else {\n            if (value === ConnectionState.Connected) {\n                durationFromDisconnected = time - this.connectionTransitionTimes[ConnectionState.Disconnected];\n                durationFromDisconnected = TelemetryLogger.formatTick(durationFromDisconnected);\n            } else {\n                // This info is of most interest on establishing connection only.\n                checkpointSequenceNumber = this.deltaManager.lastKnownSeqNumber;\n                if (this.deltaManager.hasCheckpointSequenceNumber) {\n                    opsBehind = checkpointSequenceNumber - this.deltaManager.lastSequenceNumber;\n                }\n            }\n            if (this.firstConnection) {\n                connectionInitiationReason = \"InitialConnect\";\n            } else {\n                connectionInitiationReason = \"AutoReconnect\";\n            }\n        }\n\n        this.mc.logger.sendPerformanceEvent({\n            eventName: `ConnectionStateChange_${ConnectionState[value]}`,\n            from: ConnectionState[oldState],\n            duration,\n            durationFromDisconnected,\n            reason,\n            connectionInitiationReason,\n            pendingClientId: this.connectionStateHandler.pendingClientId,\n            clientId: this.clientId,\n            autoReconnect,\n            opsBehind,\n            online: OnlineStatus[isOnline()],\n            lastVisible: this.lastVisible !== undefined ? performance.now() - this.lastVisible : undefined,\n            checkpointSequenceNumber,\n            quorumSize: this._protocolHandler?.quorum.getMembers().size,\n            ...this._deltaManager.connectionProps,\n        });\n\n        if (value === ConnectionState.Connected) {\n            this.firstConnection = false;\n        }\n    }\n\n    private propagateConnectionState() {\n        const logOpsOnReconnect: boolean =\n            this.connectionState === ConnectionState.Connected &&\n            !this.firstConnection &&\n            this.connectionMode === \"write\";\n        if (logOpsOnReconnect) {\n            this.messageCountAfterDisconnection = 0;\n        }\n\n        const state = this.connectionState === ConnectionState.Connected;\n\n        // Both protocol and context should not be undefined if we got so far.\n\n        if (this._context?.disposed === false) {\n            this.context.setConnectionState(state, this.clientId);\n        }\n        this.protocolHandler.setConnectionState(state, this.clientId);\n        raiseConnectedEvent(this.mc.logger, this, state, this.clientId);\n\n        if (logOpsOnReconnect) {\n            this.mc.logger.sendTelemetryEvent(\n                { eventName: \"OpsSentOnReconnect\", count: this.messageCountAfterDisconnection });\n        }\n    }\n\n    private submitContainerMessage(type: MessageType, contents: any, batch?: boolean, metadata?: any): number {\n        const outboundMessageType: string = type;\n        switch (outboundMessageType) {\n            case MessageType.Operation:\n            case MessageType.RemoteHelp:\n                break;\n            case MessageType.Summarize: {\n                // github #6451: this is only needed for staging so the server\n                // know when the protocol tree is included\n                // this can be removed once all clients send\n                // protocol tree by default\n                const summary = contents as ISummaryContent;\n                if (summary.details === undefined) {\n                    summary.details = {};\n                }\n                summary.details.includesProtocolTree =\n                    this.options.summarizeProtocolTree === true;\n                break;\n            }\n            default:\n                this.close(new GenericError(\"invalidContainerSubmitOpType\",\n                    undefined /* error */,\n                    { messageType: type }));\n                return -1;\n        }\n        return this.submitMessage(type, contents, batch, metadata);\n    }\n\n    private submitMessage(type: MessageType, contents: any, batch?: boolean, metadata?: any): number {\n        if (this.connectionState !== ConnectionState.Connected) {\n            this.mc.logger.sendErrorEvent({ eventName: \"SubmitMessageWithNoConnection\", type });\n            return -1;\n        }\n\n        this.messageCountAfterDisconnection += 1;\n        this.collabWindowTracker?.stopSequenceNumberUpdate();\n        return this._deltaManager.submit(type, contents, batch, metadata);\n    }\n\n    private processRemoteMessage(message: ISequencedDocumentMessage): IProcessMessageResult {\n        const local = this.clientId === message.clientId;\n\n        // Allow the protocol handler to process the message\n        let result: IProcessMessageResult = { immediateNoOp: false };\n        try {\n            result = this.protocolHandler.processMessage(message, local);\n        } catch (error) {\n            this.close(wrapError(error, (errorMessage) =>\n                new DataCorruptionError(errorMessage, extractSafePropertiesFromMessage(message))));\n        }\n\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        if (isUnpackedRuntimeMessage(message) && !isRuntimeMessage(message)) {\n            this.mc.logger.sendTelemetryEvent(\n                { eventName: \"UnpackedRuntimeMessage\", type: message.type });\n        }\n        // Forward non system messages to the loaded runtime for processing\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        if (isRuntimeMessage(message) || isUnpackedRuntimeMessage(message)) {\n            this.context.process(message, local, undefined);\n        }\n\n        // Inactive (not in quorum or not writers) clients don't take part in the minimum sequence number calculation.\n        if (this.activeConnection()) {\n            if (this.collabWindowTracker === undefined) {\n                // Note that config from first connection will be used for this container's lifetime.\n                // That means that if relay service changes settings, such changes will impact only newly booted\n                // clients.\n                // All existing will continue to use settings they got earlier.\n                assert(\n                    this.serviceConfiguration !== undefined,\n                    0x2e4 /* \"there should be service config for active connection\" */);\n                this.collabWindowTracker = new CollabWindowTracker(\n                    (type, contents) => {\n                        assert(this.activeConnection(),\n                            0x241 /* \"disconnect should result in stopSequenceNumberUpdate() call\" */);\n                        this.submitMessage(type, contents);\n                    },\n                    this.serviceConfiguration.noopTimeFrequency,\n                    this.serviceConfiguration.noopCountFrequency,\n                );\n            }\n            this.collabWindowTracker.scheduleSequenceNumberUpdate(message, result.immediateNoOp === true);\n        }\n\n        this.emit(\"op\", message);\n\n        return result;\n    }\n\n    private submitSignal(message: any) {\n        this._deltaManager.submitSignal(JSON.stringify(message));\n    }\n\n    private processSignal(message: ISignalMessage) {\n        // No clientId indicates a system signal message.\n        if (message.clientId === null) {\n            const innerContent = message.content as { content: any; type: string; };\n            if (innerContent.type === MessageType.ClientJoin) {\n                const newClient = innerContent.content as ISignalClient;\n                this._audience.addMember(newClient.clientId, newClient.client);\n            } else if (innerContent.type === MessageType.ClientLeave) {\n                const leftClientId = innerContent.content as string;\n                this._audience.removeMember(leftClientId);\n            }\n        } else {\n            const local = this.clientId === message.clientId;\n            this.context.processSignal(message, local);\n        }\n    }\n\n    /**\n     * Get the most recent snapshot, or a specific version.\n     * @param specifiedVersion - The specific version of the snapshot to retrieve\n     * @returns The snapshot requested, or the latest snapshot if no version was specified, plus version ID\n     */\n    private async fetchSnapshotTree(specifiedVersion: string | undefined):\n        Promise<{ snapshot?: ISnapshotTree; versionId?: string; }> {\n        const version = await this.getVersion(specifiedVersion ?? null);\n\n        if (version === undefined && specifiedVersion !== undefined) {\n            // We should have a defined version to load from if specified version requested\n            this.mc.logger.sendErrorEvent({ eventName: \"NoVersionFoundWhenSpecified\", id: specifiedVersion });\n        }\n        this._loadedFromVersion = version;\n        const snapshot = await this.storageService.getSnapshotTree(version) ?? undefined;\n\n        if (snapshot === undefined && version !== undefined) {\n            this.mc.logger.sendErrorEvent({ eventName: \"getSnapshotTreeFailed\", id: version.id });\n        }\n        return { snapshot, versionId: version?.id };\n    }\n\n    private async instantiateContextDetached(\n        existing: boolean,\n        snapshot?: ISnapshotTree,\n    ) {\n        const codeDetails = this.getCodeDetailsFromQuorum();\n        if (codeDetails === undefined) {\n            throw new Error(\"pkg should be provided in create flow!!\");\n        }\n\n        await this.instantiateContext(\n            existing,\n            codeDetails,\n            snapshot,\n        );\n    }\n\n    private async instantiateContext(\n        existing: boolean,\n        codeDetails: IFluidCodeDetails,\n        snapshot?: ISnapshotTree,\n        pendingLocalState?: unknown,\n    ) {\n        assert(this._context?.disposed !== false, 0x0dd /* \"Existing context not disposed\" */);\n\n        // The relative loader will proxy requests to '/' to the loader itself assuming no non-cache flags\n        // are set. Global requests will still go directly to the loader\n        const loader = new RelativeLoader(this, this.loader);\n        this._context = await ContainerContext.createOrLoad(\n            this,\n            this.scope,\n            this.codeLoader,\n            codeDetails,\n            snapshot,\n            new DeltaManagerProxy(this._deltaManager),\n            new QuorumProxy(this.protocolHandler.quorum),\n            loader,\n            (type, contents, batch, metadata) => this.submitContainerMessage(type, contents, batch, metadata),\n            (message) => this.submitSignal(message),\n            (error?: ICriticalContainerError) => this.close(error),\n            Container.version,\n            (dirty: boolean) => this.updateDirtyContainerState(dirty),\n            existing,\n            pendingLocalState,\n        );\n\n        this.emit(\"contextChanged\", codeDetails);\n    }\n\n    private updateDirtyContainerState(dirty: boolean) {\n        if (this._dirtyContainer === dirty) {\n            return;\n        }\n        this._dirtyContainer = dirty;\n        this.emit(dirty ? dirtyContainerEvent : savedContainerEvent);\n    }\n\n    private logContainerError(warning: ContainerWarning) {\n        this.mc.logger.sendErrorEvent({ eventName: \"ContainerWarning\" }, warning);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { v4 as uuid } from \"uuid\";\nimport { ITelemetryBaseLogger, ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport {\n    FluidObject,\n    IFluidRouter,\n    IRequest,\n    IRequestHeader,\n    IResponse,\n} from \"@fluidframework/core-interfaces\";\nimport {\n    IContainer,\n    IFluidModule,\n    IHostLoader,\n    ILoader,\n    ILoaderOptions as ILoaderOptions1,\n    LoaderHeader,\n    IProvideFluidCodeDetailsComparer,\n    IFluidCodeDetails,\n} from \"@fluidframework/container-definitions\";\nimport {\n    ChildLogger,\n    DebugLogger,\n    IConfigProviderBase,\n    loggerToMonitoringContext,\n    mixinMonitoringContext,\n    MonitoringContext,\n    PerformanceEvent,\n    sessionStorageConfigProvider,\n} from \"@fluidframework/telemetry-utils\";\nimport {\n    IDocumentServiceFactory,\n    IDocumentStorageService,\n    IFluidResolvedUrl,\n    IResolvedUrl,\n    IUrlResolver,\n} from \"@fluidframework/driver-definitions\";\nimport { ISequencedDocumentMessage } from \"@fluidframework/protocol-definitions\";\nimport {\n    ensureFluidResolvedUrl,\n    MultiUrlResolver,\n    MultiDocumentServiceFactory,\n} from \"@fluidframework/driver-utils\";\nimport { Container, IPendingContainerState } from \"./container\";\nimport { IParsedUrl, parseUrl } from \"./utils\";\nimport { pkgVersion } from \"./packageVersion\";\n\nfunction canUseCache(request: IRequest): boolean {\n    if (request.headers === undefined) {\n        return true;\n    }\n\n    return request.headers[LoaderHeader.cache] !== false;\n}\n\nexport class RelativeLoader implements ILoader {\n    constructor(\n        private readonly container: Container,\n        private readonly loader: ILoader | undefined,\n    ) {\n    }\n\n    public get IFluidRouter(): IFluidRouter { return this; }\n\n    public async resolve(request: IRequest): Promise<IContainer> {\n        if (request.url.startsWith(\"/\")) {\n            if (canUseCache(request)) {\n                return this.container;\n            } else {\n                const resolvedUrl = this.container.resolvedUrl;\n                ensureFluidResolvedUrl(resolvedUrl);\n                const container = await Container.load(\n                    this.loader as Loader,\n                    {\n                        canReconnect: request.headers?.[LoaderHeader.reconnect],\n                        clientDetailsOverride: request.headers?.[LoaderHeader.clientDetails],\n                        resolvedUrl: { ...resolvedUrl },\n                        version: request.headers?.[LoaderHeader.version] ?? undefined,\n                        loadMode: request.headers?.[LoaderHeader.loadMode],\n                    },\n                );\n                return container;\n            }\n        }\n\n        if (this.loader === undefined) {\n            throw new Error(\"Cannot resolve external containers\");\n        }\n        return this.loader.resolve(request);\n    }\n\n    public async request(request: IRequest): Promise<IResponse> {\n        if (request.url.startsWith(\"/\")) {\n            const container = await this.resolve(request);\n            return container.request(request);\n        }\n\n        if (this.loader === undefined) {\n            return {\n                status: 404,\n                value: \"Cannot request external containers\",\n                mimeType: \"plain/text\",\n            };\n        }\n        return this.loader.request(request);\n    }\n}\n\nfunction createCachedResolver(resolver: IUrlResolver) {\n    const cacheResolver = Object.create(resolver) as IUrlResolver;\n    const resolveCache = new Map<string, Promise<IResolvedUrl | undefined>>();\n    cacheResolver.resolve = async (request: IRequest): Promise<IResolvedUrl | undefined> => {\n        if (!canUseCache(request)) {\n            return resolver.resolve(request);\n        }\n        if (!resolveCache.has(request.url)) {\n            resolveCache.set(request.url, resolver.resolve(request));\n        }\n\n        return resolveCache.get(request.url);\n    };\n    return cacheResolver;\n}\n\nexport interface ILoaderOptions extends ILoaderOptions1 {\n    summarizeProtocolTree?: boolean;\n}\n\n/**\n * @deprecated IFluidModuleWithDetails interface is moved to\n * {@link @fluidframework/container-definition#IFluidModuleWithDetails}\n * to have all the code loading modules in one package. #8193\n * Encapsulates a module entry point with corresponding code details.\n */\nexport interface IFluidModuleWithDetails {\n    /** Fluid code module that implements the runtime factory needed to instantiate the container runtime. */\n    module: IFluidModule;\n    /**\n     * Code details associated with the module. Represents a document schema this module supports.\n     * If the code loader implements the {@link @fluidframework/core-interfaces#IFluidCodeDetailsComparer} interface,\n     * it'll be called to determine whether the module code details satisfy the new code proposal in the quorum.\n     */\n    details: IFluidCodeDetails;\n}\n\n/**\n * @deprecated ICodeDetailsLoader interface is moved to {@link @fluidframework/container-definition#ICodeDetailsLoader}\n * to have code loading modules in one package. #8193\n * Fluid code loader resolves a code module matching the document schema, i.e. code details, such as\n * a package name and package version range.\n */\nexport interface ICodeDetailsLoader\n extends Partial<IProvideFluidCodeDetailsComparer> {\n /**\n  * Load the code module (package) that is capable to interact with the document.\n  *\n  * @param source - Code proposal that articulates the current schema the document is written in.\n  * @returns - Code module entry point along with the code details associated with it.\n  */\n load(source: IFluidCodeDetails): Promise<IFluidModuleWithDetails>;\n}\n\n/**\n * Services and properties necessary for creating a loader\n */\nexport interface ILoaderProps {\n    /**\n     * The url resolver used by the loader for resolving external urls\n     * into Fluid urls such that the container specified by the\n     * external url can be loaded.\n     */\n    readonly urlResolver: IUrlResolver;\n    /**\n     * The document service factory take the Fluid url provided\n     * by the resolved url and constructs all the necessary services\n     * for communication with the container's server.\n     */\n    readonly documentServiceFactory: IDocumentServiceFactory;\n    /**\n     * The code loader handles loading the necessary code\n     * for running a container once it is loaded.\n     */\n    readonly codeLoader: ICodeDetailsLoader;\n\n    /**\n     * A property bag of options used by various layers\n     * to control features\n     */\n    readonly options?: ILoaderOptions;\n\n    /**\n     * Scope is provided to all container and is a set of shared\n     * services for container's to integrate with their host environment.\n     */\n    readonly scope?: FluidObject;\n\n    /**\n     * The logger that all telemetry should be pushed to.\n     */\n    readonly logger?: ITelemetryBaseLogger;\n\n    /**\n     * Blobs storage for detached containers.\n     */\n    readonly detachedBlobStorage?: IDetachedBlobStorage;\n\n    /**\n     * The configuration provider which may be used to control features.\n     */\n     readonly configProvider?: IConfigProviderBase;\n}\n\n/**\n * Services and properties used by and exposed by the loader\n */\nexport interface ILoaderServices {\n    /**\n     * The url resolver used by the loader for resolving external urls\n     * into Fluid urls such that the container specified by the\n     * external url can be loaded.\n     */\n    readonly urlResolver: IUrlResolver;\n    /**\n     * The document service factory take the Fluid url provided\n     * by the resolved url and constructs all the necessary services\n     * for communication with the container's server.\n     */\n    readonly documentServiceFactory: IDocumentServiceFactory;\n    /**\n     * The code loader handles loading the necessary code\n     * for running a container once it is loaded.\n     */\n    readonly codeLoader: ICodeDetailsLoader;\n\n    /**\n     * A property bag of options used by various layers\n     * to control features\n     */\n    readonly options: ILoaderOptions;\n\n    /**\n     * Scope is provided to all container and is a set of shared\n     * services for container's to integrate with their host environment.\n     */\n    readonly scope: FluidObject;\n\n    /**\n     * The logger downstream consumers should construct their loggers from\n     */\n    readonly subLogger: ITelemetryLogger;\n\n    /**\n     * Blobs storage for detached containers.\n     */\n    readonly detachedBlobStorage?: IDetachedBlobStorage;\n}\n\n/**\n * Subset of IDocumentStorageService which only supports createBlob() and readBlob(). This is used to support\n * blobs in detached containers.\n */\nexport type IDetachedBlobStorage = Pick<IDocumentStorageService, \"createBlob\" | \"readBlob\"> & {\n    size: number;\n    /**\n     * Return an array of all blob IDs present in storage\n     */\n    getBlobIds(): string[];\n };\n\n/**\n * Manages Fluid resource loading\n */\nexport class Loader implements IHostLoader {\n    private readonly containers = new Map<string, Promise<Container>>();\n    public readonly services: ILoaderServices;\n    private readonly mc: MonitoringContext;\n\n    constructor(loaderProps: ILoaderProps) {\n        const scope: FluidObject<ILoader> = { ...loaderProps.scope };\n        if (loaderProps.options?.provideScopeLoader !== false) {\n            scope.ILoader = this;\n        }\n        const telemetryProps = {\n            loaderId: uuid(),\n            loaderVersion: pkgVersion,\n        };\n\n        const subMc = mixinMonitoringContext(\n            DebugLogger.mixinDebugLogger(\"fluid:telemetry\", loaderProps.logger, { all: telemetryProps }),\n            sessionStorageConfigProvider.value,\n            loaderProps.configProvider,\n        );\n\n        this.services = {\n            urlResolver: createCachedResolver(MultiUrlResolver.create(loaderProps.urlResolver)),\n            documentServiceFactory: MultiDocumentServiceFactory.create(loaderProps.documentServiceFactory),\n            codeLoader: loaderProps.codeLoader,\n            options: loaderProps.options ?? {},\n            scope,\n            subLogger: subMc.logger,\n            detachedBlobStorage: loaderProps.detachedBlobStorage,\n        };\n        this.mc = loggerToMonitoringContext(\n            ChildLogger.create(this.services.subLogger, \"Loader\"));\n    }\n\n    public get IFluidRouter(): IFluidRouter { return this; }\n\n    public async createDetachedContainer(codeDetails: IFluidCodeDetails): Promise<IContainer> {\n        const container = await Container.createDetached(\n            this,\n            codeDetails,\n        );\n\n        if (this.cachingEnabled) {\n            container.once(\"attached\", () => {\n                ensureFluidResolvedUrl(container.resolvedUrl);\n                const parsedUrl = parseUrl(container.resolvedUrl.url);\n                if (parsedUrl !== undefined) {\n                    this.addToContainerCache(parsedUrl.id, Promise.resolve(container));\n                }\n            });\n        }\n\n        return container;\n    }\n\n    public async rehydrateDetachedContainerFromSnapshot(snapshot: string): Promise<IContainer> {\n        return Container.rehydrateDetachedFromSnapshot(this, snapshot);\n    }\n\n    public async resolve(request: IRequest, pendingLocalState?: string): Promise<IContainer> {\n        const eventName = pendingLocalState === undefined ? \"Resolve\" : \"ResolveWithPendingState\";\n        return PerformanceEvent.timedExecAsync(this.mc.logger, { eventName }, async () => {\n            const resolved = await this.resolveCore(\n                request,\n                pendingLocalState !== undefined ? JSON.parse(pendingLocalState) : undefined,\n            );\n            return resolved.container;\n        });\n    }\n\n    public async request(request: IRequest): Promise<IResponse> {\n        return PerformanceEvent.timedExecAsync(this.mc.logger, { eventName: \"Request\" }, async () => {\n            const resolved = await this.resolveCore(request);\n            return resolved.container.request({\n                ...request,\n                url: `${resolved.parsed.path}${resolved.parsed.query}`,\n            });\n        });\n    }\n\n    private getKeyForContainerCache(request: IRequest, parsedUrl: IParsedUrl): string {\n        const key = request.headers?.[LoaderHeader.version] !== undefined\n            ? `${parsedUrl.id}@${request.headers[LoaderHeader.version]}`\n            : parsedUrl.id;\n        return key;\n    }\n\n    private addToContainerCache(key: string, containerP: Promise<Container>) {\n        this.containers.set(key, containerP);\n        containerP.then((container) => {\n            // If the container is closed or becomes closed after we resolve it, remove it from the cache.\n            if (container.closed) {\n                this.containers.delete(key);\n            } else {\n                container.once(\"closed\", () => {\n                    this.containers.delete(key);\n                });\n            }\n        }).catch((error) => {});\n    }\n\n    private async resolveCore(\n        request: IRequest,\n        pendingLocalState?: IPendingContainerState,\n    ): Promise<{ container: Container; parsed: IParsedUrl; }> {\n        const resolvedAsFluid = await this.services.urlResolver.resolve(request);\n        ensureFluidResolvedUrl(resolvedAsFluid);\n\n        // Parse URL into data stores\n        const parsed = parseUrl(resolvedAsFluid.url);\n        if (parsed === undefined) {\n            throw new Error(`Invalid URL ${resolvedAsFluid.url}`);\n        }\n\n        if (pendingLocalState !== undefined) {\n            const parsedPendingUrl = parseUrl(pendingLocalState.url);\n            if (parsedPendingUrl?.id !== parsed.id ||\n                parsedPendingUrl?.path.replace(/\\/$/, \"\") !== parsed.path.replace(/\\/$/, \"\")) {\n                const message = `URL ${resolvedAsFluid.url} does not match pending state URL ${pendingLocalState.url}`;\n                throw new Error(message);\n            }\n        }\n\n        const { canCache, fromSequenceNumber } = this.parseHeader(parsed, request);\n        const shouldCache = pendingLocalState !== undefined ? false : canCache;\n\n        let container: Container;\n        if (shouldCache) {\n            const key = this.getKeyForContainerCache(request, parsed);\n            const maybeContainer = await this.containers.get(key);\n            if (maybeContainer !== undefined) {\n                container = maybeContainer;\n            } else {\n                const containerP =\n                    this.loadContainer(\n                        request,\n                        resolvedAsFluid);\n                this.addToContainerCache(key, containerP);\n                container = await containerP;\n            }\n        } else {\n            container =\n                await this.loadContainer(\n                    request,\n                    resolvedAsFluid,\n                    pendingLocalState);\n        }\n\n        if (container.deltaManager.lastSequenceNumber <= fromSequenceNumber) {\n            await new Promise<void>((resolve, reject) => {\n                function opHandler(message: ISequencedDocumentMessage) {\n                    if (message.sequenceNumber > fromSequenceNumber) {\n                        resolve();\n                        container.removeListener(\"op\", opHandler);\n                    }\n                }\n\n                container.on(\"op\", opHandler);\n            });\n        }\n\n        return { container, parsed };\n    }\n\n    private get cachingEnabled() {\n        return this.services.options.cache !== false;\n    }\n\n    private canCacheForRequest(headers: IRequestHeader): boolean {\n        return this.cachingEnabled && headers[LoaderHeader.cache] !== false;\n    }\n\n    private parseHeader(parsed: IParsedUrl, request: IRequest) {\n        let fromSequenceNumber = -1;\n\n        request.headers = request.headers ?? {};\n\n        const headerSeqNum = request.headers[LoaderHeader.sequenceNumber];\n        if (headerSeqNum !== undefined) {\n            fromSequenceNumber = headerSeqNum;\n        }\n\n        // If set in both query string and headers, use query string\n        request.headers[LoaderHeader.version] = parsed.version ?? request.headers[LoaderHeader.version];\n\n        const canCache = this.canCacheForRequest(request.headers);\n\n        return {\n            canCache,\n            fromSequenceNumber,\n        };\n    }\n\n    private async loadContainer(\n        request: IRequest,\n        resolved: IFluidResolvedUrl,\n        pendingLocalState?: IPendingContainerState,\n    ): Promise<Container> {\n        return Container.load(\n            this,\n            {\n                canReconnect: request.headers?.[LoaderHeader.reconnect],\n                clientDetailsOverride: request.headers?.[LoaderHeader.clientDetails],\n                resolvedUrl: resolved,\n                version: request.headers?.[LoaderHeader.version] ?? undefined,\n                loadMode: request.headers?.[LoaderHeader.loadMode],\n            },\n            pendingLocalState,\n        );\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IDisposable, IEventProvider, IErrorEvent, ITelemetryBaseLogger } from \"@fluidframework/common-definitions\";\nimport {\n    ConnectionMode,\n    IClient,\n    IClientConfiguration,\n    ICreateBlobResponse,\n    IDocumentMessage,\n    INack,\n    ISequencedDocumentMessage,\n    ISignalClient,\n    ISignalMessage,\n    ISnapshotTree,\n    ISummaryHandle,\n    ISummaryTree,\n    ITokenClaims,\n    IVersion,\n} from \"@fluidframework/protocol-definitions\";\nimport { IResolvedUrl } from \"./urlResolver\";\n\nexport interface IDeltasFetchResult {\n    /**\n     * Sequential set of messages starting from 'from' sequence number.\n     * May be partial result, i.e. not fulfill original request in full.\n     */\n    messages: ISequencedDocumentMessage[];\n\n    /**\n     * If true, storage only partially fulfilled request, but has more ops\n     * If false, the request was fulfilled. If less ops were returned then\n     * requested, then storage does not have more ops in this range.\n     */\n    partialResult: boolean;\n}\n\n/**\n * Interface to provide access to stored deltas for a shared object\n */\nexport interface IDeltaStorageService {\n    /**\n     * Retrieves all the delta operations within the inclusive sequence number range\n     * @param tenantId - Id of the tenant.\n     * @param id - document id.\n     * @param from - first op to retrieve (inclusive)\n     * @param to - first op not to retrieve (exclusive end)\n     * @param fetchReason - Reason for fetching the messages. Example, gap between seq number\n     *  of Op on wire and known seq number. It should not contain any PII. It can be logged by\n     *  spo which could help in debugging sessions if any issue occurs.\n     */\n    get(\n        tenantId: string,\n        id: string,\n        from: number, // inclusive\n        to: number, // exclusive\n        fetchReason?: string,\n    ): Promise<IDeltasFetchResult>;\n}\n\nexport type IStreamResult<T> = { done: true; } | { done: false; value: T; };\n\n/**\n * Read interface for the Queue\n */\nexport interface IStream<T> {\n    read(): Promise<IStreamResult<T>>;\n}\n\n/**\n * Interface to provide access to stored deltas for a shared object\n */\nexport interface IDocumentDeltaStorageService {\n    /**\n     * Retrieves all the delta operations within the exclusive sequence number range\n     * @param from - first op to retrieve (inclusive)\n     * @param to - first op not to retrieve (exclusive end)\n     * @param abortSignal - signal that aborts operation\n     * @param cachedOnly - return only cached ops, i.e. ops available locally on client.\n     * @param fetchReason - Reason for fetching the messages. Example, gap between seq number\n     *  of Op on wire and known seq number. It should not contain any PII. It can be logged by\n     *  spo which could help in debugging sessions if any issue occurs.\n     */\n    fetchMessages(from: number,\n        to: number | undefined,\n        abortSignal?: AbortSignal,\n        cachedOnly?: boolean,\n        fetchReason?: string,\n    ): IStream<ISequencedDocumentMessage[]>;\n}\n\nexport interface IDocumentStorageServicePolicies {\n    readonly caching?: LoaderCachingPolicy;\n\n    // If this policy is provided, it tells runtime on ideal size for blobs\n    // Blobs that are smaller than that size should be aggregated into bigger blobs\n    readonly minBlobSize?: number;\n\n    /**\n     * This policy tells the runtime that the driver will not use cached snapshots older than this value.\n     */\n    readonly maximumCacheDurationMs?: number;\n}\n\n/**\n * Interface to provide access to snapshots saved for a shared object\n */\nexport interface IDocumentStorageService extends Partial<IDisposable> {\n    repositoryUrl: string;\n\n    /**\n     * Policies implemented/instructed by driver.\n     */\n    readonly policies?: IDocumentStorageServicePolicies;\n\n    /**\n     * Returns the snapshot tree.\n     * @param version - Version of the snapshot to be fetched.\n     * @param scenarioName - scenario in which this api is called. This will be recorded by server and would help\n     *  in debugging purposes to see why this call was made.\n     */\n    getSnapshotTree(version?: IVersion, scenarioName?: string): Promise<ISnapshotTree | null>;\n\n    /**\n     * Retrieves all versions of the document starting at the specified versionId - or null if from the head\n     * @param versionId - Version id of the requested version.\n     * @param count - Number of the versions to be fetched.\n     * @param scenarioName - scenario in which this api is called. This will be recorded by server and would help\n     *  in debugging purposes to see why this call was made.\n     */\n    getVersions(versionId: string | null, count: number, scenarioName?: string): Promise<IVersion[]>;\n\n    /**\n     * Creates a blob out of the given buffer\n     */\n    createBlob(file: ArrayBufferLike): Promise<ICreateBlobResponse>;\n\n    /**\n     * Reads the object with the given ID, returns content in arrayBufferLike\n     */\n    readBlob(id: string): Promise<ArrayBufferLike>;\n\n    /**\n     * Uploads a summary tree to storage using the given context for reference of previous summary handle.\n     * The ISummaryHandles in the uploaded tree should have paths to indicate which summary object they are\n     * referencing from the previously acked summary.\n     * Returns the uploaded summary handle.\n     */\n    uploadSummaryWithContext(summary: ISummaryTree, context: ISummaryContext): Promise<string>;\n\n    /**\n     * Retrieves the commit that matches the packfile handle. If the packfile has already been committed and the\n     * server has deleted it this call may result in a broken promise.\n     */\n    downloadSummary(handle: ISummaryHandle): Promise<ISummaryTree>;\n}\n\nexport interface IDocumentDeltaConnectionEvents extends IErrorEvent {\n    (event: \"nack\", listener: (documentId: string, message: INack[]) => void);\n    (event: \"disconnect\", listener: (reason: any) => void);\n    (event: \"op\", listener: (documentId: string, messages: ISequencedDocumentMessage[]) => void);\n    (event: \"signal\", listener: (message: ISignalMessage) => void);\n    (event: \"pong\", listener: (latency: number) => void);\n    (event: \"error\", listener: (error: any) => void);\n}\n\nexport interface IDocumentDeltaConnection extends IDisposable, IEventProvider<IDocumentDeltaConnectionEvents> {\n    /**\n     * ClientID for the connection\n     */\n    clientId: string;\n\n    /**\n     * Claims for the client\n     */\n    claims: ITokenClaims;\n\n    /**\n     * Mode of the client\n     */\n    mode: ConnectionMode;\n\n    /**\n     * Whether the connection was made to a new or existing document\n     */\n    existing: boolean;\n\n    /**\n     * Protocol version being used with the service\n     */\n    version: string;\n\n    /**\n     * Messages sent during the connection\n     */\n    initialMessages: ISequencedDocumentMessage[];\n\n    /**\n     * Signals sent during the connection\n     */\n    initialSignals: ISignalMessage[];\n\n    /**\n     * Prior clients already connected.\n     */\n    initialClients: ISignalClient[];\n\n    /**\n     * Configuration details provided by the service\n     */\n    serviceConfiguration: IClientConfiguration;\n\n    /**\n     * Last known sequence number to ordering service at the time of connection\n     * It may lap actual last sequence number (quite a bit, if container  is very active).\n     * But it's best information for client to figure out how far it is behind, at least\n     * for \"read\" connections. \"write\" connections may use own \"join\" op to similar information,\n     * that is likely to be more up-to-date.\n     */\n    checkpointSequenceNumber?: number;\n\n    /**\n     * Properties that server can send to client to tell info about node that client is connected to. For ex, for spo\n     * it could contain info like build version, environment, region etc. These properties can be logged by client\n     * to better understand server environment etc. and use it in case error occurs.\n     * Format: \"prop1:val1;prop2:val2;prop3:val3\"\n     */\n    relayServiceAgent?: string;\n\n    /**\n     * Submit a new message to the server\n     */\n    submit(messages: IDocumentMessage[]): void;\n\n    /**\n     * Submit a new signal to the server\n     */\n    submitSignal(message: any): void;\n}\n\nexport enum LoaderCachingPolicy {\n    /**\n     * The loader should not implement any prefetching or caching policy.\n     */\n    NoCaching,\n\n    /**\n     * The loader should implement prefetching policy, i.e. it should prefetch resources from the latest snapshot.\n     */\n    Prefetch,\n}\n\nexport interface IDocumentServicePolicies {\n    /**\n     * Do not connect to delta stream\n     */\n    readonly storageOnly?: boolean;\n}\n\nexport interface IDocumentService {\n\n    resolvedUrl: IResolvedUrl;\n\n    /**\n     * Policies implemented/instructed by driver.\n     */\n    policies?: IDocumentServicePolicies;\n\n    /**\n     * Access to storage associated with the document...\n     */\n    connectToStorage(): Promise<IDocumentStorageService>;\n\n    /**\n     * Access to delta storage associated with the document\n     */\n    connectToDeltaStorage(): Promise<IDocumentDeltaStorageService>;\n\n    /**\n     * Subscribes to the document delta stream\n     */\n    connectToDeltaStream(client: IClient): Promise<IDocumentDeltaConnection>;\n\n    /**\n     * Dispose storage. Called by storage consumer (Container) when it's done with storage (Container closed).\n     * Useful for storage to commit any pending state if any (including any local caching).\n     * Please note that it does not remove the need for caller to close all active delta connections,\n     * as storage may not be tracking such objects.\n     * @param error - tells if container (and storage) are closed due to critical error.\n     * Error might be due to disconnect between client & server knowlege about file, like file being overwritten\n     * in storage, but client having stale local cache.\n     * If driver implements any kind of local caching, such caches needs to be cleared on on critical errors.\n     */\n    dispose(error?: any): void;\n}\n\nexport interface IDocumentServiceFactory {\n    /**\n     * Name of the protocol used by factory\n     */\n    protocolName: string;\n\n    /**\n     * Creates the document service after extracting different endpoints URLs from a resolved URL.\n     *\n     * @param resolvedUrl - Endpoint URL data. See {@link IResolvedUrl}.\n     * @param logger - Optional telemetry logger to which telemetry events will be forwarded.\n     * @param clientIsSummarizer - Whether or not the client is the\n     * {@link https://fluidframework.com/docs/concepts/summarizer/ | summarizer}.\n     * `undefined` =\\> false\n     *\n     * @returns An instance of {@link IDocumentService}.\n     */\n    createDocumentService(\n        resolvedUrl: IResolvedUrl,\n        logger?: ITelemetryBaseLogger,\n        clientIsSummarizer?: boolean,\n    ): Promise<IDocumentService>;\n\n    /**\n     * Creates a new document with the provided options. Returns the document service.\n     *\n     * @param createNewSummary - Summary used to create file. If undefined, an empty file will be created and a summary\n     * should be posted later, before connecting to ordering service.\n     * @param createNewResolvedUrl - Endpoint URL data. See {@link IResolvedUrl}.\n     * @param logger - Optional telemetry logger to which telemetry events will be forwarded.\n     * @param clientIsSummarizer - Whether or not the client is the\n     * {@link https://fluidframework.com/docs/concepts/summarizer/ | summarizer}.\n     * `undefined` =\\> false\n     */\n    createContainer(\n        createNewSummary: ISummaryTree | undefined,\n        createNewResolvedUrl: IResolvedUrl,\n        logger?: ITelemetryBaseLogger,\n        clientIsSummarizer?: boolean,\n    ): Promise<IDocumentService>;\n}\n\n/**\n * Context for uploading a summary to storage.\n * Indicates the previously acked summary.\n */\nexport interface ISummaryContext {\n    /**\n     * Parent summary proposed handle (from summary op)\n     */\n    readonly proposalHandle: string | undefined;\n\n    /**\n     * Parent summary acked handle (from summary ack)\n     */\n    readonly ackHandle: string | undefined;\n\n    readonly referenceSequenceNumber: number;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { assert } from \"@fluidframework/common-utils\";\n\nexport class RateLimiter {\n    private readonly tasks: (() => void)[] = [];\n    constructor(private maxRequests: number) {\n        assert(maxRequests > 0, 0x0ae /* \"Tried to create rate limiter with 0 max requests!\" */);\n    }\n\n    public get waitQueueLength(): number {\n        return this.tasks.length;\n    }\n\n    // Run when one of the tasks finished running.\n    // Release next task if we have one, or allow more tasks to run in future.\n    protected readonly release = () => {\n        const task = this.tasks.shift();\n        if (task !== undefined) {\n            return task();\n        }\n        this.maxRequests++;\n    };\n\n    protected async acquire() {\n        if (this.maxRequests > 0) {\n            this.maxRequests--;\n            return;\n        }\n\n        return new Promise<void>((resolve) => {\n            this.tasks.push(resolve);\n        });\n    }\n\n    public async schedule<T>(work: () => Promise<T>) {\n        await this.acquire();\n        return work().finally(this.release);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IsoBuffer } from \"./indexNode\";\n\nexport const fromBase64ToUtf8 = (input: string): string => IsoBuffer.from(input, \"base64\").toString(\"utf-8\");\n\nexport const fromUtf8ToBase64 = (input: string): string => IsoBuffer.from(input, \"utf8\").toString(\"base64\");\n\n/**\n * Convenience function to convert unknown encoding to utf8 that avoids\n * buffer copies/encode ops when no conversion is needed\n * @param input - The source string to convert\n * @param encoding - The source string's encoding\n */\nexport const toUtf8 = (input: string, encoding: string): string => {\n    switch (encoding) {\n        case \"utf8\":\n        case \"utf-8\":\n            return input;\n        default:\n            return IsoBuffer.from(input, encoding).toString();\n    }\n};\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { debug as registerDebug } from \"debug\";\nimport { pkgName, pkgVersion } from \"./packageVersion\";\n\nexport const debug = registerDebug(\"fluid:services-client\");\ndebug(`Package: ${pkgName} - Version: ${pkgVersion}`);\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n *\n * THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY\n */\n\nexport const pkgName = \"@fluidframework/server-services-client\";\nexport const pkgVersion = \"0.1036.5000\";\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Represents the details associated with a {@link NetworkError}.\n */\nexport interface INetworkErrorDetails {\n    /**\n     * Indicates whether this is an error that can be retried. Refer to {@link NetworkError.canRetry}.\n     */\n    canRetry?: boolean;\n    /**\n     * Indicates whether this error is fatal. This generally indicates that the error causes\n     * negative, non-recoverable impact to the component/caller and cannot be ignored.\n     * Refer to {@link NetworkError.isFatal}.\n     */\n    isFatal?: boolean;\n    /**\n     * Represents the message associated with the error. Refer to {@link NetworkError}'s message.\n     */\n    message?: string;\n    /**\n     * Represents the time in seconds that should be waited before retrying.\n     * TODO: remove in favor of retryAfterMs.\n     * Refer to {@link NetworkError.retryAfter}.\n     */\n    retryAfter?: number;\n    /**\n     * Represents the time in seconds that should be waited before retrying.\n     * Refer to {@link NetworkError.retryAfterMs}.\n     */\n    retryAfterMs?: number;\n}\n\n/**\n * Represents errors associated with network communication.\n *\n * @remarks\n * The Fluid Framework server implementation includes a collection of services that communicate with each other\n * over the network. Network communication is subject to a diverse range of errors. {@link NetworkError} helps\n * convey more information than a simple HTTP status code, allowing services to be aware of the context of a\n * network error and making those services more prepared to react to such kinds of errors.\n */\nexport class NetworkError extends Error {\n    /**\n     * Value representing the time in seconds that should be waited before retrying.\n     * TODO: remove in favor of retryAfterMs once driver supports retryAfterMs.\n     * @public\n     */\n    public readonly retryAfter: number;\n\n    constructor(\n        /**\n         * HTTP status code that describes the error.\n         * @public\n         */\n        public readonly code: number,\n        /**\n         * The message associated with the error.\n         * @public\n         */\n        message: string,\n        /**\n         * Optional boolean indicating whether this is an error that can be retried.\n         * Only relevant when {@link NetworkError.isFatal} is false.\n         * @public\n         */\n        public readonly canRetry?: boolean,\n        /**\n         * Optional boolean indicating whether this error is fatal. This generally indicates that the error causes\n         * negative, non-recoverable impact to the component/caller and cannot be ignored.\n         * @public\n         */\n        public readonly isFatal?: boolean,\n        /**\n         * Optional value representing the time in milliseconds that should be waited before retrying.\n         * @public\n         */\n        public readonly retryAfterMs?: number,\n    ) {\n        super(message);\n        this.name = \"NetworkError\";\n        this.retryAfter = retryAfterMs !== undefined ? retryAfterMs / 1000 : undefined;\n    }\n\n    /**\n     * Gets the details associated with this {@link NetworkError}.\n     * @returns A simple string conveying the message if no other details are included in this {@link NetworkError},\n     * or an {@link INetworkErrorDetails} object otherwise.\n     * @public\n     */\n    public get details(): INetworkErrorDetails | string {\n        if (this.canRetry === undefined && this.isFatal === undefined && this.retryAfterMs === undefined) {\n            return this.message;\n        }\n\n        return {\n            message: this.message,\n            canRetry: this.canRetry,\n            isFatal: this.isFatal,\n            retryAfter: this.retryAfter,\n            retryAfterMs: this.retryAfterMs,\n        };\n    }\n\n    /**\n     * Explicitly define how to serialize as JSON so that socket.io can emit relevant info.\n     * @public\n     */\n    public toJSON(): INetworkErrorDetails & { code: number; } {\n        return {\n            code: this.code,\n            message: this.message,\n            canRetry: this.canRetry,\n            isFatal: this.isFatal,\n            retryAfterMs: this.retryAfterMs,\n            retryAfter: this.retryAfter,\n        };\n    }\n}\n\nexport function isNetworkError(error: unknown): error is NetworkError {\n    return (error as NetworkError).name === \"NetworkError\" &&\n        typeof (error as NetworkError).code === \"number\" &&\n        typeof (error as NetworkError).message === \"string\";\n}\n\n/**\n * Convenience function for generating a {@link NetworkError}.\n * @remarks Generates a {@link NetworkError} instance appropriately configured given the status code and error data\n * provided. This function is intended to be used in situations where a {@link NetworkError} is dynamically created\n * based variable parameters. That is, when it is not known whether the status code can be 404 or 500.\n * @param statusCode - HTTP status code that describes the error.\n * @param errorData - Optional additional data associated with the error. Can either be a simple string representing\n *  the message, or an {@link INetworkErrorDetails} object.\n * @returns A {@link NetworkError} instance properly configured according to the parameters provided.\n * @public\n */\nexport function createFluidServiceNetworkError(\n    statusCode: number,\n    errorData?: INetworkErrorDetails | string,\n): NetworkError {\n    let message: string;\n    let canRetry: boolean | undefined;\n    let isFatal: boolean | undefined;\n    let retryAfter: number | undefined;\n\n    if (errorData && typeof errorData === \"object\") {\n        message = errorData.message ?? \"Unknown Error\";\n        canRetry = errorData.canRetry;\n        isFatal = errorData.isFatal;\n        retryAfter = errorData.retryAfter;\n    } else if (errorData && typeof errorData === \"string\") {\n        message = errorData;\n    } else {\n        message = \"Unknown Error\";\n    }\n\n    switch (statusCode) {\n        case 401:\n        case 403:\n        case 404:\n            return new NetworkError(\n                statusCode,\n                message,\n                false,  /* canRetry */\n                false); /* isFatal */\n        case 413:\n        case 422:\n            return new NetworkError(\n                statusCode,\n                message,\n                canRetry ?? false, /* canRetry */\n                isFatal ?? false,  /* isFatal */\n                canRetry ? retryAfter : undefined);\n        case 429:\n            return new NetworkError(\n                statusCode,\n                message,\n                true, /* canRetry */\n                false, /* isFatal */\n                retryAfter);\n        case 500: {\n            return new NetworkError(\n                statusCode,\n                message,\n                canRetry ?? true, /* canRetry */\n                isFatal ?? false, /* isFatal */\n                canRetry ? retryAfter : undefined);\n        }\n        case 502:\n        case 503:\n        case 504:\n            return new NetworkError(\n                statusCode,\n                message,\n                true,  /* canRetry */\n                false, /* isFatal */\n                retryAfter);\n        default:\n            return new NetworkError(\n                statusCode,\n                message,\n                false, /* canRetry */\n                true); /* isFatal */\n    }\n}\n\n/**\n * Convenience function to both generate and throw a {@link NetworkError}.\n * @remarks Similarly to {@link createFluidServiceNetworkError}, this function generates a {@link NetworkError}\n * instance appropriately configured given the status code and error data provided. The difference is that this\n * function also throws the {@link NetworkError}.\n * @param statusCode - HTTP status code that describes the error.\n * @param errorData - Optional additional data associated with the error. Can either be a simple string representing\n *  the message, or an {@link INetworkErrorDetails} object.\n * @public\n */\nexport function throwFluidServiceNetworkError(statusCode: number, errorData?: INetworkErrorDetails | string): never {\n    const networkError = createFluidServiceNetworkError(statusCode, errorData);\n    throw networkError;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const CorrelationIdHeaderName = \"x-correlation-id\";\nexport const DriverVersionHeaderName = \"x-driver-version\";\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as querystring from \"querystring\";\nimport safeStringify from \"json-stringify-safe\";\nimport Axios, { AxiosError, AxiosInstance, AxiosRequestConfig, AxiosRequestHeaders } from \"axios\";\nimport { v4 as uuid } from \"uuid\";\nimport { debug } from \"./debug\";\nimport { createFluidServiceNetworkError, INetworkErrorDetails } from \"./error\";\nimport { CorrelationIdHeaderName } from \"./constants\";\n\nexport abstract class RestWrapper {\n    constructor(\n        protected readonly baseurl?: string,\n        protected defaultQueryString: Record<string, unknown> = {},\n        protected readonly maxBodyLength = 1000 * 1024 * 1024,\n        protected readonly maxContentLength = 1000 * 1024 * 1024,\n    ) {\n    }\n\n    public async get<T>(\n        url: string,\n        queryString?: Record<string, unknown>,\n        headers?: AxiosRequestHeaders,\n    ): Promise<T> {\n        const options: AxiosRequestConfig = {\n            baseURL: this.baseurl,\n            headers,\n            maxBodyLength: this.maxBodyLength,\n            maxContentLength: this.maxContentLength,\n            method: \"GET\",\n            url: `${url}${this.generateQueryString(queryString)}`,\n        };\n        return this.request<T>(options, 200);\n    }\n\n    public async post<T>(\n        url: string,\n        requestBody: any,\n        queryString?: Record<string, unknown>,\n        headers?: AxiosRequestHeaders,\n    ): Promise<T> {\n        const options: AxiosRequestConfig = {\n            baseURL: this.baseurl,\n            data: requestBody,\n            headers,\n            maxBodyLength: this.maxBodyLength,\n            maxContentLength: this.maxContentLength,\n            method: \"POST\",\n            url: `${url}${this.generateQueryString(queryString)}`,\n        };\n        return this.request<T>(options, 201);\n    }\n\n    public async delete<T>(\n        url: string,\n        queryString?: Record<string, unknown>,\n        headers?: AxiosRequestHeaders,\n    ): Promise<T> {\n        const options: AxiosRequestConfig = {\n            baseURL: this.baseurl,\n            headers,\n            maxBodyLength: this.maxBodyLength,\n            maxContentLength: this.maxContentLength,\n            method: \"DELETE\",\n            url: `${url}${this.generateQueryString(queryString)}`,\n        };\n        return this.request<T>(options, 204);\n    }\n\n    public async patch<T>(\n        url: string,\n        requestBody: any,\n        queryString?: Record<string, unknown>,\n        headers?: AxiosRequestHeaders,\n    ): Promise<T> {\n        const options: AxiosRequestConfig = {\n            baseURL: this.baseurl,\n            data: requestBody,\n            headers,\n            maxBodyLength: this.maxBodyLength,\n            maxContentLength: this.maxContentLength,\n            method: \"PATCH\",\n            url: `${url}${this.generateQueryString(queryString)}`,\n        };\n        return this.request<T>(options, 200);\n    }\n\n    protected abstract request<T>(options: AxiosRequestConfig, statusCode: number): Promise<T>;\n\n    protected generateQueryString(queryStringValues: Record<string, unknown>) {\n        if (this.defaultQueryString || queryStringValues) {\n            const queryStringMap = { ...this.defaultQueryString, ...queryStringValues };\n\n            const queryString = querystring.stringify(queryStringMap);\n            if (queryString !== \"\") {\n                return `?${queryString}`;\n            }\n        }\n\n        return \"\";\n    }\n}\n\nexport class BasicRestWrapper extends RestWrapper {\n    constructor(\n        baseurl?: string,\n        defaultQueryString: Record<string, unknown> = {},\n        maxBodyLength = 1000 * 1024 * 1024,\n        maxContentLength = 1000 * 1024 * 1024,\n        private defaultHeaders: AxiosRequestHeaders = {},\n        private readonly axios: AxiosInstance = Axios,\n        private readonly refreshDefaultQueryString?: () => Record<string, unknown>,\n        private readonly refreshDefaultHeaders?: () => AxiosRequestHeaders,\n        private readonly getCorrelationId?: () => string | undefined,\n    ) {\n        super(baseurl, defaultQueryString, maxBodyLength, maxContentLength);\n    }\n\n    protected async request<T>(requestConfig: AxiosRequestConfig, statusCode: number, canRetry = true): Promise<T> {\n        const options = { ...requestConfig };\n        options.headers = this.generateHeaders(\n            options.headers,\n            this.getCorrelationId?.() ?? uuid(),\n        );\n\n        return new Promise<T>((resolve, reject) => {\n            this.axios.request<T>(options)\n                .then((response) => { resolve(response.data); })\n                .catch((error: AxiosError) => {\n                    if (error?.response?.status === statusCode) {\n                        // Axios misinterpreted as error, return as successful response\n                        resolve(error?.response?.data);\n                    }\n\n                    if (error?.config) {\n                        // eslint-disable-next-line max-len\n                        debug(`[${error.config.method}] request to [${error.config.baseURL ?? \"\"}${error.config.url ?? \"\"}] failed with [${error.response?.status}] [${safeStringify(error.response?.data, undefined, 2)}]`);\n                    } else {\n                        debug(`request to ${options.url} failed ${error ? error.message : \"\"}`);\n                    }\n\n                    if (error?.response?.status === 429 && error?.response?.data?.retryAfter > 0 && canRetry) {\n                        setTimeout(() => {\n                            this.request<T>(options, statusCode)\n                                .then(resolve)\n                                .catch(reject);\n                        }, error.response.data.retryAfter * 1000);\n                    } else if (error?.response?.status === 401 && canRetry && this.refreshOnAuthError()) {\n                        const retryConfig = { ...requestConfig };\n                        retryConfig.headers = this.generateHeaders(\n                            retryConfig.headers, options.headers[CorrelationIdHeaderName] as string);\n\n                        this.request<T>(retryConfig, statusCode, false)\n                            .then(resolve)\n                            .catch(reject);\n                    } else {\n                        // From https://axios-http.com/docs/handling_errors\n                        if (error?.response) {\n                            // The request was made and the server responded with a status code\n                            // that falls out of the range of 2xx\n                            reject(createFluidServiceNetworkError(error?.response?.status, error?.response?.data));\n                        } else if (error?.request) {\n                            // The request was made but no response was received. That can happen if a service is\n                            // temporarily down or inaccessible due to network failures. We leverage that in here\n                            // to detect network failures and transform them into a NetworkError with code 502,\n                            // which can be retried and is not fatal.\n                            reject(createFluidServiceNetworkError(\n                                502, `Network Error: ${error?.message ?? \"undefined\"}`));\n                        } else {\n                            // Something happened in setting up the request that triggered an Error\n                            const details: INetworkErrorDetails = {\n                                canRetry: false,\n                                isFatal: false,\n                                message: error?.message ?? \"Unknown Error\",\n                            };\n                            reject(createFluidServiceNetworkError(500, details));\n                        }\n                    }\n                });\n        });\n    }\n\n    private generateHeaders(\n        headers?: AxiosRequestHeaders,\n        fallbackCorrelationId?: string,\n    ): AxiosRequestHeaders {\n        let result = headers ?? {};\n        if (this.defaultHeaders) {\n            result = { ...this.defaultHeaders, ...headers };\n        }\n\n        if (result[CorrelationIdHeaderName]) {\n            return result;\n        }\n        return { [CorrelationIdHeaderName]: fallbackCorrelationId, ...result };\n    }\n\n    private refreshOnAuthError(): boolean {\n        if (this.refreshDefaultQueryString === undefined && this.refreshDefaultHeaders === undefined) {\n            // retry will not succeed with the same params and headers\n            return false;\n        }\n\n        if (this.refreshDefaultHeaders !== undefined) {\n            this.defaultHeaders = this.refreshDefaultHeaders();\n        }\n        if (this.refreshDefaultQueryString !== undefined) {\n            this.defaultQueryString = this.refreshDefaultQueryString();\n        }\n        return true;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { fromUtf8ToBase64 } from \"@fluidframework/common-utils\";\nimport * as git from \"@fluidframework/gitresources\";\nimport { RestWrapper, BasicRestWrapper } from \"./restWrapper\";\nimport { IHistorian } from \"./storage\";\nimport { IWholeFlatSummary, IWholeSummaryPayload, IWriteSummaryResponse } from \"./storageContracts\";\n\nfunction endsWith(value: string, endings: string[]): boolean {\n    for (const ending of endings) {\n        if (value.endsWith(ending)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport interface ICredentials {\n    user: string;\n    password: string;\n}\n\nexport const getAuthorizationTokenFromCredentials = (credentials: ICredentials): string =>\n    `Basic ${fromUtf8ToBase64(`${credentials.user}:${credentials.password}`)}`;\n\n/**\n * Implementation of the IHistorian interface that calls out to a REST interface\n */\nexport class Historian implements IHistorian {\n    private readonly defaultQueryString: Record<string, unknown> = {};\n    private readonly cacheBust: boolean;\n\n    constructor(\n        public endpoint: string,\n        private readonly historianApi: boolean,\n        disableCache: boolean,\n        private readonly restWrapper?: RestWrapper,\n    ) {\n        if (disableCache && this.historianApi) {\n            this.defaultQueryString.disableCache = disableCache;\n            this.cacheBust = false;\n        } else {\n            this.cacheBust = disableCache;\n        }\n\n        if (this.restWrapper === undefined) {\n            this.restWrapper = new BasicRestWrapper(this.endpoint);\n        }\n    }\n\n    public async getHeader(sha: string): Promise<any> {\n        if (this.historianApi) {\n            return this.restWrapper.get(`/headers/${encodeURIComponent(sha)}`, this.getQueryString());\n        } else {\n            return this.getHeaderDirect(sha);\n        }\n    }\n\n    public async getFullTree(sha: string): Promise<any> {\n        return this.restWrapper.get(`/tree/${encodeURIComponent(sha)}`, this.getQueryString());\n    }\n\n    public async getBlob(sha: string): Promise<git.IBlob> {\n        return this.restWrapper.get<git.IBlob>(\n            `/git/blobs/${encodeURIComponent(sha)}`, this.getQueryString());\n    }\n\n    public async createBlob(blob: git.ICreateBlobParams): Promise<git.ICreateBlobResponse> {\n        return this.restWrapper.post<git.ICreateBlobResponse>(\n            `/git/blobs`, blob, this.getQueryString());\n    }\n\n    public async getContent(path: string, ref: string): Promise<any> {\n        return this.restWrapper.get(`/contents/${path}`, this.getQueryString({ ref }));\n    }\n\n    public async getCommits(sha: string, count: number): Promise<git.ICommitDetails[]> {\n        return this.restWrapper.get<git.ICommitDetails[]>(\n            `/commits`, this.getQueryString({ count, sha }))\n                .catch((error) => (error === 400 || error === 404) ?\n                    [] as git.ICommitDetails[] : Promise.reject<git.ICommitDetails[]>(error));\n    }\n\n    public async getCommit(sha: string): Promise<git.ICommit> {\n        return this.restWrapper.get<git.ICommit>(\n            `/git/commits/${encodeURIComponent(sha)}`, this.getQueryString());\n    }\n\n    public async createCommit(commit: git.ICreateCommitParams): Promise<git.ICommit> {\n        return this.restWrapper.post<git.ICommit>(`/git/commits`, commit, this.getQueryString());\n    }\n\n    public async getRefs(): Promise<git.IRef[]> {\n        return this.restWrapper.get(`/git/refs`, this.getQueryString());\n    }\n\n    public async getRef(ref: string): Promise<git.IRef> {\n        return this.restWrapper.get(`/git/refs/${ref}`, this.getQueryString());\n    }\n\n    public async createRef(params: git.ICreateRefParams): Promise<git.IRef> {\n        return this.restWrapper.post(`/git/refs`, params, this.getQueryString());\n    }\n\n    public async updateRef(ref: string, params: git.IPatchRefParams): Promise<git.IRef> {\n        return this.restWrapper.patch(`/git/refs/${ref}`, params, this.getQueryString());\n    }\n\n    public async deleteRef(ref: string): Promise<void> {\n        await this.restWrapper.delete(`/git/refs/${ref}`, this.getQueryString());\n    }\n\n    public async createTag(tag: git.ICreateTagParams): Promise<git.ITag> {\n        return this.restWrapper.post(`/git/tags`, tag, this.getQueryString());\n    }\n\n    public async getTag(tag: string): Promise<git.ITag> {\n        return this.restWrapper.get(`/git/tags/${tag}`, this.getQueryString());\n    }\n\n    public async createTree(tree: git.ICreateTreeParams): Promise<git.ITree> {\n        return this.restWrapper.post<git.ITree>(`/git/trees`, tree, this.getQueryString());\n    }\n\n    public async getTree(sha: string, recursive: boolean): Promise<git.ITree> {\n        return this.restWrapper.get<git.ITree>(\n            `/git/trees/${encodeURIComponent(sha)}`,\n            this.getQueryString({ recursive: recursive ? 1 : 0 }));\n    }\n    public async createSummary(summary: IWholeSummaryPayload): Promise<IWriteSummaryResponse> {\n        return this.restWrapper.post<IWriteSummaryResponse>(`/git/summaries`, summary, this.getQueryString());\n    }\n    public async deleteSummary(softDelete: boolean): Promise<void> {\n        const headers = { \"Soft-Delete\": softDelete };\n        return this.restWrapper.delete(`/git/summaries`, this.getQueryString(), headers);\n    }\n    public async getSummary(sha: string): Promise<IWholeFlatSummary> {\n        return this.restWrapper.get<IWholeFlatSummary>(`/git/summaries/${sha}`, this.getQueryString());\n    }\n\n    private async getHeaderDirect(sha: string): Promise<git.IHeader> {\n        const tree = await this.getTree(sha, true);\n\n        const includeBlobs = [\".attributes\", \".blobs\", \".messages\", \"header\"];\n\n        const blobsP: Promise<git.IBlob>[] = [];\n        for (const entry of tree.tree) {\n            if (entry.type === \"blob\" && endsWith(entry.path, includeBlobs)) {\n                const blobP = this.getBlob(entry.sha);\n                blobsP.push(blobP);\n            }\n        }\n        const blobs = await Promise.all(blobsP);\n\n        return {\n            blobs,\n            tree,\n        };\n    }\n\n    private getQueryString(queryString?: Record<string, unknown>): Record<string, unknown> {\n        if (this.cacheBust) {\n            return {\n                cacheBust: Date.now(),\n                ...this.defaultQueryString,\n                ...queryString,\n            };\n        }\n        return {\n            ...this.defaultQueryString,\n            ...queryString,\n        };\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport interface IDocumentAttributes {\n    /**\n     * Sequence number at which the snapshot was taken\n     */\n    sequenceNumber: number;\n\n    /**\n     * Minimum sequence number when the snapshot was taken\n     */\n    minimumSequenceNumber: number;\n\n    /**\n     * Term number at which the snapshot was taken\n     */\n    term: number | undefined;\n}\n\nexport enum FileMode {\n    File = \"100644\",\n    Executable = \"100755\",\n    Directory = \"040000\",\n    Symlink = \"120000\",\n}\n\n/**\n * Raw blob stored within the tree\n */\nexport interface IBlob {\n    // Contents of the blob\n    contents: string;\n\n    // The encoding of the contents string\n    encoding: \"utf-8\" | \"base64\";\n}\n\nexport interface IAttachment {\n    id: string;\n}\n\nexport interface ICreateBlobResponse {\n    id: string;\n}\n\n/**\n * A tree entry wraps a path with a type of node\n */\nexport type ITreeEntry = {\n    // Path to the object\n    path: string;\n    // The file mode; one of 100644 for file (blob), 100755 for executable (blob), 040000 for subdirectory (tree)\n    // or 120000 for a blob that specifies the path of a symlink\n    mode: FileMode;\n} & (\n{\n    type: TreeEntry.Blob;\n    value: IBlob;\n} | {\n    type: TreeEntry.Tree;\n    value: ITree;\n} | {\n    type: TreeEntry.Attachment;\n    value: IAttachment;\n});\n\n/**\n * Type of entries that can be stored in a tree\n */\nexport enum TreeEntry {\n    Blob = \"Blob\",\n    Tree = \"Tree\",\n    Attachment = \"Attachment\",\n}\n\nexport interface ITree {\n    entries: ITreeEntry[];\n    // Unique ID representing all entries in the tree. Can be used to optimize snapshotting in the case\n    // it is known that the ITree has already been created and stored\n    id?: string;\n    // Indicates that this tree is unreferenced. If this is not present, the tree is considered referenced.\n    unreferenced?: true;\n}\n\nexport interface ISnapshotTree {\n    id?: string;\n    blobs: { [path: string]: string; };\n    trees: { [path: string]: ISnapshotTree; };\n    // Indicates that this tree is unreferenced. If this is not present, the tree is considered referenced.\n    unreferenced?: true;\n}\n\nexport interface ISnapshotTreeEx extends ISnapshotTree {\n    id: string;\n    trees: { [path: string]: ISnapshotTreeEx; };\n}\n\n/**\n * Represents a version of the snapshot of a data store\n */\nexport interface IVersion {\n    // Version ID\n    id: string;\n\n    // Tree ID for this version of the snapshot\n    treeId: string;\n\n    // Time when snapshot was generated.\n    // ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ\n    date?: string;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as git from \"@fluidframework/gitresources\";\nimport {\n    FileMode,\n    IBlob,\n    IAttachment,\n    ISnapshotTreeEx,\n    ITree,\n    TreeEntry,\n    SummaryType,\n    SummaryObject,\n} from \"@fluidframework/protocol-definitions\";\nimport { unreachableCase } from \"@fluidframework/common-utils\";\n/**\n * Take a summary object and returns its git mode.\n *\n * @param value - summary object\n * @returns the git mode of summary object\n */\nexport function getGitMode(value: SummaryObject): string {\n    const type = value.type === SummaryType.Handle ? value.handleType : value.type;\n    switch (type) {\n        case SummaryType.Blob:\n        case SummaryType.Attachment:\n            return FileMode.File;\n        case SummaryType.Tree:\n            return FileMode.Directory;\n        default:\n            unreachableCase(type, `Unknown type: ${type}`);\n    }\n}\n\n/**\n * Take a summary object and returns its type.\n *\n * @param value - summary object\n * @returns the type of summary object\n */\nexport function getGitType(value: SummaryObject): \"blob\" | \"tree\" {\n    const type = value.type === SummaryType.Handle ? value.handleType : value.type;\n\n    switch (type) {\n        case SummaryType.Blob:\n        case SummaryType.Attachment:\n            return \"blob\";\n        case SummaryType.Tree:\n            return \"tree\";\n        default:\n            unreachableCase(type, `Unknown type: ${type}`);\n    }\n}\n\n/**\n * Build a tree hierarchy base on a flat tree\n *\n * @param flatTree - a flat tree\n * @param blobsShaToPathCache - Map with blobs sha as keys and values as path of the blob.\n * @param removeAppTreePrefix - Remove `.app/` from beginning of paths when present\n * @returns the hierarchical tree\n */\nexport function buildHierarchy(\n    flatTree: git.ITree,\n    blobsShaToPathCache: Map<string, string> = new Map<string, string>(),\n    removeAppTreePrefix = false): ISnapshotTreeEx {\n    const lookup: { [path: string]: ISnapshotTreeEx; } = {};\n    const root: ISnapshotTreeEx = { id: flatTree.sha, blobs: {}, trees: {} };\n    lookup[\"\"] = root;\n\n    for (const entry of flatTree.tree) {\n        const entryPath = removeAppTreePrefix ? entry.path.replace(/^\\.app\\//, \"\") : entry.path;\n        const lastIndex = entryPath.lastIndexOf(\"/\");\n        const entryPathDir = entryPath.slice(0, Math.max(0, lastIndex));\n        const entryPathBase = entryPath.slice(lastIndex + 1);\n\n        // The flat output is breadth-first so we can assume we see tree nodes prior to their contents\n        const node = lookup[entryPathDir];\n\n        // Add in either the blob or tree\n        if (entry.type === \"tree\") {\n            const newTree = { id: entry.sha, blobs: {}, commits: {}, trees: {} };\n            node.trees[decodeURIComponent(entryPathBase)] = newTree;\n            lookup[entryPath] = newTree;\n        } else if (entry.type === \"blob\") {\n            node.blobs[decodeURIComponent(entryPathBase)] = entry.sha;\n            blobsShaToPathCache.set(entry.sha, `/${entryPath}`);\n        } else {\n            throw new Error(\"Unknown entry type!!\");\n        }\n    }\n\n    return root;\n}\n\n/**\n * Basic implementation of a blob ITreeEntry\n */\nexport class BlobTreeEntry {\n    public readonly mode = FileMode.File;\n    public readonly type = TreeEntry.Blob;\n    public readonly value: IBlob;\n\n    /**\n     * Creates a blob ITreeEntry\n     * @param path - path of entry\n     * @param contents - blob contents\n     * @param encoding - encoding of contents; defaults to utf-8\n     */\n    constructor(public readonly path: string, contents: string, encoding: \"utf-8\" | \"base64\" = \"utf-8\") {\n        this.value = { contents, encoding };\n    }\n}\n\n/**\n * Basic implementation of a tree ITreeEntry\n */\nexport class TreeTreeEntry {\n    public readonly mode = FileMode.Directory;\n    public readonly type = TreeEntry.Tree;\n\n    /**\n     * Creates a tree ITreeEntry\n     * @param path - path of entry\n     * @param value - subtree\n     */\n    constructor(public readonly path: string, public readonly value: ITree) { }\n}\n\n/**\n * Basic implementation of an attachment ITreeEntry\n */\nexport class AttachmentTreeEntry {\n    public readonly mode = FileMode.File;\n    public readonly type = TreeEntry.Attachment;\n    public readonly value: IAttachment;\n\n    /**\n     * Creates an attachment ITreeEntry\n     * @param path - path of entry\n     * @param id - id of external blob attachment\n     */\n    constructor(public readonly path: string, public readonly id: string) {\n        this.value = { id };\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function addBlobToTree(tree: ITree, blobName: string, content: object) {\n    tree.entries.push(\n        {\n            mode: FileMode.File,\n            path: blobName,\n            type: TreeEntry.Blob,\n            value: {\n                contents: JSON.stringify(content),\n                encoding: \"utf-8\",\n            },\n        });\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { assert } from \"@fluidframework/common-utils\";\nimport * as resources from \"@fluidframework/gitresources\";\nimport { buildHierarchy } from \"@fluidframework/protocol-base\";\nimport * as api from \"@fluidframework/protocol-definitions\";\nimport { debug } from \"./debug\";\nimport { ICreateRefParamsExternal, IPatchRefParamsExternal, IGitManager, IHistorian } from \"./storage\";\nimport { IWholeFlatSummary, IWholeSummaryPayload, IWriteSummaryResponse } from \"./storageContracts\";\n\nexport class GitManager implements IGitManager {\n    private readonly blobCache = new Map<string, resources.IBlob>();\n    private readonly commitCache = new Map<string, resources.ICommit>();\n    private readonly treeCache = new Map<string, resources.ITree>();\n    private readonly refCache = new Map<string, string>();\n\n    constructor(private readonly historian: IHistorian) {\n    }\n\n    public async getHeader(id: string, sha: string): Promise<api.ISnapshotTree> {\n        const header = await this.historian.getHeader(sha);\n\n        // Cache blobs that were sent in the header\n        for (const blob of header.blobs) {\n            this.blobCache.set(blob.sha, blob);\n        }\n\n        return buildHierarchy(header.tree);\n    }\n\n    public async getFullTree(sha: string): Promise<any> {\n        return this.historian.getFullTree(sha);\n    }\n\n    public async getCommit(sha: string): Promise<resources.ICommit> {\n        if (this.commitCache.has(sha)) {\n            debug(`Cache hit on ${sha}`);\n            return this.commitCache.get(sha);\n        }\n\n        return this.historian.getCommit(sha);\n    }\n\n    /**\n     * Reads the object with the given ID. We defer to the client implementation to do the actual read.\n     */\n    public async getCommits(shaOrRef: string, count: number): Promise<resources.ICommitDetails[]> {\n        let sha = shaOrRef;\n\n        // See if the sha is really a ref and convert\n        if (this.refCache.has(shaOrRef)) {\n            debug(`Commit cache hit on ${shaOrRef}`);\n            sha = this.refCache.get(shaOrRef);\n\n            // Delete refcache after first use\n            this.refCache.delete(shaOrRef);\n\n            // If null is stored for the ref then there are no commits - return an empty array\n            if (!sha) {\n                return [];\n            }\n        }\n\n        // See if the commit sha is hashed and return it if so\n        if (this.commitCache.has(sha)) {\n            const commit = this.commitCache.get(sha);\n            return [{\n                commit: {\n                    author: commit.author,\n                    committer: commit.committer,\n                    message: commit.message,\n                    tree: commit.tree,\n                    url: commit.url,\n                },\n                parents: commit.parents,\n                sha: commit.sha,\n                url: commit.url,\n            }];\n        }\n\n        // Otherwise fall back to the historian\n        return this.historian.getCommits(sha, count);\n    }\n\n    /**\n     * Reads the object with the given ID. We defer to the client implementation to do the actual read.\n     */\n    public async getTree(root: string, recursive = true): Promise<resources.ITree> {\n        if (this.treeCache.has(root)) {\n            debug(`Tree cache hit on ${root}`);\n            return this.treeCache.get(root);\n        }\n\n        return this.historian.getTree(root, recursive);\n    }\n\n    public async getBlob(sha: string): Promise<resources.IBlob> {\n        if (this.blobCache.has(sha)) {\n            debug(`Blob cache hit on ${sha}`);\n            return this.blobCache.get(sha);\n        }\n\n        return this.historian.getBlob(sha);\n    }\n\n    public getRawUrl(sha: string): string {\n        return `${this.historian.endpoint}/git/blobs/raw/${sha}`;\n    }\n\n    /**\n     * Retrieves the object at the given revision number\n     */\n\n    public async getContent(commit: string, path: string): Promise<resources.IBlob> {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return this.historian.getContent(path, commit);\n    }\n\n    public async createBlob(content: string, encoding: \"utf-8\" | \"base64\"): Promise<resources.ICreateBlobResponse> {\n        const blob: resources.ICreateBlobParams = {\n            content,\n            encoding,\n        };\n        return this.historian.createBlob(blob);\n    }\n\n    public async createGitTree(params: resources.ICreateTreeParams): Promise<resources.ITree> {\n        const treeP = this.historian.createTree(params);\n        return treeP;\n    }\n\n    public async createTree(files: api.ITree): Promise<resources.ITree> {\n        return this.createTreeCore(files, 0);\n    }\n\n    public async createCommit(commit: resources.ICreateCommitParams): Promise<resources.ICommit> {\n        return this.historian.createCommit(commit);\n    }\n\n    public async createSummary(summary: IWholeSummaryPayload): Promise<IWriteSummaryResponse> {\n        return this.historian.createSummary(summary);\n    }\n\n    public async deleteSummary(softDelete: boolean): Promise<void> {\n        return this.historian.deleteSummary(softDelete);\n    }\n\n    public async getSummary(sha: string): Promise<IWholeFlatSummary> {\n        return this.historian.getSummary(sha);\n    }\n\n    public async getRef(ref: string): Promise<resources.IRef> {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return this.historian\n            .getRef(`heads/${ref}`)\n            .catch((error) => {\n                if (error === 400 || error === 404) {\n                    return null;\n                } else {\n                    throw error;\n                }\n            });\n    }\n\n    public async createRef(branch: string, sha: string): Promise<resources.IRef> {\n        const createRefParams: ICreateRefParamsExternal = {\n            ref: `refs/heads/${branch}`,\n            sha,\n            config: { enabled: true },\n        };\n\n        return this.historian.createRef(createRefParams);\n    }\n\n    public async upsertRef(branch: string, commitSha: string): Promise<resources.IRef> {\n        // Update (force) the ref to the new commit\n        const ref: IPatchRefParamsExternal = {\n            force: true,\n            sha: commitSha,\n            config: { enabled: true },\n        };\n\n        return this.historian.updateRef(`heads/${branch}`, ref);\n    }\n\n    public addRef(ref: string, sha: string) {\n        this.refCache.set(ref, sha);\n    }\n\n    public addCommit(commit: resources.ICommit) {\n        this.commitCache.set(commit.sha, commit);\n    }\n\n    public addTree(tree: resources.ITree) {\n        this.treeCache.set(tree.sha, tree);\n    }\n\n    public addBlob(blob: resources.IBlob) {\n        this.blobCache.set(blob.sha, blob);\n    }\n\n    /**\n     * Writes to the object with the given ID\n     */\n    public async write(\n        branch: string,\n        inputTree: api.ITree,\n        parents: string[],\n        message: string): Promise<resources.ICommit> {\n        const tree = await this.createTree(inputTree);\n\n        // Construct a commit for the tree\n        const commitParams: resources.ICreateCommitParams = {\n            author: {\n                date: new Date().toISOString(),\n                email: \"kurtb@microsoft.com\",\n                name: \"Kurt Berglund\",\n            },\n            message,\n            parents,\n            tree: tree.sha,\n        };\n\n        const commit = await this.historian.createCommit(commitParams);\n\n        // Create or update depending on if ref exists.\n        // TODO optimize the update to know up front if the ref exists\n        const existingRef = await this.getRef(branch);\n\n        if (existingRef) {\n            await this.upsertRef(branch, commit.sha);\n        } else {\n            await this.createRef(branch, commit.sha);\n        }\n\n        return commit;\n    }\n\n    private async createTreeCore(files: api.ITree, depth: number): Promise<resources.ITree> {\n        // If a id is specified use it rather than creating new\n        if (files.id) {\n            return this.getTree(files.id);\n        }\n\n        // Kick off the work to create all the tree values\n        const entriesP: Promise<resources.ICreateBlobResponse | resources.ITree>[] = [];\n        for (const entry of files.entries) {\n            switch (api.TreeEntry[entry.type]) {\n                case api.TreeEntry.Blob: {\n                    const entryAsBlob = entry.value as api.IBlob;\n\n                    // Symlinks currently directly references a folder off the root of the tree. We adjust\n                    // the path based on the depth of the tree\n                    if (entry.mode === api.FileMode.Symlink) {\n                        entryAsBlob.contents = this.translateSymlink(entryAsBlob.contents, depth);\n                    }\n\n                    const blobP = this.createBlob(entryAsBlob.contents, entryAsBlob.encoding);\n                    entriesP.push(blobP);\n                    break;\n                }\n\n                case api.TreeEntry.Tree: {\n                    const entryAsTree = entry.value as api.ITree;\n                    const treeBlobP = this.createTreeCore(entryAsTree, depth + 1);\n                    entriesP.push(treeBlobP);\n                    break;\n                }\n\n                default:\n                    throw new Error(\"Unknown entry type\");\n            }\n        }\n\n        // Wait for them all to resolve\n        const entries = await Promise.all(entriesP);\n        const tree: resources.ICreateTreeEntry[] = [];\n        assert(entries.length === files.entries.length, \"File entries length is not correct\");\n\n        // Construct a new tree from the collection of hashes\n        for (let i = 0; i < files.entries.length; i++) {\n            const type = files.entries[i].type === api.TreeEntry.Tree\n                ? \"tree\"\n                : (files.entries[i].type === api.TreeEntry.Blob ? \"blob\" : \"commit\");\n\n            tree.push({\n                mode: files.entries[i].mode,\n                path: files.entries[i].path,\n                sha: entries[i].sha,\n                type,\n            });\n        }\n\n        const requestBody: resources.ICreateTreeParams = {\n            tree,\n        };\n        const treeP = this.historian.createTree(requestBody);\n        return treeP;\n    }\n\n    private translateSymlink(link: string, depth: number): string {\n        let prefix = \"\";\n        for (let i = 0; i <= depth; i++) {\n            prefix += \"../\";\n        }\n\n        return `${prefix}${link}`;\n    }\n}\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { assert, Deferred, performance } from \"@fluidframework/common-utils\";\nimport { ITelemetryLogger, ITelemetryProperties } from \"@fluidframework/common-definitions\";\nimport { PerformanceEvent } from \"@fluidframework/telemetry-utils\";\nimport { ISequencedDocumentMessage } from \"@fluidframework/protocol-definitions\";\nimport { IDeltasFetchResult, IStream, IStreamResult } from \"@fluidframework/driver-definitions\";\nimport { getRetryDelayFromError, canRetryOnError, createGenericNetworkError } from \"./network\";\nimport { waitForConnectedState, logNetworkFailure } from \"./networkUtils\";\n// For now, this package is versioned and released in unison with the specific drivers\nimport { pkgVersion as driverVersion } from \"./packageVersion\";\n\nconst MaxFetchDelayInMs = 10000;\nconst MissingFetchDelayInMs = 100;\n\ntype WorkingState = \"working\" | \"done\" | \"canceled\";\n\n/**\n * Helper class to organize parallel fetching of data\n * It can be used to concurrently do many requests, while consuming\n * data in the right order. Take a look at UT for examples.\n * @param concurrency - level of concurrency\n * @param from - starting point of fetching data (inclusive)\n * @param to  - ending point of fetching data. exclusive, or undefined if unknown\n * @param payloadSize - batch size\n * @param logger - logger to use\n * @param requestCallback - callback to request batches\n * @returns - Queue that can be used to retrieve data\n */\nexport class ParallelRequests<T> {\n    private latestRequested: number;\n    private nextToDeliver: number;\n    private readonly results: Map<number, T[]> = new Map();\n    private workingState: WorkingState = \"working\";\n    private requestsInFlight = 0;\n    private readonly endEvent = new Deferred<void>();\n    private requests = 0;\n    private readonly knewTo: boolean;\n\n    private get working() { return this.workingState === \"working\"; }\n    public get canceled() { return this.workingState === \"canceled\"; }\n\n    constructor(\n        from: number,\n        private to: number | undefined,\n        private readonly payloadSize: number,\n        private readonly logger: ITelemetryLogger,\n        private readonly requestCallback: (\n            request: number,\n            from: number,\n            to: number,\n            strongTo: boolean,\n            props: ITelemetryProperties) => Promise<{ partial: boolean; cancel: boolean; payload: T[]; }>,\n        private readonly responseCallback: (payload: T[]) => void) {\n        this.latestRequested = from;\n        this.nextToDeliver = from;\n        this.knewTo = (to !== undefined);\n    }\n\n    public cancel() {\n        if (this.working) {\n            this.workingState = \"canceled\";\n            this.endEvent.resolve();\n        }\n    }\n\n    public async run(concurrency: number) {\n        assert(concurrency > 0, 0x102 /* \"invalid level of concurrency\" */);\n        assert(this.working, 0x103 /* \"trying to parallel run while not working\" */);\n\n        let c = concurrency;\n        while (c > 0) {\n            c--;\n            this.addRequest();\n        }\n        this.dispatch();// will recalculate and trigger this.endEvent if needed\n        return this.endEvent.promise;\n    }\n\n    private done() {\n        // We should satisfy request fully.\n        assert(this.to !== undefined, 0x104 /* \"undefined end point for parallel fetch\" */);\n        assert(this.nextToDeliver >= this.to, 0x105 /* \"unexpected end point for parallel fetch\" */);\n        if (this.working) {\n            this.workingState = \"done\";\n            this.endEvent.resolve();\n        }\n    }\n\n    private fail(error) {\n        if (this.working) {\n            this.workingState = \"done\";\n            this.endEvent.reject(error);\n        }\n    }\n\n    private dispatch() {\n        while (this.working) {\n            const value = this.results.get(this.nextToDeliver);\n            if (value === undefined) {\n                break;\n            }\n            this.results.delete(this.nextToDeliver);\n            assert(value.length <= this.payloadSize, 0x1d9 /* \"addRequestCore() should break into smaller chunks\" */);\n            this.nextToDeliver += value.length;\n            this.responseCallback(value);\n        }\n\n        // Account for cancellation - state might be not in consistent state on cancelling operation\n        if (this.working) {\n            if (this.requestsInFlight === 0) {\n                // we should have dispatched everything, no matter whether we knew about the end or not.\n                // see comment in addRequestCore() around throwing away chunk if it's above this.to\n                assert(this.results.size === 0,\n                    0x107 /* \"ending dispatch with remaining results to be sent\" */);\n                this.done();\n            } else if (this.to !== undefined && this.nextToDeliver >= this.to) {\n                // Learned about the end and dispatched all the ops up to it.\n                // Ignore all the in-flight requests above boundary - unblock caller sooner.\n                assert(!this.knewTo, 0x108 /* \"ending results dispatch but knew in advance about more requests\" */);\n                this.done();\n            }\n        }\n    }\n\n    private getNextChunk() {\n        if (!this.working) {\n            return undefined;\n        }\n\n        const from = this.latestRequested;\n        if (this.to !== undefined) {\n            if (this.to <= from) {\n                return undefined;\n            }\n        }\n\n        // this.latestRequested\n        // inclusive on the right side! Exclusive on the left.\n        this.latestRequested += this.payloadSize;\n\n        if (this.to !== undefined) {\n            this.latestRequested = Math.min(this.to, this.latestRequested);\n        }\n\n        assert(from < this.latestRequested, 0x109 /* \"unexpected next chunk position\" */);\n\n        return { from, to: this.latestRequested };\n    }\n\n    private addRequest() {\n        const chunk = this.getNextChunk();\n        if (chunk === undefined) {\n            return;\n        }\n        this.addRequestCore(chunk.from, chunk.to).catch(this.fail.bind(this));\n    }\n\n    private async addRequestCore(fromArg: number, toArg: number) {\n        assert(this.working, 0x10a /* \"cannot add parallel request while not working\" */);\n\n        let from = fromArg;\n        let to = toArg;\n\n        // to & from are exclusive\n        this.requestsInFlight++;\n        while (this.working) {\n            const requestedLength = to - from;\n            assert(requestedLength > 0, 0x10b /* \"invalid parallel request range\" */);\n\n            // We should not be wasting time asking for something useless.\n            if (this.to !== undefined) {\n                assert(from < this.to, 0x10c /* \"invalid parallel request start point\" */);\n                assert(to <= this.to, 0x10d /* \"invalid parallel request end point\" */);\n            }\n\n            this.requests++;\n\n            const promise = this.requestCallback(this.requests, from, to, this.to !== undefined, {});\n\n            // dispatch any prior received data\n            this.dispatch();\n\n            const { payload, cancel, partial } = await promise;\n\n            if (cancel) {\n                this.cancel();\n            }\n\n            if (this.to !== undefined && from >= this.to) {\n                // while we were waiting for response, we learned on what is the boundary\n                // We can get here (with actual result!) if situation changed while this request was in\n                // flight, i.e. the end was extended over what we learn in some other request\n                // While it's useful not to throw this result, this is very corner cases and makes logic\n                // (including consistency checks) much harder to write correctly.\n                // So for now, we are throwing this result out the window.\n                assert(!this.knewTo, 0x10e /* \"should not throw result if we knew about boundary in advance\" */);\n                // Learn how often it happens and if it's too wasteful to throw these chunks.\n                // If it pops into our view a lot, we would need to reconsider how we approach it.\n                // Note that this is not visible to user other than potentially not hitting 100% of\n                // what we can in perf domain.\n                if (payload.length !== 0) {\n                    this.logger.sendErrorEvent({\n                        eventName: \"ParallelRequests_GotExtra\",\n                        from,\n                        to,\n                        end: this.to,\n                        length: payload.length,\n                    });\n                }\n\n                break;\n            }\n\n            if (this.working) {\n                const fromOrig = from;\n                const length = payload.length;\n                let fullChunk = (requestedLength <= length); // we can possible get more than we asked.\n\n                if (length !== 0) {\n                    // We can get more than we asked for!\n                    // This can screw up logic in dispatch!\n                    // So push only batch size, and keep the rest for later - if conditions are favorable, we\n                    // will be able to use it. If not (parallel request overlapping these ops), it's easier to\n                    // discard them and wait for another (overlapping) request to come in later.\n                    if (requestedLength < length) {\n                        // This is error in a sense that it's not expected and likely points bug in other layer.\n                        // This layer copes with this situation just fine.\n                        this.logger.sendTelemetryEvent({\n                            eventName: \"ParallelRequests_Over\",\n                            from,\n                            to,\n                            length,\n                        });\n                    }\n                    const data = payload.splice(0, requestedLength);\n                    this.results.set(from, data);\n                    from += data.length;\n                } else {\n                    // 1. empty (partial) chunks should not be returned by various caching / adapter layers -\n                    //    they should fall back to next layer. This might be important invariant to hold to ensure\n                    //    that we are less likely have bugs where such layer would keep returning empty partial\n                    //    result on each call.\n                    // 2. Current invariant is that callback does retries until it gets something,\n                    //    with the goal of failing if zero data is retrieved in given amount of time.\n                    //    This is very specific property of storage / ops, so this logic is not here, but given only\n                    //    one user of this class, we assert that to catch issues earlier.\n                    // These invariant can be relaxed if needed.\n                    assert(!partial, 0x10f /* \"empty/partial chunks should not be returned by caching\" */);\n                    assert(!this.knewTo,\n                        0x110 /* \"callback should retry until valid fetch before it learns new boundary\" */);\n                }\n\n                if (!partial && !fullChunk) {\n                    if (!this.knewTo) {\n                        if (this.to === undefined || this.to > from) {\n                            // The END\n                            this.to = from;\n                        }\n                        break;\n                    }\n                    // We know that there are more items to be retrieved\n                    // Can we get partial chunk? Ideally storage indicates that's not a full chunk\n                    // Note that it's possible that not all ops hit storage yet.\n                    // We will come back to request more, and if we can't get any more ops soon, it's\n                    // catastrophic failure (see comment above on responsibility of callback to return something)\n                    // This layer will just keep trying until it gets full set.\n                    this.logger.sendPerformanceEvent({\n                        eventName: \"ParallelRequests_Partial\",\n                        from: fromOrig,\n                        to,\n                        length,\n                    });\n                }\n\n                if (to === this.latestRequested) {\n                    // we can go after full chunk at the end if we received partial chunk, or more than asked\n                    // Also if we got more than we asked to, we can actually use those ops!\n                    if (payload.length !== 0) {\n                        this.results.set(from, payload);\n                        from += payload.length;\n                    }\n\n                    this.latestRequested = from;\n                    fullChunk = true;\n                }\n\n                if (fullChunk) {\n                    const chunk = this.getNextChunk();\n                    if (chunk === undefined) { break; }\n                    from = chunk.from;\n                    to = chunk.to;\n                }\n            }\n        }\n        this.requestsInFlight--;\n        this.dispatch();\n    }\n}\n\n/**\n * Helper queue class to allow async push / pull\n * It's essentially a pipe allowing multiple writers, and single reader\n */\nexport class Queue<T> implements IStream<T> {\n    private readonly queue: Promise<IStreamResult<T>>[] = [];\n    private deferred: Deferred<IStreamResult<T>> | undefined;\n    private done = false;\n\n    public pushValue(value: T) {\n        this.pushCore(Promise.resolve({ done: false, value }));\n    }\n\n    public pushError(error: any) {\n        this.pushCore(Promise.reject(error));\n        this.done = true;\n    }\n\n    public pushDone() {\n        this.pushCore(Promise.resolve({ done: true }));\n        this.done = true;\n    }\n\n    protected pushCore(value: Promise<IStreamResult<T>>) {\n        assert(!this.done, 0x112 /* \"cannot push onto queue if done\" */);\n        if (this.deferred) {\n            assert(this.queue.length === 0, 0x113 /* \"deferred queue should be empty\" */);\n            this.deferred.resolve(value);\n            this.deferred = undefined;\n        } else {\n            this.queue.push(value);\n        }\n    }\n\n    public async read(): Promise<IStreamResult<T>> {\n        assert(this.deferred === undefined, 0x114 /* \"cannot pop if deferred\" */);\n        const value = this.queue.shift();\n        if (value !== undefined) {\n            return value;\n        }\n        assert(!this.done, 0x115 /* \"queue should not be done during pop\" */);\n        this.deferred = new Deferred<IStreamResult<T>>();\n        return this.deferred.promise;\n    }\n}\n\n/**\n * Retrieve single batch of ops\n * @param request - request index\n * @param from - inclusive boundary\n * @param to - exclusive boundary\n * @param telemetryEvent - telemetry event used to track consecutive batch of requests\n * @param strongTo - tells if ops in range from...to have to be there and have to be retrieved.\n * If false, returning less ops would mean we reached end of file.\n * @returns - an object with resulting ops and cancellation / partial result flags\n */\nasync function getSingleOpBatch(\n    get: (telemetryProps: ITelemetryProperties) => Promise<IDeltasFetchResult>,\n    props: ITelemetryProperties,\n    strongTo: boolean,\n    logger: ITelemetryLogger,\n    signal?: AbortSignal,\n    fetchReason?: string):\n        Promise<{ partial: boolean; cancel: boolean; payload: ISequencedDocumentMessage[]; }> {\n    let lastSuccessTime: number | undefined;\n\n    let retry: number = 0;\n    const deltas: ISequencedDocumentMessage[] = [];\n    const nothing = { partial: false, cancel: true, payload: [] };\n\n    while (signal?.aborted !== true) {\n        retry++;\n        let delay = Math.min(MaxFetchDelayInMs, MissingFetchDelayInMs * Math.pow(2, retry));\n        const startTime = performance.now();\n\n        try {\n            // Issue async request for deltas - limit the number fetched to MaxBatchDeltas\n            const deltasP = get({ ...props, retry } /* telemetry props */);\n\n            const { messages, partialResult } = await deltasP;\n            deltas.push(...messages);\n\n            const deltasRetrievedLast = messages.length;\n\n            if (deltasRetrievedLast !== 0 || !strongTo) {\n                return { payload: deltas, cancel: false, partial: partialResult };\n            }\n\n            // Storage does not have ops we need.\n            // Attempt to fetch more deltas. If we didn't receive any in the previous call we up our retry\n            // count since something prevented us from seeing those deltas\n\n            if (lastSuccessTime === undefined) {\n                lastSuccessTime = performance.now();\n            } else if (performance.now() - lastSuccessTime > 30000) {\n                // If we are connected and receiving proper responses from server, but can't get any ops back,\n                // then give up after some time. This likely indicates the issue with ordering service not flushing\n                // ops to storage quick enough, and possibly waiting for summaries, while summarizer can't get\n                // current as it can't get ops.\n                throw createGenericNetworkError(\n                    // pre-0.58 error message: failedToRetrieveOpsFromStorage:TooManyRetries\n                    \"Failed to retrieve ops from storage (Too Many Retries)\",\n                    { canRetry: false },\n                    {\n                        retry,\n                        driverVersion,\n                        ...props,\n                    },\n                );\n            }\n        } catch (error) {\n            const canRetry = canRetryOnError(error);\n\n            lastSuccessTime = undefined;\n\n            const retryAfter = getRetryDelayFromError(error);\n\n            // This will log to error table only if the error is non-retryable\n            logNetworkFailure(\n                logger,\n                {\n                    eventName: \"GetDeltas_Error\",\n                    ...props,\n                    retry,\n                    duration: performance.now() - startTime,\n                    retryAfter,\n                    fetchReason,\n                },\n                error);\n\n            if (!canRetry) {\n                // It's game over scenario.\n                throw error;\n            }\n\n            if (retryAfter !== undefined && retryAfter >= 0) {\n                delay = retryAfter;\n            }\n        }\n\n        await waitForConnectedState(delay);\n    }\n\n    return nothing;\n}\n\nexport function requestOps(\n    get: (from: number, to: number, telemetryProps: ITelemetryProperties) => Promise<IDeltasFetchResult>,\n    concurrency: number,\n    fromTotal: number,\n    toTotal: number | undefined,\n    payloadSize: number,\n    logger: ITelemetryLogger,\n    signal?: AbortSignal,\n    fetchReason?: string,\n): IStream<ISequencedDocumentMessage[]> {\n    let requests = 0;\n    let lastFetch: number | undefined;\n    let length = 0;\n    const queue = new Queue<ISequencedDocumentMessage[]>();\n\n    const propsTotal: ITelemetryProperties = {\n        fromTotal,\n        toTotal,\n    };\n\n    const telemetryEvent = PerformanceEvent.start(logger, {\n        eventName: \"GetDeltas\",\n        ...propsTotal,\n        fetchReason,\n    });\n\n    const manager = new ParallelRequests<ISequencedDocumentMessage>(\n        fromTotal,\n        toTotal,\n        payloadSize,\n        logger,\n        async (request: number, from: number, to: number, strongTo: boolean, propsPerRequest: ITelemetryProperties) => {\n            requests++;\n            return getSingleOpBatch(\n                async (propsAll) => get(from, to, propsAll),\n                { request, from, to, ...propsTotal, ...propsPerRequest },\n                strongTo,\n                logger,\n                signal,\n                fetchReason,\n            );\n        },\n        (deltas: ISequencedDocumentMessage[]) => {\n            // Assert continuing and right start.\n            if (lastFetch === undefined) {\n                assert(deltas[0].sequenceNumber === fromTotal, 0x26d /* \"wrong start\" */);\n            } else {\n                assert(deltas[0].sequenceNumber === lastFetch + 1, 0x26e /* \"wrong start\" */);\n            }\n            lastFetch = deltas[deltas.length - 1].sequenceNumber;\n            assert(lastFetch - deltas[0].sequenceNumber + 1 === deltas.length,\n                0x26f /* \"continuous and no duplicates\" */);\n            length += deltas.length;\n            queue.pushValue(deltas);\n        });\n\n    // Implement faster cancellation. getSingleOpBatch() checks signal, but only in between\n    // waits (up to 10 seconds) and fetches (can take infinite amount of time).\n    // While every such case should be improved and take into account signal (and thus cancel immediately),\n    // it is beneficial to have catch-all\n    const listener = (event: Event) => { manager.cancel(); };\n    if (signal !== undefined) {\n        signal.addEventListener(\"abort\", listener);\n    }\n\n    manager.run(concurrency)\n        .finally(() => {\n            if (signal !== undefined) {\n                signal.removeEventListener(\"abort\", listener);\n            }\n        }).then(() => {\n            const props = {\n                lastFetch,\n                length,\n                requests,\n            };\n            if (manager.canceled) {\n                telemetryEvent.cancel({ ...props, error: \"ops request cancelled by client\" });\n            } else {\n                assert(toTotal === undefined || lastFetch !== undefined && lastFetch >= toTotal - 1,\n                    0x270 /* \"All requested ops fetched\" */);\n                telemetryEvent.end(props);\n            }\n            queue.pushDone();\n        })\n        .catch((error) => {\n            telemetryEvent.cancel({\n                lastFetch,\n                length,\n                requests,\n            }, error);\n            queue.pushError(error);\n        });\n\n    return queue;\n}\n\nexport const emptyMessageStream: IStream<ISequencedDocumentMessage[]> = {\n    read: async () => { return { done: true }; },\n};\n\nexport function streamFromMessages(messagesArg: Promise<ISequencedDocumentMessage[]>):\n    IStream<ISequencedDocumentMessage[]> {\n    let messages: Promise<ISequencedDocumentMessage[]> | undefined = messagesArg;\n    return {\n        read: async () => {\n            if (messages === undefined) {\n                return { done: true };\n            }\n            const value = await messages;\n            messages = undefined;\n            return value.length === 0 ? { done: true } : { done: false, value };\n        },\n    };\n}\n\nexport function streamObserver<T>(stream: IStream<T>, handler: (value: IStreamResult<T>) => void): IStream<T> {\n    return {\n        read: async () => {\n            const value = await stream.read();\n            handler(value);\n            return value;\n        },\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    IDeltaStorageService,\n    IDocumentDeltaStorageService,\n    IDeltasFetchResult,\n    IStream,\n} from \"@fluidframework/driver-definitions\";\nimport { ISequencedDocumentMessage } from \"@fluidframework/protocol-definitions\";\nimport { readAndParse, requestOps, emptyMessageStream } from \"@fluidframework/driver-utils\";\nimport { TelemetryNullLogger } from \"@fluidframework/common-utils\";\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { PerformanceEvent } from \"@fluidframework/telemetry-utils\";\nimport { RestWrapper } from \"@fluidframework/server-services-client\";\nimport { DocumentStorageService } from \"./documentStorageService\";\n\nconst MaxBatchDeltas = 2000; // Maximum number of ops we can fetch at a time\n\n/**\n * Storage service limited to only being able to fetch documents for a specific document\n */\nexport class DocumentDeltaStorageService implements IDocumentDeltaStorageService {\n    constructor(\n        private readonly tenantId: string,\n        private readonly id: string,\n        private readonly deltaStorageService: IDeltaStorageService,\n        private readonly documentStorageService: DocumentStorageService) {\n    }\n\n    private logtailSha: string | undefined = this.documentStorageService.logTailSha;\n\n    fetchMessages(from: number,\n        to: number | undefined,\n        abortSignal?: AbortSignal,\n        cachedOnly?: boolean,\n        fetchReason?: string,\n    ): IStream<ISequencedDocumentMessage[]> {\n        if (cachedOnly) {\n            return emptyMessageStream;\n        }\n        return requestOps(\n            this.getCore.bind(this),\n            // Staging: starting with no concurrency, listening for feedback first.\n            // In future releases we will switch to actual concurrency\n            1, // concurrency\n            from, // inclusive\n            to, // exclusive\n            MaxBatchDeltas,\n            new TelemetryNullLogger(),\n            abortSignal,\n            fetchReason,\n        );\n    }\n\n    private async getCore(from: number, to: number): Promise<IDeltasFetchResult> {\n        const opsFromLogTail = this.logtailSha\n            ? await readAndParse<ISequencedDocumentMessage[]>(this.documentStorageService, this.logtailSha)\n            : [];\n\n        this.logtailSha = undefined;\n        if (opsFromLogTail.length > 0) {\n            const messages = opsFromLogTail.filter((op) =>\n                op.sequenceNumber >= from,\n            );\n            if (messages.length > 0) {\n                return { messages, partialResult: true };\n            }\n        }\n\n        return this.deltaStorageService.get(this.tenantId, this.id, from, to);\n    }\n}\n\n/**\n * Provides access to the underlying delta storage on the server for routerlicious driver.\n */\nexport class DeltaStorageService implements IDeltaStorageService {\n    constructor(\n        private readonly url: string,\n        private readonly restWrapper: RestWrapper,\n        private readonly logger: ITelemetryLogger,\n        private readonly getRestWrapper: () => Promise<RestWrapper> = async () => this.restWrapper,\n        private readonly getDeltaStorageUrl: () => string = () => this.url,\n    ) {\n    }\n\n    public async get(\n        tenantId: string,\n        id: string,\n        from: number, // inclusive\n        to: number, // exclusive\n    ): Promise<IDeltasFetchResult> {\n        const ops = await PerformanceEvent.timedExecAsync(\n            this.logger,\n            {\n                eventName: \"getDeltas\",\n                from,\n                to,\n            },\n            async (event) => {\n                const restWrapper = await this.getRestWrapper();\n                const url = this.getDeltaStorageUrl();\n                const response = await restWrapper.get<ISequencedDocumentMessage[]>(\n                    url,\n                    { from: from - 1, to });\n                event.end({\n                    count: response.length,\n                });\n                return response;\n            },\n        );\n\n        // It is assumed that server always returns all the ops that it has in the range that was requested.\n        // This may change in the future, if so, we need to adjust and receive \"end\" value from server in such case.\n        return { messages: ops, partialResult: false };\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    IDocumentStorageService,\n    IDocumentStorageServicePolicies,\n    ISummaryContext,\n} from \"@fluidframework/driver-definitions\";\nimport {\n    ICreateBlobResponse,\n    ISnapshotTree,\n    ISummaryHandle,\n    ISummaryTree,\n    IVersion,\n} from \"@fluidframework/protocol-definitions\";\n\nexport class DocumentStorageServiceProxy implements IDocumentStorageService {\n    private _policies: IDocumentStorageServicePolicies | undefined;\n\n    public set policies(policies: IDocumentStorageServicePolicies | undefined) {\n        this._policies = policies;\n    }\n\n    public get policies() {\n        return this._policies ?? this.internalStorageService.policies;\n    }\n\n    public get repositoryUrl(): string {\n        return this.internalStorageService.repositoryUrl;\n    }\n\n    constructor(protected readonly internalStorageService: IDocumentStorageService) { }\n\n    public async getSnapshotTree(version?: IVersion, scenarioName?: string): Promise<ISnapshotTree | null> {\n        return this.internalStorageService.getSnapshotTree(version, scenarioName);\n    }\n\n    public async getVersions(versionId: string | null, count: number, scenarioName?: string): Promise<IVersion[]> {\n        return this.internalStorageService.getVersions(versionId, count, scenarioName);\n    }\n\n    public async uploadSummaryWithContext(summary: ISummaryTree, context: ISummaryContext): Promise<string> {\n        return this.internalStorageService.uploadSummaryWithContext(summary, context);\n    }\n\n    public async downloadSummary(handle: ISummaryHandle): Promise<ISummaryTree> {\n        return this.internalStorageService.downloadSummary(handle);\n    }\n\n    public async createBlob(file: ArrayBufferLike): Promise<ICreateBlobResponse> {\n        return this.internalStorageService.createBlob(file);\n    }\n\n    public async readBlob(blobId: string): Promise<ArrayBufferLike> {\n        return this.internalStorageService.readBlob(blobId);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { LoaderCachingPolicy } from \"@fluidframework/driver-definitions\";\nimport {\n    ISnapshotTree,\n    IVersion,\n} from \"@fluidframework/protocol-definitions\";\nimport { DocumentStorageServiceProxy } from \"./documentStorageServiceProxy\";\nimport { canRetryOnError } from \"./network\";\n\nexport class PrefetchDocumentStorageService extends DocumentStorageServiceProxy {\n    // BlobId -> blob prefetchCache cache\n    private readonly prefetchCache = new Map<string, Promise<ArrayBufferLike>>();\n    private prefetchEnabled = true;\n\n    public get policies() {\n        const policies = this.internalStorageService.policies;\n        if (policies) {\n            return { ...policies, caching: LoaderCachingPolicy.NoCaching };\n        }\n    }\n\n    public async getSnapshotTree(version?: IVersion): Promise<ISnapshotTree | null> {\n        const p = this.internalStorageService.getSnapshotTree(version);\n        if (this.prefetchEnabled) {\n            // We don't care if the prefetch succeeds\n            void p.then((tree: ISnapshotTree | null | undefined) => {\n                if (tree === null || tree === undefined) { return; }\n                this.prefetchTree(tree);\n            });\n        }\n        return p;\n    }\n\n    public async readBlob(blobId: string): Promise<ArrayBufferLike> {\n        return this.cachedRead(blobId);\n    }\n    public stopPrefetch() {\n        this.prefetchEnabled = false;\n        this.prefetchCache.clear();\n    }\n\n    private async cachedRead(blobId: string): Promise<ArrayBufferLike> {\n        if (this.prefetchEnabled) {\n            const prefetchedBlobP = this.prefetchCache.get(blobId);\n            if (prefetchedBlobP !== undefined) {\n                return prefetchedBlobP;\n            }\n            const prefetchedBlobPFromStorage = this.internalStorageService.readBlob(blobId);\n            this.prefetchCache.set(blobId, prefetchedBlobPFromStorage.catch((error) => {\n                if (canRetryOnError(error)) {\n                    this.prefetchCache.delete(blobId);\n                }\n                throw error;\n            }));\n            return prefetchedBlobPFromStorage;\n        }\n        return this.internalStorageService.readBlob(blobId);\n    }\n\n    private prefetchTree(tree: ISnapshotTree) {\n        const secondary: string[] = [];\n        this.prefetchTreeCore(tree, secondary);\n\n        for (const blob of secondary) {\n            // We don't care if the prefetch succeeds\n            void this.cachedRead(blob);\n        }\n    }\n\n    private prefetchTreeCore(tree: ISnapshotTree, secondary: string[]) {\n        for (const blobKey of Object.keys(tree.blobs)) {\n            const blob = tree.blobs[blobKey];\n            if (blobKey.startsWith(\".\") || blobKey === \"header\" || blobKey.startsWith(\"quorum\")) {\n                if (blob !== null) {\n                    // We don't care if the prefetch succeeds\n                    void this.cachedRead(blob);\n                }\n            } else if (!blobKey.startsWith(\"deltas\")) {\n                if (blob !== null) {\n                    secondary.push(blob);\n                }\n            }\n        }\n\n        for (const subTree of Object.keys(tree.trees)) {\n            this.prefetchTreeCore(tree.trees[subTree], secondary);\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    assert,\n    IsoBuffer,\n} from \"@fluidframework/common-utils\";\nimport {\n    SummaryType,\n    ISnapshotTree,\n    ISummaryTree,\n    SummaryObject,\n} from \"@fluidframework/protocol-definitions\";\n\n/**\n * Summary tree assembler props\n */\nexport interface ISummaryTreeAssemblerProps {\n    /**\n\t * Indicates that this tree is unreferenced. If this is not present, the tree is considered referenced.\n\t */\n    unreferenced?: true;\n}\n\n/**\n * Summary tree assembler (without stats collection).\n */\nexport class SummaryTreeAssembler {\n    private attachmentCounter: number = 0;\n    private readonly summaryTree: { [path: string]: SummaryObject; } = {};\n\n    constructor(\n        private readonly props?: ISummaryTreeAssemblerProps,\n    ) { }\n\n    /**\n    * Get final summary\n    */\n    public get summary(): ISummaryTree {\n        return {\n            type: SummaryType.Tree,\n            tree: { ...this.summaryTree },\n            unreferenced: this.props?.unreferenced,\n        };\n    }\n\n    /**\n    * Add blob to summary\n    */\n    public addBlob(key: string, content: string | Uint8Array): void {\n        this.summaryTree[key] = {\n            type: SummaryType.Blob,\n            content,\n        };\n    }\n\n    /**\n    * Add handle to summary\n    */\n    public addHandle(\n        key: string,\n        handleType: SummaryType.Tree | SummaryType.Blob | SummaryType.Attachment,\n        handle: string): void {\n        this.summaryTree[key] = {\n            type: SummaryType.Handle,\n            handleType,\n            handle,\n        };\n    }\n\n    /**\n    * Add tree to summary\n    */\n    public addTree(key: string, summary: ISummaryTree): void {\n        this.summaryTree[key] = summary;\n    }\n\n    /**\n    * Add attachment to summary\n    */\n    public addAttachment(id: string) {\n        this.summaryTree[this.attachmentCounter++] = { id, type: SummaryType.Attachment };\n    }\n}\n\n/**\n * Helper function that converts ISnapshotTree and blobs to ISummaryTree\n * @param snapshot - Source snapshot tree\n * @param blobs - Blobs cache\n * @returns Converted snapshot in ISummaryTree format\n */\nexport function convertSnapshotAndBlobsToSummaryTree(\n    snapshot: ISnapshotTree,\n    blobs: Map<string, ArrayBuffer>,\n): ISummaryTree {\n    const assembler = new SummaryTreeAssembler({\n        unreferenced: snapshot.unreferenced,\n    });\n    for (const [path, id] of Object.entries(snapshot.blobs)) {\n        const blob = blobs.get(id);\n        assert(blob !== undefined, 0x2dd /* \"Cannot find blob for a given id\" */);\n        assembler.addBlob(path, IsoBuffer.from(blob).toString(\"utf-8\"));\n    }\n    for (const [key, tree] of Object.entries(snapshot.trees)) {\n        const subtree = convertSnapshotAndBlobsToSummaryTree(tree, blobs);\n        assembler.addTree(key, subtree);\n    }\n    return assembler.summary;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { assert, stringToBuffer, Uint8ArrayToString, unreachableCase } from \"@fluidframework/common-utils\";\nimport { getGitType } from \"@fluidframework/protocol-base\";\nimport { ISnapshotTree, SummaryType } from \"@fluidframework/protocol-definitions\";\nimport {\n    ISummaryTree,\n    IWholeSummaryTree,\n    WholeSummaryTreeValue,\n    IWholeSummaryTreeBaseEntry,\n    WholeSummaryTreeEntry,\n    IEmbeddedSummaryHandle,\n    IWholeFlatSummaryTree,\n    IWholeFlatSummary,\n    INormalizedWholeSummary,\n} from \"./storageContracts\";\n\n/**\n * Convert a list of nodes to a tree path.\n * If a node is empty (blank) it will be removed.\n * If a node's name begins and/or ends with a \"/\", it will be removed.\n * @param nodeNames - node names in path\n */\nexport const buildTreePath = (...nodeNames: string[]): string =>\n    nodeNames\n        .map((nodeName) => nodeName.replace(/^\\//, \"\").replace(/\\/$/, \"\"))\n        .filter((nodeName) => !!nodeName)\n        .join(\"/\");\n\n/**\n * Converts the summary tree to a whole summary tree to be uploaded. Always upload full whole summary tree.\n * @param parentHandle - Handle of the last uploaded summary or detach new summary.\n * @param tree - Summary Tree which will be converted to whole summary tree to be uploaded.\n * @param path - Current path of node which is getting evaluated.\n */\nexport function convertSummaryTreeToWholeSummaryTree(\n    parentHandle: string | undefined,\n    tree: ISummaryTree,\n    path: string = \"\",\n    rootNodeName: string = \"\",\n): IWholeSummaryTree {\n    const wholeSummaryTree: IWholeSummaryTree = {\n        type: \"tree\",\n        entries: [] as WholeSummaryTreeEntry[],\n    };\n\n    const keys = Object.keys(tree.tree);\n    for (const key of keys) {\n        const summaryObject = tree.tree[key];\n\n        let id: string | undefined;\n        let value: WholeSummaryTreeValue | undefined;\n        let unreferenced: true | undefined;\n\n        const currentPath = path === \"\"\n            ? buildTreePath(rootNodeName, key)\n            : buildTreePath(path, key);\n        switch (summaryObject.type) {\n            case SummaryType.Tree: {\n                const result = convertSummaryTreeToWholeSummaryTree(\n                    parentHandle,\n                    summaryObject,\n                    currentPath,\n                    rootNodeName,\n                );\n                value = result;\n                unreferenced = summaryObject.unreferenced || undefined;\n                break;\n            }\n            case SummaryType.Blob: {\n                if (typeof summaryObject.content === \"string\") {\n                    value = {\n                        type: \"blob\",\n                        content: summaryObject.content,\n                        encoding: \"utf-8\",\n                    };\n                } else {\n                    value = {\n                        type: \"blob\",\n                        content: Uint8ArrayToString(summaryObject.content, \"base64\"),\n                        encoding: \"base64\",\n                    };\n                }\n                break;\n            }\n            case SummaryType.Handle: {\n                const handleValue = summaryObject as IEmbeddedSummaryHandle;\n                if (handleValue.embedded) {\n                    id = summaryObject.handle;\n                } else {\n                    if (!parentHandle) {\n                        throw Error(\"Parent summary does not exist to reference by handle.\");\n                    }\n                    id = buildTreePath(parentHandle, rootNodeName, summaryObject.handle);\n                }\n                break;\n            }\n            case SummaryType.Attachment: {\n                id = summaryObject.id;\n                break;\n            }\n            default: {\n                unreachableCase(summaryObject, `Unknown type: ${(summaryObject as any).type}`);\n            }\n        }\n\n        const baseEntry: IWholeSummaryTreeBaseEntry = {\n            path: encodeURIComponent(key),\n            type: getGitType(summaryObject),\n        };\n\n        let entry: WholeSummaryTreeEntry;\n\n        if (value) {\n            assert(id === undefined, 0x0ad /* \"Snapshot entry has both a tree value and a referenced id!\" */);\n            entry = {\n                value,\n                unreferenced,\n                ...baseEntry,\n            };\n        } else if (id) {\n            entry = {\n                ...baseEntry,\n                id,\n            };\n        } else {\n            throw new Error(`Invalid tree entry for ${summaryObject.type}`);\n        }\n\n        wholeSummaryTree.entries.push(entry);\n    }\n\n    return wholeSummaryTree;\n}\n\n/**\n * Build a tree heirarchy from a flat tree.\n *\n * @param flatTree - a flat tree\n * @param treePrefixToRemove - tree prefix to strip\n * @returns the heirarchical tree\n */\n function buildHierarchy(\n    flatTree: IWholeFlatSummaryTree,\n    treePrefixToRemove: string,\n): ISnapshotTree {\n    const lookup: { [path: string]: ISnapshotTree; } = {};\n    // Root tree id will be used to determine which version was downloaded.\n    const root: ISnapshotTree = { id: flatTree.id, blobs: {}, trees: {} };\n    lookup[\"\"] = root;\n\n    for (const entry of flatTree.entries) {\n        // Strip the `treePrefixToRemove` path from tree entries such that they are stored under root.\n        const entryPath = entry.path.replace(new RegExp(`^${treePrefixToRemove}/`), \"\");\n        const lastIndex = entryPath.lastIndexOf(\"/\");\n        const entryPathDir = entryPath.slice(0, Math.max(0, lastIndex));\n        const entryPathBase = entryPath.slice(lastIndex + 1);\n\n        // The flat output is breadth-first so we can assume we see tree nodes prior to their contents\n        const node = lookup[entryPathDir];\n\n        // Add in either the blob or tree\n        if (entry.type === \"tree\") {\n            const newTree: ISnapshotTree = { blobs: {}, trees: {}, unreferenced: entry.unreferenced };\n            node.trees[decodeURIComponent(entryPathBase)] = newTree;\n            lookup[entryPath] = newTree;\n        } else if (entry.type === \"blob\") {\n            node.blobs[decodeURIComponent(entryPathBase)] = entry.id;\n        } else {\n            throw new Error(`Unknown entry type!!`);\n        }\n    }\n\n    return root;\n}\n\n/**\n * Converts existing IWholeFlatSummary to snapshot tree, blob array, and sequence number.\n *\n * @param flatSummary - flat summary\n * @param treePrefixToRemove - tree prefix to strip. By default we are stripping \".app\" prefix\n * @returns snapshot tree, blob array, and sequence number\n */\nexport function convertWholeFlatSummaryToSnapshotTreeAndBlobs(\n    flatSummary: IWholeFlatSummary,\n    treePrefixToRemove: string = \".app\",\n): INormalizedWholeSummary {\n    const blobs = new Map<string, ArrayBuffer>();\n    if (flatSummary.blobs) {\n        flatSummary.blobs.forEach((blob) => {\n            blobs.set(blob.id, stringToBuffer(blob.content, blob.encoding ?? \"utf-8\"));\n        });\n    }\n    const flatSummaryTree = flatSummary.trees?.[0];\n    const sequenceNumber = flatSummaryTree?.sequenceNumber;\n    const snapshotTree = buildHierarchy(\n        flatSummaryTree,\n        treePrefixToRemove,\n    );\n\n    return {\n        blobs,\n        snapshotTree,\n        sequenceNumber,\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ISummaryTree,\n    IWholeSummaryPayload,\n    IWholeSummaryPayloadType,\n} from \"./storageContracts\";\nimport { IGitManager, ISummaryUploadManager } from \"./storage\";\nimport { convertSummaryTreeToWholeSummaryTree } from \"./storageUtils\";\n\n/**\n * Converts summary to snapshot tree and uploads with single snaphot tree payload.\n */\n export class WholeSummaryUploadManager implements ISummaryUploadManager {\n    constructor(\n        private readonly manager: IGitManager,\n    ) {\n    }\n\n    public async writeSummaryTree(\n        summaryTree: ISummaryTree,\n        parentHandle: string | undefined,\n        summaryType: IWholeSummaryPayloadType,\n        sequenceNumber?: number,\n    ): Promise<string> {\n        const id = await this.writeSummaryTreeCore(parentHandle, summaryTree, summaryType, sequenceNumber ?? 0);\n        if (!id) {\n            throw new Error(`Failed to write summary tree`);\n        }\n        return id;\n    }\n\n    private async writeSummaryTreeCore(\n        parentHandle: string | undefined,\n        tree: ISummaryTree,\n        type: IWholeSummaryPayloadType,\n        sequenceNumber: number,\n    ): Promise<string> {\n        const snapshotTree = convertSummaryTreeToWholeSummaryTree(\n            parentHandle,\n            tree,\n            \"\",\n            type === \"channel\" ? \".app\" : \"\",\n        );\n        const snapshotPayload: IWholeSummaryPayload = {\n            entries: snapshotTree.entries,\n            message: undefined,\n            sequenceNumber,\n            type,\n        };\n\n        return this.manager.createSummary(snapshotPayload).then((response) => response.id);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport interface ICache<T> {\n    get(key: string): Promise<T | undefined>;\n    put(key: string, value: T): Promise<void>;\n}\n\nexport class InMemoryCache<T> implements ICache<T> {\n    private readonly cache: Map<string, T> = new Map();\n\n    public async get(key: string): Promise<T | undefined> {\n        return this.cache.get(key);\n    }\n\n    public async put(key: string, value: T): Promise<void> {\n        this.cache.set(key, value);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport type { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport {\n    assert,\n    stringToBuffer,\n    Uint8ArrayToString,\n} from \"@fluidframework/common-utils\";\nimport {\n    IDocumentStorageService,\n    ISummaryContext,\n    IDocumentStorageServicePolicies,\n} from \"@fluidframework/driver-definitions\";\nimport {\n    convertSnapshotAndBlobsToSummaryTree,\n} from \"@fluidframework/driver-utils\";\nimport {\n    ICreateBlobResponse,\n    ISnapshotTree,\n    ISummaryHandle,\n    ISummaryTree,\n    IVersion,\n} from \"@fluidframework/protocol-definitions\";\nimport {\n    convertWholeFlatSummaryToSnapshotTreeAndBlobs,\n    GitManager,\n    ISummaryUploadManager,\n    WholeSummaryUploadManager,\n} from \"@fluidframework/server-services-client\";\nimport { PerformanceEvent } from \"@fluidframework/telemetry-utils\";\nimport { ICache, InMemoryCache } from \"./cache\";\nimport { ISnapshotTreeVersion } from \"./definitions\";\nimport { IRouterliciousDriverPolicies } from \"./policies\";\n\nconst latestSnapshotId: string = \"latest\";\n\nexport class WholeSummaryDocumentStorageService implements IDocumentStorageService {\n    private firstVersionsCall: boolean = true;\n\n    public get repositoryUrl(): string {\n        return \"\";\n    }\n\n    private async getSummaryUploadManager(): Promise<ISummaryUploadManager> {\n        const manager = await this.getStorageManager();\n        return new WholeSummaryUploadManager(manager);\n    }\n\n    constructor(\n        protected readonly id: string,\n        protected readonly manager: GitManager,\n        protected readonly logger: ITelemetryLogger,\n        public readonly policies: IDocumentStorageServicePolicies = {},\n        private readonly driverPolicies?: IRouterliciousDriverPolicies,\n        private readonly blobCache: ICache<ArrayBufferLike> = new InMemoryCache(),\n        private readonly snapshotTreeCache: ICache<ISnapshotTreeVersion> = new InMemoryCache(),\n        private readonly noCacheGitManager?: GitManager,\n        private readonly getStorageManager: (disableCache?: boolean) => Promise<GitManager> = async (disableCache) =>\n            disableCache && this.noCacheGitManager !== undefined ? this.noCacheGitManager : this.manager,\n    ) {\n    }\n\n    public async getVersions(versionId: string | null, count: number): Promise<IVersion[]> {\n        if (versionId !== this.id && versionId !== null) {\n            // Blobs/Trees in this scenario will never have multiple versions, so return versionId as is\n            return [{\n                id: versionId,\n                treeId: undefined!,\n            }];\n        }\n        // If this is the first versions call for the document, we know we will want the latest summary.\n        // Fetch latest summary, cache it, and return its id.\n        if (this.firstVersionsCall && count === 1) {\n            this.firstVersionsCall = false;\n            const { id: _id, snapshotTree } = !this.driverPolicies?.enableDiscovery ?\n                await this.fetchAndCacheSnapshotTree(latestSnapshotId, false) :\n                await this.fetchAndCacheSnapshotTree(latestSnapshotId, true);\n            return [{\n                id: _id,\n                treeId: snapshotTree.id!,\n            }];\n        }\n\n        // Otherwise, get the latest version of the document as normal.\n        const id = versionId ? versionId : this.id;\n        const commits = await PerformanceEvent.timedExecAsync(\n            this.logger,\n            {\n                eventName: \"getVersions\",\n                versionId: id,\n                count,\n            },\n            async () => {\n                const manager = await this.getStorageManager();\n                return manager.getCommits(id, count);\n            },\n        );\n        return commits.map((commit) => ({\n            date: commit.commit.author.date,\n            id: commit.sha,\n            treeId: commit.commit.tree.sha,\n        }));\n    }\n\n    public async getSnapshotTree(version?: IVersion): Promise<ISnapshotTree | null> {\n        let requestVersion = version;\n        if (!requestVersion) {\n            const versions = await this.getVersions(this.id, 1);\n            if (versions.length === 0) {\n                return null;\n            }\n\n            requestVersion = versions[0];\n        }\n\n        return (await this.fetchAndCacheSnapshotTree(requestVersion.id)).snapshotTree;\n    }\n\n    public async readBlob(blobId: string): Promise<ArrayBufferLike> {\n        const cachedBlob = await this.blobCache.get(blobId);\n        if (cachedBlob !== undefined) {\n            return cachedBlob;\n        }\n\n        const blob = await PerformanceEvent.timedExecAsync(\n            this.logger,\n            {\n                eventName: \"readBlob\",\n                blobId,\n            },\n            async (event) => {\n                const manager = await this.getStorageManager();\n                const response = await manager.getBlob(blobId);\n                event.end({\n                    size: response.size,\n                });\n                return response;\n            },\n        );\n        const bufferValue = stringToBuffer(blob.content, blob.encoding);\n\n        await this.blobCache.put(blob.sha, bufferValue);\n\n        return bufferValue;\n    }\n\n    public async uploadSummaryWithContext(summary: ISummaryTree, context: ISummaryContext): Promise<string> {\n        const summaryHandle = await PerformanceEvent.timedExecAsync(\n            this.logger,\n            {\n                eventName: \"uploadSummaryWithContext\",\n            },\n            async () => {\n                const summaryUploadManager = await this.getSummaryUploadManager();\n                return summaryUploadManager.writeSummaryTree(summary, context.ackHandle ?? \"\", \"channel\");\n            },\n        );\n        return summaryHandle;\n    }\n\n    public async downloadSummary(summaryHandle: ISummaryHandle): Promise<ISummaryTree> {\n        const wholeFlatSummary = await PerformanceEvent.timedExecAsync(\n            this.logger,\n            {\n                eventName: \"getWholeFlatSummary\",\n                treeId: summaryHandle.handle,\n            },\n            async (event) => {\n                const manager = await this.getStorageManager();\n                const response = await manager.getSummary(summaryHandle.handle);\n                event.end({\n                    size: response.trees[0]?.entries.length,\n                });\n                return response;\n            },\n        );\n\n        const { blobs, snapshotTree } = convertWholeFlatSummaryToSnapshotTreeAndBlobs(wholeFlatSummary, \"\");\n        return convertSnapshotAndBlobsToSummaryTree(snapshotTree, blobs);\n    }\n\n    public async createBlob(file: ArrayBufferLike): Promise<ICreateBlobResponse> {\n        const uint8ArrayFile = new Uint8Array(file);\n        return PerformanceEvent.timedExecAsync(\n            this.logger,\n            {\n                eventName: \"createBlob\",\n                size: uint8ArrayFile.length,\n            },\n            async (event) => {\n                const manager = await this.getStorageManager();\n                const response = await manager.createBlob(\n                    Uint8ArrayToString(\n                        uint8ArrayFile, \"base64\"),\n                    \"base64\").then((r) => ({ id: r.sha, url: r.url }));\n                event.end({\n                    blobId: response.id,\n                });\n                return response;\n            },\n        );\n    }\n\n    private async fetchAndCacheSnapshotTree(versionId: string, disableCache?: boolean): Promise<ISnapshotTreeVersion> {\n        const cachedSnapshotTreeVersion = await this.snapshotTreeCache.get(versionId);\n        if (cachedSnapshotTreeVersion !== undefined) {\n            return { id: cachedSnapshotTreeVersion.id, snapshotTree: cachedSnapshotTreeVersion.snapshotTree };\n        }\n\n        const wholeFlatSummary = await PerformanceEvent.timedExecAsync(\n            this.logger,\n            {\n                eventName: \"getWholeFlatSummary\",\n                treeId: versionId,\n            },\n            async (event) => {\n                const manager = await this.getStorageManager(disableCache);\n                const response = await manager.getSummary(versionId);\n                event.end({\n                    size: response.trees[0]?.entries.length,\n                });\n                return response;\n            },\n        );\n        const normalizedWholeSummary = convertWholeFlatSummaryToSnapshotTreeAndBlobs(wholeFlatSummary);\n        const wholeFlatSummaryId: string = wholeFlatSummary.id;\n        const snapshotTreeId = normalizedWholeSummary.snapshotTree.id;\n        assert(snapshotTreeId !== undefined, 0x275 /* \"Root tree should contain the id\" */);\n        const snapshotTreeVersion = { id: wholeFlatSummaryId, snapshotTree: normalizedWholeSummary.snapshotTree };\n\n        const cachePs: Promise<any>[] = [\n            this.snapshotTreeCache.put(\n                snapshotTreeId,\n                snapshotTreeVersion,\n            ),\n            this.initBlobCache(normalizedWholeSummary.blobs),\n        ];\n        if (snapshotTreeId !== versionId) {\n            // versionId could be \"latest\". When summarizer checks cache for \"latest\", we want it to be available.\n            // TODO: For in-memory cache, <latest,snapshotTree> will be a shared pointer with <snapshotId,snapshotTree>,\n            // However, for something like Redis, this will cache the same value twice. Alternatively, could we simply\n            // cache with versionId?\n            cachePs.push(this.snapshotTreeCache.put(\n                versionId,\n                snapshotTreeVersion,\n            ));\n        }\n\n        await Promise.all(cachePs);\n\n        return snapshotTreeVersion;\n    }\n\n    private async initBlobCache(blobs: Map<string, ArrayBuffer>): Promise<void> {\n        const blobCachePutPs: Promise<void>[] = [];\n        blobs.forEach((value, id) => {\n            blobCachePutPs.push(this.blobCache.put(id, value));\n        });\n        await Promise.all(blobCachePutPs);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as base64js from \"base64-js\";\nimport { IsoBuffer } from \"./bufferBrowser\";\n\nasync function digestBuffer(file: IsoBuffer, algorithm: \"SHA-1\" | \"SHA-256\"): Promise<Uint8Array> {\n    const hash = await crypto.subtle.digest(algorithm, file);\n    return new Uint8Array(hash);\n}\n\nfunction encodeDigest(hashArray: Uint8Array, encoding: \"hex\" | \"base64\"): string {\n    // eslint-disable-next-line default-case\n    switch (encoding) {\n        case \"hex\": {\n            const hashHex = Array.prototype.map.call(hashArray, (byte) => {\n                return byte.toString(16).padStart(2, \"0\") as string;\n            }).join(\"\");\n            return hashHex;\n        }\n        case \"base64\": {\n            return base64js.fromByteArray(hashArray);\n        }\n    }\n}\n\n/**\n * Hash a file. Consistent within a session, but should not be persisted and\n * is not consistent with git.\n * If called under an insecure context for a browser, this will fallback to\n * using the node implementation.\n *\n * @param file - The contents of the file in a buffer\n * @param algorithm - The hash algorithm to use, artificially constrained by what is used internally\n * @param hashEncoding - The encoding of the returned hash, also artificially constrained\n * @returns The hash of the content of the buffer\n */\nexport async function hashFile(\n    file: IsoBuffer,\n    algorithm: \"SHA-1\" | \"SHA-256\" = \"SHA-1\",\n    hashEncoding: \"hex\" | \"base64\" = \"hex\",\n): Promise<string> {\n    // Handle insecure contexts (e.g. running with local services)\n    // by deferring to Node version, which uses a hash polyfill\n    // When packed, this chunk will show as \"FluidFramework-HashFallback\" separately\n    // from the main chunk and will be of non-trivial size.  It will not be served\n    // under normal circumstances.\n    if (crypto.subtle === undefined) {\n        return import(\n            /* webpackChunkName: \"FluidFramework-HashFallback\" */\n            \"./hashFileNode\"\n        ).then(async (m) => m.hashFile(file, algorithm, hashEncoding));\n    }\n\n    // This is split up this way to facilitate testing (see the test for more info)\n    const hashArray = await digestBuffer(file, algorithm);\n    return encodeDigest(hashArray, hashEncoding);\n}\n\n/**\n * Create a github hash (Github hashes the string with blob and size)\n * Must be called under secure context for browsers\n *\n * @param file - The contents of the file in a buffer\n * @returns The sha1 hash of the content of the buffer with the `blob` prefix and size\n */\nexport async function gitHashFile(file: IsoBuffer): Promise<string> {\n    const size = file.byteLength;\n    const filePrefix = `blob ${size.toString()}${String.fromCharCode(0)}`;\n    const hashBuffer = IsoBuffer.from(filePrefix + file.toString());\n\n    // hashFile uses sha1; if that changes this will need to change too\n    return hashFile(hashBuffer);\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { assert, gitHashFile, IsoBuffer, Uint8ArrayToString, unreachableCase } from \"@fluidframework/common-utils\";\nimport { ICreateTreeEntry } from \"@fluidframework/gitresources\";\nimport { getGitMode, getGitType } from \"@fluidframework/protocol-base\";\nimport {\n    ISnapshotTreeEx,\n    ISummaryTree,\n    SummaryObject,\n    SummaryType,\n} from \"@fluidframework/protocol-definitions\";\nimport { ISummaryUploadManager, IGitManager } from \"./storage\";\nimport { IWholeSummaryPayloadType } from \"./storageContracts\";\n\n/**\n * Recursively writes summary tree as individual summary blobs.\n */\nexport class SummaryTreeUploadManager implements ISummaryUploadManager {\n    constructor(\n        private readonly manager: IGitManager,\n        private readonly blobsShaCache: Map<string, string>,\n        private readonly getPreviousFullSnapshot:\n            (parentHandle: string) => Promise<ISnapshotTreeEx | null | undefined>,\n    ) {\n    }\n\n    public async writeSummaryTree(\n        summaryTree: ISummaryTree,\n        parentHandle: string,\n        summaryType: IWholeSummaryPayloadType,\n        sequenceNumber?: number,\n    ): Promise<string> {\n        const previousFullSnapshot = await this.getPreviousFullSnapshot(parentHandle);\n        return this.writeSummaryTreeCore(summaryTree, previousFullSnapshot ?? undefined);\n    }\n\n    private async writeSummaryTreeCore(\n        summaryTree: ISummaryTree,\n        previousFullSnapshot: ISnapshotTreeEx | undefined,\n    ): Promise<string> {\n        const entries = await Promise.all(Object.keys(summaryTree.tree).map(async (key) => {\n            const entry = summaryTree.tree[key];\n            const pathHandle = await this.writeSummaryTreeObject(entry, previousFullSnapshot);\n            const treeEntry: ICreateTreeEntry = {\n                mode: getGitMode(entry),\n                path: encodeURIComponent(key),\n                sha: pathHandle,\n                type: getGitType(entry),\n            };\n            return treeEntry;\n        }));\n\n        const treeHandle = await this.manager.createGitTree({ tree: entries });\n        return treeHandle.sha;\n    }\n\n    private async writeSummaryTreeObject(\n        object: SummaryObject,\n        previousFullSnapshot: ISnapshotTreeEx | undefined,\n    ): Promise<string> {\n        switch (object.type) {\n            case SummaryType.Blob: {\n                return this.writeSummaryBlob(object.content);\n            }\n            case SummaryType.Handle: {\n                if (previousFullSnapshot === undefined) {\n                    throw Error(\"Parent summary does not exist to reference by handle.\");\n                }\n                return this.getIdFromPath(object.handleType, object.handle, previousFullSnapshot);\n            }\n            case SummaryType.Tree: {\n                return this.writeSummaryTreeCore(object, previousFullSnapshot);\n            }\n            case SummaryType.Attachment: {\n                return object.id;\n            }\n\n            default:\n                unreachableCase(object, `Unknown type: ${(object as any).type}`);\n        }\n    }\n\n    private async writeSummaryBlob(content: string | Uint8Array): Promise<string> {\n        const { parsedContent, encoding } = typeof content === \"string\"\n            ? { parsedContent: content, encoding: \"utf-8\" }\n            : { parsedContent: Uint8ArrayToString(content, \"base64\"), encoding: \"base64\" };\n\n        // The gitHashFile would return the same hash as returned by the server as blob.sha\n        const hash = await gitHashFile(IsoBuffer.from(parsedContent, encoding));\n        if (!this.blobsShaCache.has(hash)) {\n            this.blobsShaCache.set(hash, \"\");\n            const blob = await this.manager.createBlob(parsedContent, encoding);\n            assert(hash === blob.sha, 0x0b6 /* \"Blob.sha and hash do not match!!\" */);\n        }\n        return hash;\n    }\n\n    private getIdFromPath(\n        handleType: SummaryType,\n        handlePath: string,\n        previousFullSnapshot: ISnapshotTreeEx,\n    ): string {\n        const path = handlePath.split(\"/\").map((part) => decodeURIComponent(part));\n        if (path[0] === \"\") {\n            // root of tree should be unnamed\n            path.shift();\n        }\n        if (path.length === 0) {\n            return previousFullSnapshot.id;\n        }\n\n        return this.getIdFromPathCore(handleType, path, previousFullSnapshot);\n    }\n\n    private getIdFromPathCore(\n        handleType: SummaryType,\n        path: string[],\n        /** Previous snapshot, subtree relative to this path part */\n        previousSnapshot: ISnapshotTreeEx,\n    ): string {\n        assert(path.length > 0, 0x0b3 /* \"Expected at least 1 path part\" */);\n        const key = path[0];\n        if (path.length === 1) {\n            switch (handleType) {\n                case SummaryType.Blob: {\n                    const tryId = previousSnapshot.blobs[key];\n                    assert(!!tryId, 0x0b4 /* \"Parent summary does not have blob handle for specified path.\" */);\n                    return tryId;\n                }\n                case SummaryType.Tree: {\n                    const tryId = previousSnapshot.trees[key]?.id;\n                    assert(!!tryId, 0x0b5 /* \"Parent summary does not have tree handle for specified path.\" */);\n                    return tryId;\n                }\n                default:\n                    throw Error(`Unexpected handle summary object type: \"${handleType}\".`);\n            }\n        }\n        return this.getIdFromPathCore(handleType, path.slice(1), previousSnapshot.trees[key]);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport type * as git from \"@fluidframework/gitresources\";\nimport type * as protocol from \"@fluidframework/protocol-definitions\";\nimport {\n    IGitManager,\n    IWholeFlatSummary,\n    IWholeSummaryPayload,\n    IWriteSummaryResponse,\n} from \"@fluidframework/server-services-client\";\nimport { runWithRetry } from \"@fluidframework/driver-utils\";\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\n\nexport class RetriableGitManager implements IGitManager {\n    constructor(\n        private readonly internalGitManager: IGitManager,\n        private readonly logger: ITelemetryLogger,\n    ) {\n    }\n\n    public async getHeader(id: string, sha: string): Promise<protocol.ISnapshotTree> {\n        return this.runWithRetry(\n            async () => this.internalGitManager.getHeader(id, sha),\n            \"gitManager_getHeader\",\n        );\n    }\n\n    public async getFullTree(sha: string): Promise<any> {\n        return this.runWithRetry(\n            async () => this.internalGitManager.getFullTree(sha),\n            \"gitManager_getFullTree\",\n        );\n    }\n\n    public async getCommit(sha: string): Promise<git.ICommit> {\n        return this.runWithRetry(\n            async () => this.internalGitManager.getCommit(sha),\n            \"gitManager_getCommit\",\n        );\n    }\n\n    public async getCommits(sha: string, count: number): Promise<git.ICommitDetails[]> {\n        return this.runWithRetry(\n            async () => this.internalGitManager.getCommits(sha, count),\n            \"gitManager_getCommits\",\n        );\n    }\n\n    public async getTree(root: string, recursive: boolean): Promise<git.ITree> {\n        return this.runWithRetry(\n            async () => this.internalGitManager.getTree(root, recursive),\n            \"gitManager_getTree\",\n        );\n    }\n\n    public async getBlob(sha: string): Promise<git.IBlob> {\n        return this.runWithRetry(\n            async () => this.internalGitManager.getBlob(sha),\n            \"gitManager_getBlob\",\n        );\n    }\n\n    public getRawUrl(sha: string): string {\n        return this.internalGitManager.getRawUrl(sha);\n    }\n\n    public async getContent(commit: string, path: string): Promise<git.IBlob> {\n        return this.runWithRetry(\n            async () => this.internalGitManager.getContent(commit, path),\n            \"gitManager_getContent\",\n        );\n    }\n\n    public async createBlob(content: string, encoding: string): Promise<git.ICreateBlobResponse> {\n        return this.runWithRetry(\n            async () => this.internalGitManager.createBlob(content, encoding),\n            \"gitManager_createBlob\",\n        );\n    }\n\n    public async createGitTree(params: git.ICreateTreeParams): Promise<git.ITree> {\n        return this.runWithRetry(\n            async () => this.internalGitManager.createGitTree(params),\n            \"gitManager_createGitTree\",\n        );\n    }\n\n    public async createTree(files: protocol.ITree): Promise<git.ITree> {\n        return this.runWithRetry(\n            async () => this.internalGitManager.createTree(files),\n            \"gitManager_createTree\",\n        );\n    }\n\n    public async createCommit(commit: git.ICreateCommitParams): Promise<git.ICommit> {\n        return this.runWithRetry(\n            async () => this.internalGitManager.createCommit(commit),\n            \"gitManager_createCommit\",\n        );\n    }\n\n    public async getRef(ref: string): Promise<git.IRef> {\n        return this.runWithRetry(\n            async () => this.internalGitManager.getRef(ref),\n            \"gitManager_getRef\",\n        );\n    }\n\n    public async createRef(branch: string, sha: string): Promise<git.IRef> {\n        return this.runWithRetry(\n            async () => this.internalGitManager.createRef(branch, sha),\n            \"gitManager_createRef\",\n        );\n    }\n\n    public async upsertRef(branch: string, commitSha: string): Promise<git.IRef> {\n        return this.runWithRetry(\n            async () => this.internalGitManager.upsertRef(branch, commitSha),\n            \"gitManager_upsertRef\",\n        );\n    }\n\n    public async write(branch: string,\n        inputTree: protocol.ITree,\n        parents: string[],\n        message: string): Promise<git.ICommit> {\n        return this.runWithRetry(\n            async () => this.internalGitManager.write(branch, inputTree, parents, message),\n            \"gitManager_write\",\n        );\n    }\n\n    public async createSummary(summary: IWholeSummaryPayload): Promise<IWriteSummaryResponse> {\n        return this.runWithRetry(\n            async () => this.internalGitManager.createSummary(summary),\n            \"gitManager_createSummary\",\n        );\n    }\n\n    public async deleteSummary(softDelete: boolean): Promise<void> {\n        return this.runWithRetry(\n            async () => this.internalGitManager.deleteSummary(softDelete),\n            \"gitManager_deleteSummary\",\n        );\n    }\n\n    public async getSummary(sha: string): Promise<IWholeFlatSummary> {\n        return this.runWithRetry(\n            async () => this.internalGitManager.getSummary(sha),\n            \"gitManager_getSummary\",\n        );\n    }\n\n    private async runWithRetry<T>(api: () => Promise<T>, callName: string): Promise<T> {\n        return runWithRetry(\n            api,\n            callName,\n            this.logger,\n            {}, // progress\n        );\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport type { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport {\n    stringToBuffer,\n    Uint8ArrayToString,\n} from \"@fluidframework/common-utils\";\nimport {\n    IDocumentStorageService,\n    ISummaryContext,\n    IDocumentStorageServicePolicies,\n} from \"@fluidframework/driver-definitions\";\nimport { buildHierarchy } from \"@fluidframework/protocol-base\";\nimport {\n    ICreateBlobResponse,\n    ISnapshotTreeEx,\n    ISummaryHandle,\n    ISummaryTree,\n    IVersion,\n} from \"@fluidframework/protocol-definitions\";\nimport {\n    GitManager,\n    ISummaryUploadManager,\n    SummaryTreeUploadManager,\n} from \"@fluidframework/server-services-client\";\nimport { PerformanceEvent } from \"@fluidframework/telemetry-utils\";\nimport { IRouterliciousDriverPolicies } from \"./policies\";\nimport { ICache, InMemoryCache } from \"./cache\";\nimport { RetriableGitManager } from \"./retriableGitManager\";\nimport { ISnapshotTreeVersion } from \"./definitions\";\n\nconst isNode = typeof window === \"undefined\";\n\n/**\n * Document access to underlying storage for routerlicious driver.\n * Uploads summaries piece-by-piece traversing the tree recursively.\n * Downloads summaries piece-by-piece on-demand, or up-front when prefetch is enabled.\n */\nexport class ShreddedSummaryDocumentStorageService implements IDocumentStorageService {\n    // The values of this cache is useless. We only need the keys. So we are always putting\n    // empty strings as values.\n    protected readonly blobsShaCache = new Map<string, string>();\n    private readonly blobCache: ICache<ArrayBufferLike> | undefined;\n    private readonly snapshotTreeCache: ICache<ISnapshotTreeVersion> | undefined;\n\n    public get repositoryUrl(): string {\n        return \"\";\n    }\n\n    private async getSummaryUploadManager(): Promise<ISummaryUploadManager> {\n        const manager = await this.getStorageManager();\n        return new SummaryTreeUploadManager(\n            new RetriableGitManager(manager, this.logger),\n            this.blobsShaCache,\n            this.getPreviousFullSnapshot.bind(this),\n        );\n    }\n\n    constructor(\n        protected readonly id: string,\n        protected readonly manager: GitManager,\n        protected readonly logger: ITelemetryLogger,\n        public readonly policies: IDocumentStorageServicePolicies = {},\n        driverPolicies?: IRouterliciousDriverPolicies,\n        blobCache?: ICache<ArrayBufferLike>,\n        snapshotTreeCache?: ICache<ISnapshotTreeVersion>,\n        private readonly getStorageManager: (disableCache?: boolean) => Promise<GitManager> = async () => this.manager,\n    ) {\n        if (driverPolicies?.enableRestLess === true || isNode) {\n            this.blobCache = blobCache ?? new InMemoryCache();\n            this.snapshotTreeCache = snapshotTreeCache ?? new InMemoryCache();\n        }\n    }\n\n    public async getVersions(versionId: string | null, count: number): Promise<IVersion[]> {\n        const id = versionId ? versionId : this.id;\n        const commits = await PerformanceEvent.timedExecAsync(\n            this.logger,\n            {\n                eventName: \"getVersions\",\n                versionId: id,\n                count,\n            },\n            async () => {\n                const manager = await this.getStorageManager();\n                return manager.getCommits(id, count);\n            },\n        );\n        return commits.map((commit) => ({\n            date: commit.commit.author.date,\n            id: commit.sha,\n            treeId: commit.commit.tree.sha,\n        }));\n    }\n\n    public async getSnapshotTree(version?: IVersion): Promise<ISnapshotTreeEx | null> {\n        let requestVersion = version;\n        if (!requestVersion) {\n            const versions = await this.getVersions(this.id, 1);\n            if (versions.length === 0) {\n                return null;\n            }\n\n            requestVersion = versions[0];\n        }\n\n        const cachedSnapshotTree = await this.snapshotTreeCache?.get(requestVersion.treeId);\n        if (cachedSnapshotTree) {\n            return cachedSnapshotTree.snapshotTree as ISnapshotTreeEx;\n        }\n\n        const rawTree = await PerformanceEvent.timedExecAsync(\n            this.logger,\n            {\n                eventName: \"getSnapshotTree\",\n                treeId: requestVersion.treeId,\n            },\n            async (event) => {\n                const manager = await this.getStorageManager();\n                const response = await manager.getTree(requestVersion!.treeId);\n                event.end({\n                    size: response.tree.length,\n                });\n                return response;\n            },\n        );\n        const tree = buildHierarchy(rawTree, this.blobsShaCache, true);\n        await this.snapshotTreeCache?.put(tree.id, { id: requestVersion.id, snapshotTree: tree });\n        return tree;\n    }\n\n    public async readBlob(blobId: string): Promise<ArrayBufferLike> {\n        const cachedBlob = await this.blobCache?.get(blobId);\n        if (cachedBlob) {\n            return cachedBlob;\n        }\n\n        const value = await PerformanceEvent.timedExecAsync(\n            this.logger,\n            {\n                eventName: \"readBlob\",\n                blobId,\n            },\n            async (event) => {\n                const manager = await this.getStorageManager();\n                const response = await manager.getBlob(blobId);\n                event.end({\n                    size: response.size,\n                });\n                return response;\n            },\n        );\n        this.blobsShaCache.set(value.sha, \"\");\n        const bufferContent = stringToBuffer(value.content, value.encoding);\n        await this.blobCache?.put(value.sha, bufferContent);\n        return bufferContent;\n    }\n\n    public async uploadSummaryWithContext(summary: ISummaryTree, context: ISummaryContext): Promise<string> {\n        const summaryHandle = await PerformanceEvent.timedExecAsync(\n            this.logger,\n            {\n                eventName: \"uploadSummaryWithContext\",\n            },\n            async () => {\n                const summaryUploadManager = await this.getSummaryUploadManager();\n                return summaryUploadManager.writeSummaryTree(summary, context.ackHandle ?? \"\", \"channel\");\n            },\n        );\n        return summaryHandle;\n    }\n\n    public async downloadSummary(handle: ISummaryHandle): Promise<ISummaryTree> {\n        throw new Error(\"NOT IMPLEMENTED!\");\n    }\n\n    public async createBlob(file: ArrayBufferLike): Promise<ICreateBlobResponse> {\n        const uint8ArrayFile = new Uint8Array(file);\n        return PerformanceEvent.timedExecAsync(\n            this.logger,\n            {\n                eventName: \"createBlob\",\n                size: uint8ArrayFile.length,\n            },\n            async (event) => {\n                const manager = await this.getStorageManager();\n                const response = await manager.createBlob(\n                    Uint8ArrayToString(\n                        uint8ArrayFile, \"base64\"),\n                    \"base64\").then((r) => ({ id: r.sha, url: r.url }));\n                event.end({\n                    blobId: response.id,\n                });\n                return response;\n            },\n        );\n    }\n\n    private async getPreviousFullSnapshot(parentHandle: string): Promise<ISnapshotTreeEx | null | undefined> {\n        return parentHandle\n            ? this.getVersions(parentHandle, 1)\n                .then(async (versions) => {\n                    // Clear the cache as the getSnapshotTree call will fill the cache.\n                    this.blobsShaCache.clear();\n                    return this.getSnapshotTree(versions[0]);\n                })\n            : undefined;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport type { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport {\n    IDocumentStorageService,\n    IDocumentStorageServicePolicies,\n    LoaderCachingPolicy,\n} from \"@fluidframework/driver-definitions\";\nimport {\n    ISnapshotTree,\n    IVersion,\n} from \"@fluidframework/protocol-definitions\";\nimport {\n    GitManager,\n} from \"@fluidframework/server-services-client\";\nimport { DocumentStorageServiceProxy, PrefetchDocumentStorageService } from \"@fluidframework/driver-utils\";\nimport { IRouterliciousDriverPolicies } from \"./policies\";\nimport { ICache } from \"./cache\";\nimport { WholeSummaryDocumentStorageService } from \"./wholeSummaryDocumentStorageService\";\nimport { ShreddedSummaryDocumentStorageService } from \"./shreddedSummaryDocumentStorageService\";\nimport { ISnapshotTreeVersion } from \"./definitions\";\n\nexport class DocumentStorageService extends DocumentStorageServiceProxy {\n    private _logTailSha: string | undefined = undefined;\n\n    public get logTailSha(): string | undefined {\n        return this._logTailSha;\n    }\n\n    private static loadInternalDocumentStorageService(\n        id: string,\n        manager: GitManager,\n        logger: ITelemetryLogger,\n        policies: IDocumentStorageServicePolicies,\n        driverPolicies?: IRouterliciousDriverPolicies,\n        blobCache?: ICache<ArrayBufferLike>,\n        snapshotTreeCache?: ICache<ISnapshotTreeVersion>,\n        noCacheGitManager?: GitManager,\n        getStorageManager?: (disableCache?: boolean) => Promise<GitManager>,\n    ): IDocumentStorageService {\n        const storageService = driverPolicies?.enableWholeSummaryUpload ?\n            new WholeSummaryDocumentStorageService(\n                id,\n                manager,\n                logger,\n                policies,\n                driverPolicies,\n                blobCache,\n                snapshotTreeCache,\n                noCacheGitManager,\n                getStorageManager,\n            ) :\n            new ShreddedSummaryDocumentStorageService(\n                id,\n                manager,\n                logger,\n                policies,\n                driverPolicies,\n                blobCache,\n                snapshotTreeCache,\n                getStorageManager,\n            );\n        // TODO: worth prefetching latest summary making version + snapshot call with WholeSummary storage?\n        if (!driverPolicies?.enableWholeSummaryUpload && policies.caching === LoaderCachingPolicy.Prefetch) {\n            return new PrefetchDocumentStorageService(storageService);\n        }\n        return storageService;\n    }\n\n    constructor(\n        public readonly id: string,\n        public manager: GitManager,\n        logger: ITelemetryLogger,\n        policies: IDocumentStorageServicePolicies = {},\n        driverPolicies?: IRouterliciousDriverPolicies,\n        blobCache?: ICache<ArrayBufferLike>,\n        snapshotTreeCache?: ICache<ISnapshotTreeVersion>,\n        public noCacheGitManager?: GitManager,\n        getStorageManager?: (disableCache?: boolean) => Promise<GitManager>,\n    ) {\n        super(DocumentStorageService.loadInternalDocumentStorageService(\n            id,\n            manager,\n            logger,\n            policies,\n            driverPolicies,\n            blobCache,\n            snapshotTreeCache,\n            noCacheGitManager,\n            getStorageManager,\n        ));\n    }\n\n    public async getSnapshotTree(version?: IVersion): Promise<ISnapshotTree | null> {\n        const tree = await this.internalStorageService.getSnapshotTree(version);\n        if (tree !== null) {\n            this._logTailSha = \".logTail\" in tree.trees ? tree.trees[\".logTail\"].blobs.logTail : undefined;\n        }\n        return tree;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n *\n * THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY\n */\n\nexport const pkgName = \"@fluidframework/driver-base\";\nexport const pkgVersion = \"1.2.3\";\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { assert, extractLogSafeErrorProperties } from \"@fluidframework/common-utils\";\nimport {\n    IDocumentDeltaConnection,\n    IDocumentDeltaConnectionEvents,\n} from \"@fluidframework/driver-definitions\";\nimport { createGenericNetworkError, IAnyDriverError } from \"@fluidframework/driver-utils\";\nimport {\n    ConnectionMode,\n    IClientConfiguration,\n    IConnect,\n    IConnected,\n    IDocumentMessage,\n    ISequencedDocumentMessage,\n    ISignalClient,\n    ISignalMessage,\n    ITokenClaims,\n    ScopeType,\n} from \"@fluidframework/protocol-definitions\";\nimport { IDisposable, ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport {\n    ChildLogger,\n    getCircularReplacer,\n    loggerToMonitoringContext,\n    MonitoringContext,\n    EventEmitterWithErrorHandling,\n} from \"@fluidframework/telemetry-utils\";\nimport type { Socket } from \"socket.io-client\";\n// For now, this package is versioned and released in unison with the specific drivers\nimport { pkgVersion as driverVersion } from \"./packageVersion\";\n\n/**\n * Represents a connection to a stream of delta updates\n */\nexport class DocumentDeltaConnection\n    extends EventEmitterWithErrorHandling<IDocumentDeltaConnectionEvents>\n    implements IDocumentDeltaConnection, IDisposable {\n    static readonly eventsToForward = [\"nack\", \"op\", \"signal\", \"pong\"];\n\n    // WARNING: These are critical events that we can't miss, so registration for them has to be in place at all times!\n    // Including before handshake is over, and after that (but before DeltaManager had a chance to put its own handlers)\n    static readonly eventsAlwaysForwarded = [\"disconnect\", \"error\"];\n\n    /**\n     * Last known sequence number to ordering service at the time of connection\n     * It may lap actual last sequence number (quite a bit, if container  is very active).\n     * But it's best information for client to figure out how far it is behind, at least\n     * for \"read\" connections. \"write\" connections may use own \"join\" op to similar information,\n     * that is likely to be more up-to-date.\n     */\n    public checkpointSequenceNumber: number | undefined;\n\n    // Listen for ops sent before we receive a response to connect_document\n    protected readonly queuedMessages: ISequencedDocumentMessage[] = [];\n    protected readonly queuedSignals: ISignalMessage[] = [];\n    /**\n     * A flag to indicate whether we have our handler attached.  If it's attached, we're queueing incoming ops\n     * to later be retrieved via initialMessages.\n     */\n    private earlyOpHandlerAttached: boolean = false;\n\n    private socketConnectionTimeout: ReturnType<typeof setTimeout> | undefined;\n\n    private _details: IConnected | undefined;\n\n    // Listeners only needed while the connection is in progress\n    private readonly connectionListeners: Map<string, (...args: any[]) => void> = new Map();\n    // Listeners used throughout the lifetime of the DocumentDeltaConnection\n    private readonly trackedListeners: Map<string, (...args: any[]) => void> = new Map();\n\n    protected get hasDetails(): boolean {\n        return !!this._details;\n    }\n\n    public get disposed() {\n        assert(this._disposed || this.socket.connected, 0x244 /* \"Socket is closed, but connection is not!\" */);\n        return this._disposed;\n    }\n    /**\n     * Flag to indicate whether the DocumentDeltaConnection is expected to still be capable of sending messages.\n     * After disconnection, we flip this to prevent any stale messages from being emitted.\n     */\n    protected _disposed: boolean = false;\n    private readonly mc: MonitoringContext;\n    /**\n     * @deprecated - Implementors should manage their own logger or monitoring context\n     */\n    protected get logger(): ITelemetryLogger {\n        return this.mc.logger;\n    }\n\n    public get details(): IConnected {\n        if (!this._details) {\n            throw new Error(\"Internal error: calling method before _details is initialized!\");\n        }\n        return this._details;\n    }\n\n    /**\n     * @param socket - websocket to be used\n     * @param documentId - ID of the document\n     * @param logger - for reporting telemetry events\n     * @param enableLongPollingDowngrades - allow connection to be downgraded to long-polling on websocket failure\n     */\n    protected constructor(\n        protected readonly socket: Socket,\n        public documentId: string,\n        logger: ITelemetryLogger,\n        private readonly enableLongPollingDowngrades: boolean = false,\n    ) {\n        super((name, error) => {\n            logger.sendErrorEvent(\n                {\n                    eventName: \"DeltaConnection:EventException\",\n                    name,\n                },\n                error);\n        });\n\n        this.mc = loggerToMonitoringContext(\n            ChildLogger.create(logger, \"DeltaConnection\"));\n\n        this.on(\"newListener\", (event, listener) => {\n            assert(!this.disposed, 0x20a /* \"register for event on disposed object\" */);\n\n            // Some events are already forwarded - see this.addTrackedListener() calls in initialize().\n            if (DocumentDeltaConnection.eventsAlwaysForwarded.includes(event)) {\n                assert(this.trackedListeners.has(event), 0x245 /* \"tracked listener\" */);\n                return;\n            }\n\n            if (!DocumentDeltaConnection.eventsToForward.includes(event)) {\n                throw new Error(`DocumentDeltaConnection: Registering for unknown event: ${event}`);\n            }\n\n            // Whenever listener is added, we should subscribe on same event on socket, so these two things\n            // should be in sync. This currently assumes that nobody unregisters and registers back listeners,\n            // and that there are no \"internal\" listeners installed (like \"error\" case we skip above)\n            // Better flow might be to always unconditionally register all handlers on successful connection,\n            // though some logic (naming assert in initialMessages getter) might need to be adjusted (it becomes noop)\n            assert((this.listeners(event).length !== 0) === this.trackedListeners.has(event), 0x20b /* \"mismatch\" */);\n            if (!this.trackedListeners.has(event)) {\n                this.addTrackedListener(\n                    event,\n                    (...args: any[]) => {\n                        this.emit(event, ...args);\n                    });\n            }\n        });\n    }\n\n    /**\n     * Get the ID of the client who is sending the message\n     *\n     * @returns the client ID\n     */\n    public get clientId(): string {\n        return this.details.clientId;\n    }\n\n    /**\n     * Get the mode of the client\n     *\n     * @returns the client mode\n     */\n    public get mode(): ConnectionMode {\n        return this.details.mode;\n    }\n\n    /**\n     * Get the claims of the client who is sending the message\n     *\n     * @returns client claims\n     */\n    public get claims(): ITokenClaims {\n        return this.details.claims;\n    }\n\n    /**\n     * Get whether or not this is an existing document\n     *\n     * @returns true if the document exists\n     */\n    public get existing(): boolean {\n        return this.details.existing;\n    }\n\n    /**\n     * Get the maximum size of a message before chunking is required\n     *\n     * @returns the maximum size of a message before chunking is required\n     */\n    public get maxMessageSize(): number {\n        return this.details.serviceConfiguration.maxMessageSize;\n    }\n\n    /**\n     * Semver of protocol being used with the service\n     */\n    public get version(): string {\n        return this.details.version;\n    }\n\n    /**\n     * Configuration details provided by the service\n     */\n    public get serviceConfiguration(): IClientConfiguration {\n        return this.details.serviceConfiguration;\n    }\n\n    private checkNotClosed() {\n        assert(!this.disposed, 0x20c /* \"connection disposed\" */);\n    }\n\n    /**\n     * Get messages sent during the connection\n     *\n     * @returns messages sent during the connection\n     */\n    public get initialMessages(): ISequencedDocumentMessage[] {\n        this.checkNotClosed();\n\n        // If we call this when the earlyOpHandler is not attached, then the queuedMessages may not include the\n        // latest ops.  This could possibly indicate that initialMessages was called twice.\n        assert(this.earlyOpHandlerAttached, 0x08e /* \"Potentially missed initial messages\" */);\n        // We will lose ops and perf will tank as we need to go to storage to become current!\n        assert(this.listeners(\"op\").length !== 0, 0x08f /* \"No op handler is setup!\" */);\n\n        this.removeEarlyOpHandler();\n\n        if (this.queuedMessages.length > 0) {\n            // Some messages were queued.\n            // add them to the list of initialMessages to be processed\n            this.details.initialMessages.push(...this.queuedMessages);\n            this.details.initialMessages.sort((a, b) => a.sequenceNumber - b.sequenceNumber);\n            this.queuedMessages.length = 0;\n        }\n        return this.details.initialMessages;\n    }\n\n    /**\n     * Get signals sent during the connection\n     *\n     * @returns signals sent during the connection\n     */\n    public get initialSignals(): ISignalMessage[] {\n        this.checkNotClosed();\n        assert(this.listeners(\"signal\").length !== 0, 0x090 /* \"No signal handler is setup!\" */);\n\n        this.removeEarlySignalHandler();\n\n        if (this.queuedSignals.length > 0) {\n            // Some signals were queued.\n            // add them to the list of initialSignals to be processed\n            this.details.initialSignals.push(...this.queuedSignals);\n            this.queuedSignals.length = 0;\n        }\n        return this.details.initialSignals;\n    }\n\n    /**\n     * Get initial client list\n     *\n     * @returns initial client list sent during the connection\n     */\n    public get initialClients(): ISignalClient[] {\n        this.checkNotClosed();\n        return this.details.initialClients;\n    }\n\n    protected emitMessages(type: string, messages: IDocumentMessage[][]) {\n        // Although the implementation here disconnects the socket and does not reuse it, other subclasses\n        // (e.g. OdspDocumentDeltaConnection) may reuse the socket.  In these cases, we need to avoid emitting\n        // on the still-live socket.\n        if (!this.disposed) {\n            this.socket.emit(type, this.clientId, messages);\n        }\n    }\n\n    protected submitCore(type: string, messages: IDocumentMessage[]) {\n        this.emitMessages(type, [messages]);\n    }\n\n    /**\n     * Submits a new delta operation to the server\n     *\n     * @param message - delta operation to submit\n     */\n    public submit(messages: IDocumentMessage[]): void {\n        this.checkNotClosed();\n        this.submitCore(\"submitOp\", messages);\n    }\n\n    /**\n     * Submits a new signal to the server\n     *\n     * @param message - signal to submit\n     */\n    public submitSignal(message: IDocumentMessage): void {\n        this.checkNotClosed();\n        this.submitCore(\"submitSignal\", [message]);\n    }\n\n    /**\n     * Disconnect from the websocket, and permanently disable this DocumentDeltaConnection.\n     */\n    public dispose() {\n        this.disposeCore(\n            false, // socketProtocolError\n            createGenericNetworkError(\n                // pre-0.58 error message: clientClosingConnection\n                \"Client closing delta connection\", { canRetry: true }, { driverVersion }));\n    }\n\n    protected disposeCore(socketProtocolError: boolean, err: IAnyDriverError) {\n        // Can't check this.disposed here, as we get here on socket closure,\n        // so _disposed & socket.connected might be not in sync while processing\n        // \"dispose\" event.\n        if (this._disposed) {\n            return;\n        }\n\n        // We set the disposed flag as a part of the contract for overriding the disconnect method. This is used by\n        // DocumentDeltaConnection to determine if emitting messages (ops) on the socket is allowed, which is\n        // important since OdspDocumentDeltaConnection reuses the socket rather than truly disconnecting it. Note that\n        // OdspDocumentDeltaConnection may still send disconnect_document which is allowed; this is only intended\n        // to prevent normal messages from being emitted.\n        this._disposed = true;\n\n        this.removeTrackedListeners();\n        this.disconnect(socketProtocolError, err);\n    }\n\n    /**\n     * Disconnect from the websocket.\n     * @param socketProtocolError - true if error happened on socket / socket.io protocol level\n     *  (not on Fluid protocol level)\n     * @param reason - reason for disconnect\n     */\n    protected disconnect(socketProtocolError: boolean, reason: IAnyDriverError) {\n        this.socket.disconnect();\n    }\n\n    protected async initialize(connectMessage: IConnect, timeout: number) {\n        this.socket.on(\"op\", this.earlyOpHandler);\n        this.socket.on(\"signal\", this.earlySignalHandler);\n        this.earlyOpHandlerAttached = true;\n\n        // Socket.io's reconnect_attempt event is unreliable, so we track connect_error count instead.\n        let internalSocketConnectionFailureCount: number = 0;\n        const isInternalSocketReconnectionEnabled = (): boolean => this.socket.io.reconnection();\n        const getMaxInternalSocketReconnectionAttempts = (): number => isInternalSocketReconnectionEnabled()\n            ? this.socket.io.reconnectionAttempts()\n            : 0;\n        const getMaxAllowedInternalSocketConnectionFailures = (): number =>\n            getMaxInternalSocketReconnectionAttempts() + 1;\n\n        this._details = await new Promise<IConnected>((resolve, reject) => {\n            const fail = (socketProtocolError: boolean, err: IAnyDriverError) => {\n                this.disposeCore(socketProtocolError, err);\n                reject(err);\n            };\n\n            // Listen for connection issues\n            this.addConnectionListener(\"connect_error\", (error) => {\n                internalSocketConnectionFailureCount++;\n                let isWebSocketTransportError = false;\n                try {\n                    const description = error?.description;\n                    if (description && typeof description === \"object\") {\n                        if (error.type === \"TransportError\") {\n                            isWebSocketTransportError = true;\n                        }\n                        // That's a WebSocket. Clear it as we can't log it.\n                        description.target = undefined;\n                    }\n                } catch (_e) { }\n\n                // Handle socket transport downgrading when not offline.\n                if (\n                    isWebSocketTransportError &&\n                    this.enableLongPollingDowngrades &&\n                    this.socket.io.opts.transports?.[0] !== \"polling\") {\n                    // Downgrade transports to polling upgrade mechanism.\n                    this.socket.io.opts.transports = [\"polling\", \"websocket\"];\n                    // Don't alter reconnection behavior if already enabled.\n                    if (!isInternalSocketReconnectionEnabled()) {\n                        // Allow single reconnection attempt using polling upgrade mechanism.\n                        this.socket.io.reconnection(true);\n                        this.socket.io.reconnectionAttempts(1);\n                    }\n                }\n\n                // Allow built-in socket.io reconnection handling.\n                if (isInternalSocketReconnectionEnabled() &&\n                    internalSocketConnectionFailureCount < getMaxAllowedInternalSocketConnectionFailures()) {\n                    // Reconnection is enabled and maximum reconnect attempts have not been reached.\n                    return;\n                }\n\n                fail(true, this.createErrorObject(\"connect_error\", error));\n            });\n\n            // Listen for timeouts\n            this.addConnectionListener(\"connect_timeout\", () => {\n                fail(true, this.createErrorObject(\"connect_timeout\"));\n            });\n\n            this.addConnectionListener(\"connect_document_success\", (response: IConnected) => {\n                // If we sent a nonce and the server supports nonces, check that the nonces match\n                if (connectMessage.nonce !== undefined &&\n                    response.nonce !== undefined &&\n                    response.nonce !== connectMessage.nonce) {\n                    return;\n                }\n\n                const requestedMode = connectMessage.mode;\n                const actualMode = response.mode;\n                const writingPermitted = response.claims.scopes.includes(ScopeType.DocWrite);\n\n                if (writingPermitted) {\n                    // The only time we expect a mismatch in requested/actual is if we lack write permissions\n                    // In this case we will get \"read\", even if we requested \"write\"\n                    if (actualMode !== requestedMode) {\n                        fail(false, this.createErrorObject(\n                            \"connect_document_success\",\n                            \"Connected in a different mode than was requested\",\n                            false,\n                        ));\n                        return;\n                    }\n                } else {\n                    if (actualMode === \"write\") {\n                        fail(false, this.createErrorObject(\n                            \"connect_document_success\",\n                            \"Connected in write mode without write permissions\",\n                            false,\n                        ));\n                        return;\n                    }\n                }\n\n                this.checkpointSequenceNumber = response.checkpointSequenceNumber;\n\n                this.removeConnectionListeners();\n                resolve(response);\n            });\n\n            // Socket can be disconnected while waiting for Fluid protocol messages\n            // (connect_document_error / connect_document_success), as well as before DeltaManager\n            // had a chance to register its handlers.\n            this.addTrackedListener(\"disconnect\", (reason) => {\n                const err = this.createErrorObject(\"disconnect\", reason);\n                this.emit(\"disconnect\", err);\n                fail(true, err);\n            });\n\n            this.addTrackedListener(\"error\", ((error) => {\n                // First, raise an error event, to give clients a chance to observe error contents\n                // This includes \"Invalid namespace\" error, which we consider critical (reconnecting will not help)\n                const err = this.createErrorObject(\"error\", error, error !== \"Invalid namespace\");\n                this.emit(\"error\", err);\n                // Disconnect socket - required if happened before initial handshake\n                fail(true, err);\n            }));\n\n            this.addConnectionListener(\"connect_document_error\", ((error) => {\n                // If we sent a nonce and the server supports nonces, check that the nonces match\n                if (connectMessage.nonce !== undefined &&\n                    error.nonce !== undefined &&\n                    error.nonce !== connectMessage.nonce) {\n                    return;\n                }\n\n                // This is not an socket.io error - it's Fluid protocol error.\n                // In this case fail connection and indicate that we were unable to create connection\n                fail(false, this.createErrorObject(\"connect_document_error\", error));\n            }));\n\n            this.socket.emit(\"connect_document\", connectMessage);\n\n            // Give extra 2 seconds for handshake on top of socket connection timeout\n            this.socketConnectionTimeout = setTimeout(() => {\n                fail(false, this.createErrorObject(\"orderingServiceHandshakeTimeout\"));\n            }, timeout + 2000);\n        });\n\n        assert(!this.disposed, 0x246 /* \"checking consistency of socket & _disposed flags\" */);\n    }\n\n    protected earlyOpHandler = (documentId: string, msgs: ISequencedDocumentMessage[]) => {\n        this.queuedMessages.push(...msgs);\n    };\n\n    protected earlySignalHandler = (msg: ISignalMessage) => {\n        this.queuedSignals.push(msg);\n    };\n\n    private removeEarlyOpHandler() {\n        this.socket.removeListener(\"op\", this.earlyOpHandler);\n        this.earlyOpHandlerAttached = false;\n    }\n\n    private removeEarlySignalHandler() {\n        this.socket.removeListener(\"signal\", this.earlySignalHandler);\n    }\n\n    private addConnectionListener(event: string, listener: (...args: any[]) => void) {\n        assert(!DocumentDeltaConnection.eventsAlwaysForwarded.includes(event),\n            0x247 /* \"Use addTrackedListener instead\" */);\n        assert(!DocumentDeltaConnection.eventsToForward.includes(event),\n            0x248 /* \"should not subscribe to forwarded events\" */);\n        this.socket.on(event, listener);\n        assert(!this.connectionListeners.has(event), 0x20d /* \"double connection listener\" */);\n        this.connectionListeners.set(event, listener);\n    }\n\n    protected addTrackedListener(event: string, listener: (...args: any[]) => void) {\n        this.socket.on(event, listener);\n        assert(!this.trackedListeners.has(event), 0x20e /* \"double tracked listener\" */);\n        this.trackedListeners.set(event, listener);\n    }\n\n    private removeTrackedListeners() {\n        for (const [event, listener] of this.trackedListeners.entries()) {\n            this.socket.off(event, listener);\n        }\n        // removeTrackedListeners removes all listeners, including connection listeners\n        this.removeConnectionListeners();\n\n        this.removeEarlyOpHandler();\n        this.removeEarlySignalHandler();\n\n        this.trackedListeners.clear();\n    }\n\n    private removeConnectionListeners() {\n        if (this.socketConnectionTimeout !== undefined) {\n            clearTimeout(this.socketConnectionTimeout);\n        }\n\n        for (const [event, listener] of this.connectionListeners.entries()) {\n            this.socket.off(event, listener);\n        }\n        this.connectionListeners.clear();\n    }\n\n    /**\n     * Error raising for socket.io issues\n     */\n    protected createErrorObject(handler: string, error?: any, canRetry = true): IAnyDriverError {\n        // Note: we suspect the incoming error object is either:\n        // - a string: log it in the message (if not a string, it may contain PII but will print as [object Object])\n        // - an Error object thrown by socket.io engine. Be careful with not recording PII!\n        let message: string;\n        if (error?.type === \"TransportError\") {\n            // JSON.stringify drops Error.message\n            const messagePrefix = (error?.message !== undefined)\n                ? `${error.message}: `\n                : \"\";\n\n            // Websocket errors reported by engine.io-client.\n            // They are Error objects with description containing WS error and description = \"TransportError\"\n            // Please see https://github.com/socketio/engine.io-client/blob/7245b80/lib/transport.ts#L44,\n            message = `${messagePrefix}${JSON.stringify(error, getCircularReplacer())}`;\n        } else {\n            message = extractLogSafeErrorProperties(error).message;\n        }\n\n        const errorObj = createGenericNetworkError(\n            `socket.io (${handler}): ${message}`,\n            { canRetry },\n            { driverVersion },\n        );\n\n        return errorObj;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n *\n * THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY\n */\n\nexport const pkgName = \"@fluidframework/routerlicious-driver\";\nexport const pkgVersion = \"1.2.3\";\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { DriverError } from \"@fluidframework/driver-definitions\";\nimport {\n    NonRetryableError,\n    GenericNetworkError,\n    createGenericNetworkError,\n    AuthorizationError,\n} from \"@fluidframework/driver-utils\";\nimport { pkgVersion as driverVersion } from \"./packageVersion\";\n\nexport enum R11sErrorType {\n    fileNotFoundOrAccessDeniedError = \"fileNotFoundOrAccessDeniedError\",\n}\n\n/**\n * Interface for error responses for the WebSocket connection\n * Intended to be compatible with output from {@link NetworkError.toJSON}\n */\nexport interface IR11sSocketError {\n    /**\n     * An error code number for the error that occurred.\n     * It will be a valid HTTP status code.\n     */\n    code: number;\n\n    /**\n     * A message about the error that occurred for debugging / logging purposes.\n     * This should not be displayed to the user directly.\n     */\n    message: string;\n\n    /**\n     * Optional Retry-After time in seconds.\n     * The client should wait this many seconds before retrying its request.\n     */\n    retryAfter?: number;\n\n    /**\n     * Optional Retry-After time in milliseconds.\n     * The client should wait this many milliseconds before retrying its request.\n     */\n    retryAfterMs?: number;\n}\n\nexport interface IR11sError {\n    readonly errorType: R11sErrorType;\n    readonly message: string;\n    canRetry: boolean;\n}\n\nexport type R11sError = DriverError | IR11sError;\n\nexport function createR11sNetworkError(\n    errorMessage: string,\n    statusCode?: number,\n    retryAfterMs?: number,\n): R11sError {\n    const props = { statusCode, driverVersion };\n    switch (statusCode) {\n        case undefined:\n            // If a service is temporarily down or a browser resource limit is reached, RestWrapper will throw\n            // a network error with no status code (e.g. err:ERR_CONN_REFUSED or err:ERR_FAILED) and\n            // the error message will start with NetworkError as defined in restWrapper.ts\n            return new GenericNetworkError(\n                errorMessage, errorMessage.startsWith(\"NetworkError\"), props);\n        case 401:\n            // The first 401 is manually retried in RouterliciousRestWrapper with a refreshed token,\n            // so we treat repeat 401s the same as 403.\n        case 403:\n            return new AuthorizationError(\n                errorMessage, undefined, undefined, props);\n        case 404:\n            const errorType = R11sErrorType.fileNotFoundOrAccessDeniedError;\n            return new NonRetryableError(errorMessage, errorType, props);\n        case 429:\n            return createGenericNetworkError(\n                errorMessage, { canRetry: true, retryAfterMs }, props);\n        case 500:\n        case 502:\n            return new GenericNetworkError(errorMessage, true, props);\n        default:\n            const retryInfo = { canRetry: retryAfterMs !== undefined, retryAfterMs };\n            return createGenericNetworkError(errorMessage, retryInfo, props);\n    }\n}\n\nexport function throwR11sNetworkError(\n    errorMessage: string,\n    statusCode?: number,\n    retryAfterMs?: number,\n): never {\n    const networkError = createR11sNetworkError(\n        errorMessage,\n        statusCode,\n        retryAfterMs);\n\n    // eslint-disable-next-line @typescript-eslint/no-throw-literal\n    throw networkError;\n}\n\n/**\n * Returns network error based on error object from R11s socket (IR11sSocketError)\n */\nexport function errorObjectFromSocketError(socketError: IR11sSocketError, handler: string): R11sError {\n    // pre-0.58 error message prefix: R11sSocketError\n    const message = `R11s socket error (${handler}): ${socketError.message}`;\n    return createR11sNetworkError(\n        message,\n        socketError.code,\n        socketError.retryAfterMs,\n    );\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { DocumentDeltaConnection } from \"@fluidframework/driver-base\";\nimport { IDocumentDeltaConnection } from \"@fluidframework/driver-definitions\";\nimport { IAnyDriverError } from \"@fluidframework/driver-utils\";\nimport { IClient, IConnect } from \"@fluidframework/protocol-definitions\";\nimport type { io as SocketIOClientStatic } from \"socket.io-client\";\nimport { errorObjectFromSocketError, IR11sSocketError } from \"./errorUtils\";\nimport { pkgVersion as driverVersion } from \"./packageVersion\";\n\nconst protocolVersions = [\"^0.4.0\", \"^0.3.0\", \"^0.2.0\", \"^0.1.0\"];\n\n/**\n * Wrapper over the shared one for driver specific translation.\n */\nexport class R11sDocumentDeltaConnection extends DocumentDeltaConnection {\n    public static async create(\n        tenantId: string,\n        id: string,\n        token: string | null,\n        io: typeof SocketIOClientStatic,\n        client: IClient,\n        url: string,\n        logger: ITelemetryLogger,\n        timeoutMs = 20000): Promise<IDocumentDeltaConnection> {\n        const socket = io(\n            url,\n            {\n                query: {\n                    documentId: id,\n                    tenantId,\n                },\n                reconnection: false,\n                // Default to websocket connection, with long-polling disabled\n                transports: [\"websocket\"],\n                timeout: timeoutMs,\n            });\n\n        const connectMessage: IConnect = {\n            client,\n            id,\n            mode: client.mode,\n            tenantId,\n            token,  // Token is going to indicate tenant level information, etc...\n            versions: protocolVersions,\n            relayUserAgent: [client.details.environment, ` driverVersion:${driverVersion}`].join(\";\"),\n        };\n\n        // TODO: expose to host at factory level\n        const enableLongPollingDowngrades = true;\n        const deltaConnection = new R11sDocumentDeltaConnection(socket, id, logger, enableLongPollingDowngrades);\n\n        await deltaConnection.initialize(connectMessage, timeoutMs);\n        return deltaConnection;\n    }\n\n    /**\n     * Error raising for socket.io issues\n     */\n    protected createErrorObject(handler: string, error?: any, canRetry = true): IAnyDriverError {\n        // Note: we suspect the incoming error object is either:\n        // - a socketError: add it to the R11sError object for driver to be able to parse it and reason over it.\n        // - anything else: let base class handle it\n        if (canRetry && Number.isInteger(error?.code) && typeof error?.message === \"string\") {\n            return errorObjectFromSocketError(error as IR11sSocketError, handler);\n        } else {\n            return super.createErrorObject(handler, error, canRetry);\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AxiosRequestConfig } from \"axios\";\n\nexport enum RestLessFieldNames {\n    Method = \"method\",\n    Header = \"header\",\n    Body = \"body\",\n}\n\nconst encodeHeader = (\n    headerKey: string,\n    headerValue: string,\n): string => {\n    return `${headerKey}: ${headerValue}`;\n};\n\n/**\n * Client for communicating with a \"RestLess\" server.\n * Translates a typical RESTful HTTP request into \"RestLess\" HTTP format:\n *\n * POST \\<path\\> HTTP/\\<1.1|2\\>\n *\n * HOST \\<hostname\\>\n *\n * Content-Type: application/x-www-form-urlencoded\n *\n * <url-encoded-headers-body-and-method>\n */\nexport class RestLessClient {\n    /**\n     * Translates request from REST to \"RestLess\" out-of-place.\n     */\n    public translate(request: AxiosRequestConfig): AxiosRequestConfig {\n        const newRequest = { ...request };\n        const body = new URLSearchParams();\n\n        body.append(RestLessFieldNames.Method, newRequest.method ?? \"GET\");\n\n        if (newRequest.headers) {\n            for (const [headerKey, headerValue] of Object.entries(\n                newRequest.headers as Record<string, string>,\n            )) {\n                const encodedHeader = encodeHeader(headerKey, headerValue);\n                body.append(RestLessFieldNames.Header, encodedHeader);\n            }\n        }\n\n        if (newRequest.data && [\"post\", \"put\", \"patch\"].includes(newRequest.method?.toLowerCase())) {\n            const stringifiedBody = JSON.stringify(newRequest.data);\n            body.append(RestLessFieldNames.Body, stringifiedBody);\n        }\n\n        newRequest.data = body.toString();\n        newRequest.method = \"POST\";\n        newRequest.headers = {\n            // TODO: when we support blob/file uploads, we should potentially add compatibility with multipart/form-data\n            \"Content-Type\": \"application/x-www-form-urlencoded;restless\",\n        };\n\n        return newRequest;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IDocumentStorageService, ISummaryContext } from \"@fluidframework/driver-definitions\";\nimport * as api from \"@fluidframework/protocol-definitions\";\n\n/**\n * Document access to underlying storage. It is default implementation of a storage service.\n * Does not read/write anything.\n */\nexport class NullBlobStorageService implements IDocumentStorageService {\n    public get repositoryUrl(): string {\n        throw new Error(\"Invalid operation\");\n    }\n\n    public async getSnapshotTree(version?: api.IVersion): Promise<api.ISnapshotTree | null> {\n        return version ? Promise.reject(new Error(\"Invalid operation\")) : null;\n    }\n\n    public async getVersions(versionId: string | null, count: number): Promise<api.IVersion[]> {\n        return [];\n    }\n\n    public async uploadSummaryWithContext(summary: api.ISummaryTree, context: ISummaryContext): Promise<string> {\n        return Promise.reject(new Error(\"Invalid operation\"));\n    }\n\n    public async downloadSummary(handle: api.ISummaryHandle): Promise<api.ISummaryTree> {\n        return Promise.reject(new Error(\"Invalid operation\"));\n    }\n\n    public async createBlob(file: ArrayBufferLike): Promise<api.ICreateBlobResponse> {\n        return Promise.reject(new Error(\"Null blob storage can not create blob\"));\n    }\n    public async readBlob(blobId: string): Promise<ArrayBufferLike> {\n        return Promise.reject(new Error(\"Null blob storage can not read blob\"));\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport * as querystring from \"querystring\";\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { fromUtf8ToBase64 } from \"@fluidframework/common-utils\";\nimport { RateLimiter } from \"@fluidframework/driver-utils\";\nimport {\n    getAuthorizationTokenFromCredentials,\n    RestLessClient,\n    RestWrapper,\n} from \"@fluidframework/server-services-client\";\nimport fetch from \"cross-fetch\";\nimport type { AxiosRequestConfig, AxiosRequestHeaders } from \"axios\";\nimport safeStringify from \"json-stringify-safe\";\nimport { v4 as uuid } from \"uuid\";\nimport { throwR11sNetworkError } from \"./errorUtils\";\nimport { ITokenProvider } from \"./tokens\";\nimport { pkgVersion as driverVersion } from \"./packageVersion\";\n\ntype AuthorizationHeaderGetter = (refresh?: boolean) => Promise<string | undefined>;\n\nconst axiosRequestConfigToFetchRequestConfig = (requestConfig: AxiosRequestConfig): [RequestInfo, RequestInit] => {\n    const requestInfo: string = requestConfig.baseURL !== undefined\n        ? `${requestConfig.baseURL}${requestConfig.url ?? \"\"}`\n        : requestConfig.url ?? \"\";\n    const requestInit: RequestInit = {\n        method: requestConfig.method,\n        // NOTE: I believe that although the Axios type permits non-string values in the header, here we are\n        // guaranteed the requestConfig only has string values in its header.\n        headers: requestConfig.headers as Record<string, string>,\n        body: requestConfig.data,\n    };\n    return [requestInfo, requestInit];\n};\n\nexport class RouterliciousRestWrapper extends RestWrapper {\n    private authorizationHeader: string | undefined;\n    private readonly restLess = new RestLessClient();\n\n    constructor(\n        logger: ITelemetryLogger,\n        private readonly rateLimiter: RateLimiter,\n        private readonly getAuthorizationHeader: AuthorizationHeaderGetter,\n        private readonly useRestLess: boolean,\n        baseurl?: string,\n        defaultQueryString: querystring.ParsedUrlQueryInput = {},\n    ) {\n        super(baseurl, defaultQueryString);\n    }\n\n    public async load() {\n        this.authorizationHeader = await this.getAuthorizationHeader();\n    }\n\n    protected async request<T>(requestConfig: AxiosRequestConfig, statusCode: number, canRetry = true): Promise<T> {\n        const config = {\n            ...requestConfig,\n            headers: this.generateHeaders(requestConfig.headers),\n        };\n\n        const translatedConfig = this.useRestLess ? this.restLess.translate(config) : config;\n        const fetchRequestConfig = axiosRequestConfigToFetchRequestConfig(translatedConfig);\n\n        const response: Response = await this.rateLimiter.schedule(async () => fetch(...fetchRequestConfig)\n            .catch(async (error) => {\n                // Browser Fetch throws a TypeError on network error, `node-fetch` throws a FetchError\n                const isNetworkError = [\"TypeError\", \"FetchError\"].includes(error?.name);\n                throwR11sNetworkError(\n                    isNetworkError ? `NetworkError: ${error.message}` : safeStringify(error));\n            }));\n\n        const responseBody: any = response.headers.get(\"content-type\")?.includes(\"application/json\")\n            ? await response.json()\n            : await response.text();\n\n        // Success\n        if (response.ok || response.status === statusCode) {\n            const result: T = responseBody;\n            return result;\n        }\n        // Failure\n        if (response.status === 401 && canRetry) {\n            // Refresh Authorization header and retry once\n            this.authorizationHeader = await this.getAuthorizationHeader(true /* refreshToken */);\n            return this.request<T>(config, statusCode, false);\n        }\n        if (response.status === 429 && responseBody?.retryAfter > 0) {\n            // Retry based on retryAfter[Seconds]\n            return new Promise<T>((resolve, reject) => setTimeout(() => {\n                this.request<T>(config, statusCode)\n                    .then(resolve)\n                    .catch(reject);\n            }, responseBody.retryAfter * 1000));\n        }\n\n        const responseSummary = responseBody !== undefined\n            ? typeof responseBody === \"string\" ? responseBody : safeStringify(responseBody)\n            : response.statusText;\n        throwR11sNetworkError(\n            `R11s fetch error: ${responseSummary}`,\n            response.status,\n            responseBody?.retryAfter,\n        );\n    }\n\n    private generateHeaders(requestHeaders?: AxiosRequestHeaders | undefined): Record<string, string> {\n        const correlationId = requestHeaders?.[\"x-correlation-id\"] || uuid();\n\n        return {\n            ...requestHeaders,\n            // TODO: replace header names with CorrelationIdHeaderName and DriverVersionHeaderName from services-client\n            // NOTE: Can correlationId actually be number | true?\n            \"x-correlation-id\": correlationId as string,\n            \"x-driver-version\": driverVersion,\n            // NOTE: If this.authorizationHeader is undefined, should \"Authorization\" be removed entirely?\n            \"Authorization\": this.authorizationHeader!,\n        };\n    }\n}\n\nexport class RouterliciousStorageRestWrapper extends RouterliciousRestWrapper {\n    private constructor(\n        logger: ITelemetryLogger,\n        rateLimiter: RateLimiter,\n        getAuthorizationHeader: AuthorizationHeaderGetter,\n        useRestLess: boolean,\n        baseurl?: string,\n        defaultQueryString: querystring.ParsedUrlQueryInput = {},\n    ) {\n        super(logger, rateLimiter, getAuthorizationHeader, useRestLess, baseurl, defaultQueryString);\n    }\n\n    public static async load(\n        tenantId: string,\n        documentId: string,\n        tokenProvider: ITokenProvider,\n        logger: ITelemetryLogger,\n        rateLimiter: RateLimiter,\n        useRestLess: boolean,\n        baseurl?: string,\n    ): Promise<RouterliciousStorageRestWrapper> {\n        const defaultQueryString = {\n            token: `${fromUtf8ToBase64(tenantId)}`,\n        };\n        const getAuthorizationHeader: AuthorizationHeaderGetter = async (refreshToken?: boolean): Promise<string> => {\n            // Craft credentials using tenant id and token\n            const storageToken = await tokenProvider.fetchStorageToken(\n                tenantId,\n                documentId,\n                refreshToken,\n            );\n            const credentials = {\n                password: storageToken.jwt,\n                user: tenantId,\n            };\n            return getAuthorizationTokenFromCredentials(credentials);\n        };\n\n        const restWrapper = new RouterliciousStorageRestWrapper(\n            logger, rateLimiter, getAuthorizationHeader, useRestLess, baseurl, defaultQueryString);\n        try {\n            await restWrapper.load();\n        } catch (e) {\n            logger.sendErrorEvent({\n                eventName: \"R11sRestWrapperLoadFailure\",\n            }, e);\n            await restWrapper.load();\n        }\n        return restWrapper;\n    }\n}\n\nexport class RouterliciousOrdererRestWrapper extends RouterliciousRestWrapper {\n    private constructor(\n        logger: ITelemetryLogger,\n        rateLimiter: RateLimiter,\n        getAuthorizationHeader: AuthorizationHeaderGetter,\n        useRestLess: boolean,\n        baseurl?: string,\n        defaultQueryString: querystring.ParsedUrlQueryInput = {},\n    ) {\n        super(logger, rateLimiter, getAuthorizationHeader, useRestLess, baseurl, defaultQueryString);\n    }\n\n    public static async load(\n        tenantId: string,\n        documentId: string | undefined,\n        tokenProvider: ITokenProvider,\n        logger: ITelemetryLogger,\n        rateLimiter: RateLimiter,\n        useRestLess: boolean,\n        baseurl?: string,\n    ): Promise<RouterliciousOrdererRestWrapper> {\n        const getAuthorizationHeader: AuthorizationHeaderGetter = async (refreshToken?: boolean): Promise<string> => {\n            const ordererToken = await tokenProvider.fetchOrdererToken(\n                tenantId,\n                documentId,\n                refreshToken,\n            );\n            return `Basic ${ordererToken.jwt}`;\n        };\n\n        const restWrapper = new RouterliciousOrdererRestWrapper(\n            logger, rateLimiter, getAuthorizationHeader, useRestLess, baseurl);\n        try {\n            await restWrapper.load();\n        } catch (e) {\n            logger.sendErrorEvent({\n                eventName: \"R11sRestWrapperLoadFailure\",\n            }, e);\n            await restWrapper.load();\n        }\n        return restWrapper;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { assert } from \"@fluidframework/common-utils\";\nimport * as api from \"@fluidframework/driver-definitions\";\nimport { RateLimiter } from \"@fluidframework/driver-utils\";\nimport { IClient } from \"@fluidframework/protocol-definitions\";\nimport { GitManager, Historian, RestWrapper } from \"@fluidframework/server-services-client\";\nimport io from \"socket.io-client\";\nimport { PerformanceEvent } from \"@fluidframework/telemetry-utils\";\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { DeltaStorageService, DocumentDeltaStorageService } from \"./deltaStorageService\";\nimport { DocumentStorageService } from \"./documentStorageService\";\nimport { R11sDocumentDeltaConnection } from \"./documentDeltaConnection\";\nimport { NullBlobStorageService } from \"./nullBlobStorageService\";\nimport { ITokenProvider } from \"./tokens\";\nimport { RouterliciousOrdererRestWrapper, RouterliciousStorageRestWrapper } from \"./restWrapper\";\nimport { IRouterliciousDriverPolicies } from \"./policies\";\nimport { ICache } from \"./cache\";\nimport { ISnapshotTreeVersion } from \"./definitions\";\n\n/**\n * Amount of time between discoveries within which we don't need to rediscover on re-connect.\n * Currently, R11s defines session length at 10 minutes. To avoid any weird unknown edge-cases though,\n * we set the limit to 5 minutes here.\n * In the future, we likely want to retrieve this information from service's \"inactive session\" definition.\n */\nconst RediscoverAfterTimeSinceDiscoveryMs = 5 * 60000; // 5 minute\n\n/**\n * The DocumentService manages the Socket.IO connection and manages routing requests to connected\n * clients.\n */\nexport class DocumentService implements api.IDocumentService {\n    private lastDiscoveredAt: number = Date.now();\n    private discoverP: Promise<void> | undefined;\n\n    private storageManager: GitManager | undefined;\n    private noCacheStorageManager: GitManager | undefined;\n    private ordererRestWrapper: RestWrapper | undefined;\n\n    public get resolvedUrl() {\n        return this._resolvedUrl;\n    }\n\n    constructor(\n        private _resolvedUrl: api.IResolvedUrl,\n        protected ordererUrl: string,\n        private deltaStorageUrl: string,\n        private storageUrl: string,\n        private readonly logger: ITelemetryLogger,\n        protected tokenProvider: ITokenProvider,\n        protected tenantId: string,\n        protected documentId: string,\n        private readonly driverPolicies: IRouterliciousDriverPolicies,\n        private readonly blobCache: ICache<ArrayBufferLike>,\n        private readonly snapshotTreeCache: ICache<ISnapshotTreeVersion>,\n        private readonly discoverFluidResolvedUrl: () => Promise<api.IFluidResolvedUrl>,\n    ) {\n    }\n\n    private documentStorageService: DocumentStorageService | undefined;\n\n    public dispose() { }\n\n    /**\n     * Connects to a storage endpoint for snapshot service.\n     *\n     * @returns returns the document storage service for routerlicious driver.\n     */\n    public async connectToStorage(): Promise<api.IDocumentStorageService> {\n        if (this.documentStorageService !== undefined) {\n            return this.documentStorageService;\n        }\n\n        if (this.storageUrl === undefined) {\n            return new NullBlobStorageService();\n        }\n\n        const getStorageManager = async (disableCache?: boolean): Promise<GitManager> => {\n            const shouldUpdateDiscoveredSessionInfo = this.shouldUpdateDiscoveredSessionInfo();\n            if (shouldUpdateDiscoveredSessionInfo) {\n                await this.refreshDiscovery();\n            }\n            if (!this.storageManager || !this.noCacheStorageManager || shouldUpdateDiscoveredSessionInfo) {\n                const rateLimiter = new RateLimiter(this.driverPolicies.maxConcurrentStorageRequests);\n                const storageRestWrapper = await RouterliciousStorageRestWrapper.load(\n                    this.tenantId,\n                    this.documentId,\n                    this.tokenProvider,\n                    this.logger,\n                    rateLimiter,\n                    this.driverPolicies.enableRestLess,\n                    this.storageUrl,\n                );\n                const historian = new Historian(\n                    this.storageUrl,\n                    true,\n                    false,\n                    storageRestWrapper);\n                this.storageManager = new GitManager(historian);\n                const noCacheHistorian = new Historian(\n                    this.storageUrl,\n                    true,\n                    true,\n                    storageRestWrapper);\n                this.noCacheStorageManager = new GitManager(noCacheHistorian);\n            }\n\n            return disableCache ? this.noCacheStorageManager : this.storageManager;\n        };\n        // Initialize storageManager and noCacheStorageManager\n        const storageManager = await getStorageManager();\n        const noCacheStorageManager = await getStorageManager(true);\n        const documentStorageServicePolicies: api.IDocumentStorageServicePolicies = {\n            caching: this.driverPolicies.enablePrefetch\n                ? api.LoaderCachingPolicy.Prefetch\n                : api.LoaderCachingPolicy.NoCaching,\n            minBlobSize: this.driverPolicies.aggregateBlobsSmallerThanBytes,\n        };\n\n        this.documentStorageService = new DocumentStorageService(\n            this.documentId,\n            storageManager,\n            this.logger,\n            documentStorageServicePolicies,\n            this.driverPolicies,\n            this.blobCache,\n            this.snapshotTreeCache,\n            noCacheStorageManager,\n            getStorageManager);\n        return this.documentStorageService;\n    }\n\n    /**\n     * Connects to a delta storage endpoint for getting ops between a range.\n     *\n     * @returns returns the document delta storage service for routerlicious driver.\n     */\n    public async connectToDeltaStorage(): Promise<api.IDocumentDeltaStorageService> {\n        await this.connectToStorage();\n        assert(!!this.documentStorageService, 0x0b1 /* \"Storage service not initialized\" */);\n\n        const getRestWrapper = async (): Promise<RestWrapper> => {\n            const shouldUpdateDiscoveredSessionInfo = this.shouldUpdateDiscoveredSessionInfo();\n            if (shouldUpdateDiscoveredSessionInfo) {\n                await this.refreshDiscovery();\n            }\n            if (!this.ordererRestWrapper || shouldUpdateDiscoveredSessionInfo) {\n                const rateLimiter = new RateLimiter(this.driverPolicies.maxConcurrentOrdererRequests);\n                this.ordererRestWrapper = await RouterliciousOrdererRestWrapper.load(\n                    this.tenantId,\n                    this.documentId,\n                    this.tokenProvider,\n                    this.logger,\n                    rateLimiter,\n                    this.driverPolicies.enableRestLess,\n                );\n            }\n            return this.ordererRestWrapper;\n        };\n        const restWrapper = await getRestWrapper();\n        const deltaStorageService = new DeltaStorageService(\n            this.deltaStorageUrl,\n            restWrapper,\n            this.logger,\n            getRestWrapper,\n            () => this.deltaStorageUrl,\n        );\n        return new DocumentDeltaStorageService(\n            this.tenantId,\n            this.documentId,\n            deltaStorageService,\n            this.documentStorageService,\n        );\n    }\n\n    /**\n     * Connects to a delta stream endpoint for emitting ops.\n     *\n     * @returns returns the document delta stream service for routerlicious driver.\n     */\n    public async connectToDeltaStream(client: IClient): Promise<api.IDocumentDeltaConnection> {\n        const connect = async (refreshToken?: boolean) => {\n            if (this.shouldUpdateDiscoveredSessionInfo()) {\n                await this.refreshDiscovery();\n            }\n            const ordererToken = await this.tokenProvider.fetchOrdererToken(\n                this.tenantId,\n                this.documentId,\n                refreshToken,\n            );\n            return R11sDocumentDeltaConnection.create(\n                this.tenantId,\n                this.documentId,\n                ordererToken.jwt,\n                io,\n                client,\n                this.ordererUrl,\n                this.logger,\n            );\n        };\n\n        // Attempt to establish connection.\n        // Retry with new token on authorization error; otherwise, allow container layer to handle.\n        let connection: api.IDocumentDeltaConnection;\n        try {\n            connection = await connect();\n        } catch (error: any) {\n            if (error?.statusCode === 401) {\n                // Fetch new token and retry once,\n                // otherwise 401 will be bubbled up as non-retriable AuthorizationError.\n                connection = await connect(true /* refreshToken */);\n            }\n            throw error;\n        }\n        return connection;\n    }\n\n    /**\n     * Re-discover session URLs if necessary.\n     */\n    private async refreshDiscovery(): Promise<void> {\n        if (!this.discoverP) {\n            this.discoverP = PerformanceEvent.timedExecAsync(\n                this.logger,\n                {\n                    eventName: \"refreshSessionDiscovery\",\n                },\n                async () => this.refreshDiscoveryCore(),\n            );\n        }\n        return this.discoverP;\n    }\n\n    private async refreshDiscoveryCore(): Promise<void> {\n        const fluidResolvedUrl = await this.discoverFluidResolvedUrl();\n        this._resolvedUrl = fluidResolvedUrl;\n        this.storageUrl = fluidResolvedUrl.endpoints.storageUrl;\n        this.ordererUrl = fluidResolvedUrl.endpoints.ordererUrl;\n        this.deltaStorageUrl = fluidResolvedUrl.endpoints.deltaStorageUrl;\n        this.lastDiscoveredAt = Date.now();\n    }\n\n    /**\n     * Whether enough time has passed since last disconnect to warrant a new discovery call on reconnect.\n     */\n    private shouldUpdateDiscoveredSessionInfo(): boolean {\n        if (!this.driverPolicies.enableDiscovery) {\n            return false;\n        }\n        const now = Date.now();\n        // When connection is disconnected, we cannot know if session has moved or document has been deleted\n        // without re-doing discovery on the next attempt to connect.\n        // Disconnect event is not so reliable in local testing. To ensure re-discovery when necessary,\n        // re-discover if enough time has passed since last discovery.\n        const pastLastDiscoveryTimeThreshold = (now - this.lastDiscoveredAt) > RediscoverAfterTimeSinceDiscoveryMs;\n        return pastLastDiscoveryTimeThreshold;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Uint8ArrayToString } from \"@fluidframework/common-utils\";\nimport { ISummaryTree, SummaryType } from \"@fluidframework/protocol-definitions\";\n\n/**\n * Utility api to convert ISummaryTree to a summary tree where blob contents are only utf8 strings.\n * @param summary - Summary supplied by the runtime to upload.\n * @returns - Modified summary tree where the blob contents could be utf8 string only.\n */\nexport function convertSummaryToCreateNewSummary(summary: ISummaryTree): ISummaryTree {\n    const keys = Object.keys(summary.tree);\n    for (const key of keys) {\n        const summaryObject = summary.tree[key];\n\n        switch (summaryObject.type) {\n            case SummaryType.Tree: {\n                summary.tree[key] = convertSummaryToCreateNewSummary(summaryObject);\n                break;\n            }\n            case SummaryType.Blob: {\n                summaryObject.content = typeof summaryObject.content === \"string\" ?\n                    summaryObject.content : Uint8ArrayToString(summaryObject.content, \"utf8\");\n                break;\n            }\n            case SummaryType.Handle: {\n                throw new Error(\"No handle should be present for first summary!!\");\n            }\n            default: {\n                throw new Error(`Unknown tree type ${summaryObject.type}`);\n            }\n        }\n    }\n\n    return summary;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { IRequest } from \"@fluidframework/core-interfaces\";\n\nexport type IResolvedUrl = IWebResolvedUrl | IFluidResolvedUrl;\n\nexport interface IResolvedUrlBase {\n    type: string;\n}\n\nexport interface IWebResolvedUrl extends IResolvedUrlBase {\n    type: \"web\";\n    data: string;\n}\n\nexport interface IFluidResolvedUrl extends IResolvedUrlBase {\n    type: \"fluid\";\n    /**\n     * The id of the container this resolved url is for.\n     */\n    id: string;\n    url: string;\n    tokens: { [name: string]: string; };\n    endpoints: { [name: string]: string; };\n}\n\n/**\n * Container package info handed off to resolver.\n */\nexport interface IContainerPackageInfo {\n    /**\n     * Container package name.\n     */\n    name: string;\n}\n\nexport interface IUrlResolver {\n\n    // Like DNS should be able to cache resolution requests. Then possibly just have a token provider go and do stuff?\n    // the expiration of it could be relative to the lifetime of the token? Requests after need to refresh?\n    // or do we split the token access from this?\n    resolve(request: IRequest): Promise<IResolvedUrl | undefined>;\n\n    /**\n     * Creates a url for the created container with any data store path given in the relative url.\n     * @param resolvedUrl - resolved url for the container.\n     * @param relativeUrl - relative url containing data store path; '/' represents root path.\n     * @param packageInfoSource - optional, represents container package information to be included in url.\n     * @returns absolute url combining container url with dta store path and optional additional information.\n     */\n    getAbsoluteUrl(\n        resolvedUrl: IResolvedUrl,\n        relativeUrl: string,\n        packageInfoSource?: IContainerPackageInfo,\n    ): Promise<string>;\n}\n\n/**\n* Information that can be returned by a lightweight, seperately exported driver function. Used to preanalyze a URL\n* for driver compatibility and preload information.\n*/\nexport interface DriverPreCheckInfo {\n    /**\n     * A code details hint that can potentially be used to prefetch container code prior to having a snapshot.\n     */\n    codeDetailsHint?: string;\n\n    /**\n     * Domains that will be connected to on the critical boot path. Hosts can choose to preconnect to these for\n     * improved performance.\n     */\n    criticalBootDomains?: string[];\n  }\n\n/**\n * Additional key in the loader request header\n */\nexport enum DriverHeader {\n    // Key to indicate whether the request for summarizer\n    summarizingClient = \"fluid-client-summarizer\",\n    // createNew information, specific to each driver\n    createNew = \"createNew\",\n}\n\nexport interface IDriverHeader {\n    [DriverHeader.summarizingClient]: boolean;\n    [DriverHeader.createNew]: any;\n}\n\ndeclare module \"@fluidframework/core-interfaces\" {\n    // eslint-disable-next-line @typescript-eslint/no-empty-interface\n    export interface IRequestHeader extends Partial<IDriverHeader> { }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IFluidResolvedUrl } from \"@fluidframework/driver-definitions\";\nimport URLParse from \"url-parse\";\nimport { ISession } from \"@fluidframework/server-services-client\";\n\nexport const parseFluidUrl = (fluidUrl: string): URLParse => {\n    return new URLParse(fluidUrl, true);\n};\n\n/**\n * Assume documentId is at end of url path.\n * This is true for Routerlicious' and Tinylicious' documentUrl and deltaStorageUrl.\n * Routerlicious and Tinylicious do not use documentId in storageUrl nor ordererUrl.\n * TODO: Ideally we would be able to regenerate the resolvedUrl, rather than patching the current one.\n */\nexport const replaceDocumentIdInPath = (urlPath: string, documentId: string): string =>\n    urlPath.split(\"/\").slice(0, -1).concat([documentId]).join(\"/\");\n\nexport const getDiscoveredFluidResolvedUrl = (resolvedUrl: IFluidResolvedUrl, session: ISession): IFluidResolvedUrl => {\n    if (session) {\n        const discoveredOrdererUrl = new URLParse(session.ordererUrl);\n        const deltaStorageUrl = new URLParse(resolvedUrl.endpoints.deltaStorageUrl);\n        deltaStorageUrl.set(\"host\", discoveredOrdererUrl.host);\n\n        const discoveredStorageUrl = new URLParse(session.historianUrl);\n        const storageUrl = new URLParse(resolvedUrl.endpoints.storageUrl);\n        storageUrl.set(\"host\", discoveredStorageUrl.host);\n\n        const parsedUrl = parseFluidUrl(resolvedUrl.url);\n        const discoveredResolvedUrl: IFluidResolvedUrl = {\n            endpoints: {\n                deltaStorageUrl: deltaStorageUrl.toString(),\n                ordererUrl: session.ordererUrl,\n                storageUrl: storageUrl.toString(),\n            },\n            id: resolvedUrl.id,\n            tokens: resolvedUrl.tokens,\n            type: resolvedUrl.type,\n            url: new URLParse(`fluid://${discoveredOrdererUrl.host}${parsedUrl.pathname}`).toString(),\n        };\n\n        return discoveredResolvedUrl;\n    } else {\n        return resolvedUrl;\n    }\n};\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { assert } from \"@fluidframework/common-utils\";\nimport {\n    IDocumentService,\n    IDocumentServiceFactory,\n    IFluidResolvedUrl,\n    IResolvedUrl,\n} from \"@fluidframework/driver-definitions\";\nimport { ITelemetryBaseLogger } from \"@fluidframework/common-definitions\";\nimport { ISummaryTree } from \"@fluidframework/protocol-definitions\";\nimport {\n    ensureFluidResolvedUrl,\n    getDocAttributesFromProtocolSummary,\n    getQuorumValuesFromProtocolSummary,\n    RateLimiter,\n} from \"@fluidframework/driver-utils\";\nimport { ChildLogger } from \"@fluidframework/telemetry-utils\";\nimport { ISession } from \"@fluidframework/server-services-client\";\nimport { DocumentService } from \"./documentService\";\nimport { IRouterliciousDriverPolicies } from \"./policies\";\nimport { ITokenProvider } from \"./tokens\";\nimport { RouterliciousOrdererRestWrapper } from \"./restWrapper\";\nimport { convertSummaryToCreateNewSummary } from \"./createNewUtils\";\nimport { parseFluidUrl, replaceDocumentIdInPath, getDiscoveredFluidResolvedUrl } from \"./urlUtils\";\nimport { InMemoryCache } from \"./cache\";\nimport { pkgVersion as driverVersion } from \"./packageVersion\";\nimport { ISnapshotTreeVersion } from \"./definitions\";\n\nconst defaultRouterliciousDriverPolicies: IRouterliciousDriverPolicies = {\n    enablePrefetch: true,\n    maxConcurrentStorageRequests: 100,\n    maxConcurrentOrdererRequests: 100,\n    aggregateBlobsSmallerThanBytes: undefined,\n    enableDiscovery: false,\n    enableWholeSummaryUpload: false,\n    enableRestLess: true,\n};\n\n/**\n * Factory for creating the routerlicious document service. Use this if you want to\n * use the routerlicious implementation.\n */\nexport class RouterliciousDocumentServiceFactory implements IDocumentServiceFactory {\n    public readonly protocolName = \"fluid:\";\n    private readonly driverPolicies: IRouterliciousDriverPolicies;\n    private readonly blobCache = new InMemoryCache<ArrayBufferLike>();\n    private readonly snapshotTreeCache = new InMemoryCache<ISnapshotTreeVersion>();\n\n    constructor(\n        private readonly tokenProvider: ITokenProvider,\n        driverPolicies: Partial<IRouterliciousDriverPolicies> = {},\n    ) {\n        this.driverPolicies = {\n            ...defaultRouterliciousDriverPolicies,\n            ...driverPolicies,\n        };\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/driver-definitions#IDocumentServiceFactory.createContainer}\n     *\n     * @throws {@link DocumentPostCreateError}\n     * If an exception is thrown while invoking the provided {@link ITokenProvider.documentPostCreateCallback}.\n     */\n    public async createContainer(\n        createNewSummary: ISummaryTree | undefined,\n        resolvedUrl: IResolvedUrl,\n        logger?: ITelemetryBaseLogger,\n        clientIsSummarizer?: boolean,\n    ): Promise<IDocumentService> {\n        ensureFluidResolvedUrl(resolvedUrl);\n        if (createNewSummary === undefined) {\n            throw new Error(\"Empty file summary creation isn't supported in this driver.\");\n        }\n        assert(!!resolvedUrl.endpoints.ordererUrl, 0x0b2 /* \"Missing orderer URL!\" */);\n        let parsedUrl = parseFluidUrl(resolvedUrl.url);\n        if (!parsedUrl.pathname) {\n            throw new Error(\"Parsed url should contain tenant and doc Id!!\");\n        }\n        const [, tenantId] = parsedUrl.pathname.split(\"/\");\n\n        const protocolSummary = createNewSummary.tree[\".protocol\"] as ISummaryTree;\n        const appSummary = createNewSummary.tree[\".app\"] as ISummaryTree;\n        if (!(protocolSummary && appSummary)) {\n            throw new Error(\"Protocol and App Summary required in the full summary\");\n        }\n        const documentAttributes = getDocAttributesFromProtocolSummary(protocolSummary);\n        const quorumValues = getQuorumValuesFromProtocolSummary(protocolSummary);\n\n        const logger2 = ChildLogger.create(logger, \"RouterliciousDriver\");\n        const rateLimiter = new RateLimiter(this.driverPolicies.maxConcurrentOrdererRequests);\n        const ordererRestWrapper = await RouterliciousOrdererRestWrapper.load(\n            tenantId,\n            undefined,\n            this.tokenProvider,\n            logger2,\n            rateLimiter,\n            this.driverPolicies.enableRestLess,\n            resolvedUrl.endpoints.ordererUrl,\n        );\n\n        // @TODO: Remove returned \"string\" type when removing back-compat code\n        const res = await ordererRestWrapper.post<{ id: string; token?: string; session?: ISession; } | string>(\n            `/documents/${tenantId}`,\n            {\n                summary: convertSummaryToCreateNewSummary(appSummary),\n                sequenceNumber: documentAttributes.sequenceNumber,\n                values: quorumValues,\n                enableDiscovery: this.driverPolicies.enableDiscovery,\n                generateToken: this.tokenProvider.documentPostCreateCallback !== undefined,\n            },\n        );\n\n        // For supporting backward compatibility, when the request has generateToken === true, it will return\n        // an object instead of string\n        // @TODO: Remove the logic when no need to support back-compat\n\n        let documentId: string;\n        let token: string | undefined;\n        let session: ISession | undefined;\n        if (typeof res === \"string\") {\n            documentId = res;\n        } else {\n            documentId = res.id;\n            token = res.token;\n            session = this.driverPolicies.enableDiscovery ? res.session : undefined;\n        }\n        parsedUrl = parseFluidUrl(resolvedUrl.url);\n\n        // @TODO: Remove token from the condition, checking the documentPostCreateCallback !== undefined\n        // is sufficient to determine if the token will be undefined or not.\n        if (token && this.tokenProvider.documentPostCreateCallback !== undefined) {\n            try {\n                await this.tokenProvider.documentPostCreateCallback(documentId, token);\n            } catch (error: any) {\n                throw new DocumentPostCreateError(error);\n            }\n        }\n\n        parsedUrl.set(\"pathname\", replaceDocumentIdInPath(parsedUrl.pathname, documentId));\n        const deltaStorageUrl = resolvedUrl.endpoints.deltaStorageUrl;\n        if (!deltaStorageUrl) {\n            throw new Error(\n                `All endpoints urls must be provided. [deltaStorageUrl:${deltaStorageUrl}]`);\n        }\n        const parsedDeltaStorageUrl = new URL(deltaStorageUrl);\n        parsedDeltaStorageUrl.pathname = replaceDocumentIdInPath(parsedDeltaStorageUrl.pathname, documentId);\n\n        return this.createDocumentService(\n            {\n                ...resolvedUrl,\n                url: parsedUrl.toString(),\n                id: documentId,\n                endpoints: {\n                    ...resolvedUrl.endpoints,\n                    deltaStorageUrl: parsedDeltaStorageUrl.toString(),\n                },\n            },\n            logger,\n            clientIsSummarizer,\n            session,\n        );\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/driver-definitions#IDocumentServiceFactory.createDocumentService}\n     *\n     * @returns Routerlicious document service.\n     */\n    public async createDocumentService(\n        resolvedUrl: IResolvedUrl,\n        logger?: ITelemetryBaseLogger,\n        clientIsSummarizer?: boolean,\n        session?: ISession,\n    ): Promise<IDocumentService> {\n        ensureFluidResolvedUrl(resolvedUrl);\n\n        const parsedUrl = parseFluidUrl(resolvedUrl.url);\n        const [, tenantId, documentId] = parsedUrl.pathname.split(\"/\");\n        if (!documentId || !tenantId) {\n            throw new Error(\n                `Couldn't parse documentId and/or tenantId. [documentId:${documentId}][tenantId:${tenantId}]`);\n        }\n        const logger2 = ChildLogger.create(logger, \"RouterliciousDriver\", { all: { driverVersion } });\n\n        const discoverFluidResolvedUrl = async (): Promise<IFluidResolvedUrl> => {\n            if (!this.driverPolicies.enableDiscovery) {\n                return resolvedUrl;\n            }\n            const rateLimiter = new RateLimiter(this.driverPolicies.maxConcurrentOrdererRequests);\n            const ordererRestWrapper = await RouterliciousOrdererRestWrapper.load(\n                tenantId,\n                documentId,\n                this.tokenProvider,\n                logger2,\n                rateLimiter,\n                this.driverPolicies.enableRestLess,\n                resolvedUrl.endpoints.ordererUrl,\n            );\n            // The service responds with the current document session associated with the container.\n            const discoveredSession = await ordererRestWrapper.get<ISession>(\n                `/documents/${tenantId}/session/${documentId}`,\n            );\n            return getDiscoveredFluidResolvedUrl(resolvedUrl, discoveredSession);\n        };\n        const fluidResolvedUrl: IFluidResolvedUrl = session !== undefined\n            ? getDiscoveredFluidResolvedUrl(resolvedUrl, session)\n            : await discoverFluidResolvedUrl();\n\n        const storageUrl = fluidResolvedUrl.endpoints.storageUrl;\n        const ordererUrl = fluidResolvedUrl.endpoints.ordererUrl;\n        const deltaStorageUrl = fluidResolvedUrl.endpoints.deltaStorageUrl;\n        if (!ordererUrl || !deltaStorageUrl) {\n            throw new Error(\n                `All endpoints urls must be provided. [ordererUrl:${ordererUrl}][deltaStorageUrl:${deltaStorageUrl}]`);\n        }\n\n        return new DocumentService(\n            fluidResolvedUrl,\n            ordererUrl,\n            deltaStorageUrl,\n            storageUrl,\n            logger2,\n            this.tokenProvider,\n            tenantId,\n            documentId,\n            this.driverPolicies,\n            this.blobCache,\n            this.snapshotTreeCache,\n            discoverFluidResolvedUrl);\n    }\n}\n\n/**\n * Error returned by {@link RouterliciousDocumentServiceFactory.createContainer} when an error is thrown\n * in {@link ITokenProvider.documentPostCreateCallback}.\n * It is the consumer's responsibility to ensure that any state related to container creation is appropriately\n * cleaned up in the event of failure.\n * This includes the document itself, which will have been created by the time this error was thrown.\n *\n * @remarks TODO: examples of suggested actions for recovery.\n * - How would a user delete the created document?\n * - What would a retry pattern look like here?\n */\nexport class DocumentPostCreateError extends Error {\n    public constructor(\n        /**\n         * Inner error being wrapped.\n         */\n        private readonly innerError: Error,\n    ) {\n        super(innerError.message);\n    }\n\n    public readonly name = \"DocumentPostCreateError\";\n\n    public get stack() { return this.innerError.stack; }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IRequest } from \"@fluidframework/core-interfaces\";\nimport {\n    DriverHeader,\n    IFluidResolvedUrl,\n    IResolvedUrl,\n    IUrlResolver,\n} from \"@fluidframework/driver-definitions\";\n\n/**\n * Default endpoint port. Will be used by the service if the consumer does not specify a port.\n */\nexport const defaultTinyliciousPort = 7070;\n\n/**\n * Default endpoint URL base. Will be used by the service if the consumer does not specify an endpoint.\n */\nexport const defaultTinyliciousEndpoint = \"http://localhost\";\n\n/**\n * InsecureTinyliciousUrlResolver knows how to get the URLs to the service (in this case Tinylicious) to use\n * for a given request.  This particular implementation has a goal to avoid imposing requirements on the app's\n * URL shape, so it expects the request url to have this format (as opposed to a more traditional URL):\n * documentId/containerRelativePathing\n */\nexport class InsecureTinyliciousUrlResolver implements IUrlResolver {\n    private readonly fluidProtocolEndpoint: string;\n    private readonly tinyliciousEndpoint: string;\n    public constructor(\n        port = defaultTinyliciousPort,\n        endpoint = defaultTinyliciousEndpoint,\n    ) {\n        this.tinyliciousEndpoint = `${endpoint}:${port}`;\n        this.fluidProtocolEndpoint = this.tinyliciousEndpoint.replace(/(^\\w+:|^)\\/\\//, \"fluid://\");\n    }\n\n    public async resolve(request: IRequest): Promise<IResolvedUrl> {\n        // determine whether the request is for creating of a new container.\n        // such request has the `createNew` header set to true and doesn't have a container ID.\n        if (request.headers && request.headers[DriverHeader.createNew] === true) {\n            // honor the document ID passed by the application via the create request\n            // otherwise use the reserved keyword to let the driver generate the ID.\n            // TODO: deprecate this capability for tinylicious as the r11s driver will stop using the document ID\n            // in create requests.\n            const newDocumentId = request.url ?? \"new\";\n            return {\n                endpoints: {\n                    deltaStorageUrl: `${this.tinyliciousEndpoint}/deltas/tinylicious/${newDocumentId}`,\n                    ordererUrl: this.tinyliciousEndpoint,\n                    storageUrl: `${this.tinyliciousEndpoint}/repos/tinylicious`,\n                },\n                // id is a mandatory attribute, but it's ignored by the driver for new container requests.\n                id: request.url,\n                // tokens attribute is redundant as all tokens are generated via ITokenProvider\n                tokens: {},\n                type: \"fluid\",\n                url: `${this.fluidProtocolEndpoint}/tinylicious/${newDocumentId}`,\n            };\n        }\n        // for an existing container we'll parse the request URL to determine the document ID.\n        const url = request.url.replace(`${this.tinyliciousEndpoint}/`, \"\");\n        const documentId = url.split(\"/\")[0];\n        const encodedDocId = encodeURIComponent(documentId);\n        const documentRelativePath = url.slice(documentId.length);\n\n        const documentUrl =\n            `${this.fluidProtocolEndpoint}/tinylicious/${encodedDocId}${documentRelativePath}`;\n        const deltaStorageUrl =\n            `${this.tinyliciousEndpoint}/deltas/tinylicious/${encodedDocId}`;\n        const storageUrl =\n            `${this.tinyliciousEndpoint}/repos/tinylicious`;\n\n        const response: IFluidResolvedUrl = {\n            endpoints: {\n                deltaStorageUrl,\n                ordererUrl: this.tinyliciousEndpoint,\n                storageUrl,\n            },\n            id: documentId,\n            tokens: {},\n            type: \"fluid\",\n            url: documentUrl,\n        };\n        return response;\n    }\n\n    public async getAbsoluteUrl(resolvedUrl: IFluidResolvedUrl, relativeUrl: string): Promise<string> {\n        const documentId = decodeURIComponent(\n            resolvedUrl.url.replace(`${this.fluidProtocolEndpoint}/tinylicious/`, \"\"),\n        );\n        /*\n         * The detached container flow will ultimately call getAbsoluteUrl() with the resolved.url produced by\n         * resolve().  The container expects getAbsoluteUrl's return value to be a URL that can then be roundtripped\n         * back through resolve() again, and get the same result again.  So we'll return a \"URL\" with the same format\n         * described above.\n         */\n        return `${documentId}/${relativeUrl}`;\n    }\n}\n\nexport const createTinyliciousCreateNewRequest =\n    (documentId?: string): IRequest => (\n        {\n            url: documentId ?? \"\",\n            headers: {\n                [DriverHeader.createNew]: true,\n            },\n        }\n    );\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport generateStupidName from \"sillyname\";\n\nexport function getRandomName(connector = \"_\", capitalize = false): string {\n    let [first, last] = (generateStupidName() as string).split(\" \");\n\n    // sillyname output is capitalized by default\n    if (!capitalize) {\n       first = first.toLowerCase();\n       last = last.toLowerCase();\n    }\n\n    return `${first}${connector}${last}`;\n}\n\n// Exposing a choose() function to align with moniker's API. Moniker is\n// server-only, and we can swap it out with this function for the browser.\nexport const choose = (): string =>\n    getRandomName();\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ScopeType, ITokenClaims } from \"@fluidframework/protocol-definitions\";\nimport { ITokenProvider, ITokenResponse } from \"@fluidframework/routerlicious-driver\";\nimport { getRandomName } from \"@fluidframework/server-services-client\";\nimport { KJUR as jsrsasign } from \"jsrsasign\";\nimport { v4 as uuid } from \"uuid\";\n\n/**\n * As the name implies this is not secure and should not be used in production. It simply makes the example easier\n * to get up and running.\n */\nexport class InsecureTinyliciousTokenProvider implements ITokenProvider {\n    public async fetchOrdererToken(tenantId: string, documentId?: string): Promise<ITokenResponse> {\n        return {\n            fromCache: true,\n            jwt: this.getSignedToken(tenantId, documentId),\n        };\n    }\n\n    public async fetchStorageToken(tenantId: string, documentId: string): Promise<ITokenResponse> {\n        return {\n            fromCache: true,\n            jwt: this.getSignedToken(tenantId, documentId),\n        };\n    }\n\n    private getSignedToken(\n        tenantId: string,\n        documentId: string | undefined,\n        lifetime: number = 60 * 60,\n        ver: string = \"1.0\"): string {\n        // Current time in seconds\n        const now = Math.round((new Date()).getTime() / 1000);\n        const user = { id: uuid(), name: getRandomName() };\n\n        const claims: ITokenClaims = {\n            documentId: documentId ?? \"\",\n            scopes: [ScopeType.DocRead, ScopeType.DocWrite, ScopeType.SummaryWrite],\n            tenantId,\n            user,\n            iat: now,\n            exp: now + lifetime,\n            ver,\n        };\n\n        const utf8Key = { utf8: \"12345\" };\n        return jsrsasign.jws.JWS.sign(null, JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }), claims, utf8Key);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { assert } from \"@fluidframework/common-utils\";\nimport {\n    FluidObject,\n    IFluidRouter,\n    IRequest,\n    IResponse,\n} from \"@fluidframework/core-interfaces\";\nimport {\n    IFluidDataStoreFactory,\n    IFluidDataStoreRegistry,\n    IProvideFluidDataStoreRegistry,\n} from \"@fluidframework/runtime-definitions\";\nimport { generateErrorWithStack } from \"@fluidframework/telemetry-utils\";\n\ninterface IResponseException extends Error {\n    errorFromRequestFluidObject: true;\n    message: string;\n    code: number;\n    stack?: string;\n}\n\nexport function exceptionToResponse(err: any): IResponse {\n    const status = 500;\n    if (err !== null && typeof err === \"object\" && err.errorFromRequestFluidObject === true) {\n        const responseErr: IResponseException = err;\n        return {\n            mimeType: \"text/plain\",\n            status: responseErr.code,\n            value: responseErr.message,\n            get stack() { return responseErr.stack; },\n        };\n    }\n\n    // Capture error objects, not stack itself, as stack retrieval is very expensive operation, so we delay it\n    const errWithStack = generateErrorWithStack();\n\n    return {\n        mimeType: \"text/plain\",\n        status,\n        value: `${err}`,\n        get stack() { return ((err?.stack) as (string | undefined)) ?? errWithStack.stack; },\n    };\n}\n\nexport function responseToException(response: IResponse, request: IRequest): Error {\n    const message = response.value;\n    const errWithStack = generateErrorWithStack();\n    const responseErr: Error & IResponseException = {\n        errorFromRequestFluidObject: true,\n        message,\n        name: \"Error\",\n        code: response.status,\n        get stack() { return response.stack ?? errWithStack.stack; },\n    };\n\n    return responseErr;\n}\n\nexport async function requestFluidObject<T = FluidObject>(\n    router: IFluidRouter, url: string | IRequest): Promise<T> {\n    const request = typeof url === \"string\" ? { url } : url;\n    const response = await router.request(request);\n\n    if (response.status !== 200 || response.mimeType !== \"fluid/object\") {\n        throw responseToException(response, request);\n    }\n\n    assert(response.value, 0x19a /* \"Invalid response value for Fluid object request\" */);\n    return response.value as T;\n}\n\nexport const create404Response = (request: IRequest) => createResponseError(404, \"not found\", request);\n\nexport function createResponseError(status: number, value: string, request: IRequest): IResponse {\n    assert(status !== 200, 0x19b /* \"Cannot not create response error on 200 status\" */);\n    // Omit query string which could contain personal data (aka \"PII\")\n    const urlNoQuery = request.url?.split(\"?\")[0];\n\n    // Capture error objects, not stack itself, as stack retrieval is very expensive operation, so we delay it\n    const errWithStack = generateErrorWithStack();\n\n    return {\n        mimeType: \"text/plain\",\n        status,\n        value: urlNoQuery === undefined ? value : `${value}: ${urlNoQuery}`,\n        get stack() { return errWithStack.stack; },\n    };\n}\n\nexport type Factory = IFluidDataStoreFactory & Partial<IProvideFluidDataStoreRegistry>;\n\nexport function createDataStoreFactory(\n    type: string,\n    factory: Factory | Promise<Factory>,\n    ): IFluidDataStoreFactory & IFluidDataStoreRegistry {\n    return {\n        type,\n        get IFluidDataStoreFactory() { return this; },\n        get IFluidDataStoreRegistry() { return this; },\n        instantiateDataStore: async (context, existing) => (await factory).instantiateDataStore(context, existing),\n        get: async (name: string) => (await factory).IFluidDataStoreRegistry?.get(name),\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { TypedEventEmitter } from \"@fluidframework/common-utils\";\nimport { IFluidLoadable } from \"@fluidframework/core-interfaces\";\nimport { IEvent, IEventProvider } from \"@fluidframework/common-definitions\";\nimport { AttachState, IContainer, ConnectionState } from \"@fluidframework/container-definitions\";\nimport { LoadableObjectClass, LoadableObjectRecord } from \"./types\";\nimport { RootDataObject } from \"./rootDataObject\";\n\n/**\n * Events emitted from {@link IFluidContainer}.\n *\n *  @remarks\n *\n * The following is the list of events emitted.\n *\n * ### \"connected\"\n *\n * The \"connected\" event is emitted when the `IFluidContainer` completes connecting to the Fluid service.\n *\n * #### Listener signature\n *\n * ```typescript\n * () => void;\n * ```\n *\n * ### \"dispose\"\n *\n * The \"dispose\" event is emitted when the `IFluidContainer` is disposed, which permanently disables it.\n *\n * #### Listener signature\n *\n * ```typescript\n * () => void;\n * ```\n *\n * ### \"disconnected\"\n *\n * The \"disconnected\" event is emitted when the `IFluidContainer` becomes disconnected from the Fluid service.\n *\n * #### Listener signature\n *\n * ```typescript\n * () => void;\n * ```\n *\n * ### \"saved\"\n *\n * The \"saved\" event is emitted when the `IFluidContainer` has local changes acknowledged by the service.\n *\n * #### Listener signature\n *\n * ```typescript\n * () => void\n * ```\n *\n * ### \"dirty\"\n *\n * The \"dirty\" event is emitted when the `IFluidContainer` has local changes that have not yet\n * been acknowledged by the service.\n *\n * #### Listener signature\n *\n * ```typescript\n * () => void\n * ```\n */\nexport interface IFluidContainerEvents extends IEvent {\n    (event: \"connected\" | \"dispose\" | \"disconnected\" | \"saved\" | \"dirty\", listener: () => void): void;\n}\n\n/**\n * Provides an entrypoint into the client side of collaborative Fluid data.\n * Provides access to the data as well as status on the collaboration session.\n */\nexport interface IFluidContainer extends IEventProvider<IFluidContainerEvents> {\n    /**\n     * Provides the current connected state of the container\n     */\n    readonly connectionState: ConnectionState;\n\n    /**\n     * A container is considered **dirty** if it has local changes that have not yet been acknowledged by the service.\n     * You should always check the `isDirty` flag before closing the container or navigating away from the page.\n     * Closing the container while `isDirty === true` may result in the loss of operations that have not yet been\n     * acknowledged by the service.\n     *\n     * A container is considered dirty in the following cases:\n     *\n     * 1. The container has been created in the detached state, and either it has not been attached yet or it is\n     * in the process of being attached (container is in `attaching` state). If container is closed prior to being\n     * attached, host may never know if the file was created or not.\n     *\n     * 2. The container was attached, but it has local changes that have not yet been saved to service endpoint.\n     * This occurs as part of normal op flow where pending operation (changes) are awaiting acknowledgement from the\n     * service. In some cases this can be due to lack of network connection. If the network connection is down,\n     * it needs to be restored for the pending changes to be acknowledged.\n     */\n    readonly isDirty: boolean;\n\n    /**\n     * Whether the container is disposed, which permanently disables it.\n     */\n    readonly disposed: boolean;\n\n    /**\n     * The collection of data objects and Distributed Data Stores (DDSes) that were specified by the schema.\n     * These data objects and DDSes exist for the lifetime of the container.\n     */\n    readonly initialObjects: LoadableObjectRecord;\n\n    /**\n     * The current attachment state of the container.  Once a container has been attached, it remains attached.\n     * When loading an existing container, it will already be attached.\n     */\n    readonly attachState: AttachState;\n\n    /**\n     * A newly created container starts detached from the collaborative service.\n     * Calling `attach()` uploads the new container to the service and connects to the collaborative service.\n     *\n     * @remarks This should only be called when the container is in the\n     * {@link @fluidframework/container-definitions#AttachState.Detatched} state.\n     *\n     * This can be determined by observing {@link IFluidContainer.attachState}.\n     *\n     * @returns A promise which resolves when the attach is complete, with the string identifier of the container.\n     */\n    attach(): Promise<string>;\n\n    /**\n     * Attempts to connect the container to the delta stream and process operations.\n     * Will throw an error if unsuccessful.\n     *\n     * @remarks This should only be called when the container is in the\n     * {@link @fluidframework/container-definitions#ConnectionState.Disconnected} state.\n     *\n     * This can be determined by observing {@link IFluidContainer.connectionState}.\n     */\n    connect(): void;\n\n    /**\n     * Disconnects the container from the delta stream and stops processing operations.\n     *\n     * @remarks This should only be called when the container is in the\n     * {@link @fluidframework/container-definitions#ConnectionState.Connected} state.\n     *\n     * This can be determined by observing {@link IFluidContainer.connectionState}.\n     */\n    disconnect(): void;\n\n    /**\n     * Create a new data object or Distributed Data Store (DDS) of the specified type.\n     *\n     * @remarks In order to share the data object or DDS with other\n     * collaborators and retrieve it later, store its handle in a collection like a SharedDirectory from your\n     * initialObjects.\n     *\n     * @param objectClass - The class of data object or DDS to create\n     */\n    create<T extends IFluidLoadable>(objectClass: LoadableObjectClass<T>): Promise<T>;\n\n    /**\n     * Dispose of the container instance, permanently disabling it.\n     */\n    dispose(): void;\n}\n\n/**\n * Base {@link IFluidContainer} implementation.\n *\n * @remarks Note: this implementation is not complete. Consumers who rely on {@link IFluidContainer.attach}\n * will need to utilize or provide a service-specific implementation of this type that implements that method.\n */\nexport class FluidContainer extends TypedEventEmitter<IFluidContainerEvents> implements IFluidContainer {\n    private readonly connectedHandler = () => this.emit(\"connected\");\n    private readonly disconnectedHandler = () => this.emit(\"disconnected\");\n    private readonly disposedHandler = () => this.emit(\"disposed\");\n    private readonly savedHandler = () => this.emit(\"saved\");\n    private readonly dirtyHandler = () => this.emit(\"dirty\");\n\n    public constructor(\n        private readonly container: IContainer,\n        private readonly rootDataObject: RootDataObject,\n    ) {\n        super();\n        container.on(\"connected\", this.connectedHandler);\n        container.on(\"closed\", this.disposedHandler);\n        container.on(\"disconnected\", this.disconnectedHandler);\n        container.on(\"saved\", this.savedHandler);\n        container.on(\"dirty\", this.dirtyHandler);\n    }\n\n    /**\n     * {@inheritDoc IFluidContainer.isDirty}\n     */\n     public get isDirty(): boolean {\n        return this.container.isDirty;\n    }\n\n    /**\n     * {@inheritDoc IFluidContainer.attachState}\n     */\n    public get attachState(): AttachState {\n        return this.container.attachState;\n    }\n\n    /**\n     * {@inheritDoc IFluidContainer.disposed}\n     */\n    public get disposed() {\n        return this.container.closed;\n    }\n\n    /**\n     * {@inheritDoc IFluidContainer.connectionState}\n     */\n     public get connectionState(): ConnectionState {\n        return this.container.connectionState;\n    }\n\n    /**\n     * {@inheritDoc IFluidContainer.initialObjects}\n     */\n    public get initialObjects() {\n        return this.rootDataObject.initialObjects;\n    }\n\n    /**\n     * Incomplete base implementation of {@link IFluidContainer.attach}.\n     * @remarks Note: this implementation will unconditionally throw.\n     * Consumers who rely on this will need to utilize or provide a service specific implementation of this base type\n     * that provides an implementation of this method.\n     *\n     * The reason is because externally we are presenting a separation between the service and the `FluidContainer`,\n     * but internally this separation is not there.\n     */\n    public async attach(): Promise<string> {\n        throw new Error(\"Cannot attach container. Container is not in detached state\");\n    }\n\n    /**\n     * {@inheritDoc IFluidContainer.connect}\n     */\n    public async connect(): Promise<void> {\n        this.container.connect?.();\n    }\n\n    /**\n     * {@inheritDoc IFluidContainer.connect}\n     */\n    public async disconnect(): Promise<void> {\n        this.container.disconnect?.();\n    }\n\n    /**\n     * {@inheritDoc IFluidContainer.create}\n     */\n    public async create<T extends IFluidLoadable>(objectClass: LoadableObjectClass<T>): Promise<T> {\n        return this.rootDataObject.create(objectClass);\n    }\n\n    /**\n     * {@inheritDoc IFluidContainer.dispose}\n     */\n    public dispose() {\n        this.container.close();\n        this.container.off(\"connected\", this.connectedHandler);\n        this.container.off(\"closed\", this.disposedHandler);\n        this.container.off(\"disconnected\", this.disconnectedHandler);\n        this.container.off(\"saved\", this.savedHandler);\n        this.container.off(\"dirty\", this.dirtyHandler);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * enum representing the possible types of a shared object\n */\nexport enum ValueType {\n    /**\n     * The value is a shared object\n     * @deprecated Instead store the handle of the shared object, rather than the shared object itself.\n     */\n    Shared,\n\n    /**\n     * The value is a plain JavaScript object or handle.  If a plain object, it may contain handles deeper within.\n     */\n    Plain,\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IFluidHandleContext } from \"@fluidframework/core-interfaces\";\n\n/**\n * Generates the absolute path for a Fluid object given its path and its parent routeContext.\n * @param path - The path to the Fluid object relative to the route context.\n * @param routeContext - The route context that contains the Fluid object.\n * @returns The absolute path to the Fluid object from the root of the Container.\n */\nexport function generateHandleContextPath(path: string, routeContext?: IFluidHandleContext): string {\n    if (path === \"\") {\n        // The `path` is empty.\n        // If the routeContext does not exist, this is the root.\n        // If the routeContext exists, the absolute path is the same as that of the routeContext.\n        return routeContext === undefined ? \"\" : routeContext.absolutePath;\n    } else {\n        // Remove beginning and trailing slashes, if any, from the path.\n        let normalizedPath = path.startsWith(\"/\") ? path.slice(1) : path;\n        normalizedPath = normalizedPath.endsWith(\"/\") ? normalizedPath.slice(0, -1) : normalizedPath;\n\n        // If the routeContext does not exist, path is the absolute path.\n        // If the routeContext exists, absolute path is routeContext's absolute path plus the path.\n        return routeContext === undefined\n            ? `/${normalizedPath}`\n            : `${routeContext.absolutePath === \"/\" ? \"\" : routeContext.absolutePath}/${normalizedPath}`;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { performance } from \"./indexNode\";\n\n/**\n * Helper class for tracing performance of events\n * Time measurements are in milliseconds as a floating point with a decimal\n */\nexport class Trace {\n    public static start(): Trace {\n        const startTick = performance.now();\n        return new Trace(startTick);\n    }\n\n    protected lastTick: number;\n    protected constructor(public readonly startTick: number) {\n        this.lastTick = startTick;\n    }\n\n    public trace(): ITraceEvent {\n        const tick = performance.now();\n        const event = {\n            totalTimeElapsed: tick - this.startTick,\n            duration: tick - this.lastTick,\n            tick,\n        };\n        this.lastTick = tick;\n        return event;\n    }\n}\n\n/**\n * Event in a performance trace including time elapsed.\n */\nexport interface ITraceEvent {\n    /**\n     * Total time elapsed since the start of the Trace.\n     * Measured in milliseconds as a floating point with a decimal\n     */\n    readonly totalTimeElapsed: number;\n    /**\n     * Time elapsed since the last trace event.\n     * Measured in milliseconds as a floating point with a decimal\n     */\n    readonly duration: number;\n    /**\n     * This number represents a relative time which should\n     * be consistent for all trace ticks.\n     */\n    readonly tick: number;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { assert } from \"@fluidframework/common-utils\";\nimport {\n    IGarbageCollectionData,\n    IGarbageCollectionNodeData,\n    IGarbageCollectionState,\n    IGarbageCollectionDetailsBase,\n} from \"@fluidframework/runtime-definitions\";\n\n/**\n * Trims the leading and trailing slashes from the given string.\n * @param str - A string that may contain leading and / or trailing slashes.\n * @returns A new string without leading and trailing slashes.\n */\nexport function trimLeadingAndTrailingSlashes(str: string) {\n    return str.replace(/^\\/+|\\/+$/g, \"\");\n}\n\n/**\n * Trims the leading slashes from the given string.\n * @param str - A string that may contain leading slashes.\n * @returns A new string without leading slashes.\n */\nexport function trimLeadingSlashes(str: string) {\n    return str.replace(/^\\/+/g, \"\");\n}\n\n/**\n * Trims the trailing slashes from the given string.\n * @param str - A string that may contain trailing slashes.\n * @returns A new string without trailing slashes.\n */\nexport function trimTrailingSlashes(str: string) {\n    return str.replace(/\\/+$/g, \"\");\n}\n\n/**\n * Helper function that clones the GC data.\n * @param gcData - The GC data to clone.\n * @returns a clone of the given GC data.\n */\nexport function cloneGCData(gcData: IGarbageCollectionData): IGarbageCollectionData {\n    const clonedGCNodes: { [ id: string ]: string[]; } = {};\n    for (const [id, outboundRoutes] of Object.entries(gcData.gcNodes)) {\n        clonedGCNodes[id] = Array.from(outboundRoutes);\n    }\n    return {\n        gcNodes: clonedGCNodes,\n    };\n}\n\n/**\n * Helper function that unpacks the GC details of the children from a given node's GC details.\n * @param gcDetails - The GC details of a node.\n * @returns A map of GC details of each children of the the given node.\n */\n export function unpackChildNodesGCDetails(gcDetails: IGarbageCollectionDetailsBase) {\n    const childGCDetailsMap: Map<string, IGarbageCollectionDetailsBase> = new Map();\n\n    // If GC data is not available, bail out.\n    if (gcDetails.gcData === undefined) {\n        return childGCDetailsMap;\n    }\n\n    // Remove the node's self GC nodes, if any, and generate the children GC nodes.\n    const gcNodes = gcDetails.gcData.gcNodes;\n    delete gcNodes[\"/\"];\n    for (const [id, outboundRoutes] of Object.entries(gcNodes)) {\n        assert(id.startsWith(\"/\"), 0x2ae /* \"node id should always be an absolute route\" */);\n        const childId = id.split(\"/\")[1];\n        let childGCNodeId = id.slice(childId.length + 1);\n        // GC node id always begins with \"/\". Handle the special case where a child's id in the parent's GC nodes is\n        // of format `/root`. In this case, the childId is root and childGCNodeId is \"\". Make childGCNodeId = \"/\".\n        if (childGCNodeId === \"\") {\n            childGCNodeId = \"/\";\n        }\n\n        let childGCDetails = childGCDetailsMap.get(childId);\n        if (childGCDetails === undefined) {\n            childGCDetails = { gcData: { gcNodes: {} }, usedRoutes: [] };\n        }\n        // gcData should not undefined as its always at least initialized as  empty above.\n        assert(childGCDetails.gcData !== undefined, 0x2af /* \"Child GC data should have been initialized\" */);\n        childGCDetails.gcData.gcNodes[childGCNodeId] = [...new Set(outboundRoutes)];\n        childGCDetailsMap.set(childId, childGCDetails);\n    }\n\n    if (gcDetails.usedRoutes === undefined) {\n        return childGCDetailsMap;\n    }\n\n    // Remove the node's self used route, if any, and generate the children used routes.\n    const usedRoutes = gcDetails.usedRoutes.filter((route) => route !== \"\" && route !== \"/\");\n    for (const route of usedRoutes) {\n        assert(route.startsWith(\"/\"), 0x2b0 /* \"Used route should always be an absolute route\" */);\n        const childId = route.split(\"/\")[1];\n        const childUsedRoute = route.slice(childId.length + 1);\n\n        const childGCDetails = childGCDetailsMap.get(childId);\n        assert(\n            childGCDetails?.usedRoutes !== undefined,\n            0x2b1 /* \"This should have be initiallized when generate GC nodes above\" */,\n        );\n\n        childGCDetails.usedRoutes.push(childUsedRoute);\n        childGCDetailsMap.set(childId, childGCDetails);\n    }\n    return childGCDetailsMap;\n}\n\n/**\n * Helper function that unpacks the used routes of children from a given node's used routes.\n * @param usedRoutes - The used routes of a node.\n * @returns A map of used routes of each children of the the given node.\n */\nexport function unpackChildNodesUsedRoutes(usedRoutes: string[]) {\n    // Remove the node's self used route, if any, and generate the children used routes.\n    const filteredUsedRoutes = usedRoutes.filter((route) => route !== \"\" && route !== \"/\");\n    const childUsedRoutesMap: Map<string, string[]> = new Map();\n    for (const route of filteredUsedRoutes) {\n        assert(route.startsWith(\"/\"), 0x198 /* \"Used route should always be an absolute route\" */);\n        const childId = route.split(\"/\")[1];\n        const childUsedRoute = route.slice(childId.length + 1);\n\n        const childUsedRoutes = childUsedRoutesMap.get(childId);\n        if (childUsedRoutes !== undefined) {\n            childUsedRoutes.push(childUsedRoute);\n        } else {\n            childUsedRoutesMap.set(childId, [childUsedRoute]);\n        }\n    }\n    return childUsedRoutesMap;\n}\n\n/**\n * Removes the given route from the outbound routes of all the given GC nodes, and any duplicates\n * @param gcNodes - The nodes from which the route is to be removed.\n * @param outboundRoute - The route to be removed.\n */\nexport function removeRouteFromAllNodes(gcNodes: { [ id: string ]: string[]; }, outboundRoute: string) {\n    const channels = Object.entries(gcNodes);\n    for (const [nodeId, outboundRoutes] of channels) {\n        // Remove route from channel to parent for each channel\n        const outboundRoutesSet = new Set(outboundRoutes);\n        outboundRoutesSet.delete(outboundRoute);\n        gcNodes[nodeId] = [...outboundRoutesSet];\n    }\n}\n\n/**\n * Concatenates the given GC states and returns the concatenated GC state.\n */\nexport function concatGarbageCollectionStates(\n    gcState1: IGarbageCollectionState,\n    gcState2: IGarbageCollectionState,\n): IGarbageCollectionState {\n    const combinedGCNodes: { [ id: string ]: IGarbageCollectionNodeData; } = {};\n    for (const [nodeId, nodeData] of Object.entries(gcState1.gcNodes)) {\n        combinedGCNodes[nodeId] = {\n            outboundRoutes: Array.from(nodeData.outboundRoutes),\n            unreferencedTimestampMs: nodeData.unreferencedTimestampMs,\n        };\n    }\n\n    for (const [nodeId, nodeData] of Object.entries(gcState2.gcNodes)) {\n        let combinedNodedata = combinedGCNodes[nodeId];\n        if (combinedNodedata === undefined) {\n            combinedNodedata = {\n                outboundRoutes: Array.from(nodeData.outboundRoutes),\n                unreferencedTimestampMs: nodeData.unreferencedTimestampMs,\n            };\n        } else {\n            // Validate that same node doesn't have different unreferenced timestamp.\n            if (nodeData.unreferencedTimestampMs !== undefined\n                && combinedNodedata.unreferencedTimestampMs !== undefined) {\n                assert(nodeData.unreferencedTimestampMs === combinedNodedata.unreferencedTimestampMs,\n                    0x2b2 /* \"Two entries for the same GC node with different unreferenced timestamp\" */);\n            }\n            combinedNodedata = {\n                outboundRoutes: [...new Set([...nodeData.outboundRoutes, ...combinedNodedata.outboundRoutes])],\n                unreferencedTimestampMs: nodeData.unreferencedTimestampMs ?? combinedNodedata.unreferencedTimestampMs,\n            };\n        }\n        combinedGCNodes[nodeId] = combinedNodedata;\n    }\n    return { gcNodes: combinedGCNodes };\n}\n\n/**\n * Concatenates the given GC datas and returns the concatenated GC data.\n */\nexport function concatGarbageCollectionData(gcData1: IGarbageCollectionData, gcData2: IGarbageCollectionData) {\n    const combinedGCData: IGarbageCollectionData = cloneGCData(gcData1);\n    for (const [id, routes] of Object.entries(gcData2.gcNodes)) {\n        if (combinedGCData.gcNodes[id] === undefined) {\n            combinedGCData.gcNodes[id] = Array.from(routes);\n        } else {\n            const combinedRoutes = [...routes, ...combinedGCData.gcNodes[id]];\n            combinedGCData.gcNodes[id] = [...new Set(combinedRoutes)];\n        }\n    }\n    return combinedGCData;\n}\n\nexport class GCDataBuilder implements IGarbageCollectionData {\n    private readonly gcNodesSet: { [ id: string ]: Set<string>; } = {};\n    public get gcNodes(): { [ id: string ]: string[]; } {\n        const gcNodes = {};\n        for (const [nodeId, outboundRoutes] of Object.entries(this.gcNodesSet)) {\n            gcNodes[nodeId] = [...outboundRoutes];\n        }\n        return gcNodes;\n    }\n\n    public addNode(id: string, outboundRoutes: string[]) {\n        this.gcNodesSet[id] = new Set(outboundRoutes);\n    }\n\n    /**\n     * Adds the given GC nodes. It does the following:\n     * - Normalizes the ids of the given nodes.\n     * - Prefixes the given `prefixId` to the given nodes' ids.\n     * - Adds the outbound routes of the nodes against the normalized and prefixed id.\n     */\n    public prefixAndAddNodes(prefixId: string, gcNodes: { [ id: string ]: string[]; }) {\n        for (const [id, outboundRoutes] of Object.entries(gcNodes)) {\n            // Remove any leading slashes from the id.\n            let normalizedId = trimLeadingSlashes(id);\n            // Prefix the given id to the normalized id.\n            normalizedId = `/${prefixId}/${normalizedId}`;\n            // Remove any trailing slashes from the normalized id. Note that the trailing slashes are removed after\n            // adding the prefix for handling the special case where id is \"/\".\n            normalizedId = trimTrailingSlashes(normalizedId);\n\n            // Add the outbound routes against the normalized and prefixed id without duplicates.\n            this.gcNodesSet[normalizedId] = new Set(outboundRoutes);\n        }\n    }\n\n    public addNodes(gcNodes: { [ id: string ]: string[]; }) {\n        for (const [id, outboundRoutes] of Object.entries(gcNodes)) {\n            this.gcNodesSet[id] = new Set(outboundRoutes);\n        }\n    }\n\n    /**\n     * Adds the given outbound route to the outbound routes of all GC nodes.\n     */\n    public addRouteToAllNodes(outboundRoute: string) {\n        for (const outboundRoutes of Object.values(this.gcNodesSet)) {\n            outboundRoutes.add(outboundRoute);\n        }\n    }\n\n    public getGCData(): IGarbageCollectionData {\n        return {\n            gcNodes: this.gcNodes,\n        };\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { TelemetryEventPropertyType } from \"@fluidframework/common-definitions\";\nimport {\n    bufferToString,\n    fromBase64ToUtf8,\n    IsoBuffer,\n    Uint8ArrayToString,\n    unreachableCase,\n} from \"@fluidframework/common-utils\";\nimport { AttachmentTreeEntry, BlobTreeEntry, TreeTreeEntry } from \"@fluidframework/protocol-base\";\nimport {\n    ITree,\n    SummaryType,\n    ISummaryTree,\n    SummaryObject,\n    ISummaryBlob,\n    TreeEntry,\n    ITreeEntry,\n    ISnapshotTree,\n} from \"@fluidframework/protocol-definitions\";\nimport {\n    ISummaryStats,\n    ISummarizeResult,\n    ISummaryTreeWithStats,\n    ITelemetryContext,\n} from \"@fluidframework/runtime-definitions\";\n\n/**\n * Combines summary stats by adding their totals together.\n * Returns empty stats if called without args.\n * @param stats - stats to merge\n */\nexport function mergeStats(...stats: ISummaryStats[]): ISummaryStats {\n    const results = {\n        treeNodeCount: 0,\n        blobNodeCount: 0,\n        handleNodeCount: 0,\n        totalBlobSize: 0,\n        unreferencedBlobSize: 0,\n    };\n    for (const stat of stats) {\n        results.treeNodeCount += stat.treeNodeCount;\n        results.blobNodeCount += stat.blobNodeCount;\n        results.handleNodeCount += stat.handleNodeCount;\n        results.totalBlobSize += stat.totalBlobSize;\n        results.unreferencedBlobSize += stat.unreferencedBlobSize;\n    }\n    return results;\n}\n\nexport function utf8ByteLength(str: string): number {\n  // returns the byte length of an utf8 string\n  let s = str.length;\n  for (let i = str.length - 1; i >= 0; i--) {\n    const code = str.charCodeAt(i);\n    if (code > 0x7f && code <= 0x7ff) {\n        s++;\n    } else if (code > 0x7ff && code <= 0xffff) {\n        s += 2;\n    }\n    if (code >= 0xDC00 && code <= 0xDFFF) {\n        i--; // trail surrogate\n    }\n  }\n  return s;\n}\n\nexport function getBlobSize(content: ISummaryBlob[\"content\"]): number {\n    if (typeof content === \"string\") {\n        return utf8ByteLength(content);\n    } else {\n        return content.byteLength;\n    }\n}\n\nfunction calculateStatsCore(summaryObject: SummaryObject, stats: ISummaryStats): void {\n    switch (summaryObject.type) {\n        case SummaryType.Tree: {\n            stats.treeNodeCount++;\n            for (const value of Object.values(summaryObject.tree)) {\n                calculateStatsCore(value, stats);\n            }\n            return;\n        }\n        case SummaryType.Handle: {\n            stats.handleNodeCount++;\n            return;\n        }\n        case SummaryType.Blob: {\n            stats.blobNodeCount++;\n            stats.totalBlobSize += getBlobSize(summaryObject.content);\n            return;\n        }\n        default: return;\n    }\n}\n\nexport function calculateStats(summary: SummaryObject): ISummaryStats {\n    const stats = mergeStats();\n    calculateStatsCore(summary, stats);\n    return stats;\n}\n\nexport function addBlobToSummary(summary: ISummaryTreeWithStats, key: string, content: string | Uint8Array): void {\n    const blob: ISummaryBlob = {\n        type: SummaryType.Blob,\n        content,\n    };\n    summary.summary.tree[key] = blob;\n    summary.stats.blobNodeCount++;\n    summary.stats.totalBlobSize += getBlobSize(content);\n}\n\nexport function addTreeToSummary(summary: ISummaryTreeWithStats, key: string, summarizeResult: ISummarizeResult): void {\n    summary.summary.tree[key] = summarizeResult.summary;\n    summary.stats = mergeStats(summary.stats, summarizeResult.stats);\n}\n\nexport function addSummarizeResultToSummary(\n    summary: ISummaryTreeWithStats,\n    key: string,\n    summarizeResult: ISummarizeResult,\n): void {\n    summary.summary.tree[key] = summarizeResult.summary;\n    summary.stats = mergeStats(summary.stats, summarizeResult.stats);\n}\n\nexport class SummaryTreeBuilder implements ISummaryTreeWithStats {\n    private attachmentCounter: number = 0;\n\n    public get summary(): ISummaryTree {\n        return {\n            type: SummaryType.Tree,\n            tree: { ...this.summaryTree },\n        };\n    }\n\n    public get stats(): Readonly<ISummaryStats> {\n        return { ...this.summaryStats };\n    }\n\n    constructor() {\n        this.summaryStats = mergeStats();\n        this.summaryStats.treeNodeCount++;\n    }\n\n    private readonly summaryTree: { [path: string]: SummaryObject; } = {};\n    private summaryStats: ISummaryStats;\n\n    public addBlob(key: string, content: string | Uint8Array): void {\n        // Prevent cloning by directly referencing underlying private properties\n        addBlobToSummary({\n            summary: {\n                type: SummaryType.Tree,\n                tree: this.summaryTree,\n            },\n            stats: this.summaryStats,\n        }, key, content);\n    }\n\n    public addHandle(\n        key: string,\n        handleType: SummaryType.Tree | SummaryType.Blob | SummaryType.Attachment,\n        handle: string): void {\n        this.summaryTree[key] = {\n            type: SummaryType.Handle,\n            handleType,\n            handle,\n        };\n        this.summaryStats.handleNodeCount++;\n    }\n\n    public addWithStats(key: string, summarizeResult: ISummarizeResult): void {\n        this.summaryTree[key] = summarizeResult.summary;\n        this.summaryStats = mergeStats(this.summaryStats, summarizeResult.stats);\n    }\n\n    public addAttachment(id: string) {\n        this.summaryTree[this.attachmentCounter++] = { id, type: SummaryType.Attachment };\n    }\n\n    public getSummaryTree(): ISummaryTreeWithStats {\n        return { summary: this.summary, stats: this.stats };\n    }\n}\n\n/**\n * Converts snapshot ITree to ISummaryTree format and tracks stats.\n * @param snapshot - snapshot in ITree format\n * @param fullTree - true to never use handles, even if id is specified\n */\nexport function convertToSummaryTreeWithStats(\n    snapshot: ITree,\n    fullTree: boolean = false,\n): ISummaryTreeWithStats {\n    const builder = new SummaryTreeBuilder();\n    for (const entry of snapshot.entries) {\n        switch (entry.type) {\n            case TreeEntry.Blob: {\n                const blob = entry.value;\n                let content: string | Uint8Array;\n                if (blob.encoding === \"base64\") {\n                    content = IsoBuffer.from(blob.contents, \"base64\");\n                } else {\n                    content = blob.contents;\n                }\n                builder.addBlob(entry.path, content);\n                break;\n            }\n\n            case TreeEntry.Tree: {\n                const subtree = convertToSummaryTree(\n                    entry.value,\n                    fullTree);\n                builder.addWithStats(entry.path, subtree);\n\n                break;\n            }\n\n            case TreeEntry.Attachment: {\n                const id = entry.value.id;\n                builder.addAttachment(id);\n\n                break;\n            }\n\n            default:\n                throw new Error(\"Unexpected TreeEntry type\");\n        }\n    }\n\n    const summaryTree = builder.getSummaryTree();\n    summaryTree.summary.unreferenced = snapshot.unreferenced;\n    return summaryTree;\n}\n\n/**\n * Converts snapshot ITree to ISummaryTree format and tracks stats.\n * @param snapshot - snapshot in ITree format\n * @param fullTree - true to never use handles, even if id is specified\n */\nexport function convertToSummaryTree(\n    snapshot: ITree,\n    fullTree: boolean = false,\n): ISummarizeResult {\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (snapshot.id && !fullTree) {\n        const stats = mergeStats();\n        stats.handleNodeCount++;\n        return {\n            summary: {\n                handle: snapshot.id,\n                handleType: SummaryType.Tree,\n                type: SummaryType.Handle,\n            },\n            stats,\n        };\n    } else {\n        return convertToSummaryTreeWithStats(snapshot, fullTree);\n    }\n}\n\n/**\n * Converts ISnapshotTree to ISummaryTree format and tracks stats. This snapshot tree was\n * was taken by serialize api in detached container.\n * @param snapshot - snapshot in ISnapshotTree format\n */\nexport function convertSnapshotTreeToSummaryTree(\n    snapshot: ISnapshotTree,\n): ISummaryTreeWithStats {\n    const builder = new SummaryTreeBuilder();\n    for (const [path, id] of Object.entries(snapshot.blobs)) {\n        let decoded: string | undefined;\n        if ((snapshot as any).blobsContents !== undefined) {\n            const content: ArrayBufferLike = (snapshot as any).blobsContents[id];\n            if (content !== undefined) {\n                decoded = bufferToString(content, \"utf-8\");\n            }\n        // 0.44 back-compat We still put contents in same blob for back-compat so need to add blob\n        // only for blobPath -> blobId mapping and not for blobId -> blob value contents.\n        } else if (snapshot.blobs[id] !== undefined) {\n            decoded = fromBase64ToUtf8(snapshot.blobs[id]);\n        }\n        if (decoded !== undefined) {\n            builder.addBlob(path, decoded);\n        }\n    }\n\n    for (const [key, tree] of Object.entries(snapshot.trees)) {\n        const subtree = convertSnapshotTreeToSummaryTree(tree);\n        builder.addWithStats(key, subtree);\n    }\n\n    const summaryTree = builder.getSummaryTree();\n    summaryTree.summary.unreferenced = snapshot.unreferenced;\n    return summaryTree;\n}\n\n/**\n * Converts ISummaryTree to ITree format. This is needed for back-compat while we get rid of snapshot.\n * @param summaryTree - summary tree in ISummaryTree format\n */\nexport function convertSummaryTreeToITree(summaryTree: ISummaryTree): ITree {\n    const entries: ITreeEntry[] = [];\n    for (const [key, value] of Object.entries(summaryTree.tree)) {\n        switch (value.type) {\n            case SummaryType.Blob: {\n                let parsedContent: string;\n                let encoding: \"utf-8\" | \"base64\" = \"utf-8\";\n                if (typeof value.content === \"string\") {\n                    parsedContent = value.content;\n                } else {\n                    parsedContent = Uint8ArrayToString(value.content, \"base64\");\n                    encoding = \"base64\";\n                }\n                entries.push(new BlobTreeEntry(key, parsedContent, encoding));\n                break;\n            }\n\n            case SummaryType.Tree: {\n                entries.push(new TreeTreeEntry(key, convertSummaryTreeToITree(value)));\n                break;\n            }\n\n            case SummaryType.Attachment: {\n                entries.push(new AttachmentTreeEntry(key, value.id));\n                break;\n            }\n\n            case SummaryType.Handle: {\n                throw new Error(\"Should not have Handle type in summary tree\");\n            }\n\n            default:\n                unreachableCase(value, \"Unexpected summary tree type\");\n        }\n    }\n    return {\n        entries,\n        unreferenced: summaryTree.unreferenced,\n    };\n}\n\nexport class TelemetryContext implements ITelemetryContext {\n    private readonly telemetry = new Map<string, TelemetryEventPropertyType>();\n\n    /**\n     * {@inheritDoc @fluidframework/runtime-definitions#ITelemetryContext.set}\n     */\n    set(prefix: string, property: string, value: TelemetryEventPropertyType): void {\n        this.telemetry.set(`${prefix}${property}`, value);\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/runtime-definitions#ITelemetryContext.get}\n     */\n    get(prefix: string, property: string): TelemetryEventPropertyType {\n        return this.telemetry.get(`${prefix}${property}`);\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/runtime-definitions#ITelemetryContext.serialize}\n     */\n    serialize(): string {\n        const jsonObject = {};\n        this.telemetry.forEach((value, key) => {\n            jsonObject[key] = value;\n        });\n        return JSON.stringify(jsonObject);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { assert } from \"@fluidframework/common-utils\";\nimport {\n    ISnapshotTree,\n    ISequencedDocumentMessage,\n    SummaryType,\n    ISummaryTree,\n    SummaryObject,\n} from \"@fluidframework/protocol-definitions\";\nimport { channelsTreeName, ISummaryTreeWithStats } from \"@fluidframework/runtime-definitions\";\nimport { SummaryTreeBuilder } from \"../summaryUtils\";\nimport { ReadAndParseBlob } from \"../utils\";\n\nconst baseSummaryTreeKey = \"_baseSummary\";\nconst outstandingOpsBlobKey = \"_outstandingOps\";\nconst maxDecodeDepth = 100;\n\n/**\n * Return value of refreshSummaryAck function. There can be three different scenarios based on the passed params:\n * 1. The latest summary was not udpated.\n * 2. The latest summary was updated and the summary corresponding to the params was tracked by this client.\n * 3. The latest summary was updated but the summary corresponding to the params was not tracked. In this case, the\n *    latest summary is updated based on the downloaded snapshot which is also returned.\n */\nexport type RefreshSummaryResult = {\n    latestSummaryUpdated: false;\n} | {\n    latestSummaryUpdated: true;\n    wasSummaryTracked: true;\n} | {\n    latestSummaryUpdated: true;\n    wasSummaryTracked: false;\n    snapshot: ISnapshotTree;\n};\n\nexport interface ISummarizerNodeRootContract {\n    startSummary(referenceSequenceNumber: number, summaryLogger: ITelemetryLogger): void;\n    completeSummary(proposalHandle: string): void;\n    clearSummary(): void;\n    refreshLatestSummary(\n        proposalHandle: string | undefined,\n        summaryRefSeq: number,\n        getSnapshot: () => Promise<ISnapshotTree>,\n        readAndParseBlob: ReadAndParseBlob,\n        correlatedSummaryLogger: ITelemetryLogger,\n    ): Promise<RefreshSummaryResult>;\n}\n\n/** Path for nodes in a tree with escaped special characters */\nexport class EscapedPath {\n    private constructor(public readonly path: string) { }\n    public static create(path: string): EscapedPath {\n        return new EscapedPath(encodeURIComponent(path));\n    }\n    public static createAndConcat(pathParts: string[]): EscapedPath {\n        let ret = EscapedPath.create(pathParts[0] ?? \"\");\n        for (let i = 1; i < pathParts.length; i++) {\n            ret = ret.concat(EscapedPath.create(pathParts[i]));\n        }\n        return ret;\n    }\n    public toString(): string {\n        return this.path;\n    }\n    public concat(path: EscapedPath): EscapedPath {\n        return new EscapedPath(`${this.path}/${path.path}`);\n    }\n}\n\n/** Information about a summary relevant to a specific node in the tree */\nexport class SummaryNode {\n    /** Creates an instance that is valid for the root with specific basePath and localPath */\n    public static createForRoot(referenceSequenceNumber: number): SummaryNode {\n        return new SummaryNode({\n            referenceSequenceNumber,\n            basePath: undefined,\n            localPath: EscapedPath.create(\"\"), // root hard-coded to \"\"\n        });\n    }\n\n    /** Summary reference sequence number, i.e. last sequence number seen when it was created */\n    public get referenceSequenceNumber(): number {\n        return this.summary.referenceSequenceNumber;\n    }\n    /** Full path to parent node, or undefined if this is the root */\n    public get basePath(): EscapedPath | undefined {\n        return this.summary.basePath;\n    }\n    /** Relative path to this node from its parent node */\n    public get localPath(): EscapedPath {\n        return this.summary.localPath;\n    }\n    /** Relative path from this node to its node innermost base summary */\n    public get additionalPath(): EscapedPath | undefined {\n        return this.summary.additionalPath;\n    }\n    public set additionalPath(additionalPath: EscapedPath | undefined) {\n        this.summary.additionalPath = additionalPath;\n    }\n    constructor(private readonly summary: {\n        readonly referenceSequenceNumber: number;\n        readonly basePath: EscapedPath | undefined;\n        readonly localPath: EscapedPath;\n        additionalPath?: EscapedPath;\n    }) { }\n\n    /** Gets the full path to this node, to be used when sending a handle */\n    public get fullPath(): EscapedPath {\n        return this.basePath?.concat(this.localPath) ?? this.localPath;\n    }\n\n    /**\n     * Gets the full path to this node's innermost base summary.\n     * The children nodes can use this as their basePath to determine their path.\n     */\n    public get fullPathForChildren(): EscapedPath {\n        return this.additionalPath !== undefined\n            ? this.fullPath.concat(this.additionalPath)\n            : this.fullPath;\n    }\n\n    /**\n     * Creates a new node within the same summary for a child of this node.\n     * @param id - id of the child node\n     */\n    public createForChild(id: string): SummaryNode {\n        return new SummaryNode({\n            referenceSequenceNumber: this.referenceSequenceNumber,\n            basePath: this.fullPathForChildren,\n            localPath: EscapedPath.create(id),\n        });\n    }\n}\n\n/** Result from decoding summary which may have been a differential summary. */\ninterface IDecodedSummary {\n    /** The innermost base summary which is not itself a differential summary */\n    readonly baseSummary: ISnapshotTree;\n    /** The entire path name to the innermost base summary */\n    readonly pathParts: string[];\n    /** Function to fetch all outstanding ops since the innermost base summary */\n    getOutstandingOps(readAndParseBlob: ReadAndParseBlob): Promise<ISequencedDocumentMessage[]>;\n}\n\n/**\n * Checks if the snapshot is created by referencing a previous successful\n * summary plus outstanding ops. If so, it will recursively \"decode\" it until\n * it gets to the last successful summary (the base summary) and returns that\n * as well as a function for fetching the outstanding ops. Also returns the\n * full path to the previous base summary for child summarizer nodes to use as\n * their base path when necessary.\n * @param snapshot - snapshot tree to decode\n */\nexport function decodeSummary(\n    snapshot: ISnapshotTree,\n    logger: Pick<ITelemetryLogger, \"sendTelemetryEvent\">,\n): IDecodedSummary {\n    let baseSummary = snapshot;\n    const pathParts: string[] = [];\n    const opsBlobs: string[] = [];\n\n    for (let i = 0; ; i++) {\n        if (i > maxDecodeDepth) {\n            logger.sendTelemetryEvent({\n                eventName: \"DecodeSummaryMaxDepth\",\n                maxDecodeDepth,\n            });\n        }\n        const outstandingOpsBlob = baseSummary.blobs[outstandingOpsBlobKey];\n        const newBaseSummary = baseSummary.trees[baseSummaryTreeKey];\n        if (outstandingOpsBlob === undefined && newBaseSummary === undefined) {\n            return {\n                baseSummary,\n                pathParts,\n                async getOutstandingOps(readAndParseBlob: ReadAndParseBlob) {\n                    let outstandingOps: ISequencedDocumentMessage[] = [];\n                    for (const opsBlob of opsBlobs) {\n                        const newOutstandingOps = await readAndParseBlob<ISequencedDocumentMessage[]>(opsBlob);\n                        if (outstandingOps.length > 0 && newOutstandingOps.length > 0) {\n                            const latestSeq = outstandingOps[outstandingOps.length - 1].sequenceNumber;\n                            const newEarliestSeq = newOutstandingOps[0].sequenceNumber;\n                            if (newEarliestSeq <= latestSeq) {\n                                logger.sendTelemetryEvent({\n                                    eventName: \"DuplicateOutstandingOps\",\n                                    // eslint-disable-next-line max-len\n                                    message: `newEarliestSeq <= latestSeq in decodeSummary: ${newEarliestSeq} <= ${latestSeq}`,\n                                });\n                                while (newOutstandingOps.length > 0\n                                    && newOutstandingOps[0].sequenceNumber <= latestSeq) {\n                                    newOutstandingOps.shift();\n                                }\n                            }\n                        }\n                        outstandingOps = outstandingOps.concat(newOutstandingOps);\n                    }\n                    return outstandingOps;\n                },\n            };\n        }\n\n        assert(!!outstandingOpsBlob, 0x1af /* \"Outstanding ops blob missing, but base summary tree exists\" */);\n        assert(newBaseSummary !== undefined, 0x1b0 /* \"Base summary tree missing, but outstanding ops blob exists\" */);\n        baseSummary = newBaseSummary;\n        pathParts.push(baseSummaryTreeKey);\n        opsBlobs.unshift(outstandingOpsBlob);\n    }\n}\n\n/**\n * Summary tree which is a handle of the previous successfully acked summary\n * and a blob of the outstanding ops since that summary.\n */\ninterface IEncodedSummary extends ISummaryTreeWithStats {\n    readonly additionalPath: EscapedPath;\n}\n\n/**\n * Parameter to help encode summary with conditional behavior.\n * When fromSummary is true, it will contain the SummaryNode of\n * its previous summary, which it can use to point to with a handle.\n * When fromSummary is false, it will use an actual summary tree\n * as its base summary in case the first summary is a differential summary.\n */\nexport type EncodeSummaryParam = {\n    fromSummary: true;\n    summaryNode: SummaryNode;\n} | {\n    fromSummary: false;\n    initialSummary: ISummaryTreeWithStats;\n};\n\n/**\n * Creates a summary tree which is a handle of the previous successfully acked summary\n * and a blob of the outstanding ops since that summary. If there is no acked summary yet,\n * it will create with the tree found in the initial attach op and the blob of outstanding ops.\n * @param summaryParam - information about last acked summary and paths to encode if from summary,\n * otherwise the initial summary from the attach op.\n * @param outstandingOps - outstanding ops since last acked summary\n */\nexport function encodeSummary(\n    summaryParam: EncodeSummaryParam,\n    outstandingOps: ISequencedDocumentMessage[],\n): IEncodedSummary {\n    let additionalPath = EscapedPath.create(baseSummaryTreeKey);\n\n    const builder = new SummaryTreeBuilder();\n    builder.addBlob(outstandingOpsBlobKey, JSON.stringify(outstandingOps));\n\n    if (summaryParam.fromSummary) {\n        // Create using handle of latest acked summary\n        const summaryNode = summaryParam.summaryNode;\n        if (summaryNode.additionalPath !== undefined) {\n            additionalPath = additionalPath.concat(summaryNode.additionalPath);\n        }\n        builder.addHandle(baseSummaryTreeKey, SummaryType.Tree, summaryNode.fullPath.path);\n    } else {\n        // Create using initial summary from attach op\n        builder.addWithStats(baseSummaryTreeKey, summaryParam.initialSummary);\n    }\n\n    const summary = builder.getSummaryTree();\n    return {\n        ...summary,\n        additionalPath,\n    };\n}\n\n/**\n * Information about the initial summary tree found from an attach op.\n */\nexport interface IInitialSummary {\n    sequenceNumber: number;\n    id: string;\n    summary: ISummaryTreeWithStats | undefined;\n}\n\n/**\n * Represents the details needed to create a child summarizer node.\n */\nexport interface ICreateChildDetails {\n    /** Summary from attach op if known */\n    initialSummary: IInitialSummary | undefined;\n    /** Latest summary from server node data */\n    latestSummary: SummaryNode | undefined;\n    /** Sequence number of latest known change to the node */\n    changeSequenceNumber: number;\n}\n\nexport interface ISubtreeInfo<T extends ISnapshotTree | SummaryObject> {\n    /** Tree to use to find children subtrees */\n    childrenTree: T;\n    /** Additional path part where children are isolated */\n    childrenPathPart: string | undefined;\n}\n\n/**\n * Checks if the summary contains .channels subtree where the children subtrees\n * would be located if exists.\n * @param baseSummary - summary to check\n */\nexport function parseSummaryForSubtrees(baseSummary: ISnapshotTree): ISubtreeInfo<ISnapshotTree> {\n    // New versions of snapshots have child nodes isolated in .channels subtree\n    const channelsSubtree = baseSummary.trees[channelsTreeName];\n    if (channelsSubtree !== undefined) {\n        return {\n            childrenTree: channelsSubtree,\n            childrenPathPart: channelsTreeName,\n        };\n    }\n    return {\n        childrenTree: baseSummary,\n        childrenPathPart: undefined,\n    };\n}\n\n/**\n * Checks if the summary contains .channels subtree where the children subtrees\n * would be located if exists.\n * @param baseSummary - summary to check\n */\nexport function parseSummaryTreeForSubtrees(summary: ISummaryTree): ISubtreeInfo<SummaryObject> {\n    // New versions of snapshots have child nodes isolated in .channels subtree\n    const channelsSubtree = summary.tree[channelsTreeName];\n    if (channelsSubtree !== undefined) {\n        return {\n            childrenTree: channelsSubtree,\n            childrenPathPart: channelsTreeName,\n        };\n    }\n    return {\n        childrenTree: summary,\n        childrenPathPart: undefined,\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ISummarizerNode,\n    ISummarizerNodeConfig,\n    ISummarizeResult,\n    ISummaryTreeWithStats,\n    CreateChildSummarizerNodeParam,\n    CreateSummarizerNodeSource,\n    SummarizeInternalFn,\n    ITelemetryContext,\n} from \"@fluidframework/runtime-definitions\";\nimport {\n    ISequencedDocumentMessage,\n    SummaryType,\n    ISnapshotTree,\n    SummaryObject,\n} from \"@fluidframework/protocol-definitions\";\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { assert, unreachableCase } from \"@fluidframework/common-utils\";\nimport { mergeStats, convertToSummaryTree, calculateStats } from \"../summaryUtils\";\nimport { ReadAndParseBlob } from \"../utils\";\nimport {\n    decodeSummary,\n    encodeSummary,\n    EncodeSummaryParam,\n    EscapedPath,\n    ICreateChildDetails,\n    IInitialSummary,\n    ISummarizerNodeRootContract,\n    parseSummaryForSubtrees,\n    parseSummaryTreeForSubtrees,\n    RefreshSummaryResult,\n    SummaryNode,\n} from \"./summarizerNodeUtils\";\n\nexport interface IRootSummarizerNode extends ISummarizerNode, ISummarizerNodeRootContract {}\n\n/**\n * Encapsulates the summarizing work and state of an individual tree node in the\n * summary tree. It tracks changes and allows for optimizations when unchanged, or\n * can allow for fallback summaries to be generated when an error is encountered.\n * Usage is for the root node to call startSummary first to begin tracking a WIP\n * (work in progress) summary. Then all nodes will call summarize to summaries their\n * individual parts. Once completed and uploaded to storage, the root node will call\n * completeSummary or clearSummary to clear the WIP summary tracking state if something\n * went wrong. The SummarizerNodes will track all pending summaries that have been\n * recorded by the completeSummary call. When one of them is acked, the root node should\n * call refreshLatestSummary to inform the tree of SummarizerNodes of the new baseline\n * latest successful summary.\n */\nexport class SummarizerNode implements IRootSummarizerNode {\n    /**\n     * The reference sequence number of the most recent acked summary.\n     * Returns 0 if there is not yet an acked summary.\n     */\n    public get referenceSequenceNumber() {\n        return this._latestSummary?.referenceSequenceNumber ?? 0;\n    }\n\n    protected readonly children = new Map<string, SummarizerNode>();\n    protected readonly pendingSummaries = new Map<string, SummaryNode>();\n    private readonly outstandingOps: ISequencedDocumentMessage[] = [];\n    private wipReferenceSequenceNumber: number | undefined;\n    private wipLocalPaths: { localPath: EscapedPath; additionalPath?: EscapedPath; } | undefined;\n    private wipSkipRecursion = false;\n\n    public startSummary(referenceSequenceNumber: number, summaryLogger: ITelemetryLogger) {\n        assert(this.wipSummaryLogger === undefined,\n            0x19f /* \"wipSummaryLogger should not be set yet in startSummary\" */);\n        assert(this.wipReferenceSequenceNumber === undefined, 0x1a0 /* \"Already tracking a summary\" */);\n\n        this.wipSummaryLogger = summaryLogger;\n\n        for (const child of this.children.values()) {\n            child.startSummary(referenceSequenceNumber, this.wipSummaryLogger);\n        }\n        this.wipReferenceSequenceNumber = referenceSequenceNumber;\n    }\n\n    public async summarize(\n        fullTree: boolean,\n        trackState: boolean = true,\n        telemetryContext?: ITelemetryContext,\n    ): Promise<ISummarizeResult> {\n        assert(this.isTrackingInProgress(), 0x1a1 /* \"summarize should not be called when not tracking the summary\" */);\n        assert(this.wipSummaryLogger !== undefined,\n            0x1a2 /* \"wipSummaryLogger should have been set in startSummary or ctor\" */);\n\n        // Try to reuse the tree if unchanged\n        if (this.canReuseHandle && !fullTree && !this.hasChanged()) {\n            const latestSummary = this._latestSummary;\n            if (latestSummary !== undefined) {\n                this.wipLocalPaths = {\n                    localPath: latestSummary.localPath,\n                    additionalPath: latestSummary.additionalPath,\n                };\n                this.wipSkipRecursion = true;\n                const stats = mergeStats();\n                stats.handleNodeCount++;\n                return {\n                    summary: {\n                        type: SummaryType.Handle,\n                        handle: latestSummary.fullPath.path,\n                        handleType: SummaryType.Tree,\n                    },\n                    stats,\n                };\n            }\n        }\n\n        try {\n            const result = await this.summarizeInternalFn(fullTree, true, telemetryContext);\n            this.wipLocalPaths = { localPath: EscapedPath.create(result.id) };\n            if (result.pathPartsForChildren !== undefined) {\n                this.wipLocalPaths.additionalPath = EscapedPath.createAndConcat(result.pathPartsForChildren);\n            }\n            return { summary: result.summary, stats: result.stats };\n        } catch (error) {\n            if (this.throwOnError || this.trackingSequenceNumber < this._changeSequenceNumber) {\n                throw error;\n            }\n            const latestSummary = this._latestSummary;\n            const initialSummary = this.initialSummary;\n\n            let encodeParam: EncodeSummaryParam;\n            let localPath: EscapedPath;\n            if (latestSummary !== undefined) {\n                // Create using handle of latest acked summary\n                encodeParam = {\n                    fromSummary: true,\n                    summaryNode: latestSummary,\n                };\n                localPath = latestSummary.localPath;\n            } else if (initialSummary?.summary !== undefined) {\n                // Create using initial summary from attach op\n                encodeParam = {\n                    fromSummary: false,\n                    initialSummary: initialSummary.summary,\n                };\n                localPath = EscapedPath.create(initialSummary.id);\n            } else {\n                // No base summary to reference\n                throw error;\n            }\n            this.wipSummaryLogger.sendErrorEvent({\n                eventName: \"SummarizingWithBasePlusOps\",\n            },\n            error);\n            const summary = encodeSummary(encodeParam, this.outstandingOps);\n            this.wipLocalPaths = {\n                localPath,\n                additionalPath: summary.additionalPath,\n            };\n            this.wipSkipRecursion = true;\n            return { summary: summary.summary, stats: summary.stats };\n        }\n    }\n\n    /**\n     * Complete the WIP summary for the given proposalHandle\n     */\n    public completeSummary(proposalHandle: string) {\n        this.completeSummaryCore(proposalHandle, undefined, false);\n    }\n\n    /**\n     * Recursive implementation for completeSummary, with additional internal-only parameters\n     */\n    protected completeSummaryCore(\n        proposalHandle: string,\n        parentPath: EscapedPath | undefined,\n        parentSkipRecursion: boolean,\n    ) {\n        assert(this.wipSummaryLogger !== undefined,\n            0x1a3 /* \"wipSummaryLogger should have been set in startSummary or ctor\" */);\n        assert(this.wipReferenceSequenceNumber !== undefined, 0x1a4 /* \"Not tracking a summary\" */);\n        let localPathsToUse = this.wipLocalPaths;\n\n        if (parentSkipRecursion) {\n            const latestSummary = this._latestSummary;\n            if (latestSummary !== undefined) {\n                // This case the parent node created a failure summary or was reused.\n                // This node and all children should only try to reference their path\n                // by its last known good state in the actual summary tree.\n                // If parent fails or is reused, the child summarize is not called so\n                // it did not get a chance to change its paths.\n                // In this case, essentially only propagate the new summary ref seq num.\n                localPathsToUse = {\n                    localPath: latestSummary.localPath,\n                    additionalPath: latestSummary.additionalPath,\n                };\n            } else {\n                // This case the child is added after the latest non-failure summary.\n                // This node and all children should consider themselves as still not\n                // having a successful summary yet.\n                // We cannot \"reuse\" this node if unchanged since that summary, because\n                // handles will be unable to point to that node. It never made it to the\n                // tree itself, and only exists as an attach op in the _outstandingOps.\n                this.clearSummary();\n                return;\n            }\n        }\n\n        // This should come from wipLocalPaths in normal cases, or from the latestSummary\n        // if parentIsFailure or parentIsReused is true.\n        // If there is no latestSummary, clearSummary and return before reaching this code.\n        assert(!!localPathsToUse, 0x1a5 /* \"Tracked summary local paths not set\" */);\n\n        const summary = new SummaryNode({\n            ...localPathsToUse,\n            referenceSequenceNumber: this.wipReferenceSequenceNumber,\n            basePath: parentPath,\n        });\n        const fullPathForChildren = summary.fullPathForChildren;\n        for (const child of this.children.values()) {\n            child.completeSummaryCore(\n                proposalHandle,\n                fullPathForChildren,\n                this.wipSkipRecursion || parentSkipRecursion,\n            );\n        }\n        // Note that this overwrites existing pending summary with\n        // the same proposalHandle. If proposalHandle is something like\n        // a hash or unique identifier, this should be fine. If storage\n        // can return the same proposalHandle for a different summary,\n        // this should still be okay, because we should be proposing the\n        // newer one later which would have to overwrite the previous one.\n        this.pendingSummaries.set(proposalHandle, summary);\n        this.clearSummary();\n    }\n\n    public clearSummary() {\n        this.wipReferenceSequenceNumber = undefined;\n        this.wipLocalPaths = undefined;\n        this.wipSkipRecursion = false;\n        this.wipSummaryLogger = undefined;\n        for (const child of this.children.values()) {\n            child.clearSummary();\n        }\n    }\n\n    /**\n     * Refreshes the latest summary tracked by this node. If we have a pending summary for the given proposal handle,\n     * it becomes the latest summary. If the current summary is already ahead (e.g., loaded from a service summary),\n     * we skip the update. Otherwise, we get the snapshot by calling `getSnapshot` and update latest\n     * summary based off of that.\n     * @returns A RefreshSummaryResult type which returns information based on the following three scenarios:\n     *          1. The latest summary was not udpated.\n     *          2. The latest summary was updated and the summary corresponding to the params was being tracked.\n     *          3. The latest summary was updated but the summary corresponding to the params was not tracked. In this\n     *             case, the latest summary is updated based on the downloaded snapshot which is also returned.\n     */\n    public async refreshLatestSummary(\n        proposalHandle: string | undefined,\n        summaryRefSeq: number,\n        getSnapshot: () => Promise<ISnapshotTree>,\n        readAndParseBlob: ReadAndParseBlob,\n        correlatedSummaryLogger: ITelemetryLogger,\n    ): Promise<RefreshSummaryResult> {\n        if (proposalHandle !== undefined) {\n            const maybeSummaryNode = this.pendingSummaries.get(proposalHandle);\n\n            if (maybeSummaryNode !== undefined) {\n                this.refreshLatestSummaryFromPending(proposalHandle, maybeSummaryNode.referenceSequenceNumber);\n                return { latestSummaryUpdated: true, wasSummaryTracked: true };\n            }\n        }\n\n        // If we have seen a summary same or later as the current one, ignore it.\n        if (this.referenceSequenceNumber >= summaryRefSeq) {\n            return { latestSummaryUpdated: false };\n        }\n\n        const snapshotTree = await getSnapshot();\n        await this.refreshLatestSummaryFromSnapshot(\n            summaryRefSeq,\n            snapshotTree,\n            undefined,\n            EscapedPath.create(\"\"),\n            correlatedSummaryLogger,\n            readAndParseBlob,\n        );\n        return { latestSummaryUpdated: true, wasSummaryTracked: false, snapshot: snapshotTree };\n    }\n\n    protected refreshLatestSummaryFromPending(\n        proposalHandle: string,\n        referenceSequenceNumber: number,\n    ): void {\n        const summaryNode = this.pendingSummaries.get(proposalHandle);\n        if (summaryNode === undefined) {\n            // This should only happen if parent skipped recursion AND no prior summary existed.\n            assert(\n                this._latestSummary === undefined,\n                0x1a6 /* \"Not found pending summary, but this node has previously completed a summary\" */,\n            );\n            return;\n        } else {\n            assert(\n                referenceSequenceNumber === summaryNode.referenceSequenceNumber,\n                0x1a7 /* Pending summary reference sequence number should be consistent */,\n            );\n\n            // Clear earlier pending summaries\n            this.pendingSummaries.delete(proposalHandle);\n        }\n\n        this.refreshLatestSummaryCore(referenceSequenceNumber);\n\n        this._latestSummary = summaryNode;\n\n        // Propagate update to all child nodes\n        for (const child of this.children.values()) {\n            child.refreshLatestSummaryFromPending(proposalHandle, referenceSequenceNumber);\n        }\n    }\n\n    protected async refreshLatestSummaryFromSnapshot(\n        referenceSequenceNumber: number,\n        snapshotTree: ISnapshotTree,\n        basePath: EscapedPath | undefined,\n        localPath: EscapedPath,\n        correlatedSummaryLogger: ITelemetryLogger,\n        readAndParseBlob: ReadAndParseBlob,\n    ): Promise<void> {\n        // Possible re-entrancy. If we have already seen a summary later than this one, ignore it.\n        if (this.referenceSequenceNumber >= referenceSequenceNumber) {\n            return;\n        }\n\n        this.refreshLatestSummaryCore(referenceSequenceNumber);\n\n        const { baseSummary, pathParts } = decodeSummary(snapshotTree, correlatedSummaryLogger);\n\n        this._latestSummary = new SummaryNode({\n            referenceSequenceNumber,\n            basePath,\n            localPath,\n        });\n\n        const { childrenTree, childrenPathPart } = parseSummaryForSubtrees(baseSummary);\n        if (childrenPathPart !== undefined) {\n            pathParts.push(childrenPathPart);\n        }\n\n        if (pathParts.length > 0) {\n            this._latestSummary.additionalPath = EscapedPath.createAndConcat(pathParts);\n        }\n\n        // Propagate update to all child nodes\n        const pathForChildren = this._latestSummary.fullPathForChildren;\n        await Promise.all(Array.from(this.children)\n            .filter(([id]) => {\n                // Assuming subtrees missing from snapshot are newer than the snapshot,\n                // but might be nice to assert this using earliest seq for node.\n                return childrenTree.trees[id] !== undefined;\n            }).map(async ([id, child]) => {\n                return child.refreshLatestSummaryFromSnapshot(\n                    referenceSequenceNumber,\n                    childrenTree.trees[id],\n                    pathForChildren,\n                    EscapedPath.create(id),\n                    correlatedSummaryLogger,\n                    readAndParseBlob,\n                );\n            }));\n    }\n\n    private refreshLatestSummaryCore(referenceSequenceNumber: number): void {\n        for (const [key, value] of this.pendingSummaries) {\n            if (value.referenceSequenceNumber < referenceSequenceNumber) {\n                this.pendingSummaries.delete(key);\n            }\n        }\n\n        // Clear earlier outstanding ops\n        while (\n            this.outstandingOps.length > 0\n            && this.outstandingOps[0].sequenceNumber <= referenceSequenceNumber\n        ) {\n            this.outstandingOps.shift();\n        }\n    }\n\n    public loadBaseSummaryWithoutDifferential(snapshot: ISnapshotTree) {\n        // Check base summary to see if it has any additional path parts\n        // separating child SummarizerNodes. Checks for .channels subtrees.\n        const { childrenPathPart } = parseSummaryForSubtrees(snapshot);\n        if (childrenPathPart !== undefined && this._latestSummary !== undefined) {\n            this._latestSummary.additionalPath = EscapedPath.create(childrenPathPart);\n        }\n    }\n\n    public async loadBaseSummary(\n        snapshot: ISnapshotTree,\n        readAndParseBlob: ReadAndParseBlob,\n    ): Promise<{ baseSummary: ISnapshotTree; outstandingOps: ISequencedDocumentMessage[]; }> {\n        const decodedSummary = decodeSummary(snapshot, this.defaultLogger);\n        const outstandingOps = await decodedSummary.getOutstandingOps(readAndParseBlob);\n\n        const { childrenPathPart } = parseSummaryForSubtrees(decodedSummary.baseSummary);\n        if (childrenPathPart !== undefined) {\n            decodedSummary.pathParts.push(childrenPathPart);\n        }\n\n        if (decodedSummary.pathParts.length > 0 && this._latestSummary !== undefined) {\n            this._latestSummary.additionalPath = EscapedPath.createAndConcat(decodedSummary.pathParts);\n        }\n\n        // Defensive assertion: tracking number should already exceed this number.\n        // This is probably a little excessive; can remove when stable.\n        if (outstandingOps.length > 0) {\n            const newOpsLatestSeq = outstandingOps[outstandingOps.length - 1].sequenceNumber;\n            assert(\n                newOpsLatestSeq <= this.trackingSequenceNumber,\n                0x1a9 /* \"When loading base summary, expected outstanding ops <= tracking sequence number\" */,\n            );\n        }\n\n        return {\n            baseSummary: decodedSummary.baseSummary,\n            outstandingOps,\n        };\n    }\n\n    public recordChange(op: ISequencedDocumentMessage): void {\n        const lastOp = this.outstandingOps[this.outstandingOps.length - 1];\n        if (lastOp !== undefined) {\n            assert(\n                lastOp.sequenceNumber < op.sequenceNumber,\n                0x1aa /* Out of order change recorded */,\n            );\n        }\n        this.invalidate(op.sequenceNumber);\n        this.trackingSequenceNumber = op.sequenceNumber;\n        this.outstandingOps.push(op);\n    }\n\n    public invalidate(sequenceNumber: number): void {\n        if (sequenceNumber > this._changeSequenceNumber) {\n            this._changeSequenceNumber = sequenceNumber;\n        }\n    }\n\n    /**\n     * True if a change has been recorded with sequence number exceeding\n     * the latest successfully acked summary reference sequence number.\n     * False implies that the previous summary can be reused.\n     */\n    protected hasChanged(): boolean {\n        return this._changeSequenceNumber > this.referenceSequenceNumber;\n    }\n\n    public get latestSummary(): Readonly<SummaryNode> | undefined {\n        return this._latestSummary;\n    }\n\n    private readonly canReuseHandle: boolean;\n    private readonly throwOnError: boolean;\n    /**\n     * Sequence number of latest tracked op. This updates during recordChange,\n     * but not for invalidate since we don't have the op. If this drifts from\n     * changeSequenceNumber and we try to create a differential summary we assert.\n     */\n    private trackingSequenceNumber: number;\n\n    /**\n     * Do not call constructor directly.\n     * Use createRootSummarizerNode to create root node, or createChild to create child nodes.\n     */\n    public constructor(\n        protected readonly defaultLogger: ITelemetryLogger,\n        private readonly summarizeInternalFn: SummarizeInternalFn,\n        config: ISummarizerNodeConfig,\n        private _changeSequenceNumber: number,\n        /** Undefined means created without summary */\n        private _latestSummary?: SummaryNode,\n        private readonly initialSummary?: IInitialSummary,\n        protected wipSummaryLogger?: ITelemetryLogger,\n    ) {\n        this.canReuseHandle = config.canReuseHandle ?? true;\n        // BUGBUG: Seeing issues with differential summaries.\n        // this will disable them, and throw instead\n        // while we continue to investigate\n        this.throwOnError = true; // config.throwOnFailure ?? false;\n        this.trackingSequenceNumber = this._changeSequenceNumber;\n    }\n\n    public createChild(\n        /** Summarize function */\n        summarizeInternalFn: SummarizeInternalFn,\n        /** Initial id or path part of this node */\n        id: string,\n        /**\n         * Information needed to create the node.\n         * If it is from a base summary, it will assert that a summary has been seen.\n         * Attach information if it is created from an attach op.\n         */\n        createParam: CreateChildSummarizerNodeParam,\n        config: ISummarizerNodeConfig = {},\n    ): ISummarizerNode {\n        assert(!this.children.has(id), 0x1ab /* \"Create SummarizerNode child already exists\" */);\n\n        const createDetails: ICreateChildDetails = this.getCreateDetailsForChild(id, createParam);\n        const child = new SummarizerNode(\n            this.defaultLogger,\n            summarizeInternalFn,\n            config,\n            createDetails.changeSequenceNumber,\n            createDetails.latestSummary,\n            createDetails.initialSummary,\n            this.wipSummaryLogger,\n        );\n\n        // There may be additional state that has to be updated in this child. For example, if a summary is being\n        // tracked, the child's summary tracking state needs to be updated too.\n        this.maybeUpdateChildState(child);\n\n        this.children.set(id, child);\n        return child;\n    }\n\n    public getChild(id: string): ISummarizerNode | undefined {\n        return this.children.get(id);\n    }\n\n    /**\n     * Returns the details needed to create a child node.\n     * @param id - Initial id or path part of the child node.\n     * @param createParam - Information needed to create the node.\n     * @returns the details needed to create the child node.\n     */\n    protected getCreateDetailsForChild(id: string, createParam: CreateChildSummarizerNodeParam): ICreateChildDetails {\n        let initialSummary: IInitialSummary | undefined;\n        let latestSummary: SummaryNode | undefined;\n        let changeSequenceNumber: number;\n\n        const parentLatestSummary = this._latestSummary;\n        switch (createParam.type) {\n            case CreateSummarizerNodeSource.FromAttach: {\n                if (\n                    parentLatestSummary !== undefined\n                    && createParam.sequenceNumber <= parentLatestSummary.referenceSequenceNumber\n                ) {\n                    // Prioritize latest summary if it was after this node was attached.\n                    latestSummary = parentLatestSummary.createForChild(id);\n                } else {\n                    const summary = convertToSummaryTree(createParam.snapshot) as ISummaryTreeWithStats;\n                    initialSummary = {\n                        sequenceNumber: createParam.sequenceNumber,\n                        id,\n                        summary,\n                    };\n                }\n                changeSequenceNumber = createParam.sequenceNumber;\n                break;\n            }\n            case CreateSummarizerNodeSource.FromSummary: {\n                if (this.initialSummary === undefined) {\n                    assert(\n                        !!parentLatestSummary,\n                        0x1ac /* \"Cannot create child from summary if parent does not have latest summary\" */);\n                }\n                // fallthrough to local\n            }\n            case CreateSummarizerNodeSource.Local: {\n                const parentInitialSummary = this.initialSummary;\n                if (parentInitialSummary !== undefined) {\n                    let childSummary: SummaryObject | undefined;\n                    if (parentInitialSummary.summary !== undefined) {\n                        const { childrenTree } = parseSummaryTreeForSubtrees(parentInitialSummary.summary.summary);\n                        assert(\n                            childrenTree.type === SummaryType.Tree,\n                            0x1d6 /* \"Parent summary object is not a tree\" */,\n                        );\n                        childSummary = childrenTree.tree[id];\n                    }\n                    if (createParam.type === CreateSummarizerNodeSource.FromSummary) {\n                        // Locally created would not have differential subtree.\n                        assert(!!childSummary, 0x1ad /* \"Missing child summary tree\" */);\n                    }\n                    let childSummaryWithStats: ISummaryTreeWithStats | undefined;\n                    if (childSummary !== undefined) {\n                        assert(\n                            childSummary.type === SummaryType.Tree,\n                            0x1ae /* \"Child summary object is not a tree\" */,\n                        );\n                        childSummaryWithStats = {\n                            summary: childSummary,\n                            stats: calculateStats(childSummary),\n                        };\n                    }\n                    initialSummary = {\n                        sequenceNumber: parentInitialSummary.sequenceNumber,\n                        id,\n                        summary: childSummaryWithStats,\n                    };\n                }\n                latestSummary = parentLatestSummary?.createForChild(id);\n                changeSequenceNumber = parentLatestSummary?.referenceSequenceNumber ?? -1;\n                break;\n            }\n            default: {\n                const type = (createParam as unknown as CreateChildSummarizerNodeParam).type;\n                unreachableCase(createParam, `Unexpected CreateSummarizerNodeSource: ${type}`);\n            }\n        }\n\n        return {\n            initialSummary,\n            latestSummary,\n            changeSequenceNumber,\n        };\n    }\n\n    /**\n     * Updates the state of the child if required. For example, if a summary is currently being  tracked, the child's\n     * summary tracking state needs to be updated too.\n     * @param child - The child node whose state is to be updated.\n     */\n    protected maybeUpdateChildState(child: SummarizerNode) {\n        // If we are tracking a summary, this child was created after the tracking started. So, we need to update the\n        // child's tracking state as well.\n        if (this.isTrackingInProgress()) {\n            child.wipReferenceSequenceNumber = this.wipReferenceSequenceNumber;\n        }\n    }\n\n    /**\n     * Tells whether summary tracking is in progress. True if \"startSummary\" API is called before summarize.\n     */\n    protected isTrackingInProgress(): boolean {\n        return this.wipReferenceSequenceNumber !== undefined;\n    }\n}\n\n/**\n * Creates a root summarizer node.\n * @param logger - Logger to use within SummarizerNode\n * @param summarizeInternalFn - Function to generate summary\n * @param changeSequenceNumber - Sequence number of latest change to new node/subtree\n * @param referenceSequenceNumber - Reference sequence number of last acked summary,\n * or undefined if not loaded from summary\n * @param config - Configure behavior of summarizer node\n */\nexport const createRootSummarizerNode = (\n    logger: ITelemetryLogger,\n    summarizeInternalFn: SummarizeInternalFn,\n    changeSequenceNumber: number,\n    referenceSequenceNumber: number | undefined,\n    config: ISummarizerNodeConfig = {},\n): IRootSummarizerNode => new SummarizerNode(\n        logger,\n        summarizeInternalFn,\n        config,\n        changeSequenceNumber,\n        referenceSequenceNumber === undefined ? undefined : SummaryNode.createForRoot(referenceSequenceNumber),\n    );\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { assert, LazyPromise } from \"@fluidframework/common-utils\";\nimport { cloneGCData } from \"@fluidframework/garbage-collector\";\nimport { ISnapshotTree } from \"@fluidframework/protocol-definitions\";\nimport {\n    CreateChildSummarizerNodeParam,\n    gcBlobKey,\n    IGarbageCollectionData,\n    IGarbageCollectionDetailsBase,\n    IGarbageCollectionSummaryDetails,\n    ISummarizeInternalResult,\n    ISummarizeResult,\n    ISummarizerNodeConfigWithGC,\n    ISummarizerNodeWithGC,\n    SummarizeInternalFn,\n    ITelemetryContext,\n} from \"@fluidframework/runtime-definitions\";\nimport { ReadAndParseBlob } from \"../utils\";\nimport { SummarizerNode } from \"./summarizerNode\";\nimport {\n    EscapedPath,\n    ICreateChildDetails,\n    IInitialSummary,\n    ISummarizerNodeRootContract,\n    SummaryNode,\n} from \"./summarizerNodeUtils\";\n\nexport interface IRootSummarizerNodeWithGC extends ISummarizerNodeWithGC, ISummarizerNodeRootContract {}\n\n// Extend SummaryNode to add used routes tracking to it.\nclass SummaryNodeWithGC extends SummaryNode {\n    constructor(\n        public readonly serializedUsedRoutes: string,\n        summary: {\n            readonly referenceSequenceNumber: number;\n            readonly basePath: EscapedPath | undefined;\n            readonly localPath: EscapedPath;\n            additionalPath?: EscapedPath;\n        },\n    ) {\n        super(summary);\n    }\n}\n\n/**\n * Extends the functionality of SummarizerNode to manage this node's garbage collection data:\n * - Adds a new API `getGCData` to return GC data of this node.\n * - Caches the result of `getGCData` to be used if nothing changes between summaries.\n * - Manages the used routes of this node. These are used to identify if this node is referenced in the document\n *   and to determine if the node's used state changed since last summary.\n * - Adds trackState param to summarize. If trackState is false, it bypasses the SummarizerNode and calls\n *   directly into summarizeInternal method.\n */\nexport class SummarizerNodeWithGC extends SummarizerNode implements IRootSummarizerNodeWithGC {\n    // Tracks the work-in-progress used routes during summary.\n    private wipSerializedUsedRoutes: string | undefined;\n\n    // This is the last known used routes of this node as seen by the server as part of a summary.\n    private referenceUsedRoutes: string[] | undefined;\n\n    // The base GC details of this node used to initialize the GC state.\n    private readonly baseGCDetailsP: LazyPromise<IGarbageCollectionDetailsBase>;\n\n    // Keeps track of whether we have loaded the base details to ensure that we on;y do it once.\n    private baseGCDetailsLoaded: boolean = false;\n\n    private gcData: IGarbageCollectionData | undefined;\n\n    // Set used routes to have self route by default. This makes the node referenced by default. This is done to ensure\n    // that this node is not marked as collected when running GC has been disabled. Once, the option to disable GC is\n    // removed (from runGC flag in IContainerRuntimeOptions), this should be changed to be have no routes by default.\n    private usedRoutes: string[] = [\"\"];\n\n    // If this node is marked as unreferenced, the time when it marked as such.\n    private unreferencedTimestampMs: number | undefined;\n\n    // True if GC is disabled for this node. If so, do not track GC specific state for a summary.\n    private readonly gcDisabled: boolean;\n\n    /**\n     * Do not call constructor directly.\n     * Use createRootSummarizerNodeWithGC to create root node, or createChild to create child nodes.\n     */\n    public constructor(\n        logger: ITelemetryLogger,\n        private readonly summarizeFn: (\n            fullTree: boolean,\n            trackState: boolean,\n            telemetryContext?: ITelemetryContext,\n        ) => Promise<ISummarizeInternalResult>,\n        config: ISummarizerNodeConfigWithGC,\n        changeSequenceNumber: number,\n        /** Undefined means created without summary */\n        latestSummary?: SummaryNode,\n        initialSummary?: IInitialSummary,\n        wipSummaryLogger?: ITelemetryLogger,\n        private readonly getGCDataFn?: (fullGC?: boolean) => Promise<IGarbageCollectionData>,\n        getBaseGCDetailsFn?: () => Promise<IGarbageCollectionDetailsBase>,\n    ) {\n        super(\n            logger,\n            async (fullTree: boolean, _trackState: boolean, telemetryContext?: ITelemetryContext) =>\n                summarizeFn(fullTree, true /* trackState */, telemetryContext),\n            config,\n            changeSequenceNumber,\n            latestSummary,\n            initialSummary,\n            wipSummaryLogger,\n        );\n\n        this.gcDisabled = config.gcDisabled === true;\n\n        this.baseGCDetailsP = new LazyPromise(async () => {\n            return (await getBaseGCDetailsFn?.()) ?? { usedRoutes: [] };\n        });\n    }\n\n    /**\n     * @deprecated - Renamed to getBaseGCDetails.\n     */\n    public getGCSummaryDetails(): IGarbageCollectionSummaryDetails {\n        return this.getBaseGCDetails();\n    }\n\n    // Returns the GC details to be added to this node's summary and is used to initialize new nodes' GC state.\n    public getBaseGCDetails(): IGarbageCollectionDetailsBase {\n        return {\n            gcData: this.gcData,\n            usedRoutes: this.usedRoutes,\n            unrefTimestamp: this.unreferencedTimestampMs,\n        };\n    }\n\n    /**\n     * Loads state from this node's initial GC summary details. This contains the following data from the last summary\n     * seen by the server for this client:\n     * - usedRoutes: This is used to figure out if the used state of this node changed since last summary.\n     * - gcData: The garbage collection data of this node that is required for running GC.\n     */\n    private async loadBaseGCDetails() {\n        const baseGCDetails = await this.baseGCDetailsP;\n\n        // Possible race - If there were parallel calls to loadBaseGCDetails, we want to make sure that we only update\n        // the state from the base details only once.\n        if (this.baseGCDetailsLoaded) {\n            return;\n        }\n        this.baseGCDetailsLoaded = true;\n\n        // If the GC details has GC data, initialize our GC data from it.\n        if (baseGCDetails.gcData !== undefined) {\n            this.gcData = cloneGCData(baseGCDetails.gcData);\n        }\n        // Sort the used routes because we compare them with the current used routes to check if they changed between\n        // summaries. Both are sorted so that the order of elements is the same.\n        this.referenceUsedRoutes = baseGCDetails.usedRoutes?.sort();\n        this.unreferencedTimestampMs = baseGCDetails.unrefTimestamp;\n    }\n\n    public async summarize(\n        fullTree: boolean,\n        trackState: boolean = true,\n        telemetryContext?: ITelemetryContext,\n    ): Promise<ISummarizeResult> {\n        // If GC is not disabled and we are tracking a summary, GC should have run and updated the used routes for this\n        // summary by calling updateUsedRoutes which sets wipSerializedUsedRoutes.\n        if (!this.gcDisabled && this.isTrackingInProgress()) {\n            assert(this.wipSerializedUsedRoutes !== undefined,\n                0x1b1 /* \"wip used routes should be set if tracking a summary\" */);\n        }\n\n        // If trackState is true, get summary from base summarizer node which tracks summary state.\n        // If trackState is false, get summary from summarizeInternal.\n        return trackState\n            ? super.summarize(fullTree, true /* trackState */, telemetryContext)\n            : this.summarizeFn(fullTree, trackState, telemetryContext);\n    }\n\n    /**\n     * Returns the GC data of this node. If nothing has changed since last summary, it tries to reuse the data from\n     * the previous summary. Else, it gets new GC data from the underlying Fluid object.\n     * @param fullGC - true to bypass optimizations and force full generation of GC data.\n     */\n    public async getGCData(fullGC: boolean = false): Promise<IGarbageCollectionData> {\n        assert(!this.gcDisabled, 0x1b2 /* \"Getting GC data should not be called when GC is disabled!\" */);\n        assert(this.getGCDataFn !== undefined, 0x1b3 /* \"GC data cannot be retrieved without getGCDataFn\" */);\n\n        // Load GC details from the initial summary, if not already loaded. If this is the first time this function is\n        // called and the node's data has not changed since last summary, the GC data in initial details is returned.\n        await this.loadBaseGCDetails();\n\n        // If there is no new data since last summary and we have GC data from the previous run, return it. We may not\n        // have data from previous GC run for clients with older summary format before GC was added. They won't have\n        // GC details in their initial summary.\n        if (!fullGC && !this.hasDataChanged() && this.gcData !== undefined) {\n            return cloneGCData(this.gcData);\n        }\n\n        const gcData = await this.getGCDataFn(fullGC);\n        this.gcData = cloneGCData(gcData);\n        return gcData;\n    }\n\n    /**\n     * Called during the start of a summary. Updates the work-in-progress used routes.\n     */\n    public startSummary(referenceSequenceNumber: number, summaryLogger: ITelemetryLogger) {\n        // If GC is disabled, skip setting wip used routes since we should not track GC state.\n        if (!this.gcDisabled) {\n            assert(\n                this.wipSerializedUsedRoutes === undefined,\n                0x1b4 /* \"We should not already be tracking used routes when to track a new summary\" */);\n        }\n        super.startSummary(referenceSequenceNumber, summaryLogger);\n    }\n\n    /**\n     * Called after summary has been uploaded to the server. Add the work-in-progress state to the pending\n     * summary queue. We track this until we get an ack from the server for this summary.\n     */\n    protected completeSummaryCore(\n        proposalHandle: string,\n        parentPath: EscapedPath | undefined,\n        parentSkipRecursion: boolean,\n    ) {\n        let wipSerializedUsedRoutes: string | undefined;\n        // If GC is disabled, don't set wip used routes.\n        if (!this.gcDisabled) {\n            wipSerializedUsedRoutes = this.wipSerializedUsedRoutes;\n            assert(wipSerializedUsedRoutes !== undefined, 0x1b5 /* \"We should have been tracking used routes\" */);\n        }\n\n        super.completeSummaryCore(proposalHandle, parentPath, parentSkipRecursion);\n\n        // If GC is disabled, skip setting pending summary with GC state.\n        if (!this.gcDisabled) {\n            const summaryNode = this.pendingSummaries.get(proposalHandle);\n            if (summaryNode !== undefined) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const summaryNodeWithGC = new SummaryNodeWithGC(wipSerializedUsedRoutes!, summaryNode);\n                this.pendingSummaries.set(proposalHandle, summaryNodeWithGC);\n            }\n        }\n    }\n\n    /**\n     * Clears the work-in-progress state.\n     */\n    public clearSummary() {\n        this.wipSerializedUsedRoutes = undefined;\n        super.clearSummary();\n    }\n\n    /**\n     * Called when we get an ack from the server for a summary we sent. Update the reference state of this node\n     * from the state in the pending summary queue.\n     */\n    protected refreshLatestSummaryFromPending(\n        proposalHandle: string,\n        referenceSequenceNumber: number,\n    ): void {\n        // If GC is disabled, skip setting referenced used routes since we are not tracking GC state.\n        if (!this.gcDisabled) {\n            const summaryNode = this.pendingSummaries.get(proposalHandle) as SummaryNodeWithGC;\n            if (summaryNode !== undefined) {\n                this.referenceUsedRoutes = JSON.parse(summaryNode.serializedUsedRoutes);\n            }\n        }\n\n        return super.refreshLatestSummaryFromPending(proposalHandle, referenceSequenceNumber);\n    }\n\n    /**\n     * Called when we need to upload the reference state from the given summary. Read the GC blob and get the state\n     * to upload from it.\n     */\n    protected async refreshLatestSummaryFromSnapshot(\n        referenceSequenceNumber: number,\n        snapshotTree: ISnapshotTree,\n        basePath: EscapedPath | undefined,\n        localPath: EscapedPath,\n        correlatedSummaryLogger: ITelemetryLogger,\n        readAndParseBlob: ReadAndParseBlob,\n    ): Promise<void> {\n        // If GC is disabled, skip setting referenced used routes since we are not tracking GC state.\n        if (!this.gcDisabled) {\n            const gcDetailsBlob = snapshotTree.blobs[gcBlobKey];\n            if (gcDetailsBlob !== undefined) {\n                const gcDetails = await readAndParseBlob<IGarbageCollectionDetailsBase>(gcDetailsBlob);\n\n                // Possible re-entrancy. If we have already seen a summary later than this one, ignore it.\n                if (this.referenceSequenceNumber >= referenceSequenceNumber) {\n                    return;\n                }\n\n                this.referenceUsedRoutes = gcDetails.usedRoutes;\n            }\n        }\n\n        return super.refreshLatestSummaryFromSnapshot(\n            referenceSequenceNumber,\n            snapshotTree,\n            basePath,\n            localPath,\n            correlatedSummaryLogger,\n            readAndParseBlob,\n        );\n    }\n\n    /**\n     * Override the createChild method to return an instance of SummarizerNodeWithGC.\n     */\n    public createChild(\n        /** Summarize function */\n        summarizeInternalFn: SummarizeInternalFn,\n        /** Initial id or path part of this node */\n        id: string,\n        /**\n         * Information needed to create the node.\n         * If it is from a base summary, it will assert that a summary has been seen.\n         * Attach information if it is created from an attach op.\n         */\n        createParam: CreateChildSummarizerNodeParam,\n        config: ISummarizerNodeConfigWithGC = {},\n        getGCDataFn?: (fullGC?: boolean) => Promise<IGarbageCollectionData>,\n        getBaseGCDetailsFn?: () => Promise<IGarbageCollectionDetailsBase>,\n    ): ISummarizerNodeWithGC {\n        assert(!this.children.has(id), 0x1b6 /* \"Create SummarizerNode child already exists\" */);\n\n        const createDetails: ICreateChildDetails = this.getCreateDetailsForChild(id, createParam);\n        const child = new SummarizerNodeWithGC(\n            this.defaultLogger,\n            summarizeInternalFn,\n            {\n                ...config,\n                // Propagate our gcDisabled state to the child if its not explicity specified in child's config.\n                gcDisabled: config.gcDisabled ?? this.gcDisabled,\n            },\n            createDetails.changeSequenceNumber,\n            createDetails.latestSummary,\n            createDetails.initialSummary,\n            this.wipSummaryLogger,\n            getGCDataFn,\n            getBaseGCDetailsFn,\n        );\n\n        // There may be additional state that has to be updated in this child. For example, if a summary is being\n        // tracked, the child's summary tracking state needs to be updated too.\n        this.maybeUpdateChildState(child);\n\n        this.children.set(id, child);\n        return child;\n    }\n\n    /**\n     * Deletes the child node with the given id.\n     */\n    public deleteChild(id: string): void {\n        this.children.delete(id);\n    }\n\n    /**\n     * Override the getChild method to return an instance of SummarizerNodeWithGC.\n     */\n    public getChild(id: string): ISummarizerNodeWithGC | undefined {\n        return this.children.get(id) as SummarizerNodeWithGC;\n    }\n\n    public isReferenced(): boolean {\n        return this.usedRoutes.includes(\"\") || this.usedRoutes.includes(\"/\");\n    }\n\n    public updateUsedRoutes(usedRoutes: string[], gcTimestamp?: number) {\n        // Sort the given routes before updating. This will ensure that the routes compared in hasUsedStateChanged()\n        // are in the same order.\n        this.usedRoutes = usedRoutes.sort();\n\n        // If GC is not disabled and we are tracking a summary, update the work-in-progress used routes so that it can\n        // be tracked for this summary.\n        if (!this.gcDisabled && this.isTrackingInProgress()) {\n            this.wipSerializedUsedRoutes = JSON.stringify(this.usedRoutes);\n        }\n\n        if (this.isReferenced()) {\n            this.unreferencedTimestampMs = undefined;\n            return;\n        }\n\n        // If this node just became unreferenced, update its unreferencedTimestampMs.\n        if (this.unreferencedTimestampMs === undefined) {\n            this.unreferencedTimestampMs = gcTimestamp;\n        }\n    }\n\n    /**\n     * Override the hasChanged method. If this node data or its used state changed, the node is considered changed.\n     */\n    protected hasChanged(): boolean {\n        return this.hasDataChanged() || this.hasUsedStateChanged();\n    }\n\n    /**\n     * This tells whether the data in this node has changed or not.\n     */\n    private hasDataChanged(): boolean {\n        return super.hasChanged();\n    }\n\n    /**\n     * This tells whether the used state of this node has changed since last successful summary. If the used routes\n     * of this node changed, its used state is considered changed. Basically, if this node or any of its child nodes\n     * was previously used and became unused (or vice versa), its used state has changed.\n     */\n    private hasUsedStateChanged(): boolean {\n        // If GC is disabled, we are not tracking used state, return false.\n        if (this.gcDisabled) {\n            return false;\n        }\n\n        return this.referenceUsedRoutes === undefined ||\n            JSON.stringify(this.usedRoutes) !== JSON.stringify(this.referenceUsedRoutes);\n    }\n}\n\n/**\n * Creates a root summarizer node with GC functionality built-in.\n * @param logger - Logger to use within SummarizerNode\n * @param summarizeInternalFn - Function to generate summary\n * @param changeSequenceNumber - Sequence number of latest change to new node/subtree\n * @param referenceSequenceNumber - Reference sequence number of last acked summary,\n * or undefined if not loaded from summary\n * @param config - Configure behavior of summarizer node\n * @param getGCDataFn - Function to get the GC data of this node\n * @param baseGCDetailsP - Function to get the initial GC details of this node\n */\nexport const createRootSummarizerNodeWithGC = (\n    logger: ITelemetryLogger,\n    summarizeInternalFn: SummarizeInternalFn,\n    changeSequenceNumber: number,\n    referenceSequenceNumber: number | undefined,\n    config: ISummarizerNodeConfigWithGC = {},\n    getGCDataFn?: (fullGC?: boolean) => Promise<IGarbageCollectionData>,\n    getBaseGCDetailsFn?: () => Promise<IGarbageCollectionDetailsBase>,\n): IRootSummarizerNodeWithGC => new SummarizerNodeWithGC(\n    logger,\n    summarizeInternalFn,\n    config,\n    changeSequenceNumber,\n    referenceSequenceNumber === undefined ? undefined : SummaryNode.createForRoot(referenceSequenceNumber),\n    undefined /* initialSummary */,\n    undefined /* wipSummaryLogger */,\n    getGCDataFn,\n    getBaseGCDetailsFn,\n);\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { IRequest, IRequestHeader } from \"@fluidframework/core-interfaces\";\n\n/**\n * The Request Parser takes an IRequest provides parsing and sub request creation\n */\nexport class RequestParser implements IRequest {\n    /**\n     * Splits the path of the url and decodes each path part\n     * @param url - the url to get path parts of\n     */\n    public static getPathParts(url: string): readonly string[] {\n        const queryStartIndex = url.indexOf(\"?\");\n        return url\n            .substring(0, queryStartIndex < 0 ? url.length : queryStartIndex)\n            .split(\"/\")\n            .reduce<string[]>(\n                (pv, cv) => {\n                    if (cv !== undefined && cv.length > 0) {\n                        pv.push(decodeURIComponent(cv));\n                    }\n                    return pv;\n                },\n                []);\n    }\n\n    private requestPathParts: readonly string[] | undefined;\n    public readonly query: string;\n\n    public static create(request: Readonly<IRequest>) {\n        // Perf optimizations.\n        if (request instanceof RequestParser) {\n            return request;\n        }\n        return new RequestParser(request);\n    }\n\n    protected constructor(private readonly request: Readonly<IRequest>) {\n        const queryStartIndex = this.request.url.indexOf(\"?\");\n        if (queryStartIndex >= 0) {\n            this.query = this.request.url.substring(queryStartIndex);\n        } else {\n            this.query = \"\";\n        }\n    }\n\n    public get url(): string {\n        return this.request.url;\n    }\n\n    public get headers(): IRequestHeader | undefined {\n        return this.request.headers;\n    }\n\n    /**\n     * Returns the decoded path parts of the request's url\n     */\n    public get pathParts(): readonly string[] {\n        if (this.requestPathParts === undefined) {\n            this.requestPathParts = RequestParser.getPathParts(this.url);\n        }\n        return this.requestPathParts;\n    }\n\n    /**\n     * Returns true if it's a terminating path, i.e. no more elements after `elements` entries and empty query.\n     * @param elements - number of elements in path\n     */\n    public isLeaf(elements: number) {\n        return this.query === \"\" && this.pathParts.length === elements;\n    }\n\n    /**\n     * Creates a sub request starting at a specific path part of this request's url\n     * The sub request url always has a leading slash, and always include query params if original url has any\n     * e.g. original url is /a/b/?queryParams, createSubRequest(0) is /a/b/?queryParams\n     * createSubRequest(1) is /b/?queryParams\n     * createSubRequest(2) is /?queryParams\n     * createSubRequest(n) where n is bigger than parts length, e.g. 2, or n is less than 0 will throw an exception\n     *\n     * note: query params are not counted towards path parts.\n     *\n     * @param startingPathIndex - The index of the first path part of the sub request\n     */\n    public createSubRequest(startingPathIndex: number): IRequest {\n        const pathLen = this.pathParts.length;\n        if (startingPathIndex < 0 || startingPathIndex > pathLen) {\n            throw new Error(\"incorrect sub-request\");\n        }\n        if (startingPathIndex === pathLen && this.url.includes(\"?\")) {\n            return {\n                url: `/${this.query}`,\n                headers: this.headers,\n            };\n        }\n        const path = `/${this.pathParts.slice(startingPathIndex).join(\"/\")}`;\n        return {\n            url: this.query === \"\" ? path : `${path}/${this.query}`,\n            headers: this.headers,\n        };\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IDocumentAttributes, ISnapshotTree } from \"@fluidframework/protocol-definitions\";\n\n/** Reads a blob from storage and parses it from JSON. */\nexport type ReadAndParseBlob = <T>(id: string) => Promise<T>;\n\n/**\n * Fetches the sequence number of the snapshot tree by examining the protocol.\n * @param tree - snapshot tree to examine\n * @param readAndParseBlob - function to read blob contents from storage\n * and parse the result from JSON.\n */\n export async function seqFromTree(\n    tree: ISnapshotTree,\n    readAndParseBlob: ReadAndParseBlob,\n): Promise<number> {\n    const attributesHash = tree.trees[\".protocol\"].blobs.attributes;\n    const attrib = await readAndParseBlob<IDocumentAttributes>(attributesHash);\n    return attrib.sequenceNumber;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    IFluidHandleContext,\n    IRequest,\n    IResponse,\n} from \"@fluidframework/core-interfaces\";\nimport { AttachState } from \"@fluidframework/container-definitions\";\nimport { generateHandleContextPath } from \"@fluidframework/runtime-utils\";\nimport { ContainerRuntime } from \"./containerRuntime\";\n\nexport class ContainerFluidHandleContext implements IFluidHandleContext {\n    public get IFluidHandleContext() { return this; }\n    public readonly absolutePath: string;\n\n    /**\n     * Creates a new ContainerFluidHandleContext.\n     * @param path - The path to this handle relative to the routeContext.\n     * @param runtime - The IRuntime object this context represents.\n     * @param routeContext - The parent IFluidHandleContext that has a route to this handle.\n     */\n    constructor(\n        public readonly path: string,\n        private readonly runtime: ContainerRuntime,\n        public readonly routeContext?: IFluidHandleContext,\n    ) {\n        this.absolutePath = generateHandleContextPath(path, this.routeContext);\n    }\n\n    public attachGraph(): void {\n        throw new Error(\"can't attach container runtime form within container!\");\n    }\n\n    public get isAttached() {\n        return this.runtime.attachState !== AttachState.Detached;\n    }\n\n    public async resolveHandle(request: IRequest): Promise<IResponse> {\n        return this.runtime.resolveHandle(request);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { UsageError } from \"@fluidframework/container-utils\";\nimport {\n    FluidDataStoreRegistryEntry,\n    IFluidDataStoreRegistry,\n    NamedFluidDataStoreRegistryEntries,\n} from \"@fluidframework/runtime-definitions\";\n\nexport class FluidDataStoreRegistry implements IFluidDataStoreRegistry {\n    private readonly map: Map<string, FluidDataStoreRegistryEntry | Promise<FluidDataStoreRegistryEntry>>;\n\n    public get IFluidDataStoreRegistry() { return this; }\n\n    constructor(namedEntries: NamedFluidDataStoreRegistryEntries) {\n        this.map = new Map();\n        for (const entry of namedEntries) {\n            if (this.map.has(entry[0])) {\n                throw new UsageError(\"Duplicate entry names exist\");\n            }\n            this.map.set(entry[0], entry[1]);\n        }\n    }\n\n    public async get(name: string): Promise<FluidDataStoreRegistryEntry | undefined> {\n        if (this.map.has(name)) {\n            return this.map.get(name);\n        }\n\n        return undefined;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IEvent, IEventProvider, ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { TypedEventEmitter } from \"@fluidframework/common-utils\";\nimport { IClientDetails, MessageType } from \"@fluidframework/protocol-definitions\";\nimport { IOrderedClientElection, ISerializedElection, ITrackedClient } from \"./orderedClientElection\";\nimport { ISummaryCollectionOpEvents } from \"./summaryCollection\";\n\nexport const summarizerClientType = \"summarizer\";\n\nexport interface ISummarizerClientElectionEvents extends IEvent {\n    (event: \"electedSummarizerChanged\", handler: () => void): void;\n}\n\nexport interface ISummarizerClientElection extends IEventProvider<ISummarizerClientElectionEvents> {\n    readonly electedClientId: string | undefined;\n    readonly electedParentId: string | undefined;\n}\n\n/**\n * This class encapsulates logic around tracking the elected summarizer client.\n * It will handle updating the elected client when a summary ack hasn't been seen\n * for some configured number of ops.\n */\nexport class SummarizerClientElection\n    extends TypedEventEmitter<ISummarizerClientElectionEvents>\n    implements ISummarizerClientElection {\n    /**\n     * Used to calculate number of ops since last summary ack for the current elected client.\n     * This will be undefined if there is no elected summarizer, or no summary ack has been\n     * observed since this client was elected.\n     * When a summary ack comes in, this will be set to the sequence number of the summary ack.\n     */\n    private lastSummaryAckSeqForClient: number | undefined;\n    /**\n     * Used to prevent excess logging by recording the sequence number that we last reported at,\n     * and making sure we don't report another event to telemetry. If things work as intended,\n     * this is not needed, otherwise it could report an event on every op in worst case scenario.\n     */\n    private lastReportedSeq = 0;\n\n    public get electedClientId() {\n        return this.clientElection.electedClient?.clientId;\n    }\n    public get electedParentId() {\n        return this.clientElection.electedParent?.clientId;\n    }\n\n    constructor(\n        private readonly logger: ITelemetryLogger,\n        private readonly summaryCollection: IEventProvider<ISummaryCollectionOpEvents>,\n        public readonly clientElection: IOrderedClientElection,\n        private readonly maxOpsSinceLastSummary: number,\n        private readonly electionEnabled: boolean,\n    ) {\n        super();\n        // On every inbound op, if enough ops pass without seeing a summary ack (per elected client),\n        // elect a new client and log to telemetry.\n        this.summaryCollection.on(\"default\", ({ sequenceNumber }) => {\n            const electedClientId = this.electedClientId;\n            if (electedClientId === undefined) {\n                // Reset election if no elected client, but eligible clients are connected.\n                // This should be uncommon, but is possible if the initial state of the\n                // ordered client election contains an undefined client id or one not found\n                // in the quorum (the latter would already log an error).\n                if (this.clientElection.eligibleCount > 0) {\n                    this.clientElection.resetElectedClient(sequenceNumber);\n                }\n                return;\n            }\n            let electionSequenceNumber = this.clientElection.electionSequenceNumber;\n            const opsWithoutSummary = sequenceNumber - (this.lastSummaryAckSeqForClient ?? electionSequenceNumber);\n            if (opsWithoutSummary > this.maxOpsSinceLastSummary) {\n                // Log and elect a new summarizer client.\n                const opsSinceLastReport = sequenceNumber - this.lastReportedSeq;\n                if (opsSinceLastReport > this.maxOpsSinceLastSummary) {\n                    this.logger.sendErrorEvent({\n                        eventName: \"ElectedClientNotSummarizing\",\n                        electedClientId,\n                        lastSummaryAckSeqForClient: this.lastSummaryAckSeqForClient,\n                        electionSequenceNumber,\n                        nextElectedClientId: this.clientElection.peekNextElectedClient()?.clientId,\n                        electionEnabled: this.electionEnabled,\n                    });\n                    this.lastReportedSeq = sequenceNumber;\n                }\n\n                if (this.electionEnabled) {\n                    const previousParentId = this.electedParentId;\n                    this.clientElection.incrementElectedClient(sequenceNumber);\n\n                    // Verify that state incremented as expected. This should be reliable,\n                    // since all of OrderedClientElection is synchronous.\n                    electionSequenceNumber = this.clientElection.electionSequenceNumber;\n                    if (sequenceNumber > (this.lastSummaryAckSeqForClient ?? electionSequenceNumber)) {\n                        if (opsSinceLastReport > this.maxOpsSinceLastSummary) {\n                            this.logger.sendErrorEvent({\n                                eventName: \"UnexpectedElectionSequenceNumber\",\n                                // Expected to be undefined\n                                lastSummaryAckSeqForClient: this.lastSummaryAckSeqForClient,\n                                // Expected to be same as op sequenceNumber\n                                electionSequenceNumber,\n                                sequenceNumber,\n                                previousClientId: electedClientId,\n                                previousParentId,\n                                electedParentId: this.electedParentId,\n                                electedClientId: this.electedClientId,\n                                opsSinceLastReport,\n                                maxOpsSinceLastSummary,\n                            });\n                        }\n                    }\n                }\n            }\n        });\n\n        // When a summary ack comes in, reset our op seq counter.\n        this.summaryCollection.on(MessageType.SummaryAck, (op) => {\n            this.lastSummaryAckSeqForClient = op.sequenceNumber;\n        });\n\n        // Use oldest client election for unanimously and deterministically deciding\n        // which client should summarize.\n        this.clientElection.on(\"election\", (client, sequenceNumber) => {\n            this.lastSummaryAckSeqForClient = undefined;\n            if (client === undefined && this.clientElection.eligibleCount > 0) {\n                // If no client is valid for election, reset to the oldest again.\n                // Also make extra sure not to get stuck in an infinite loop here:\n                // If there are no eligible clients, just wait until a client joins\n                // and will be auto-elected.\n                this.clientElection.resetElectedClient(sequenceNumber);\n            }\n            // Election can trigger a change in SummaryManager state.\n            this.emit(\"electedSummarizerChanged\");\n        });\n    }\n\n    public serialize(): ISerializedElection {\n        const { electedClientId, electedParentId, electionSequenceNumber } = this.clientElection.serialize();\n        return {\n            electedClientId,\n            electedParentId,\n            electionSequenceNumber: this.lastSummaryAckSeqForClient ?? electionSequenceNumber,\n        };\n    }\n\n    public static isClientEligible(client: ITrackedClient): boolean {\n        const details = client.client.details;\n        if (details === undefined) {\n            // Very old clients back-compat\n            return true;\n        }\n        return SummarizerClientElection.clientDetailsPermitElection(details);\n    }\n\n    public static readonly clientDetailsPermitElection = (details: IClientDetails): boolean =>\n        details.capabilities.interactive || details.type === summarizerClientType;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    IFluidHandle,\n    IFluidHandleContext,\n    FluidObject,\n} from \"@fluidframework/core-interfaces\";\nimport { generateHandleContextPath } from \"@fluidframework/runtime-utils\";\n\nexport class FluidObjectHandle<T extends FluidObject = FluidObject> implements IFluidHandle {\n    private readonly pendingHandlesToMakeVisible: Set<IFluidHandle> = new Set();\n    public readonly absolutePath: string;\n\n    public get IFluidHandle(): IFluidHandle { return this; }\n\n    public get isAttached(): boolean {\n        return this.routeContext.isAttached;\n    }\n\n    /**\n     * Tells whether the object of this handle is visible in the container locally or globally.\n     */\n    private get visible(): boolean {\n        /**\n         * If the object of this handle is attached, it is visible in the container. Ideally, checking local visibility\n         * should be enough for a handle. However, there are scenarios where the object becomes locally visible but the\n         * handle does not know this - This will happen is attachGraph is never called on the handle. Couple of examples\n         * where this can happen:\n         * 1. Handles to DDS other than the default handle won't know if the DDS becomes visible after the handle was\n         *    created.\n         * 2. Handles to root data stores will never know that it was visible because the handle will not be stores in\n         *    another DDS and so, attachGraph will never be called on it.\n         */\n        return this.isAttached || this.locallyVisible;\n    }\n\n    // Tracks whether this handle is locally visible in the container.\n    private locallyVisible: boolean = false;\n\n    /**\n     * Creates a new FluidObjectHandle.\n     * @param value - The FluidObject object this handle is for.\n     * @param path - The path to this handle relative to the routeContext.\n     * @param routeContext - The parent IFluidHandleContext that has a route to this handle.\n     */\n    constructor(\n        protected readonly value: T,\n        public readonly path: string,\n        public readonly routeContext: IFluidHandleContext,\n    ) {\n        this.absolutePath = generateHandleContextPath(path, this.routeContext);\n    }\n\n    public async get(): Promise<any> {\n        return this.value;\n    }\n\n    public attachGraph(): void {\n        if (this.visible) {\n            return;\n        }\n\n        this.locallyVisible = true;\n        this.pendingHandlesToMakeVisible.forEach((handle) => {\n            handle.attachGraph();\n        });\n        this.pendingHandlesToMakeVisible.clear();\n        this.routeContext.attachGraph();\n    }\n\n    public bind(handle: IFluidHandle) {\n        // If this handle is visible, attach the graph of the incoming handle as well.\n        if (this.visible) {\n            handle.attachGraph();\n            return;\n        }\n        this.pendingHandlesToMakeVisible.add(handle);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { FluidObjectHandle } from \"@fluidframework/datastore\";\nimport { IFluidHandle } from \"@fluidframework/core-interfaces\";\n\n// TODO #2425 Expose Summarizer handle as FluidObjectHandle w/ tests\nexport class SummarizerHandle extends FluidObjectHandle {\n    public async get(): Promise<any> {\n        throw Error(\"Do not try to get a summarizer object from the handle. Reference it directly.\");\n    }\n\n    public attach(): void {\n        return;\n    }\n\n    public bind(handle: IFluidHandle) {\n        return;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { Timer } from \"@fluidframework/common-utils\";\nimport { ISummaryConfigurationHeuristics } from \"./containerRuntime\";\n\nimport {\n    ISummarizeHeuristicData,\n    ISummarizeHeuristicRunner,\n    ISummarizeAttempt,\n} from \"./summarizerTypes\";\nimport { SummarizeReason } from \"./summaryGenerator\";\n\n/** Simple implementation of class for tracking summarize heuristic data. */\nexport class SummarizeHeuristicData implements ISummarizeHeuristicData {\n    protected _lastAttempt: ISummarizeAttempt;\n    public get lastAttempt(): ISummarizeAttempt {\n        return this._lastAttempt;\n    }\n\n    protected _lastSuccessfulSummary: Readonly<ISummarizeAttempt>;\n    public get lastSuccessfulSummary(): Readonly<ISummarizeAttempt> {\n        return this._lastSuccessfulSummary;\n    }\n\n    constructor(\n        public lastOpSequenceNumber: number,\n        /** Baseline attempt data used for comparisons with subsequent attempts/calculations. */\n        attemptBaseline: ISummarizeAttempt,\n    ) {\n        this._lastAttempt = attemptBaseline;\n        this._lastSuccessfulSummary = { ...attemptBaseline };\n    }\n\n    public updateWithLastSummaryAckInfo(lastSummary: Readonly<ISummarizeAttempt>) {\n        this._lastAttempt = lastSummary;\n        this._lastSuccessfulSummary = { ...lastSummary };\n    }\n\n    public recordAttempt(refSequenceNumber?: number) {\n        this._lastAttempt = {\n            refSequenceNumber: refSequenceNumber ?? this.lastOpSequenceNumber,\n            summaryTime: Date.now(),\n        };\n    }\n\n    public markLastAttemptAsSuccessful() {\n        this._lastSuccessfulSummary = { ...this.lastAttempt };\n    }\n}\n\n/**\n * This class contains the heuristics for when to summarize.\n */\nexport class SummarizeHeuristicRunner implements ISummarizeHeuristicRunner {\n    private readonly idleTimer: Timer;\n    private readonly minOpsForLastSummaryAttempt: number;\n\n    public constructor(\n        private readonly heuristicData: ISummarizeHeuristicData,\n        private readonly configuration: ISummaryConfigurationHeuristics,\n        private readonly trySummarize: (reason: SummarizeReason) => void,\n        private readonly logger: ITelemetryLogger,\n    ) {\n        this.idleTimer = new Timer(\n            this.configuration.idleTime,\n            () => this.trySummarize(\"idle\"));\n        this.minOpsForLastSummaryAttempt = this.configuration.minOpsForLastSummaryAttempt;\n    }\n\n    public get opsSinceLastAck(): number {\n        return this.heuristicData.lastOpSequenceNumber - this.heuristicData.lastSuccessfulSummary.refSequenceNumber;\n    }\n\n    public run() {\n        const timeSinceLastSummary = Date.now() - this.heuristicData.lastSuccessfulSummary.summaryTime;\n        const opsSinceLastAck = this.opsSinceLastAck;\n        if (timeSinceLastSummary > this.configuration.maxTime) {\n            this.idleTimer.clear();\n            this.trySummarize(\"maxTime\");\n        } else if (opsSinceLastAck > this.configuration.maxOps) {\n            this.idleTimer.clear();\n            this.trySummarize(\"maxOps\");\n        } else {\n            this.idleTimer.restart();\n        }\n    }\n\n    public shouldRunLastSummary(): boolean {\n        const opsSinceLastAck = this.opsSinceLastAck;\n        const minOpsForLastSummaryAttempt = this.minOpsForLastSummaryAttempt;\n\n        this.logger.sendTelemetryEvent({\n            eventName: \"ShouldRunLastSummary\",\n            opsSinceLastAck,\n            minOpsForLastSummaryAttempt,\n        });\n\n        return opsSinceLastAck >= minOpsForLastSummaryAttempt;\n    }\n\n    public dispose() {\n        this.idleTimer.clear();\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport {\n    assert,\n    Deferred,\n    IPromiseTimer,\n    IPromiseTimerResult,\n    Timer,\n} from \"@fluidframework/common-utils\";\nimport { MessageType } from \"@fluidframework/protocol-definitions\";\nimport { PerformanceEvent, LoggingError, ChildLogger } from \"@fluidframework/telemetry-utils\";\nimport { getRetryDelaySecondsFromError } from \"@fluidframework/driver-utils\";\nimport { DriverErrorType } from \"@fluidframework/driver-definitions\";\nimport {\n    IAckSummaryResult,\n    INackSummaryResult,\n    ISummarizeOptions,\n    IBroadcastSummaryResult,\n    ISummarizeResults,\n    ISummarizeHeuristicData,\n    ISubmitSummaryOptions,\n    SubmitSummaryResult,\n    SummarizeResultPart,\n    ISummaryCancellationToken,\n    ISummarizeTelemetryProperties,\n    SummaryGeneratorTelemetry,\n} from \"./summarizerTypes\";\nimport { IClientSummaryWatcher } from \"./summaryCollection\";\n\nexport type raceTimerResult<T> =\n    { result: \"done\"; value: T; } |\n    { result: IPromiseTimerResult[\"timerResult\"]; } |\n    { result: \"cancelled\"; };\n\n/** Helper function to wait for a promise or PromiseTimer to elapse. */\nexport async function raceTimer<T>(\n    promise: Promise<T>,\n    timer: Promise<IPromiseTimerResult>,\n    cancellationToken?: ISummaryCancellationToken,\n): Promise<raceTimerResult<T>> {\n    const promises: Promise<raceTimerResult<T>>[] = [\n        promise.then((value) => ({ result: \"done\", value } as const)),\n        timer.then(({ timerResult: result }) => ({ result } as const)),\n    ];\n    if (cancellationToken !== undefined) {\n        promises.push(cancellationToken.waitCancelled.then(() => ({ result: \"cancelled\" } as const)));\n    }\n    return Promise.race(promises);\n}\n\n// Send some telemetry if generate summary takes too long\nconst maxSummarizeTimeoutTime = 20000; // 20 sec\nconst maxSummarizeTimeoutCount = 5; // Double and resend 5 times\n\nexport type SummarizeReason =\n    /**\n     * Attempt to summarize after idle timeout has elapsed.\n     * Idle timer restarts whenever an op is received. So this\n     * triggers only after some amount of time has passed with\n     * no ops being received.\n     */\n    | \"idle\"\n    /**\n     * Attempt to summarize after a maximum time since last\n     * successful summary has passed. This measures time since\n     * last summary ack op was processed.\n     */\n    | \"maxTime\"\n    /**\n     * Attempt to summarize after a maximum number of ops have\n     * passed since the last successful summary. This compares\n     * op sequence numbers with the reference sequence number\n     * of the summarize op corresponding to the last summary\n     * ack op.\n     */\n    | \"maxOps\"\n    /**\n     * Special case to attempt to summarize one last time before the\n     * summarizer client closes itself. This is to prevent cases where\n     * the summarizer client never gets a chance to summarize, because\n     * there are too many outstanding ops and/or parent client cannot\n     * stay connected long enough for summarizer client to catch up.\n     */\n    | \"lastSummary\"\n    /** On-demand summary requested with specified reason. */\n    | `onDemand;${string}`\n    /** Enqueue summarize attempt with specified reason. */\n    | `enqueue;${string}`;\n\nconst summarizeErrors = {\n    /**\n     * Error encountered while generating the summary tree, uploading\n     * it to storage, or submitting the op. It could be a result of\n     * the client becoming disconnected while generating or an actual error.\n     */\n    submitSummaryFailure: \"Error while generating, uploading, or submitting summary\",\n    /**\n     * The summaryAckWaitTimeout time has elapsed before receiving the summarize op\n     * sent by this summarize attempt. It is expected to be broadcast quickly.\n     */\n    summaryOpWaitTimeout: \"Timeout while waiting for summarize op broadcast\",\n    /**\n     * The summaryAckWaitTimeout time has elapsed before receiving either a\n     * summaryAck or summaryNack op from the server in response to this\n     * summarize attempt. It is expected that the server should respond.\n     */\n    summaryAckWaitTimeout: \"Timeout while waiting for summaryAck/summaryNack op\",\n    /**\n     * The server responded with a summaryNack op, thus rejecting this\n     * summarize attempt.\n     */\n    summaryNack: \"Server rejected summary via summaryNack op\",\n\n    disconnect: \"Summary cancelled due to summarizer or main client disconnect\",\n} as const;\n\nexport class SummarizeResultBuilder {\n    public readonly summarySubmitted = new Deferred<SummarizeResultPart<SubmitSummaryResult>>();\n    public readonly summaryOpBroadcasted = new Deferred<SummarizeResultPart<IBroadcastSummaryResult>>();\n    public readonly receivedSummaryAckOrNack =\n        new Deferred<SummarizeResultPart<IAckSummaryResult, INackSummaryResult>>();\n\n    public fail(message: string, error: any, nackSummaryResult?: INackSummaryResult, retryAfterSeconds?: number) {\n        assert(!this.receivedSummaryAckOrNack.isCompleted,\n            0x25e /* \"no reason to call fail if all promises have been completed\" */);\n\n        const result: SummarizeResultPart<undefined> =\n            { success: false, message, data: undefined, error, retryAfterSeconds } as const;\n        this.summarySubmitted.resolve(result);\n        this.summaryOpBroadcasted.resolve(result);\n        this.receivedSummaryAckOrNack.resolve({ ...result, data: nackSummaryResult });\n    }\n    public build(): ISummarizeResults {\n        return {\n            summarySubmitted: this.summarySubmitted.promise,\n            summaryOpBroadcasted: this.summaryOpBroadcasted.promise,\n            receivedSummaryAckOrNack: this.receivedSummaryAckOrNack.promise,\n        } as const;\n    }\n}\n\n/**\n * This class generates and tracks a summary attempt.\n */\nexport class SummaryGenerator {\n    private readonly summarizeTimer: Timer;\n    constructor(\n        private readonly pendingAckTimer: IPromiseTimer,\n        private readonly heuristicData: ISummarizeHeuristicData,\n        private readonly submitSummaryCallback: (options: ISubmitSummaryOptions) => Promise<SubmitSummaryResult>,\n        private readonly raiseSummarizingError: (errorMessage: string) => void,\n        private readonly successfulSummaryCallback: () => void,\n        private readonly summaryWatcher: Pick<IClientSummaryWatcher, \"watchSummary\">,\n        private readonly logger: ITelemetryLogger,\n    ) {\n        this.summarizeTimer = new Timer(\n            maxSummarizeTimeoutTime,\n            () => this.summarizeTimerHandler(maxSummarizeTimeoutTime, 1),\n        );\n    }\n\n    /**\n     * Generates summary and listens for broadcast and ack/nack.\n     * Returns true for ack, false for nack, and undefined for failure or timeout.\n     * @param reason - reason for summarizing\n     * @param options - refreshLatestAck to fetch summary ack info from server,\n     * fullTree to generate tree without any summary handles even if unchanged\n     */\n    public summarize(\n        summarizeProps: ISummarizeTelemetryProperties,\n        options: ISummarizeOptions,\n        cancellationToken: ISummaryCancellationToken,\n        resultsBuilder = new SummarizeResultBuilder(),\n    ): ISummarizeResults {\n        this.summarizeCore(summarizeProps, options, resultsBuilder, cancellationToken)\n        .catch((error) => {\n            const message = \"UnexpectedSummarizeError\";\n            this.logger.sendErrorEvent({ eventName: message, ...summarizeProps }, error);\n            resultsBuilder.fail(message, error);\n        });\n\n        return resultsBuilder.build();\n    }\n\n    private async summarizeCore(\n        summarizeProps: ISummarizeTelemetryProperties,\n        options: ISummarizeOptions,\n        resultsBuilder: SummarizeResultBuilder,\n        cancellationToken: ISummaryCancellationToken,\n    ): Promise<void> {\n        const { refreshLatestAck, fullTree } = options;\n        const logger = ChildLogger.create(this.logger, undefined, { all: summarizeProps });\n\n        // Note: timeSinceLastAttempt and timeSinceLastSummary for the\n        // first summary are basically the time since the summarizer was loaded.\n        const timeSinceLastAttempt = Date.now() - this.heuristicData.lastAttempt.summaryTime;\n        const timeSinceLastSummary = Date.now() - this.heuristicData.lastSuccessfulSummary.summaryTime;\n        let summarizeTelemetryProps: SummaryGeneratorTelemetry = {\n            fullTree,\n            timeSinceLastAttempt,\n            timeSinceLastSummary,\n        };\n\n        const summarizeEvent = PerformanceEvent.start(logger, {\n            eventName: \"Summarize\",\n            refreshLatestAck,\n            ...summarizeTelemetryProps,\n        });\n\n        // Helper functions to report failures and return.\n        const getFailMessage =\n            (errorCode: keyof typeof summarizeErrors) => `${errorCode}: ${summarizeErrors[errorCode]}`;\n        const fail = (\n            errorCode: keyof typeof summarizeErrors,\n            error?: any,\n            properties?: SummaryGeneratorTelemetry,\n            nackSummaryResult?: INackSummaryResult,\n        ) => {\n            this.raiseSummarizingError(summarizeErrors[errorCode]);\n            // UploadSummary may fail with 429 and retryAfter - respect that\n            // Summary Nack also can have retryAfter, it's parsed below and comes as a property.\n            const retryAfterSeconds = getRetryDelaySecondsFromError(error);\n\n            // Report any failure as an error unless it was due to cancellation (like \"disconnected\" error)\n            // If failure happened on upload, we may not yet realized that socket disconnected, so check\n            // offlineError too.\n            const category = cancellationToken.cancelled || error?.errorType === DriverErrorType.offlineError ?\n                \"generic\" : \"error\";\n\n            summarizeEvent.cancel({\n                 ...properties,\n                 reason: errorCode,\n                 category,\n                 retryAfterSeconds,\n            }, error);\n            resultsBuilder.fail(getFailMessage(errorCode), error, nackSummaryResult, retryAfterSeconds);\n        };\n\n        // Wait to generate and send summary\n        this.summarizeTimer.start();\n\n        // Use record type to prevent unexpected value types\n        let summaryData: SubmitSummaryResult | undefined;\n        try {\n            summaryData = await this.submitSummaryCallback({\n                fullTree,\n                refreshLatestAck,\n                summaryLogger: logger,\n                cancellationToken,\n            });\n\n            // Cumulatively add telemetry properties based on how far generateSummary went.\n            const referenceSequenceNumber = summaryData.referenceSequenceNumber;\n            const opsSinceLastSummary =\n                referenceSequenceNumber - this.heuristicData.lastSuccessfulSummary.refSequenceNumber;\n            summarizeTelemetryProps = {\n                ...summarizeTelemetryProps,\n                referenceSequenceNumber,\n                minimumSequenceNumber: summaryData.minimumSequenceNumber,\n                opsSinceLastAttempt: referenceSequenceNumber - this.heuristicData.lastAttempt.refSequenceNumber,\n                opsSinceLastSummary,\n            };\n            if (summaryData.stage !== \"base\") {\n                summarizeTelemetryProps = {\n                    ...summarizeTelemetryProps,\n                    ...summaryData.summaryStats,\n                    generateDuration: summaryData.generateDuration,\n                };\n\n                if (summaryData.stage !== \"generate\") {\n                    summarizeTelemetryProps = {\n                        ...summarizeTelemetryProps,\n                        handle: summaryData.handle,\n                        uploadDuration: summaryData.uploadDuration,\n                    };\n\n                    if (summaryData.stage !== \"upload\") {\n                        summarizeTelemetryProps = {\n                            ...summarizeTelemetryProps,\n                            clientSequenceNumber: summaryData.clientSequenceNumber,\n                        };\n                    }\n                }\n            }\n\n            if (summaryData.stage !== \"submit\") {\n                return fail(\"submitSummaryFailure\", summaryData.error, summarizeTelemetryProps);\n            }\n\n            /**\n             * With incremental summaries, if the full tree was not summarized, only data stores that changed should\n             * be summarized. A data store is considered changed if either or both of the following is true:\n             * - It has received an op.\n             * - Its reference state changed, i.e., it went from referenced to unreferenced or vice-versa.\n             *\n             * In the extreme case, every op can be for a different data store and each op can result in the reference\n             * state change of multiple data stores. So, the total number of data stores that are summarized should not\n             * exceed the number of ops since last summary + number of data store whose reference state changed.\n             */\n            if (!fullTree && !summaryData.forcedFullTree) {\n                const { summarizedDataStoreCount, gcStateUpdatedDataStoreCount = 0 } = summaryData.summaryStats;\n                if (summarizedDataStoreCount > gcStateUpdatedDataStoreCount + opsSinceLastSummary) {\n                    logger.sendErrorEvent({\n                        eventName: \"IncrementalSummaryViolation\",\n                        summarizedDataStoreCount,\n                        gcStateUpdatedDataStoreCount,\n                        opsSinceLastSummary,\n                    });\n                }\n            }\n\n            // Log event here on summary success only, as Summarize_cancel duplicates failure logging.\n            summarizeEvent.reportEvent(\"generate\", { ...summarizeTelemetryProps });\n            resultsBuilder.summarySubmitted.resolve({ success: true, data: summaryData });\n        } catch (error) {\n            return fail(\"submitSummaryFailure\", error);\n        } finally {\n            this.heuristicData.recordAttempt(summaryData?.referenceSequenceNumber);\n            this.summarizeTimer.clear();\n        }\n\n        try {\n            const pendingTimeoutP = this.pendingAckTimer.start();\n            const summary = this.summaryWatcher.watchSummary(summaryData.clientSequenceNumber);\n\n            // Wait for broadcast\n            const waitBroadcastResult = await raceTimer(summary.waitBroadcast(), pendingTimeoutP, cancellationToken);\n            if (waitBroadcastResult.result === \"cancelled\") {\n                return fail(\"disconnect\");\n            }\n            if (waitBroadcastResult.result !== \"done\") {\n                return fail(\"summaryOpWaitTimeout\");\n            }\n            const summarizeOp = waitBroadcastResult.value;\n\n            const broadcastDuration = Date.now() - this.heuristicData.lastAttempt.summaryTime;\n            resultsBuilder.summaryOpBroadcasted.resolve({\n                success: true,\n                data: { summarizeOp, broadcastDuration },\n            });\n\n            this.heuristicData.lastAttempt.summarySequenceNumber = summarizeOp.sequenceNumber;\n            logger.sendTelemetryEvent({\n                eventName: \"Summarize_Op\",\n                duration: broadcastDuration,\n                referenceSequenceNumber: summarizeOp.referenceSequenceNumber,\n                summarySequenceNumber: summarizeOp.sequenceNumber,\n                handle: summarizeOp.contents.handle,\n            });\n\n            // Wait for ack/nack\n            const waitAckNackResult = await raceTimer(summary.waitAckNack(), pendingTimeoutP, cancellationToken);\n            if (waitAckNackResult.result === \"cancelled\") {\n                return fail(\"disconnect\");\n            }\n            if (waitAckNackResult.result !== \"done\") {\n                return fail(\"summaryAckWaitTimeout\");\n            }\n            const ackNackOp = waitAckNackResult.value;\n            this.pendingAckTimer.clear();\n\n            // Update for success/failure\n            const ackNackDuration = Date.now() - this.heuristicData.lastAttempt.summaryTime;\n\n            // adding new properties\n            summarizeTelemetryProps = {\n                ackWaitDuration: ackNackDuration,\n                ackNackSequenceNumber: ackNackOp.sequenceNumber,\n                summarySequenceNumber: ackNackOp.contents.summaryProposal.summarySequenceNumber,\n                ...summarizeTelemetryProps,\n            };\n            if (ackNackOp.type === MessageType.SummaryAck) {\n                this.heuristicData.markLastAttemptAsSuccessful();\n                this.successfulSummaryCallback();\n                summarizeEvent.end({\n                    ...summarizeTelemetryProps,\n                    handle: ackNackOp.contents.handle,\n                });\n                resultsBuilder.receivedSummaryAckOrNack.resolve({ success: true, data: {\n                    summaryAckOp: ackNackOp,\n                    ackNackDuration,\n                } });\n            } else {\n                // Check for retryDelay in summaryNack response.\n                assert(ackNackOp.type === MessageType.SummaryNack, 0x274 /* \"type check\" */);\n                const summaryNack = ackNackOp.contents;\n                const message = summaryNack?.message;\n                const retryAfterSeconds = summaryNack?.retryAfter;\n\n                // pre-0.58 error message prefix: summaryNack\n                const error = new LoggingError(`Received summaryNack: ${message}`, { retryAfterSeconds });\n\n                assert(getRetryDelaySecondsFromError(error) === retryAfterSeconds, 0x25f /* \"retryAfterSeconds\" */);\n                // This will only set resultsBuilder.receivedSummaryAckOrNack, as other promises are already set.\n                return fail(\n                    \"summaryNack\",\n                    error,\n                    { ...summarizeTelemetryProps, nackRetryAfter: retryAfterSeconds },\n                    { summaryNackOp: ackNackOp, ackNackDuration },\n                );\n            }\n        } finally {\n            this.pendingAckTimer.clear();\n        }\n    }\n\n    private summarizeTimerHandler(time: number, count: number) {\n        this.logger.sendPerformanceEvent({\n            eventName: \"SummarizeTimeout\",\n            timeoutTime: time,\n            timeoutCount: count,\n        });\n        if (count < maxSummarizeTimeoutCount) {\n            // Double and start a new timer\n            const nextTime = time * 2;\n            this.summarizeTimer.start(nextTime, () => this.summarizeTimerHandler(nextTime, count + 1));\n        }\n    }\n\n    public dispose() {\n        this.summarizeTimer.clear();\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IDisposable, IEvent, IEventProvider, ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { assert } from \"@fluidframework/common-utils\";\nimport { ChildLogger, PerformanceEvent } from \"@fluidframework/telemetry-utils\";\nimport { DriverErrorType } from \"@fluidframework/driver-definitions\";\nimport { ISummarizerClientElection } from \"./summarizerClientElection\";\nimport { IThrottler } from \"./throttler\";\nimport {\n    ISummarizer,\n    SummarizerStopReason,\n} from \"./summarizerTypes\";\nimport { SummaryCollection } from \"./summaryCollection\";\n\nconst defaultInitialDelayMs = 5000;\nconst defaultOpsToBypassInitialDelay = 4000;\n\nexport enum SummaryManagerState {\n    Off = 0,\n    Starting = 1,\n    Running = 2,\n    Stopping = 3,\n}\n\n// Please note that all reasons in this list are not errors,\n// and thus they are not raised today to parent container as error.\n// If this needs to be changed in future, we should re-evaluate what and how we raise to summarizer\ntype StopReason = Extract<SummarizerStopReason, \"parentNotConnected\" | \"parentShouldNotSummarize\">;\ntype ShouldSummarizeState =\n    | { shouldSummarize: true; }\n    | { shouldSummarize: false; stopReason: StopReason; };\n\nexport interface IConnectedEvents extends IEvent {\n    (event: \"connected\", listener: (clientId: string) => void);\n    (event: \"disconnected\", listener: () => void);\n}\n\n/**\n * IConnectedState describes an object that SummaryManager can watch to observe connection/disconnection.\n *\n * Under current implementation, its role will be fulfilled by the ContainerRuntime, but this could be replaced\n * with anything else that fulfills the contract if we want to shift the layer that the SummaryManager lives at.\n */\nexport interface IConnectedState extends IEventProvider<IConnectedEvents> {\n    readonly connected: boolean;\n\n    /**\n     * Under current implementation this is undefined if we've never connected, otherwise it's the clientId from our\n     * latest connection (even if we've since disconnected!).  Although this happens to be the behavior we want in\n     * SummaryManager, I suspect that globally we may eventually want to modify this behavior (e.g. make clientId\n     * undefined while disconnected).  To protect against this, let's assume this field can't be trusted while\n     * disconnected and instead separately track \"latest clientId\" in SummaryManager.\n     */\n    readonly clientId: string | undefined;\n}\n\nexport interface ISummaryManagerConfig {\n    initialDelayMs: number;\n    opsToBypassInitialDelay: number;\n}\n\n/**\n * SummaryManager is created by parent container (i.e. interactive container with clientType !== \"summarizer\") only.\n * It observes changes in calculated summarizer and reacts to changes by either creating summarizer client or\n * stopping existing summarizer client.\n */\nexport class SummaryManager implements IDisposable {\n    private readonly logger: ITelemetryLogger;\n    private readonly opsToBypassInitialDelay: number;\n    private readonly initialDelayMs: number;\n    private latestClientId: string | undefined;\n    private state = SummaryManagerState.Off;\n    private summarizer?: ISummarizer;\n    private _disposed = false;\n\n    public get disposed() {\n        return this._disposed;\n    }\n\n    public get currentState() { return this.state; }\n\n    constructor(\n        private readonly clientElection: ISummarizerClientElection,\n        private readonly connectedState: IConnectedState,\n        private readonly summaryCollection:\n            Pick<SummaryCollection, \"opsSinceLastAck\" | \"addOpListener\" | \"removeOpListener\">,\n        parentLogger: ITelemetryLogger,\n        /** Creates summarizer by asking interactive container to spawn summarizing container and\n         * get back its Summarizer instance. */\n        private readonly requestSummarizerFn: () => Promise<ISummarizer>,\n        private readonly startThrottler: IThrottler,\n        {\n            initialDelayMs = defaultInitialDelayMs,\n            opsToBypassInitialDelay = defaultOpsToBypassInitialDelay,\n        }: Readonly<Partial<ISummaryManagerConfig>> = {},\n        private readonly disableHeuristics?: boolean,\n    ) {\n        this.logger = ChildLogger.create(\n            parentLogger,\n            \"SummaryManager\",\n            { all: { clientId: () => this.latestClientId } });\n\n        this.connectedState.on(\"connected\", this.handleConnected);\n        this.connectedState.on(\"disconnected\", this.handleDisconnected);\n        this.latestClientId = this.connectedState.clientId;\n\n        this.opsToBypassInitialDelay = opsToBypassInitialDelay;\n        this.initialDelayMs = initialDelayMs;\n    }\n\n    /**\n     * Until start is called, the SummaryManager won't begin attempting to start summarization.  This ensures there's\n     * a window between construction and starting where the caller can attach listeners.\n     */\n    public start(): void {\n        this.clientElection.on(\"electedSummarizerChanged\", this.refreshSummarizer);\n        this.refreshSummarizer();\n    }\n\n    private readonly handleConnected = (clientId: string) => {\n        this.latestClientId = clientId;\n        // If we have a summarizer, it should have been either cancelled on disconnected by now.\n        // But because of lastSummary process, it can still hang around, so there is not much we can\n        // check or assert.\n        this.refreshSummarizer();\n    };\n\n    private readonly handleDisconnected = () => {\n        this.refreshSummarizer();\n    };\n\n    private static readonly isStartingOrRunning = (state: SummaryManagerState) =>\n        state === SummaryManagerState.Starting || state === SummaryManagerState.Running;\n\n    private getShouldSummarizeState(): ShouldSummarizeState {\n        // Note that if we're in the Running state, the electedClient may be a summarizer client, so we can't\n        // enforce connectedState.clientId === clientElection.electedClientId. But once we're Running, we should\n        // only transition to Stopping when the electedParentId changes. Stopping the summarizer without\n        // changing the electedParent will just cause us to transition to Starting again.\n        if (this.connectedState.clientId !== this.clientElection.electedParentId ||\n            (this.state !== SummaryManagerState.Running &&\n                this.connectedState.clientId !== this.clientElection.electedClientId)) {\n            return { shouldSummarize: false, stopReason: \"parentShouldNotSummarize\" };\n        } else if (!this.connectedState.connected) {\n            return { shouldSummarize: false, stopReason: \"parentNotConnected\" };\n        } else if (this.disposed) {\n            assert(false, 0x260 /* \"Disposed should mean disconnected!\" */);\n        } else {\n            return { shouldSummarize: true };\n        }\n    }\n\n    private readonly refreshSummarizer = () => {\n        // Transition states depending on shouldSummarize, which is a calculated property\n        // that is only true if this client is connected and is the elected summarizer.\n        const shouldSummarizeState = this.getShouldSummarizeState();\n        switch (this.state) {\n            case SummaryManagerState.Off: {\n                if (shouldSummarizeState.shouldSummarize) {\n                    this.startSummarization();\n                }\n                return;\n            }\n            case SummaryManagerState.Starting: {\n                // Cannot take any action until summarizer is created\n                // state transition will occur after creation\n                return;\n            }\n            case SummaryManagerState.Running: {\n                if (shouldSummarizeState.shouldSummarize === false) {\n                    this.stop(shouldSummarizeState.stopReason);\n                }\n                return;\n            }\n            case SummaryManagerState.Stopping: {\n                // Cannot take any action until running summarizer finishes\n                // state transition will occur after it stops\n                return;\n            }\n            default: {\n                return;\n            }\n        }\n    };\n\n    private startSummarization() {\n        assert(this.state === SummaryManagerState.Off, 0x261 /* \"Expected: off\" */);\n        this.state = SummaryManagerState.Starting;\n\n        assert(this.summarizer === undefined, 0x262 /* \"Old summarizer is still working!\" */);\n\n        this.delayBeforeCreatingSummarizer().then(async (startWithInitialDelay: boolean) => {\n            // Re-validate that it need to be running. Due to asynchrony, it may be not the case anymore\n            // but only if creation was delayed. If it was not, then we want to ensure we always create\n            // a summarizer to kick off lastSummary. Without that, we would not be able to summarize and get\n            // document out of broken state if it has too many ops and ordering service keeps nacking main\n            // container (and thus it goes into cycle of reconnects)\n            if (startWithInitialDelay && this.getShouldSummarizeState().shouldSummarize === false) {\n                return \"early exit\";\n            }\n\n            // We transition to Running before requesting the summarizer, because after requesting we can't predict\n            // when the electedClient will be replaced with the new summarizer client.\n            // The alternative would be to let connectedState.clientId !== clientElection.electedClientId when\n            // state === Starting || state === Running.\n            assert(this.state === SummaryManagerState.Starting, 0x263 /* \"Expected: starting\" */);\n            this.state = SummaryManagerState.Running;\n\n            const summarizer = await this.requestSummarizerFn();\n            this.summarizer = summarizer;\n\n            // Re-validate that it need to be running. Due to asynchrony, it may be not the case anymore\n            const shouldSummarizeState = this.getShouldSummarizeState();\n            if (shouldSummarizeState.shouldSummarize === false) {\n                this.state = SummaryManagerState.Starting;\n                summarizer.stop(shouldSummarizeState.stopReason);\n                return \"early exit after starting summarizer\";\n            }\n\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clientId = this.latestClientId!;\n\n            return PerformanceEvent.timedExecAsync(\n                this.logger,\n                { eventName: \"RunningSummarizer\", attempt: this.startThrottler.numAttempts },\n                async () => summarizer.run(clientId, this.disableHeuristics),\n            );\n        }).then((reason: string) => {\n            this.logger.sendTelemetryEvent({\n                eventName: \"EndingSummarizer\",\n                reason,\n            });\n        }).catch((error) => {\n            this.logger.sendTelemetryEvent(\n                {\n                    eventName: \"EndingSummarizer\",\n                    reason: \"exception\",\n                },\n                error);\n\n            // Most of exceptions happen due to container being closed while loading it, due to\n            // summarizer container loosing connection while load.\n            // Not worth reporting such errors as errors. That said, we might miss some real errors if\n            // we ignore blindly, so try to narrow signature we are looking for - skip logging\n            // error only if this client should no longer be a summarizer (which in practice\n            // means it also lost connection), and error happened on load (we do not have summarizer).\n            // We could annotate the error raised in Container.load where the container closed during load with no error\n            // and check for that case here, but that does not seem to be necessary.\n            if (this.getShouldSummarizeState().shouldSummarize || this.summarizer !== undefined) {\n                // Report any failure as an error unless it was due to cancellation (like \"disconnected\" error)\n                // If failure happened on container load, we may not yet realized that socket disconnected, so check\n                // offlineError.\n                const category = error?.errorType === DriverErrorType.offlineError ? \"generic\" : \"error\";\n                this.logger.sendTelemetryEvent(\n                    {\n                        eventName: \"SummarizerException\",\n                        category,\n                    },\n                    error);\n            }\n        }).finally(() => {\n            assert(this.state !== SummaryManagerState.Off, 0x264 /* \"Expected: Not Off\" */);\n            this.state = SummaryManagerState.Off;\n\n            this.summarizer?.close();\n            this.summarizer = undefined;\n\n            if (this.getShouldSummarizeState().shouldSummarize) {\n                this.startSummarization();\n            }\n        });\n    }\n\n    private stop(reason: SummarizerStopReason) {\n        if (!SummaryManager.isStartingOrRunning(this.state)) {\n            return;\n        }\n        this.state = SummaryManagerState.Stopping;\n\n        // Stopping the running summarizer client should trigger a change\n        // in states when the running summarizer closes\n        this.summarizer?.stop(reason);\n    }\n\n    /**\n     * Implements initial delay before creating summarizer\n     * @returns true, if creation is delayed due to heuristics (not many ops to summarize).\n     *          False if summarizer should start immediately due to too many unsummarized ops.\n     */\n    private async delayBeforeCreatingSummarizer(): Promise<boolean> {\n        // throttle creation of new summarizer containers to prevent spamming the server with websocket connections\n        let delayMs = this.startThrottler.getDelay();\n\n        // We have been elected the summarizer. Some day we may be able to summarize with a live document but for\n        // now we play it safe and launch a second copy.\n        this.logger.sendTelemetryEvent({\n            eventName: \"CreatingSummarizer\",\n            throttlerDelay: delayMs,\n            initialDelay: this.initialDelayMs,\n            startThrottlerMaxDelayMs: this.startThrottler.maxDelayMs,\n            opsSinceLastAck: this.summaryCollection.opsSinceLastAck,\n            opsToBypassInitialDelay: this.opsToBypassInitialDelay,\n        });\n\n        // This delay helps ensure that last summarizer that might be left from previous client\n        // has enough time to complete its last summary and thus new summarizer not conflict with previous one.\n        // If, however, there are too many unsummarized ops, try to resolve it as quickly as possible, with\n        // understanding that we may see nacks because of such quick action.\n        // A better design would be for summarizer election logic to always select current summarizer as\n        // summarizing client (i.e. clientType === \"summarizer\" can be elected) to ensure that nobody else can\n        // summarizer while it finishes its work and moves to exit.\n        // It also helps with pure boot scenario (single client) to offset expensive work a bit out from\n        // critical boot sequence.\n        let startWithInitialDelay = false;\n        if (this.summaryCollection.opsSinceLastAck < this.opsToBypassInitialDelay) {\n            startWithInitialDelay = true;\n            delayMs = Math.max(delayMs, this.initialDelayMs);\n        }\n\n        if (delayMs > 0) {\n            let timer;\n            let resolveOpPromiseFn;\n            // Create a listener that will break the delay if we've exceeded the initial delay ops count.\n            const opsListenerFn = () => {\n                if (this.summaryCollection.opsSinceLastAck >= this.opsToBypassInitialDelay) {\n                    clearTimeout(timer);\n                    resolveOpPromiseFn();\n                }\n            };\n            // Create a Promise that will resolve when the delay expires.\n            const delayPromise = new Promise<void>((resolve) => {\n                timer = setTimeout(() => resolve(), delayMs);\n            });\n            // Create a Promise that will resolve if the ops count passes the threshold.\n            const opPromise = new Promise<void>((resolve) => { resolveOpPromiseFn = resolve; });\n            this.summaryCollection.addOpListener(opsListenerFn);\n            await Promise.race([delayPromise, opPromise]);\n            this.summaryCollection.removeOpListener(opsListenerFn);\n        }\n        return startWithInitialDelay;\n    }\n\n    public readonly summarizeOnDemand: ISummarizer[\"summarizeOnDemand\"] = (...args) => {\n        if (this.summarizer === undefined) {\n            throw Error(\"No running summarizer client\");\n            // TODO: could spawn a summarizer client temporarily.\n        }\n        return this.summarizer.summarizeOnDemand(...args);\n    };\n\n    public readonly enqueueSummarize: ISummarizer[\"enqueueSummarize\"] = (...args) => {\n        if (this.summarizer === undefined) {\n            throw Error(\"No running summarizer client\");\n            // TODO: could spawn a summarizer client temporarily.\n        }\n        return this.summarizer.enqueueSummarize(...args);\n    };\n\n    public dispose() {\n        this.clientElection.off(\"electedSummarizerChanged\", this.refreshSummarizer);\n        this.connectedState.off(\"connected\", this.handleConnected);\n        this.connectedState.off(\"disconnected\", this.handleDisconnected);\n        this._disposed = true;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IDisposable, ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { assert, delay, Deferred, PromiseTimer } from \"@fluidframework/common-utils\";\nimport { UsageError } from \"@fluidframework/container-utils\";\nimport {\n    ISequencedDocumentMessage,\n    MessageType,\n} from \"@fluidframework/protocol-definitions\";\nimport { ChildLogger } from \"@fluidframework/telemetry-utils\";\nimport {\n    ISummaryConfiguration,\n} from \"./containerRuntime\";\nimport { SummarizeHeuristicRunner } from \"./summarizerHeuristics\";\nimport {\n    IEnqueueSummarizeOptions,\n    ISummarizeOptions,\n    ISummarizeHeuristicData,\n    ISummarizeHeuristicRunner,\n    IOnDemandSummarizeOptions,\n    EnqueueSummarizeResult,\n    SummarizerStopReason,\n    ISubmitSummaryOptions,\n    SubmitSummaryResult,\n    ISummaryCancellationToken,\n    ISummarizeResults,\n    ISummarizeTelemetryProperties,\n    ISummarizeRunnerTelemetry,\n} from \"./summarizerTypes\";\nimport { IClientSummaryWatcher, SummaryCollection } from \"./summaryCollection\";\nimport {\n    raceTimer,\n    SummarizeReason,\n    SummarizeResultBuilder,\n    SummaryGenerator,\n} from \"./summaryGenerator\";\n\nconst maxSummarizeAckWaitTime = 10 * 60 * 1000; // 10 minutes\n\n/**\n * An instance of RunningSummarizer manages the heuristics for summarizing.\n * Until disposed, the instance of RunningSummarizer can assume that it is\n * in a state of running, meaning it is connected and initialized.  It keeps\n * track of summaries that it is generating as they are broadcast and acked/nacked.\n * This object is created and controlled by Summarizer object.\n */\nexport class RunningSummarizer implements IDisposable {\n    public static async start(\n        logger: ITelemetryLogger,\n        summaryWatcher: IClientSummaryWatcher,\n        configuration: ISummaryConfiguration,\n        submitSummaryCallback: (options: ISubmitSummaryOptions) => Promise<SubmitSummaryResult>,\n        heuristicData: ISummarizeHeuristicData,\n        raiseSummarizingError: (errorMessage: string) => void,\n        summaryCollection: SummaryCollection,\n        cancellationToken: ISummaryCancellationToken,\n        stopSummarizerCallback: (reason: SummarizerStopReason) => void,\n    ): Promise<RunningSummarizer> {\n        const summarizer = new RunningSummarizer(\n            logger,\n            summaryWatcher,\n            configuration,\n            submitSummaryCallback,\n            heuristicData,\n            raiseSummarizingError,\n            summaryCollection,\n            cancellationToken,\n            stopSummarizerCallback);\n\n        await summarizer.waitStart();\n\n        // Run the heuristics after starting\n        summarizer.heuristicRunner?.run();\n        return summarizer;\n    }\n\n    public get disposed() { return this._disposed; }\n\n    private stopping = false;\n    private _disposed = false;\n    private summarizingLock: Promise<void> | undefined;\n    private tryWhileSummarizing = false;\n    private readonly pendingAckTimer: PromiseTimer;\n    private heuristicRunner?: ISummarizeHeuristicRunner;\n    private readonly generator: SummaryGenerator;\n    private readonly logger: ITelemetryLogger;\n    private enqueuedSummary: {\n        reason: SummarizeReason;\n        afterSequenceNumber: number;\n        options: ISummarizeOptions;\n        readonly resultsBuilder: SummarizeResultBuilder;\n    } | undefined;\n    private summarizeCount = 0;\n    private totalSuccessfulAttempts = 0;\n\n    private constructor(\n        baseLogger: ITelemetryLogger,\n        private readonly summaryWatcher: IClientSummaryWatcher,\n        private readonly configuration: ISummaryConfiguration,\n        private readonly submitSummaryCallback: (options: ISubmitSummaryOptions) => Promise<SubmitSummaryResult>,\n        private readonly heuristicData: ISummarizeHeuristicData,\n        private readonly raiseSummarizingError: (errorMessage: string) => void,\n        private readonly summaryCollection: SummaryCollection,\n        private readonly cancellationToken: ISummaryCancellationToken,\n        private readonly stopSummarizerCallback: (reason: SummarizerStopReason) => void,\n    ) {\n        const telemetryProps: ISummarizeRunnerTelemetry = {\n            summarizeCount: () => this.summarizeCount,\n            summarizerSuccessfulAttempts: () => this.totalSuccessfulAttempts,\n        };\n\n        this.logger = ChildLogger.create(\n            baseLogger, \"Running\",\n            {\n                all: telemetryProps,\n            },\n        );\n\n        if (configuration.state !== \"disableHeuristics\") {\n            assert(this.configuration.state === \"enabled\", 0x2ea /* \"Configuration state should be enabled\" */);\n            this.heuristicRunner = new SummarizeHeuristicRunner(\n                heuristicData,\n                this.configuration,\n                (reason) => this.trySummarize(reason),\n                this.logger);\n        }\n\n        assert(\n            this.configuration.state !== \"disabled\",\n            0x2eb /* \"Summary not supported with configuration disabled\" */,\n        );\n\n        // Cap the maximum amount of time client will wait for a summarize op ack to maxSummarizeAckWaitTime\n        // configuration.maxAckWaitTime is composed from defaults, server values, and runtime overrides\n\n        const maxAckWaitTime = Math.min(this.configuration.maxAckWaitTime, maxSummarizeAckWaitTime);\n\n        this.pendingAckTimer = new PromiseTimer(\n            maxAckWaitTime,\n            () => {\n                // pre-0.58 error message: summaryAckWaitTimeout\n                this.raiseSummarizingError(\"Pending summary ack not received in time\");\n                // Note: summarizeCount (from ChildLogger definition) may be 0,\n                // since this code path is hit when RunningSummarizer first starts up,\n                // before this instance has kicked off a new summarize run.\n                this.logger.sendErrorEvent({\n                    eventName: \"SummaryAckWaitTimeout\",\n                    maxAckWaitTime,\n                    referenceSequenceNumber: this.heuristicData.lastAttempt.refSequenceNumber,\n                    summarySequenceNumber: this.heuristicData.lastAttempt.summarySequenceNumber,\n                    timePending: Date.now() - this.heuristicData.lastAttempt.summaryTime,\n                });\n            });\n        // Set up pending ack timeout by op timestamp differences for previous summaries.\n        summaryCollection.setPendingAckTimerTimeoutCallback(maxAckWaitTime, () => {\n            if (this.pendingAckTimer.hasTimer) {\n                this.logger.sendTelemetryEvent({\n                    eventName: \"MissingSummaryAckFoundByOps\",\n                    referenceSequenceNumber: this.heuristicData.lastAttempt.refSequenceNumber,\n                    summarySequenceNumber: this.heuristicData.lastAttempt.summarySequenceNumber,\n                });\n                this.pendingAckTimer.clear();\n            }\n        });\n\n        this.generator = new SummaryGenerator(\n            this.pendingAckTimer,\n            this.heuristicData,\n            this.submitSummaryCallback,\n            this.raiseSummarizingError,\n            () => { this.totalSuccessfulAttempts++; },\n            this.summaryWatcher,\n            this.logger,\n        );\n    }\n\n    public dispose(): void {\n        this.summaryWatcher.dispose();\n        this.heuristicRunner?.dispose();\n        this.heuristicRunner = undefined;\n        this.generator.dispose();\n        this.pendingAckTimer.clear();\n        this.disposeEnqueuedSummary();\n        this._disposed = true;\n        this.stopping = true;\n    }\n\n    /**\n     * RunningSummarizer's logger includes the sequenced index of the current summary on each event.\n     * If some other Summarizer code wants that event on their logs they can get it here,\n     * but only if they're logging about that same summary.\n     * @param summaryOpRefSeq - RefSeq number of the summary op, to ensure the log correlation will be correct\n     */\n    public tryGetCorrelatedLogger = (summaryOpRefSeq) =>\n        this.heuristicData.lastAttempt.refSequenceNumber === summaryOpRefSeq\n            ? this.logger\n            : undefined;\n\n    public handleSystemOp(op: ISequencedDocumentMessage) {\n        switch (op.type) {\n            case MessageType.ClientLeave:\n            case MessageType.ClientJoin:\n            case MessageType.Propose: {\n                // Synchronously handle quorum ops like regular ops\n                this.handleOp(undefined, op);\n                return;\n            }\n            default: {\n                return;\n            }\n        }\n    }\n\n    public handleOp(error: any, { sequenceNumber, type, clientId, contents }: ISequencedDocumentMessage) {\n        if (error !== undefined) {\n            return;\n        }\n        this.heuristicData.lastOpSequenceNumber = sequenceNumber;\n\n        // Check for enqueued on-demand summaries; Intentionally do nothing otherwise\n        if (!this.tryRunEnqueuedSummary()) {\n            this.heuristicRunner?.run();\n        }\n    }\n\n    public async waitStop(allowLastSummary: boolean): Promise<void> {\n        if (this.stopping) {\n            return;\n        }\n\n        this.stopping = true;\n\n        this.disposeEnqueuedSummary();\n\n        // This will try to run lastSummary if needed.\n        if (allowLastSummary && this.heuristicRunner?.shouldRunLastSummary()) {\n            if (this.summarizingLock === undefined) {\n                this.trySummarizeOnce(\n                    // summarizeProps\n                    { reason: \"lastSummary\" },\n                    // ISummarizeOptions, using defaults: { refreshLatestAck: false, fullTree: false }\n                    {});\n            }\n        }\n\n        // Note that trySummarizeOnce() call above returns right away, without waiting.\n        // So we need to wait for its completion, otherwise it would be destroyed right away.\n        // That said, if summary lock was taken upfront, this wait might wait on  multiple retries to\n        // submit summary. We should reconsider this flow and make summarizer move to exit faster.\n        // This resolves when the current pending summary gets an ack or fails.\n        await this.summarizingLock;\n    }\n\n    private async waitStart() {\n        // Wait no longer than ack timeout for all pending\n        const waitStartResult = await raceTimer(\n            this.summaryWatcher.waitFlushed(),\n            this.pendingAckTimer.start(),\n        );\n        this.pendingAckTimer.clear();\n\n        // Remove pending ack wait timeout by op timestamp comparison, because\n        // it has race conditions with summaries submitted by this same client.\n        this.summaryCollection.unsetPendingAckTimerTimeoutCallback();\n\n        if (waitStartResult.result === \"done\" && waitStartResult.value !== undefined) {\n            this.heuristicData.updateWithLastSummaryAckInfo({\n                refSequenceNumber: waitStartResult.value.summaryOp.referenceSequenceNumber,\n                // This will be the Summarizer starting point so only use timestamps from client's machine.\n                summaryTime: Date.now(),\n                summarySequenceNumber: waitStartResult.value.summaryOp.sequenceNumber,\n            });\n        }\n    }\n\n    /**\n     * Runs single summary action that prevents any other concurrent actions.\n     * Assumes that caller checked upfront for lack of concurrent action (this.summarizingLock)\n     * before calling this API. I.e. caller is responsible for either erroring out or waiting on this promise.\n     * @param action - action to perform.\n     * @returns - result of action.\n     */\n    private async lockedSummaryAction<T>(action: () => Promise<T>) {\n        assert(this.summarizingLock === undefined, 0x25b /* \"Caller is responsible for checking lock\" */);\n\n        const summarizingLock = new Deferred<void>();\n        this.summarizingLock = summarizingLock.promise;\n\n        this.summarizeCount++;\n\n        return action().finally(() => {\n            summarizingLock.resolve();\n            this.summarizingLock = undefined;\n\n            const retry = this.tryWhileSummarizing;\n            this.tryWhileSummarizing = false;\n\n            // After summarizing, we should check to see if we need to summarize again.\n            // Rerun the heuristics and check for enqueued summaries.\n            if (!this.stopping && !this.tryRunEnqueuedSummary() && retry) {\n                this.heuristicRunner?.run();\n            }\n        });\n    }\n\n    /**\n     * Runs single summarize attempt\n     * @param summarizeProps - props to log with each telemetry event associated with this attempt\n     * @param options - summary options\n     * @param cancellationToken - cancellation token to use to be able to cancel this summary, if needed\n     * @param resultsBuilder - optional, result builder to use.\n     * @returns ISummarizeResult - result of running a summary.\n     */\n    private trySummarizeOnce(\n        summarizeProps: ISummarizeTelemetryProperties,\n        options: ISummarizeOptions,\n        cancellationToken = this.cancellationToken,\n        resultsBuilder = new SummarizeResultBuilder()): ISummarizeResults {\n        this.lockedSummaryAction(async () => {\n            const summarizeResult = this.generator.summarize(\n                summarizeProps,\n                options,\n                cancellationToken,\n                resultsBuilder);\n            // ensure we wait till the end of the process\n            return summarizeResult.receivedSummaryAckOrNack;\n        }).catch((error) => {\n            // SummaryGenerator.summarize() does not throw exceptions - it converts them to failed result\n            // on resultsBuilder\n            // We do not care about exceptions on receivedSummaryAckOrNack - caller should check results\n            // and take a appropriate action.\n        });\n\n        return resultsBuilder.build();\n    }\n\n    /** Heuristics summarize attempt. */\n    private trySummarize(\n        reason: SummarizeReason,\n        cancellationToken = this.cancellationToken): void {\n        if (this.summarizingLock !== undefined) {\n            // lockedSummaryAction() will retry heuristic-based summary at the end of current attempt\n            // if it's still needed\n            this.tryWhileSummarizing = true;\n            return;\n        }\n\n        this.lockedSummaryAction(async () => {\n            const attempts: (ISummarizeOptions & { delaySeconds?: number; })[] = [\n                { refreshLatestAck: false, fullTree: false },\n                { refreshLatestAck: true, fullTree: false },\n                { refreshLatestAck: true, fullTree: false, delaySeconds: 2 * 60 },\n                { refreshLatestAck: true, fullTree: true, delaySeconds: 10 * 60 },\n            ];\n            let overrideDelaySeconds: number | undefined;\n            let summaryAttempts = 0;\n            let summaryAttemptsPerPhase = 0;\n\n            let lastResult: { message: string; error: any; } | undefined;\n\n            for (let summaryAttemptPhase = 0; summaryAttemptPhase < attempts.length;) {\n                if (this.cancellationToken.cancelled) {\n                    return;\n                }\n\n                // We only want to attempt 1 summary when reason is \"lastSummary\"\n                if (++summaryAttempts > 1 && reason === \"lastSummary\") {\n                    return;\n                }\n\n                summaryAttemptsPerPhase++;\n\n                const { delaySeconds: regularDelaySeconds = 0, ...options } = attempts[summaryAttemptPhase];\n                const delaySeconds = overrideDelaySeconds ?? regularDelaySeconds;\n\n                const summarizeProps: ISummarizeTelemetryProperties = {\n                    reason,\n                    summaryAttempts,\n                    summaryAttemptsPerPhase,\n                    summaryAttemptPhase: summaryAttemptPhase + 1, // make everything 1-based\n                    ...options,\n                };\n\n                if (delaySeconds > 0) {\n                    this.logger.sendPerformanceEvent({\n                        eventName: \"SummarizeAttemptDelay\",\n                        duration: delaySeconds,\n                        summaryNackDelay: overrideDelaySeconds !== undefined,\n                        ...summarizeProps,\n                    });\n                    await delay(delaySeconds * 1000);\n                }\n                // Note: no need to account for cancellationToken.waitCancelled here, as\n                // this is accounted SummaryGenerator.summarizeCore that controls receivedSummaryAckOrNack.\n                const resultSummarize = this.generator.summarize(summarizeProps, options, cancellationToken);\n                const result = await resultSummarize.receivedSummaryAckOrNack;\n\n                if (result.success) {\n                    return;\n                }\n                // Check for retryDelay that can come from summaryNack or upload summary flow.\n                // Retry the same step only once per retryAfter response.\n                overrideDelaySeconds = result.retryAfterSeconds;\n                if (overrideDelaySeconds === undefined || summaryAttemptsPerPhase > 1) {\n                    summaryAttemptPhase++;\n                    summaryAttemptsPerPhase = 0;\n                }\n                lastResult = result;\n            }\n\n            // If all attempts failed, log error (with last attempt info) and close the summarizer container\n            this.logger.sendErrorEvent({\n                eventName: \"FailToSummarize\",\n                reason,\n                message: lastResult?.message,\n            }, lastResult?.error);\n\n            this.stopSummarizerCallback(\"failToSummarize\");\n        }).catch((error) => {\n            this.logger.sendErrorEvent({ eventName: \"UnexpectedSummarizeError\" }, error);\n        });\n    }\n\n    /** {@inheritdoc (ISummarizer:interface).summarizeOnDemand} */\n    public summarizeOnDemand(\n        resultsBuilder: SummarizeResultBuilder = new SummarizeResultBuilder(),\n        {\n            reason,\n            ...options\n        }: IOnDemandSummarizeOptions): ISummarizeResults {\n        if (this.stopping) {\n            resultsBuilder.fail(\"RunningSummarizer stopped or disposed\", undefined);\n            return resultsBuilder.build();\n        }\n        // Check for concurrent summary attempts. If one is found,\n        // return a promise that caller can await before trying again.\n        if (this.summarizingLock !== undefined) {\n            // The heuristics are blocking concurrent summarize attempts.\n            throw new UsageError(\"Attempted to run an already-running summarizer on demand\");\n        }\n        const result = this.trySummarizeOnce(\n            { reason: `onDemand/${reason}` },\n            options,\n            this.cancellationToken,\n            resultsBuilder);\n        return result;\n    }\n\n    /** {@inheritdoc (ISummarizer:interface).enqueueSummarize} */\n    public enqueueSummarize({\n        reason,\n        afterSequenceNumber = 0,\n        override = false,\n        ...options\n    }: IEnqueueSummarizeOptions): EnqueueSummarizeResult {\n        const onDemandReason = `enqueue;${reason}` as const;\n        let overridden = false;\n        if (this.enqueuedSummary !== undefined) {\n            if (!override) {\n                return { alreadyEnqueued: true };\n            }\n            // Override existing enqueued summarize attempt.\n            this.enqueuedSummary.resultsBuilder.fail(\n                \"Aborted; overridden by another enqueue summarize attempt\",\n                undefined,\n            );\n            this.enqueuedSummary = undefined;\n            overridden = true;\n        }\n        this.enqueuedSummary = {\n            reason: onDemandReason,\n            afterSequenceNumber,\n            options,\n            resultsBuilder: new SummarizeResultBuilder(),\n        };\n        const results = this.enqueuedSummary.resultsBuilder.build();\n        this.tryRunEnqueuedSummary();\n        return overridden ? {\n            ...results,\n            alreadyEnqueued: true,\n            overridden: true,\n        } : results;\n    }\n\n    private tryRunEnqueuedSummary() {\n        if (this.stopping) {\n            this.disposeEnqueuedSummary();\n            return false;\n        }\n        if (\n            this.enqueuedSummary === undefined\n            || this.heuristicData.lastOpSequenceNumber < this.enqueuedSummary.afterSequenceNumber\n            || this.summarizingLock !== undefined\n        ) {\n            // If no enqueued summary is ready or a summary is already in progress, take no action.\n            return false;\n        }\n        const { reason, resultsBuilder, options } = this.enqueuedSummary;\n        // Set to undefined first, so that subsequent enqueue attempt while summarize will occur later.\n        this.enqueuedSummary = undefined;\n        this.trySummarizeOnce(\n            { reason: `enqueuedSummary/${reason}` },\n            options,\n            this.cancellationToken,\n            resultsBuilder);\n        return true;\n    }\n\n    private disposeEnqueuedSummary() {\n        if (this.enqueuedSummary !== undefined) {\n            this.enqueuedSummary.resultsBuilder.fail(\"RunningSummarizer stopped or disposed\", undefined);\n            this.enqueuedSummary = undefined;\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { EventEmitter } from \"events\";\nimport { Deferred } from \"@fluidframework/common-utils\";\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { ILoader, LoaderHeader } from \"@fluidframework/container-definitions\";\nimport { UsageError } from \"@fluidframework/container-utils\";\nimport { DriverHeader } from \"@fluidframework/driver-definitions\";\nimport { requestFluidObject } from \"@fluidframework/runtime-utils\";\nimport { ChildLogger, IFluidErrorBase, LoggingError, wrapErrorAndLog } from \"@fluidframework/telemetry-utils\";\nimport {\n    FluidObject,\n    IFluidHandleContext,\n    IFluidHandle,\n    IRequest,\n} from \"@fluidframework/core-interfaces\";\nimport {\n    ISequencedDocumentMessage,\n} from \"@fluidframework/protocol-definitions\";\nimport { ISummaryConfiguration } from \"./containerRuntime\";\nimport { ICancellableSummarizerController } from \"./runWhileConnectedCoordinator\";\nimport { summarizerClientType } from \"./summarizerClientElection\";\nimport { SummaryCollection } from \"./summaryCollection\";\nimport { SummarizerHandle } from \"./summarizerHandle\";\nimport { RunningSummarizer } from \"./runningSummarizer\";\nimport {\n    ISummarizer,\n    ISummarizerInternalsProvider,\n    ISummarizerRuntime,\n    ISummarizingWarning,\n    SummarizerStopReason,\n} from \"./summarizerTypes\";\nimport { SummarizeHeuristicData } from \"./summarizerHeuristics\";\nimport { SummarizeResultBuilder } from \"./summaryGenerator\";\nimport { IConnectableRuntime } from \".\";\n\nconst summarizingError = \"summarizingError\";\n\nexport class SummarizingWarning extends LoggingError implements ISummarizingWarning, IFluidErrorBase {\n    readonly errorType = summarizingError;\n    readonly canRetry = true;\n\n    constructor(\n        errorMessage: string,\n        readonly logged: boolean = false,\n    ) {\n        super(errorMessage);\n    }\n\n    static wrap(error: any, logged: boolean = false, logger: ITelemetryLogger) {\n        const newErrorFn = (errMsg: string) => new SummarizingWarning(errMsg, logged);\n        return wrapErrorAndLog<SummarizingWarning>(error, newErrorFn, logger);\n    }\n}\n\nexport const createSummarizingWarning =\n    (errorMessage: string, logged: boolean) => new SummarizingWarning(errorMessage, logged);\n\n/**\n * Summarizer is responsible for coordinating when to generate and send summaries.\n * It is the main entry point for summary work.\n * It is created only by summarizing container (i.e. one with clientType === \"summarizer\")\n */\nexport class Summarizer extends EventEmitter implements ISummarizer {\n    public get IFluidLoadable() { return this; }\n    public get ISummarizer() { return this; }\n\n    private readonly logger: ITelemetryLogger;\n    private runningSummarizer?: RunningSummarizer;\n    private systemOpListener?: (op: ISequencedDocumentMessage) => void;\n    private opListener?: (error: any, op: ISequencedDocumentMessage) => void;\n    private _disposed: boolean = false;\n    private starting: boolean = false;\n\n    private readonly innerHandle: IFluidHandle<this>;\n\n    public get handle(): IFluidHandle<this> { return this.innerHandle; }\n    private readonly stopDeferred = new Deferred<SummarizerStopReason>();\n\n    constructor(\n        url: string,\n        /** Reference to runtime that created this object.\n         * i.e. runtime with clientType === \"summarizer\"\n         */\n        private readonly runtime: ISummarizerRuntime,\n        private readonly configurationGetter: () => ISummaryConfiguration,\n        /** Represents an object that can generate summary.\n         * In practical terms, it's same runtime (this.runtime) with clientType === \"summarizer\".\n        */\n        private readonly internalsProvider: ISummarizerInternalsProvider,\n        handleContext: IFluidHandleContext,\n        public readonly summaryCollection: SummaryCollection,\n        private readonly runCoordinatorCreateFn:\n            (runtime: IConnectableRuntime) => Promise<ICancellableSummarizerController>,\n    ) {\n        super();\n        this.logger = ChildLogger.create(this.runtime.logger, \"Summarizer\");\n        this.innerHandle = new SummarizerHandle(this, url, handleContext);\n    }\n\n    /**\n     * Creates a Summarizer and its underlying client.\n     * Note that different implementations of ILoader will handle the URL differently.\n     * ILoader provided by a ContainerRuntime is a RelativeLoader, which will treat URL's\n     * starting with \"/\" as relative to the Container. The general ILoader\n     * interface will expect an absolute URL and will not handle \"/\".\n     * @param loader - the loader that resolves the request\n     * @param url - the URL used to resolve the container\n     */\n    public static async create(\n        loader: ILoader,\n        url: string): Promise<ISummarizer> {\n        const request: IRequest = {\n            headers: {\n                [LoaderHeader.cache]: false,\n                [LoaderHeader.clientDetails]: {\n                    capabilities: { interactive: false },\n                    type: summarizerClientType,\n                },\n                [DriverHeader.summarizingClient]: true,\n                [LoaderHeader.reconnect]: false,\n            },\n            url,\n        };\n\n        const resolvedContainer = await loader.resolve(request);\n        const fluidObject =\n            await requestFluidObject<FluidObject<ISummarizer>>(resolvedContainer, { url: \"_summarizer\" });\n        if (fluidObject.ISummarizer === undefined) {\n            throw new UsageError(\"Fluid object does not implement ISummarizer\");\n        }\n        return fluidObject.ISummarizer;\n    }\n\n    public async run(onBehalfOf: string): Promise<SummarizerStopReason> {\n        try {\n            return await this.runCore(onBehalfOf);\n        } catch (error) {\n            this.stop(\"summarizerException\");\n            throw SummarizingWarning.wrap(error, false /* logged */, this.logger);\n        } finally {\n            this.close();\n        }\n    }\n\n    /**\n     * Stops the summarizer from running.  This will complete\n     * the run promise, and also close the container.\n     * @param reason - reason code for stopping\n     */\n    public stop(reason: SummarizerStopReason) {\n        this.stopDeferred.resolve(reason);\n    }\n\n    public close() {\n        // This will result in \"summarizerClientDisconnected\" stop reason recorded in telemetry,\n        // unless stop() was called earlier\n        this.dispose();\n        this.runtime.closeFn();\n    }\n\n    private async runCore(onBehalfOf: string): Promise<SummarizerStopReason> {\n        const runCoordinator: ICancellableSummarizerController = await this.runCoordinatorCreateFn(this.runtime);\n\n        // Wait for either external signal to cancel, or loss of connectivity.\n        const stopP = Promise.race([runCoordinator.waitCancelled, this.stopDeferred.promise]);\n        void stopP.then((reason) => {\n            this.logger.sendTelemetryEvent({\n                eventName: \"StoppingSummarizer\",\n                onBehalfOf,\n                reason,\n            });\n        });\n\n        if (runCoordinator.cancelled) {\n            return runCoordinator.waitCancelled;\n        }\n\n        const runningSummarizer = await this.start(onBehalfOf, runCoordinator);\n\n        // Wait for either external signal to cancel, or loss of connectivity.\n        const stopReason = await stopP;\n\n        // There are two possible approaches here:\n        // 1. Propagate cancellation from this.stopDeferred to runCoordinator. This will ensure that we move to the exit\n        //    faster, including breaking out of the RunningSummarizer.trySummarize() faster.\n        //    We could create new coordinator and pass it to waitStop() -> trySummarizeOnce(\"lastSummary\") flow.\n        //    The con of this approach is that we might cancel active summary, and lastSummary will fail because it\n        //    did not wait for ack/nack from previous summary. Plus we disregard any 429 kind of info from service\n        //    that way (i.e. trySummarize() loop might have been waiting for 5 min because storage told us so).\n        //    In general, it's more wasted resources.\n        // 2. We can not do it and make waitStop() do last summary only if there was no active summary. This ensures\n        //    that client behaves properly (from server POV) and we do not waste resources. But, it may mean we wait\n        //    substantially longer for trySummarize() retries to play out and thus this summary loop may run into\n        //    conflict with new summarizer client starting on different client.\n        // As of now, #2 is implemented. It's more forward looking, as issue #7279 suggests changing design for new\n        // summarizer client to not be created until current summarizer fully moves to exit, and that would reduce\n        // cons of #2 substantially.\n\n        // Cleanup after running\n        await runningSummarizer.waitStop(\n            !runCoordinator.cancelled && Summarizer.stopReasonCanRunLastSummary(stopReason));\n\n        // Propagate reason and ensure that if someone is waiting for cancellation token, they are moving to exit\n        runCoordinator.stop(stopReason);\n\n        return stopReason;\n    }\n\n    /**\n     * Should we try to run a last summary for the given stop reason?\n     * Currently only allows \"parentNotConnected\"\n     * @param stopReason - SummarizerStopReason\n     * @returns - true if the stop reason can run a last summary\n     */\n    public static stopReasonCanRunLastSummary(stopReason: SummarizerStopReason): boolean {\n        return stopReason === \"parentNotConnected\";\n    }\n\n    /**\n     * Put the summarizer in a started state, including creating and initializing the RunningSummarizer.\n     * The start request can come either from the SummaryManager (in the auto-summarize case) or from the user\n     * (in the on-demand case).\n     * @param onBehalfOf - ID of the client that requested that the summarizer start\n     * @param runCoordinator - cancellation token\n     * @param newConfig - Summary configuration to override the existing config when invoking the RunningSummarizer.\n     * @returns - Promise that is fulfilled when the RunningSummarizer is ready\n     */\n    private async start(\n        onBehalfOf: string,\n        runCoordinator: ICancellableSummarizerController): Promise<RunningSummarizer> {\n        if (this.runningSummarizer) {\n            if (this.runningSummarizer.disposed) {\n                throw new UsageError(\"Starting a disposed summarizer\");\n            }\n            return this.runningSummarizer;\n        }\n        if (this.starting) {\n            throw new UsageError(\"Attempting to start a summarizer that is already starting\");\n        }\n        this.starting = true;\n        // Initialize values and first ack (time is not exact)\n        this.logger.sendTelemetryEvent({\n            eventName: \"RunningSummarizer\",\n            onBehalfOf,\n            initSummarySeqNumber: this.runtime.deltaManager.initialSequenceNumber,\n            config: JSON.stringify(this.configurationGetter()),\n        });\n\n        // Summarizing container ID (with clientType === \"summarizer\")\n        const clientId = this.runtime.clientId;\n        if (clientId === undefined) {\n            throw new UsageError(\"clientId should be defined if connected.\");\n        }\n\n        const runningSummarizer = await RunningSummarizer.start(\n            this.logger,\n            this.summaryCollection.createWatcher(clientId),\n            this.configurationGetter(),\n            async (...args) => this.internalsProvider.submitSummary(...args), // submitSummaryCallback\n            new SummarizeHeuristicData(\n                this.runtime.deltaManager.lastSequenceNumber,\n                { /** summary attempt baseline for heuristics */\n                    refSequenceNumber: this.runtime.deltaManager.initialSequenceNumber,\n                    summaryTime: Date.now(),\n                } as const,\n            ),\n            (errorMessage: string) => {\n                if (!this._disposed) {\n                    this.logger.sendErrorEvent({ eventName: \"summarizingError\" },\n                        createSummarizingWarning(errorMessage, true));\n                }\n            },\n            this.summaryCollection,\n            runCoordinator /* cancellationToken */,\n            (reason) => runCoordinator.stop(reason), /* stopSummarizerCallback */\n        );\n        this.runningSummarizer = runningSummarizer;\n        this.starting = false;\n\n        // Handle summary acks\n        // Note: no exceptions are thrown from handleSummaryAcks handler as it handles all exceptions\n        this.handleSummaryAcks().catch((error) => {\n            this.logger.sendErrorEvent({ eventName: \"HandleSummaryAckFatalError\" }, error);\n        });\n\n        // Listen for ops\n        this.systemOpListener = (op: ISequencedDocumentMessage) => runningSummarizer.handleSystemOp(op);\n        this.runtime.deltaManager.inbound.on(\"op\", this.systemOpListener);\n\n        this.opListener = (error: any, op: ISequencedDocumentMessage) => runningSummarizer.handleOp(error, op);\n        this.runtime.on(\"batchEnd\", this.opListener);\n\n        return runningSummarizer;\n    }\n\n    /**\n     * Disposes of resources after running.  This cleanup will\n     * clear any outstanding timers and reset some of the state\n     * properties.\n     * Called by ContainerRuntime when it is disposed, as well as at the end the run().\n     */\n    public dispose() {\n        // Given that the call can come from own ContainerRuntime, ensure that we stop all the processes.\n        this.stop(\"summarizerClientDisconnected\");\n\n        this._disposed = true;\n        if (this.runningSummarizer) {\n            this.runningSummarizer.dispose();\n            this.runningSummarizer = undefined;\n        }\n        if (this.systemOpListener) {\n            this.runtime.deltaManager.inbound.off(\"op\", this.systemOpListener);\n        }\n        if (this.opListener) {\n            this.runtime.removeListener(\"batchEnd\", this.opListener);\n        }\n    }\n\n    public readonly summarizeOnDemand: ISummarizer[\"summarizeOnDemand\"] = (...args) => {\n        try {\n            if (this._disposed || this.runningSummarizer?.disposed) {\n                throw new UsageError(\"Summarizer is already disposed.\");\n            }\n            if (this.runtime.summarizerClientId !== undefined &&\n                this.runtime.summarizerClientId !== this.runtime.clientId) {\n                // If there is an elected summarizer, and it's not this one, don't allow on-demand summary.\n                // This is to prevent the on-demand summary and heuristic-based summary from stepping on\n                // each other.\n                throw new UsageError(\"On-demand summary attempted while an elected summarizer is present\");\n            }\n            const builder = new SummarizeResultBuilder();\n            if (this.runningSummarizer) {\n                // Summarizer is already running. Go ahead and start.\n                return this.runningSummarizer.summarizeOnDemand(builder, ...args);\n            }\n\n            // Summarizer isn't running, so we need to start it, which is an async operation.\n            // Manage the promise related to creating the cancellation token here.\n            // The promises related to starting, summarizing,\n            // and submitting are communicated to the caller through the results builder.\n            const coordinatorCreateP = this.runCoordinatorCreateFn(this.runtime);\n\n            coordinatorCreateP.then((runCoordinator) => {\n                // Successully created the cancellation token. Start the summarizer.\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const startP = this.start(this.runtime.clientId!, runCoordinator);\n                startP.then(async (runningSummarizer) => {\n                    // Successfully started the summarizer. Run it.\n                    runningSummarizer.summarizeOnDemand(builder, ...args);\n                    // Wait for a command to stop or loss of connectivity before tearing down the summarizer and client.\n                    const stopReason = await Promise.race([this.stopDeferred.promise, runCoordinator.waitCancelled]);\n                    await runningSummarizer.waitStop(false);\n                    runCoordinator.stop(stopReason);\n                    this.close();\n                }).catch((reason) => {\n                    builder.fail(\"Failed to start summarizer\", reason);\n                });\n            }).catch((reason) => {\n                builder.fail(\"Failed to create cancellation token\", reason);\n            });\n\n            return builder.build();\n        } catch (error) {\n            throw SummarizingWarning.wrap(error, false /* logged */, this.logger);\n        }\n    };\n\n    public readonly enqueueSummarize: ISummarizer[\"enqueueSummarize\"] = (...args) => {\n        if (this._disposed || this.runningSummarizer === undefined || this.runningSummarizer.disposed) {\n            throw new UsageError(\"Summarizer is not running or already disposed.\");\n        }\n        return this.runningSummarizer.enqueueSummarize(...args);\n    };\n\n    private async handleSummaryAcks() {\n        let refSequenceNumber = this.runtime.deltaManager.initialSequenceNumber;\n        while (this.runningSummarizer) {\n            const summaryLogger = this.runningSummarizer.tryGetCorrelatedLogger(refSequenceNumber) ?? this.logger;\n            try {\n                const ack = await this.summaryCollection.waitSummaryAck(refSequenceNumber);\n                refSequenceNumber = ack.summaryOp.referenceSequenceNumber;\n\n                await this.internalsProvider.refreshLatestSummaryAck(\n                    ack.summaryOp.contents.handle,\n                    ack.summaryAck.contents.handle,\n                    refSequenceNumber,\n                    summaryLogger,\n                );\n            } catch (error) {\n                summaryLogger.sendErrorEvent({\n                    eventName: \"HandleSummaryAckError\",\n                    referenceSequenceNumber: refSequenceNumber,\n                }, error);\n            }\n            refSequenceNumber++;\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { performance } from \"@fluidframework/common-utils\";\nimport { IDeltaManager } from \"@fluidframework/container-definitions\";\nimport {\n    IDocumentMessage,\n    ISequencedDocumentMessage,\n} from \"@fluidframework/protocol-definitions\";\n\nimport {\n    TelemetryLogger,\n} from \"@fluidframework/telemetry-utils\";\n/**\n * DeltaScheduler is responsible for the scheduling of inbound delta queue in cases where there\n * is more than one op a particular run of the queue. It does not schedule if there is just one\n * op or just one batch in the run. It does the following two things:\n * 1. If the ops have been processed for more than a specific amount of time, it pauses the queue\n *    and calls setTimeout to schedule a resume of the queue. This ensures that we don't block\n *    the JS thread for a long time processing ops synchronously (for example, when catching up\n *    ops right after boot or catching up ops / delayed realizing data stores by summarizer).\n * 2. If we scheduled a particular run of the queue, it logs telemetry for the number of ops\n *    processed, the time and number of turns it took to process the ops.\n */\nexport class DeltaScheduler {\n    private readonly deltaManager: IDeltaManager<ISequencedDocumentMessage, IDocumentMessage>;\n    // The time for processing ops in a single turn.\n    public static readonly processingTime = 50;\n\n    // The increase in time for processing ops after each turn.\n    private readonly processingTimeIncrement = 10;\n\n    private processingStartTime: number | undefined;\n    private currentAllowedProcessingTimeForTurn: number = DeltaScheduler.processingTime;\n\n    // This keeps track of the number of times inbound queue has been scheduled. After a particular\n    // count, we log telemetry for the number of ops processed, the time and number of turns it took\n    // to process the ops.\n    private schedulingCount: number = 0;\n\n    private schedulingLog: {\n        opsRemainingToProcess: number;\n        totalProcessingTime: number;\n        numberOfTurns: number;\n        numberOfBatchesProcessed: number;\n        lastSequenceNumber: number;\n        firstSequenceNumber: number;\n        startTime: number;\n    } | undefined;\n\n    constructor(\n        deltaManager: IDeltaManager<ISequencedDocumentMessage, IDocumentMessage>,\n        private readonly logger: ITelemetryLogger,\n    ) {\n        this.deltaManager = deltaManager;\n        this.deltaManager.inbound.on(\"idle\", () => { this.inboundQueueIdle(); });\n    }\n\n    public batchBegin(message: ISequencedDocumentMessage) {\n        if (!this.processingStartTime) {\n            this.processingStartTime = performance.now();\n        }\n        if (this.schedulingLog === undefined && this.schedulingCount % 500 === 0) {\n            // Every 500th time we are scheduling the inbound queue, we log telemetry for the\n            // number of ops processed, the time and number of turns it took to process the ops.\n            this.schedulingLog = {\n                opsRemainingToProcess: 0,\n                numberOfTurns: 1,\n                totalProcessingTime: 0,\n                numberOfBatchesProcessed: 0,\n                firstSequenceNumber: message.sequenceNumber,\n                lastSequenceNumber: message.sequenceNumber,\n                startTime: performance.now(),\n            };\n        }\n    }\n\n    public batchEnd(message: ISequencedDocumentMessage) {\n        if (this.schedulingLog) {\n            this.schedulingLog.numberOfBatchesProcessed++;\n            this.schedulingLog.lastSequenceNumber = message.sequenceNumber;\n            this.schedulingLog.opsRemainingToProcess = this.deltaManager.inbound.length;\n        }\n\n        if (this.shouldRunScheduler()) {\n            const currentTime = performance.now();\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const elapsedTime = currentTime - this.processingStartTime!;\n            if (elapsedTime > this.currentAllowedProcessingTimeForTurn) {\n                // We have processed ops for more than the total processing time. So, pause the\n                // queue, yield the thread and schedule a resume.\n\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                this.deltaManager.inbound.pause();\n\n                 // Increase the total processing time. Keep doing this after each turn until all the ops have\n                // been processed. This way we keep the responsiveness at the beginning while also making sure\n                // that all the ops process fairly quickly.\n                this.currentAllowedProcessingTimeForTurn += this.processingTimeIncrement;\n\n                // If we are logging the telemetry this time, update the telemetry log object.\n                if (this.schedulingLog) {\n                    this.schedulingLog.numberOfTurns++;\n                    this.schedulingLog.totalProcessingTime += elapsedTime;\n                }\n\n                setTimeout(() => {\n                    if (this.schedulingLog) {\n                        this.logger.sendTelemetryEvent({\n                            eventName: \"InboundOpsPartialProcessingTime\",\n                            duration: TelemetryLogger.formatTick(elapsedTime),\n                            opsProcessed: this.schedulingLog.lastSequenceNumber -\n                                this.schedulingLog.firstSequenceNumber + 1,\n                            opsRemainingToProcess: this.deltaManager.inbound.length,\n                            processingTime: TelemetryLogger.formatTick(this.schedulingLog.totalProcessingTime),\n                            numberOfTurns: this.schedulingLog.numberOfTurns,\n                            batchesProcessed: this.schedulingLog.numberOfBatchesProcessed,\n                            timeToResume: TelemetryLogger.formatTick(performance.now() - currentTime),\n                        });\n                    }\n                    this.deltaManager.inbound.resume();\n                });\n\n                this.processingStartTime = undefined;\n            }\n        }\n    }\n\n    private inboundQueueIdle() {\n        if (this.schedulingLog) {\n            // Add the time taken for processing the final ops to the total processing time in the\n            // telemetry log object.\n            const currentTime = performance.now();\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.schedulingLog.totalProcessingTime += currentTime - this.processingStartTime!;\n\n            this.logger.sendTelemetryEvent({\n                eventName: \"InboundOpsProcessingTime\",\n                opsRemainingToProcess: this.schedulingLog.opsRemainingToProcess,\n                numberOfTurns: this.schedulingLog.numberOfTurns,\n                processingTime: TelemetryLogger.formatTick(this.schedulingLog.totalProcessingTime),\n                opsProcessed: this.schedulingLog.lastSequenceNumber - this.schedulingLog.firstSequenceNumber + 1,\n                batchesProcessed: this.schedulingLog.numberOfBatchesProcessed,\n                duration: TelemetryLogger.formatTick(currentTime - this.schedulingLog.startTime),\n                schedulingCount: this.schedulingCount,\n            });\n\n            this.schedulingLog = undefined;\n        }\n\n        // If we scheduled this batch of the inbound queue, increment the counter that tracks the\n        // number of times we have done this.\n        this.schedulingCount++;\n\n        // Reset the processing times.\n        this.processingStartTime = undefined;\n        this.currentAllowedProcessingTimeForTurn = DeltaScheduler.processingTime;\n    }\n\n    /**\n     * This function tells whether we should run the scheduler.\n     */\n    private shouldRunScheduler(): boolean {\n        // If there are still ops in the queue after the one we are processing now, we should\n        // run the scheduler.\n        return this.deltaManager.inbound.length > 0;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { ChildLogger, TelemetryLogger } from \"@fluidframework/telemetry-utils\";\nimport { IDeltaManager } from \"@fluidframework/container-definitions\";\nimport {\n    IDocumentMessage,\n    ISequencedDocumentMessage,\n    MessageType,\n} from \"@fluidframework/protocol-definitions\";\nimport { assert, performance } from \"@fluidframework/common-utils\";\n\n/**\n * We report various latency-related errors when waiting for op roundtrip takes longer than that amout of time.\n */\nexport const latencyThreshold = 5000;\n\n// Phases in OpPerfTelemetry:\n// 1.\tOp is added to DeltaManager (DM) buffer.\n// 2.\tOp is sent to service (op leaves outbound queue).\n// \t - Note: We do not know for sure when op is sent, we only track when it is added to outbound queue.\n//     If outbound queue is paused, time queue is paused is counted as network time.\n// 3.\tOp received from service back (pushed to inbound queue).\n// 4.\tOp is processed.\ninterface IOpPerfTelemetryProperties {\n    /** Measure time between (1) and (2) - Measure time outbound op is sitting in queue due to active batch */\n    durationOutboundBatching: number; // was durationOutboundQueue in previous versions\n    /** Measure time between (2) and (3) - Track how long it took for op to be acked by service */\n    durationNetwork: number; // was durationInboundQueue\n    /** Measure time between (3) and (4) - Time between DM's inbound \"push\" event until DM's \"op\" event */\n    durationInboundToProcessing: number;\n    /** Length of the DeltaManager's inbound queue at the time of the DM's inbound \"push\" event (3) */\n    lengthInboundQueue: number;\n}\n\n/**\n * Timings collected at various moments during the op processing.\n */\n interface IOpPerfTimings {\n     /** Starting time for (1) */\n    submitOpEventTime: number;\n     /** Starting time for (2) */\n     outboundPushEventTime: number;\n     /** Starting time for (3) */\n     inboundPushEventTime: number;\n}\n\nclass OpPerfTelemetry {\n    private pongCount: number = 0;\n    private pingLatency: number | undefined;\n\n    // Collab window tracking. This is timestamp of %1000 message.\n    private sequenceNumberForMsnTracking: number | undefined;\n    private msnTrackingTimestamp: number = 0;\n    // To track round trip time for every %500 client message.\n    private clientSequenceNumberForLatencyStatistics: number | undefined;\n\n    private opProcessingTimes: Partial<IOpPerfTimings> = {};\n\n    // Performance Data to be reported for ops round trips and processing.\n    private opPerfData: Partial<IOpPerfTelemetryProperties> = {};\n\n    private firstConnection = true;\n    private connectionOpSeqNumber: number | undefined;\n    private readonly bootTime = performance.now();\n    private connectionStartTime = 0;\n    private gap = 0;\n\n    private readonly logger: ITelemetryLogger;\n\n    public constructor(\n        private clientId: string | undefined,\n        private readonly deltaManager: IDeltaManager<ISequencedDocumentMessage, IDocumentMessage>,\n        logger: ITelemetryLogger) {\n        this.logger = ChildLogger.create(logger, \"OpPerf\");\n\n        this.deltaManager.on(\"pong\", (latency) => this.recordPingTime(latency));\n        this.deltaManager.on(\"submitOp\", (message) => this.beforeOpSubmit(message));\n\n        this.deltaManager.on(\"op\", (message) => this.afterProcessingOp(message));\n\n        this.deltaManager.on(\"connect\", (details, opsBehind) => {\n            this.clientId = details.clientId;\n            if (opsBehind !== undefined) {\n                this.connectionOpSeqNumber = this.deltaManager.lastKnownSeqNumber;\n                this.gap = opsBehind;\n                this.connectionStartTime = performance.now();\n\n                // We might be already up-today. If so, report it right away.\n                if (this.gap <= 0) {\n                    this.reportGettingUpToDate();\n                }\n            }\n        });\n        this.deltaManager.on(\"disconnect\", () => {\n            this.sequenceNumberForMsnTracking = undefined;\n            this.clientSequenceNumberForLatencyStatistics = undefined;\n            this.opProcessingTimes = {};\n            this.opPerfData = {};\n            this.connectionOpSeqNumber = undefined;\n            this.firstConnection = false;\n            this.pongCount = 0;\n        });\n\n        this.deltaManager.outbound.on(\"push\", (messages) => {\n            for (const msg of messages) {\n                if (msg.type === MessageType.Operation &&\n                    this.clientSequenceNumberForLatencyStatistics === msg.clientSequenceNumber) {\n                    assert(this.opProcessingTimes.outboundPushEventTime === undefined,\n                        0x2c8 /* \"outboundPushEventTime should be undefined\" */);\n                    assert(this.opPerfData.durationNetwork === undefined,\n                        0x2c9 /* \"durationNetwork should be undefined\" */);\n                    this.opProcessingTimes.outboundPushEventTime = Date.now();\n\n                    assert(this.opPerfData.durationOutboundBatching === undefined,\n                        0x2ca /* \"durationOutboundBatching should be undefined\" */);\n\n                    assert(this.opProcessingTimes.submitOpEventTime !== undefined,\n                        0x2cb /* \"submitOpEventTime should be undefined\" */);\n\n                    this.opPerfData.durationOutboundBatching = this.opProcessingTimes.outboundPushEventTime\n                        - this.opProcessingTimes.submitOpEventTime;\n                }\n            }\n        });\n\n        this.deltaManager.inbound.on(\"push\", (message: ISequencedDocumentMessage) => {\n            if (this.clientId === message.clientId &&\n                message.type === MessageType.Operation &&\n                this.clientSequenceNumberForLatencyStatistics === message.clientSequenceNumber &&\n                this.opProcessingTimes.outboundPushEventTime !== undefined) {\n                this.opProcessingTimes.inboundPushEventTime = Date.now();\n                this.opPerfData.durationNetwork = this.opProcessingTimes.inboundPushEventTime\n                                     - this.opProcessingTimes.outboundPushEventTime;\n                this.opProcessingTimes.outboundPushEventTime = undefined;\n                this.opPerfData.lengthInboundQueue = this.deltaManager.inbound.length;\n            }\n        });\n\n        this.deltaManager.inbound.on(\"idle\", (count: number, duration: number) => {\n            // Do not want to log zero for sure.\n            // We are more interested in aggregates, so logging only if we are processing some number of ops\n            // Cut-off is arbitrary - can be increased or decreased based on amount of data collected and questions we\n            // want to get answered\n            // back-compat: Once 0.36 loader version saturates (count & duration args were added there),\n            // we can remove typeof check.\n            if (typeof count === \"number\" && count >= 100) {\n                this.logger.sendPerformanceEvent({\n                    eventName: \"GetDeltas_OpProcessing\",\n                    count,\n                    duration,\n                });\n            }\n        });\n    }\n\n    private reportGettingUpToDate() {\n        this.connectionOpSeqNumber = undefined;\n        this.logger.sendPerformanceEvent({\n            eventName: \"ConnectionSpeed\",\n            duration: performance.now() - this.connectionStartTime,\n            ops: this.gap,\n            // track time to connect only for first connection.\n            timeToConnect: this.firstConnection ?\n                TelemetryLogger.formatTick(this.connectionStartTime - this.bootTime) :\n                undefined,\n            firstConnection: this.firstConnection,\n        });\n    }\n\n    private recordPingTime(latency: number) {\n        this.pingLatency = latency;\n        // logging one in every 1000 pongs, including the first time, if it is a \"write\" client.\n        if (this.pongCount % 100 === 0 && this.deltaManager.active) {\n            this.logger.sendPerformanceEvent({\n                eventName: \"DeltaLatency\",\n                duration: latency,\n            });\n        }\n        this.pongCount++;\n    }\n\n    private beforeOpSubmit(message: IDocumentMessage) {\n        // start with first client op and measure latency every 500 client ops\n        if (this.clientSequenceNumberForLatencyStatistics === undefined &&\n            message.clientSequenceNumber % 500 === 1) {\n            assert(this.opProcessingTimes.outboundPushEventTime === undefined,\n                0x2cc /* \"OpTimeSittingInboundQueue should be undefined\" */);\n            assert(this.opPerfData.durationNetwork === undefined,\n                0x2cd /* \"durationNetwork should be undefined\" */);\n            this.opProcessingTimes.submitOpEventTime = Date.now();\n            this.clientSequenceNumberForLatencyStatistics = message.clientSequenceNumber;\n        }\n    }\n\n    private afterProcessingOp(message: ISequencedDocumentMessage) {\n        const sequenceNumber = message.sequenceNumber;\n\n        if (sequenceNumber === this.connectionOpSeqNumber) {\n            this.reportGettingUpToDate();\n        }\n\n        // Record collab window max size after every 1000th op.\n        if (this.sequenceNumberForMsnTracking === undefined && sequenceNumber % 1000 === 0) {\n            this.sequenceNumberForMsnTracking = sequenceNumber;\n            this.msnTrackingTimestamp = message.timestamp;\n        }\n        if (this.sequenceNumberForMsnTracking !== undefined &&\n                message.minimumSequenceNumber >= this.sequenceNumberForMsnTracking) {\n            assert(this.msnTrackingTimestamp !== undefined,\n                0x2ce /* \"msnTrackingTimestamp should not be undefined\" */);\n            this.logger.sendPerformanceEvent({\n                eventName: \"MsnStatistics\",\n                sequenceNumber,\n                msnDistance: sequenceNumber - this.sequenceNumberForMsnTracking,\n                duration: message.timestamp - this.msnTrackingTimestamp,\n            });\n            this.sequenceNumberForMsnTracking = undefined;\n        }\n\n        if (this.clientId === message.clientId &&\n            this.clientSequenceNumberForLatencyStatistics === message.clientSequenceNumber) {\n            assert(this.opProcessingTimes.submitOpEventTime !== undefined,\n                0x120 /* \"Undefined latency statistics (op send time)\" */);\n            const currentTime = Date.now();\n\n            if (this.opProcessingTimes.inboundPushEventTime !== undefined) {\n                this.opPerfData.durationInboundToProcessing = currentTime\n                - this.opProcessingTimes.inboundPushEventTime;\n            }\n\n            const duration = currentTime - this.opProcessingTimes.submitOpEventTime;\n\n            // One of the core expectations for Fluid service is to be fast.\n            // When it's not the case, we want to learn about it and be able to investigate, so\n            // raise awareness.\n            // This also helps identify cases where it's due to client behavior (sending too many ops)\n            // that results in overwhelming ordering service and thus starting to see long latencies.\n            // The threshold could be adjusted, but ideally it stays  workload-agnostic, as service\n            // performance impacts all workloads relying on service.\n            const category = duration > latencyThreshold ? \"error\" : \"performance\";\n\n            this.logger.sendPerformanceEvent({\n                eventName: \"OpRoundtripTime\",\n                sequenceNumber,\n                referenceSequenceNumber: message.referenceSequenceNumber,\n                duration,\n                category,\n                pingLatency: this.pingLatency,\n                msnDistance: this.deltaManager.lastSequenceNumber - this.deltaManager.minimumSequenceNumber,\n                ...this.opPerfData,\n            });\n            this.clientSequenceNumberForLatencyStatistics = undefined;\n            this.opPerfData = {};\n        }\n    }\n}\nexport interface IPerfSignalReport {\n    /**\n     * Identifier for the signal being submitted in order to\n     * allow collection of data around the roundtrip of signal messages.\n     */\n    signalSequenceNumber: number;\n    /**\n     * Number of signals that were expected but not received.\n     */\n    signalsLost: number;\n\n    /**\n     * Timestamp before submitting the signal we will trace.\n     */\n    signalTimestamp: number;\n\n    /**\n     * Expected Signal Sequence to be received.\n     */\n    trackingSignalSequenceNumber: number | undefined;\n}\n\nexport function ReportOpPerfTelemetry(\n    clientId: string | undefined,\n    deltaManager: IDeltaManager<ISequencedDocumentMessage, IDocumentMessage>,\n    logger: ITelemetryLogger) {\n    new OpPerfTelemetry(clientId, deltaManager, logger);\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IDisposable } from \"@fluidframework/common-definitions\";\nimport { assert, Lazy } from \"@fluidframework/common-utils\";\nimport { ICriticalContainerError } from \"@fluidframework/container-definitions\";\nimport { DataProcessingError } from \"@fluidframework/container-utils\";\nimport {\n    ISequencedDocumentMessage,\n} from \"@fluidframework/protocol-definitions\";\nimport { FlushMode } from \"@fluidframework/runtime-definitions\";\nimport { wrapError } from \"@fluidframework/telemetry-utils\";\nimport Deque from \"double-ended-queue\";\nimport { ContainerMessageType } from \"./containerRuntime\";\n\n/**\n * This represents a message that has been submitted and is added to the pending queue when `submit` is called on the\n * ContainerRuntime. This message has either not been ack'd by the server or has not been submitted to the server yet.\n */\nexport interface IPendingMessage {\n    type: \"message\";\n    messageType: ContainerMessageType;\n    clientSequenceNumber: number;\n    referenceSequenceNumber: number;\n    content: any;\n    localOpMetadata: unknown;\n    opMetadata: Record<string, unknown> | undefined;\n}\n\n/**\n * This represents a FlushMode update and is added to the pending queue when `setFlushMode` is called on the\n * ContainerRuntime and the FlushMode changes.\n */\nexport interface IPendingFlushMode {\n    type: \"flushMode\";\n    flushMode: FlushMode;\n}\n\n/**\n * This represents an explicit flush call and is added to the pending queue when flush is called on the ContainerRuntime\n * to flush pending messages.\n */\nexport interface IPendingFlush {\n    type: \"flush\";\n}\n\nexport type IPendingState = IPendingMessage | IPendingFlushMode | IPendingFlush;\n\nexport interface IPendingLocalState {\n    /**\n     * list of pending states, including ops and batch information\n     */\n    pendingStates: IPendingState[];\n}\n\nexport interface IRuntimeStateHandler{\n    connected(): boolean;\n    clientId(): string | undefined;\n    flushMode(): FlushMode;\n    setFlushMode(mode: FlushMode): void;\n    close(error?: ICriticalContainerError): void;\n    applyStashedOp: (type: ContainerMessageType, content: ISequencedDocumentMessage) => Promise<unknown>;\n    flush(): void;\n    reSubmit(\n        type: ContainerMessageType,\n        content: any,\n        localOpMetadata: unknown,\n        opMetadata: Record<string, unknown> | undefined): void;\n    rollback(\n        type: ContainerMessageType,\n        content: any,\n        localOpMetadata: unknown): void;\n}\n\n/**\n * PendingStateManager is responsible for maintaining the messages that have not been sent or have not yet been\n * acknowledged by the server. It also maintains the batch information for both automatically and manually flushed\n * batches along with the messages.\n * When the Container reconnects, it replays the pending states, which includes setting the FlushMode, manual flushing\n * of messages and triggering resubmission of unacked ops.\n *\n * It verifies that all the ops are acked, are received in the right order and batch information is correct.\n */\nexport class PendingStateManager implements IDisposable {\n    private readonly pendingStates = new Deque<IPendingState>();\n    private readonly initialStates: Deque<IPendingState>;\n    private readonly disposeOnce = new Lazy<void>(() => {\n        this.initialStates.clear();\n        this.pendingStates.clear();\n    });\n\n    // Maintains the count of messages that are currently unacked.\n    private _pendingMessagesCount: number = 0;\n    public get pendingMessagesCount(): number {\n        return this._pendingMessagesCount;\n    }\n\n    // Indicates whether we are processing a batch.\n    private isProcessingBatch: boolean = false;\n\n    // This stores the first message in the batch that we are processing. This is used to verify that we get\n    // the correct batch metadata.\n    private pendingBatchBeginMessage: ISequencedDocumentMessage | undefined;\n\n    /**\n     * This tracks the flush mode for the next message in the pending state queue. When replaying messages, we need to\n     * first set the flush mode to this value and then send ops. It is important to do this info because the flush\n     * mode could have been updated.\n     */\n    private flushModeForNextMessage: FlushMode;\n\n    private clientId: string | undefined;\n\n    /**\n     * Called to check if there are any pending messages in the pending state queue.\n     * @returns A boolean indicating whether there are messages or not.\n     */\n    public hasPendingMessages(): boolean {\n        return this._pendingMessagesCount !== 0 || !this.initialStates.isEmpty();\n    }\n\n    public getLocalState(): IPendingLocalState | undefined {\n        assert(this.initialStates.isEmpty(), 0x2e9 /* \"Must call getLocalState() after applying initial states\" */);\n        if (this.hasPendingMessages()) {\n            return {\n                pendingStates: this.pendingStates.toArray().map(\n                    // delete localOpMetadata since it may not be serializable\n                    // and will be regenerated by applyStashedOp()\n                    (state) => state.type === \"message\" ? { ...state, localOpMetadata: undefined } : state),\n            };\n        }\n    }\n\n    constructor(\n        private readonly stateHandler: IRuntimeStateHandler,\n        initialFlushMode: FlushMode,\n        initialLocalState: IPendingLocalState | undefined,\n    ) {\n        this.initialStates = new Deque<IPendingState>(initialLocalState?.pendingStates ?? []);\n\n        this.flushModeForNextMessage = initialFlushMode;\n        this.onFlushModeUpdated(initialFlushMode);\n    }\n\n    public get disposed() { return this.disposeOnce.evaluated; }\n    public readonly dispose = () => this.disposeOnce.value;\n\n    /**\n     * Called when a message is submitted locally. Adds the message and the associated details to the pending state\n     * queue.\n     * @param type - The container message type.\n     * @param clientSequenceNumber - The clientSequenceNumber associated with the message.\n     * @param content - The message content.\n     * @param localOpMetadata - The local metadata associated with the message.\n     */\n    public onSubmitMessage(\n        type: ContainerMessageType,\n        clientSequenceNumber: number,\n        referenceSequenceNumber: number,\n        content: any,\n        localOpMetadata: unknown,\n        opMetadata: Record<string, unknown> | undefined,\n    ) {\n        const pendingMessage: IPendingMessage = {\n            type: \"message\",\n            messageType: type,\n            clientSequenceNumber,\n            referenceSequenceNumber,\n            content,\n            localOpMetadata,\n            opMetadata,\n        };\n\n        this.pendingStates.push(pendingMessage);\n\n        this._pendingMessagesCount++;\n    }\n\n    /**\n     * Called when the FlushMode is updated. Adds the FlushMode to the pending state queue.\n     * @param flushMode - The flushMode that was updated.\n     */\n    public onFlushModeUpdated(flushMode: FlushMode) {\n        this.pendingStates.push({ type: \"flushMode\", flushMode });\n    }\n\n    /**\n     * Called when flush() is called on the ContainerRuntime to manually flush messages.\n     */\n    public onFlush() {\n        // If the FlushMode is Immediate, we don't need to track an explicit flush call because every message is\n        // automatically flushed. So, flush is a no-op.\n        if (this.stateHandler.flushMode() === FlushMode.Immediate) {\n            return;\n        }\n\n        // If the previous state is not a message, flush is a no-op.\n        const previousState = this.pendingStates.peekBack();\n        if (previousState?.type !== \"message\") {\n            return;\n        }\n\n        // An explicit flush is interesting and is tracked only if there are messages sent in TurnBased mode.\n        this.pendingStates.push({ type: \"flush\" });\n    }\n\n    /**\n     * Applies stashed ops at their reference sequence number so they are ready to be ACKed or resubmitted\n     * @param seqNum - Sequence number at which to apply ops. Will apply all ops if seqNum is undefined.\n     */\n    public async applyStashedOpsAt(seqNum?: number) {\n        // apply stashed ops at sequence number\n        while (!this.initialStates.isEmpty()) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const nextState = this.initialStates.peekFront()!;\n            if (nextState.type === \"message\") {\n                if (seqNum !== undefined) {\n                    if (nextState.referenceSequenceNumber > seqNum) {\n                        break; // nothing left to do at this sequence number\n                    } else if (nextState.referenceSequenceNumber < seqNum) {\n                        throw new Error(\"loaded from snapshot too recent to apply stashed ops\");\n                    }\n                }\n\n                // applyStashedOp will cause the DDS to behave as if it has sent the op but not actually send it\n                const localOpMetadata =\n                    await this.stateHandler.applyStashedOp(nextState.messageType, nextState.content);\n                nextState.localOpMetadata = localOpMetadata;\n            }\n\n            // then we push onto pendingStates which will cause PendingStateManager to resubmit when we connect\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.pendingStates.push(this.initialStates.shift()!);\n        }\n    }\n\n    /**\n     * Processes a local message once its ack'd by the server. It verifies that there was no data corruption and that\n     * the batch information was preserved for batch messages.\n     * @param message - The message that got ack'd and needs to be processed.\n     */\n    public processPendingLocalMessage(message: ISequencedDocumentMessage): unknown {\n        // Pre-processing part - This may be the start of a batch.\n        this.maybeProcessBatchBegin(message);\n\n        // Get the next state from the pending queue and verify that it is of type \"message\".\n        const pendingState = this.peekNextPendingState();\n        assert(pendingState.type === \"message\", 0x169 /* \"No pending message found for this remote message\" */);\n        this.pendingStates.shift();\n\n        // Processing part - Verify that there has been no data corruption.\n        // The clientSequenceNumber of the incoming message must match that of the pending message.\n        if (pendingState.clientSequenceNumber !== message.clientSequenceNumber) {\n            // Close the container because this could indicate data corruption.\n            const error = DataProcessingError.create(\n                \"pending local message clientSequenceNumber mismatch\",\n                \"unexpectedAckReceived\",\n                message,\n                { expectedClientSequenceNumber: pendingState.clientSequenceNumber },\n            );\n\n            this.stateHandler.close(error);\n            return;\n        }\n\n        this._pendingMessagesCount--;\n\n        // Post-processing part - If we are processing a batch then this could be the last message in the batch.\n        this.maybeProcessBatchEnd(message);\n\n        return pendingState.localOpMetadata;\n    }\n\n    /**\n     * This message could be the first message in batch. If so, set batch state marking the beginning of a batch.\n     * @param message - The message that is being processed.\n     */\n    private maybeProcessBatchBegin(message: ISequencedDocumentMessage) {\n        // Tracks the last FlushMode that was set before this message was sent.\n        let pendingFlushMode: FlushMode | undefined;\n        // Tracks whether a flush was called before this message was sent.\n        let pendingFlush: boolean = false;\n\n        /**\n         * We are checking if the next message is the start of a batch. It can happen in the following scenarios:\n         * 1. The FlushMode was set to TurnBased before this message was sent.\n         * 2. The FlushMode was already TurnBased and a flush was called before this message was sent. This essentially\n         *    means that the flush marked the end of a previous batch and beginning of a new batch.\n         *\n         * Keep reading pending states from the queue until we encounter a message. It's possible that the FlushMode was\n         * updated a bunch of times without sending any messages.\n         */\n        let nextPendingState = this.peekNextPendingState();\n        while (nextPendingState.type !== \"message\") {\n            if (nextPendingState.type === \"flushMode\") {\n                pendingFlushMode = nextPendingState.flushMode;\n            }\n            if (nextPendingState.type === \"flush\") {\n                pendingFlush = true;\n            }\n            this.pendingStates.shift();\n            nextPendingState = this.peekNextPendingState();\n        }\n\n        if (pendingFlushMode !== undefined) {\n            this.flushModeForNextMessage = pendingFlushMode;\n        }\n\n        // If the FlushMode was set to Immediate before this message was sent, this message won't be a batch message\n        // because in Immediate mode, every message is flushed individually.\n        if (pendingFlushMode === FlushMode.Immediate) {\n            return;\n        }\n\n        /**\n         * This message is the first in a batch if before it was sent either the FlushMode was set to TurnBased or there\n         * was an explicit flush call. Note that a flush call is tracked only in TurnBased mode and it indicates the end\n         * of one batch and beginning of another.\n         */\n        if (pendingFlushMode === FlushMode.TurnBased || pendingFlush) {\n            // We should not already be processing a batch and there should be no pending batch begin message.\n            assert(!this.isProcessingBatch && this.pendingBatchBeginMessage === undefined,\n                0x16b /* \"The pending batch state indicates we are already processing a batch\" */);\n\n            // Set the pending batch state indicating we have started processing a batch.\n            this.pendingBatchBeginMessage = message;\n            this.isProcessingBatch = true;\n        }\n    }\n\n    /**\n     * This message could be the last message in batch. If so, clear batch state since the batch is complete.\n     * @param message - The message that is being processed.\n     */\n    private maybeProcessBatchEnd(message: ISequencedDocumentMessage) {\n        if (!this.isProcessingBatch) {\n            return;\n        }\n\n        const nextPendingState = this.peekNextPendingState();\n        if (nextPendingState.type === \"message\") {\n            return;\n        }\n\n        /**\n         * We are in the middle of processing a batch. The batch ends when we see an explicit flush. We should never see\n         * a FlushMode before flush. This is true because we track batches only when FlushMode is TurnBased and in this\n         * mode, a batch ends either by calling flush or by changing the mode to Immediate which also triggers a flush.\n         */\n        assert(\n            nextPendingState.type !== \"flushMode\",\n            0x2bd /* \"We should not see a pending FlushMode until we see a flush when processing a batch\" */,\n        );\n\n        // There should be a pending batch begin message.\n        assert(this.pendingBatchBeginMessage !== undefined, 0x16d /* \"There is no pending batch begin message\" */);\n\n        // Get the batch begin metadata from the first message in the batch.\n        const batchBeginMetadata = this.pendingBatchBeginMessage.metadata?.batch;\n\n        // There could be just a single message in the batch. If so, it should not have any batch metadata. If there\n        // are multiple messages in the batch, verify that we got the correct batch begin and end metadata.\n        if (this.pendingBatchBeginMessage === message) {\n            assert(batchBeginMetadata === undefined,\n                0x16e /* \"Batch with single message should not have batch metadata\" */);\n        } else {\n            // Get the batch metadata from the last message in the batch.\n            const batchEndMetadata = message.metadata?.batch;\n            assert(batchBeginMetadata === true, 0x16f /* \"Did not receive batch begin metadata\" */);\n            assert(batchEndMetadata === false, 0x170 /* \"Did not receive batch end metadata\" */);\n        }\n\n        // Clear the pending batch state now that we have processed the entire batch.\n        this.pendingBatchBeginMessage = undefined;\n        this.isProcessingBatch = false;\n    }\n\n    /**\n     * Capture the pending state at this point\n     */\n    public checkpoint() {\n        const checkpointHead = this.pendingStates.peekBack();\n        return {\n            rollback: () => {\n                try {\n                    while (this.pendingStates.peekBack() !== checkpointHead) {\n                        this.rollbackNextPendingState();\n                    }\n                } catch (err) {\n                    const error = wrapError(err, (message) => {\n                        return DataProcessingError.create(\n                            `RollbackError: ${message}`,\n                            \"checkpointRollback\",\n                            undefined) as DataProcessingError;\n                    });\n                    this.stateHandler.close(error);\n                    throw error;\n                }\n            },\n        };\n    }\n\n    /**\n     * Returns the next pending state from the pending state queue.\n     */\n    private peekNextPendingState(): IPendingState {\n        const nextPendingState = this.pendingStates.peekFront();\n        assert(!!nextPendingState, 0x171 /* \"No pending state found for the remote message\" */);\n        return nextPendingState;\n    }\n\n    /**\n     * Undo the last pending state\n     */\n    private rollbackNextPendingState() {\n        const pendingStatesCount = this.pendingStates.length;\n        if (pendingStatesCount === 0) {\n            return;\n        }\n\n        this._pendingMessagesCount--;\n\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const pendingState = this.pendingStates.pop()!;\n        switch (pendingState.type) {\n            case \"message\":\n                this.stateHandler.rollback(\n                    pendingState.messageType,\n                    pendingState.content,\n                    pendingState.localOpMetadata);\n                break;\n            default:\n                throw new Error(`Can't rollback state ${pendingState.type}`);\n        }\n    }\n\n    /**\n     * Called when the Container's connection state changes. If the Container gets connected, it replays all the pending\n     * states in its queue. This includes setting the FlushMode and triggering resubmission of unacked ops.\n     */\n    public replayPendingStates() {\n        assert(this.stateHandler.connected(), 0x172 /* \"The connection state is not consistent with the runtime\" */);\n\n        // This assert suggests we are about to send same ops twice, which will result in data loss.\n        assert(this.clientId !== this.stateHandler.clientId(),\n            0x173 /* \"replayPendingStates called twice for same clientId!\" */);\n        this.clientId = this.stateHandler.clientId();\n\n        assert(this.initialStates.isEmpty(), 0x174 /* \"initial states should be empty before replaying pending\" */);\n\n        let pendingStatesCount = this.pendingStates.length;\n        if (pendingStatesCount === 0) {\n            return;\n        }\n\n        // Reset the pending message count because all these messages will be removed from the queue.\n        this._pendingMessagesCount = 0;\n\n        // Save the current FlushMode so that we can revert it back after replaying the states.\n        const savedFlushMode = this.stateHandler.flushMode();\n\n        // Set the flush mode for the next message. This step is important because the flush mode may have been changed\n        // after the next pending message was sent.\n        this.stateHandler.setFlushMode(this.flushModeForNextMessage);\n\n        // Process exactly `pendingStatesCount` items in the queue as it represents the number of states that were\n        // pending when we connected. This is important because the `reSubmitFn` might add more items in the queue\n        // which must not be replayed.\n        while (pendingStatesCount > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const pendingState = this.pendingStates.shift()!;\n            switch (pendingState.type) {\n                case \"message\":\n                    this.stateHandler.reSubmit(\n                        pendingState.messageType,\n                        pendingState.content,\n                        pendingState.localOpMetadata,\n                        pendingState.opMetadata);\n                    break;\n                case \"flushMode\":\n                    this.stateHandler.setFlushMode(pendingState.flushMode);\n                    break;\n                case \"flush\":\n                    this.stateHandler.flush();\n                    break;\n                default:\n                    break;\n            }\n            pendingStatesCount--;\n        }\n\n        // Revert the FlushMode.\n        this.stateHandler.setFlushMode(savedFlushMode);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n *\n * THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY\n */\n\nexport const pkgName = \"@fluidframework/container-runtime\";\nexport const pkgVersion = \"1.2.3\";\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IFluidHandle, IFluidHandleContext } from \"@fluidframework/core-interfaces\";\nimport { IDocumentStorageService } from \"@fluidframework/driver-definitions\";\nimport { ISnapshotTree } from \"@fluidframework/protocol-definitions\";\nimport { generateHandleContextPath, SummaryTreeBuilder } from \"@fluidframework/runtime-utils\";\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { assert, Deferred } from \"@fluidframework/common-utils\";\nimport { IContainerRuntime } from \"@fluidframework/container-runtime-definitions\";\nimport { AttachState } from \"@fluidframework/container-definitions\";\nimport { PerformanceEvent } from \"@fluidframework/telemetry-utils\";\nimport {\n    IGarbageCollectionData,\n    ISummaryTreeWithStats,\n    ITelemetryContext,\n} from \"@fluidframework/runtime-definitions\";\n\n/**\n * This class represents blob (long string)\n * This object is used only when creating (writing) new blob and serialization purposes.\n * De-serialization process goes through FluidObjectHandle and request flow:\n * DataObject.request() recognizes requests in the form of `/blobs/<id>`\n * and loads blob.\n */\nexport class BlobHandle implements IFluidHandle<ArrayBufferLike> {\n    private attached: boolean = false;\n\n    public get IFluidHandle(): IFluidHandle { return this; }\n\n    public get isAttached(): boolean {\n        return this.attached;\n    }\n\n    public readonly absolutePath: string;\n\n    constructor(\n        public readonly path: string,\n        public readonly routeContext: IFluidHandleContext,\n        public get: () => Promise<any>,\n    ) {\n        this.absolutePath = generateHandleContextPath(path, this.routeContext);\n    }\n\n    public attachGraph() {\n        this.attached = true;\n    }\n\n    public bind(handle: IFluidHandle) {\n        throw new Error(\"Cannot bind to blob handle\");\n    }\n}\n\n/**\n * Information from a snapshot needed to load BlobManager\n */\nexport interface IBlobManagerLoadInfo {\n    ids?: string[];\n    redirectTable?: [string, string][];\n}\n\nexport class BlobManager {\n    public static readonly basePath = \"_blobs\";\n    private static readonly redirectTableBlobName = \".redirectTable\";\n    // uploaded blob IDs\n    private readonly blobIds: Set<string> = new Set();\n    // blobs for which upload is pending. maps to a promise that will resolve once the blob has been uploaded and a\n    // BlobAttach op has round-tripped.\n    private readonly pendingBlobIds: Map<string, Deferred<void>> = new Map();\n    // blobs uploaded while detached; cleared upon attach\n    private readonly detachedBlobIds: Set<string> = new Set();\n    // map of detached blob IDs to IDs used by storage. used to support blob handles given out while detached\n    private redirectTable: Map<string, string> | undefined;\n\n    constructor(\n        private readonly routeContext: IFluidHandleContext,\n        snapshot: IBlobManagerLoadInfo,\n        private readonly getStorage: () => IDocumentStorageService,\n        private readonly attachBlobCallback: (blobId: string) => void,\n        // To be called when a blob node is requested. blobPath is the path of the blob's node in GC's graph. It's\n        // of the format `/<BlobManager.basePath>/<blobId>`.\n        private readonly gcNodeUpdated: (blobPath: string) => void,\n        private readonly runtime: IContainerRuntime,\n        private readonly logger: ITelemetryLogger,\n    ) {\n        this.runtime.once(\"dispose\", () => {\n            for (const promise of this.pendingBlobIds.values()) {\n                promise.reject(new Error(\"runtime disposed while blobAttach op in flight\"));\n            }\n        });\n        this.load(snapshot);\n    }\n\n    private hasBlob(id: string): boolean {\n        return this.blobIds.has(id) || this.detachedBlobIds.has(id);\n    }\n\n    /**\n     * For a blobId, returns its path in GC's graph. The node path is of the format `/<BlobManager.basePath>/<blobId>`\n     * This path must match the path of the blob handle returned by the createBlob API because blobs are marked\n     * referenced by storing these handles in a referenced DDS.\n     */\n    private getBlobGCNodePath(blobId: string) {\n        return `/${BlobManager.basePath}/${blobId}`;\n    }\n\n    public async getBlob(blobId: string): Promise<IFluidHandle<ArrayBufferLike>> {\n        const storageId = this.redirectTable?.get(blobId) ?? blobId;\n        assert(this.hasBlob(storageId), 0x11f /* \"requesting unknown blobs\" */);\n\n        // When this blob is retrieved, let the container runtime know that the corresponding GC node got updated.\n        this.gcNodeUpdated(this.getBlobGCNodePath(blobId));\n\n        return new BlobHandle(\n            `${BlobManager.basePath}/${storageId}`,\n            this.routeContext,\n            async () => PerformanceEvent.timedExecAsync(\n                this.logger,\n                { eventName: \"AttachmentReadBlob\", id: storageId },\n                async () => {\n                    return this.getStorage().readBlob(storageId);\n                },\n                { end: true, cancel: \"error\" },\n            ),\n        );\n    }\n\n    public async createBlob(blob: ArrayBufferLike): Promise<IFluidHandle<ArrayBufferLike>> {\n        if (this.runtime.attachState === AttachState.Attaching) {\n            // blob upload is not supported in \"Attaching\" state\n            this.logger.sendTelemetryEvent({ eventName: \"CreateBlobWhileAttaching\" });\n            await new Promise<void>((resolve) => this.runtime.once(\"attached\", resolve));\n        }\n\n        if (!this.runtime.connected && this.runtime.attachState === AttachState.Attached) {\n            // see https://github.com/microsoft/FluidFramework/issues/8246\n            // Avoid getting storage if we are offline since it might be undefined. In the future we will return\n            // handles immediately while offline\n            await new Promise((resolve) => this.runtime.once(\"connected\", resolve));\n        }\n\n        const response = await PerformanceEvent.timedExecAsync(\n            this.logger,\n            { eventName: \"createBlob\" },\n            async () => this.getStorage().createBlob(blob),\n            { end: true, cancel: \"error\" },\n        );\n\n        const handle = new BlobHandle(\n            `${BlobManager.basePath}/${response.id}`,\n            this.routeContext,\n            // get() should go through BlobManager.getBlob() so handles created while detached can be redirected\n            // to the correct storage id after they are uploaded\n            async () => this.getBlob(response.id).then(async (h) => h.get()),\n        );\n\n        if (this.runtime.attachState === AttachState.Detached) {\n            this.detachedBlobIds.add(response.id);\n            return handle;\n        }\n\n        // Note - server will de-dup blobs, so we might get existing blobId!\n        if (this.pendingBlobIds.has(response.id)) {\n            await this.pendingBlobIds.get(response.id)?.promise;\n        } else if (!this.blobIds.has(response.id)) {\n            this.pendingBlobIds.set(response.id, new Deferred<void>());\n\n            // send blob attach op and wait until we see it to return the handle\n            this.attachBlobCallback(response.id);\n            await this.pendingBlobIds.get(response.id)?.promise;\n        }\n\n        return handle;\n    }\n\n    public processBlobAttachOp(blobId: string, local: boolean) {\n        if (local) {\n            const pendingBlobP = this.pendingBlobIds.get(blobId);\n            assert(pendingBlobP !== undefined, 0x1f8 /* \"local BlobAttach op with no pending blob\" */);\n            pendingBlobP.resolve();\n            this.pendingBlobIds.delete(blobId);\n        }\n        this.blobIds.add(blobId);\n    }\n\n    /**\n     * Reads blobs needed to load BlobManager from storage.\n     */\n    public static async load(\n        blobsTree: ISnapshotTree | undefined,\n        tryFetchBlob: (id: string) => Promise<[string, string][]>,\n    ): Promise<IBlobManagerLoadInfo> {\n        if (!blobsTree) {\n            return {};\n        }\n        let redirectTable;\n        const tableId = blobsTree.blobs[this.redirectTableBlobName];\n        if (tableId) {\n            redirectTable = await tryFetchBlob(tableId);\n        }\n        const ids = Object.entries(blobsTree.blobs)\n            .filter(([k, _]) => k !== this.redirectTableBlobName).map(([_, v]) => v);\n        return { ids, redirectTable };\n    }\n\n    /**\n     * Load a set of previously attached blob IDs from a previous snapshot. Note\n     * that BlobManager tracking and reporting attached blobs is a temporary\n     * solution since storage expects attached blobs to be reported and any that\n     * are not reported as attached may be GCed. In the future attached blob\n     * IDs will be collected at summarization time, and runtime will not care\n     * about the existence or specific formatting of this tree in returned\n     * snapshots.\n     *\n     * @param blobsTree - Tree containing IDs of previously attached blobs. This\n     * corresponds to snapshot() below. We look for the IDs in the blob entries\n     * of the tree since the both the r11s and SPO drivers replace the\n     * attachment types returned in snapshot() with blobs.\n     */\n    private load(snapshot: IBlobManagerLoadInfo): void {\n        if (snapshot.ids) {\n            const detached = this.runtime.attachState === AttachState.Detached;\n            snapshot.ids.map((entry) => detached ? this.detachedBlobIds.add(entry) : this.blobIds.add(entry));\n        }\n        if (snapshot.redirectTable) {\n            this.redirectTable = new Map(snapshot.redirectTable);\n        }\n        this.logger.sendTelemetryEvent({\n            eventName: \"AttachmentBlobsLoaded\",\n            count: snapshot.ids?.length ?? 0,\n            redirectTable: snapshot.redirectTable?.length,\n        });\n    }\n\n    /**\n     * Generates data used for garbage collection. Each blob uploaded represents a node in the GC graph as it can be\n     * individually referenced by storing its handle in a referenced DDS. Returns the list of blob ids as GC nodes.\n     * @param fullGC - true to bypass optimizations and force full generation of GC data. BlobManager doesn't care\n     * about this for now because the data is a simple list of blob ids.\n     */\n    public getGCData(fullGC: boolean = false): IGarbageCollectionData {\n        const gcData: IGarbageCollectionData = { gcNodes: {} };\n\n        this.blobIds.forEach((blobId: string) => {\n            gcData.gcNodes[this.getBlobGCNodePath(blobId)] = [];\n        });\n\n        /**\n         * For all blobs in the redirect table, the handle returned on creation is based off of the localId. So, these\n         * nodes can be referenced by storing the localId handle. When that happens, the corresponding storageId node\n         * must also be marked referenced. So, we add a route from the localId node to the storageId node.\n         * Note that because of de-duping, there can be multiple localIds that all redirect to the same storageId or\n         * a blob may be referenced via its storageId handle.\n         */\n        if (this.redirectTable !== undefined) {\n            for (const [localId, storageId] of this.redirectTable) {\n                // Add node for the localId and add a route to the storageId node. The storageId node will have been\n                // added above when adding nodes for this.blobIds.\n                gcData.gcNodes[this.getBlobGCNodePath(localId)] = [this.getBlobGCNodePath(storageId)];\n            }\n        }\n\n        return gcData;\n    }\n\n    /**\n     * When running GC in test mode, this is called to delete blobs that are unused.\n     * @param unusedRoutes - These are the blob node ids that are unused and should be deleted.\n     */\n    public deleteUnusedRoutes(unusedRoutes: string[]): void {\n        // The routes or blob node paths are in the same format as returned in getGCData -\n        // `/<BlobManager.basePath>/<blobId>`.\n        for (const route of unusedRoutes) {\n            const pathParts = route.split(\"/\");\n            assert(\n                pathParts.length === 3 && pathParts[1] === BlobManager.basePath,\n                0x2d5 /* \"Invalid blob node id in unused routes.\" */,\n            );\n            const blobId = pathParts[2];\n\n            // The unused blobId could be a localId. If so, remove it from the redirect table and continue. The\n            // corresponding storageId may still be used either directly or via other localIds.\n            if (this.redirectTable?.has(blobId)) {\n                this.redirectTable.delete(blobId);\n                continue;\n            }\n            this.blobIds.delete(blobId);\n        }\n    }\n\n    public summarize(telemetryContext?: ITelemetryContext): ISummaryTreeWithStats {\n        // If we have a redirect table it means the container is about to transition to \"Attaching\" state, so we need\n        // to return an actual snapshot containing all the real storage IDs we know about.\n        const attachingOrAttached = !!this.redirectTable || this.runtime.attachState !== AttachState.Detached;\n        const blobIds = attachingOrAttached ? this.blobIds : this.detachedBlobIds;\n        const builder = new SummaryTreeBuilder();\n        blobIds.forEach((blobId) => {\n            builder.addAttachment(blobId);\n        });\n\n        if (this.redirectTable && this.redirectTable.size > 0) {\n            builder.addBlob(\n                BlobManager.redirectTableBlobName,\n                JSON.stringify(Array.from(this.redirectTable.entries())),\n            );\n        }\n\n        return builder.getSummaryTree();\n    }\n\n    public setRedirectTable(table: Map<string, string>) {\n        assert(this.runtime.attachState === AttachState.Detached,\n            0x252 /* \"redirect table can only be set in detached container\" */);\n        assert(!this.redirectTable, 0x253 /* \"redirect table already exists\" */);\n        for (const [localId, storageId] of table) {\n            assert(this.detachedBlobIds.delete(localId), 0x254 /* \"unrecognized id in redirect table\" */);\n            this.blobIds.add(storageId);\n        }\n        assert(this.detachedBlobIds.size === 0, 0x255 /* \"detached blob id absent in redirect table\" */);\n        this.redirectTable = table;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { assert, stringToBuffer } from \"@fluidframework/common-utils\";\nimport * as git from \"@fluidframework/gitresources\";\nimport {\n    FileMode,\n    ISnapshotTree,\n    ITreeEntry,\n    TreeEntry,\n} from \"@fluidframework/protocol-definitions\";\nimport { buildHierarchy } from \"@fluidframework/protocol-base\";\nimport { v4 as uuid } from \"uuid\";\n\nfunction flattenCore(\n    path: string,\n    treeEntries: ITreeEntry[],\n    blobMap: Map<string, ArrayBufferLike>,\n): git.ITreeEntry[] {\n    const entries: git.ITreeEntry[] = [];\n    for (const treeEntry of treeEntries) {\n        const subPath = `${path}${treeEntry.path}`;\n\n        if (treeEntry.type === TreeEntry.Blob) {\n            const blob = treeEntry.value;\n            const buffer = stringToBuffer(blob.contents, blob.encoding);\n            const id = uuid();\n            blobMap.set(id, buffer);\n\n            const entry: git.ITreeEntry = {\n                mode: FileMode[treeEntry.mode],\n                path: subPath,\n                sha: id,\n                size: 0,\n                type: \"blob\",\n                url: \"\",\n            };\n            entries.push(entry);\n        } else if (treeEntry.type === TreeEntry.Tree) {\n            assert(treeEntry.type === TreeEntry.Tree, 0x101 /* \"Unexpected tree entry type on flatten!\" */);\n            const t = treeEntry.value;\n            const entry: git.ITreeEntry = {\n                mode: FileMode[treeEntry.mode],\n                path: subPath,\n                sha: \"\",\n                size: -1,\n                type: \"tree\",\n                url: \"\",\n            };\n            entries.push(entry);\n\n            const subTreeEntries = flattenCore(`${subPath}/`, t.entries, blobMap);\n            entries.push(...subTreeEntries);\n        }\n    }\n\n    return entries;\n}\n\n/**\n * Create a flatten view of an array of ITreeEntry\n *\n * @param tree - an array of ITreeEntry to flatten\n * @param blobMap - a map of blob's sha1 to content\n * @returns A flatten with of the ITreeEntry\n */\nfunction flatten(tree: ITreeEntry[], blobMap: Map<string, ArrayBufferLike>): git.ITree {\n    const entries = flattenCore(\"\", tree, blobMap);\n    return {\n        sha: \"\",\n        tree: entries,\n        url: \"\",\n    };\n}\n\n/**\n * Build a tree hierarchy base on an array of ITreeEntry\n *\n * @param entries - an array of ITreeEntry to flatten\n * @param blobMap - a map of blob's sha1 to content that gets filled with content from entries\n * NOTE: blobMap's validity is contingent on the returned promise's resolution\n * @returns the hierarchical tree\n */\nexport function buildSnapshotTree(\n    entries: ITreeEntry[],\n    blobMap: Map<string, ArrayBufferLike>,\n): ISnapshotTree {\n    const flattened = flatten(entries, blobMap);\n    return buildHierarchy(flattened);\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IDocumentStorageService, IDocumentStorageServicePolicies } from \"@fluidframework/driver-definitions\";\nimport { DocumentStorageServiceProxy } from \"./documentStorageServiceProxy\";\n\n/**\n * IDocumentStorageService adapter with pre-cached blobs.\n */\nexport class BlobCacheStorageService extends DocumentStorageServiceProxy {\n    constructor(\n        internalStorageService: IDocumentStorageService,\n        private readonly blobs: Map<string, ArrayBufferLike>,\n    ) {\n        super(internalStorageService);\n    }\n\n    public get policies(): IDocumentStorageServicePolicies | undefined {\n        return this.internalStorageService.policies;\n    }\n\n    public async readBlob(id: string): Promise<ArrayBufferLike> {\n        const blob = this.blobs.get(id);\n        if (blob !== undefined) {\n            return blob;\n        }\n\n        return this.internalStorageService.readBlob(id);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IDisposable, ITelemetryBaseLogger, ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { assert, Deferred, Lazy } from \"@fluidframework/common-utils\";\nimport { ChildLogger } from \"@fluidframework/telemetry-utils\";\nimport { FluidDataStoreContext, LocalFluidDataStoreContext } from \"./dataStoreContext\";\n\n export class DataStoreContexts implements Iterable<[string, FluidDataStoreContext]>, IDisposable {\n    private readonly notBoundContexts = new Set<string>();\n\n    /** Attached and loaded context proxies */\n    private readonly _contexts = new Map<string, FluidDataStoreContext>();\n\n    /**\n     * List of pending context waiting either to be bound or to arrive from another client.\n     * This covers the case where a local context has been created but not yet bound,\n     * or the case where a client knows a store will exist and is waiting on its creation,\n     * so that a caller may await the deferred's promise until such a time as the context is fully ready.\n     * This is a superset of _contexts, since contexts remain here once the Deferred resolves.\n     */\n    private readonly deferredContexts = new Map<string, Deferred<FluidDataStoreContext>>();\n\n    private readonly disposeOnce = new Lazy<void>(() => {\n        // close/stop all store contexts\n        for (const [fluidDataStoreId, contextD] of this.deferredContexts) {\n            contextD.promise.then((context) => {\n                context.dispose();\n            }).catch((contextError) => {\n                this._logger.sendErrorEvent({\n                    eventName: \"FluidDataStoreContextDisposeError\",\n                    fluidDataStoreId,\n                },\n                contextError);\n            });\n        }\n    });\n\n    private readonly _logger: ITelemetryLogger;\n\n    constructor(baseLogger: ITelemetryBaseLogger) {\n        this._logger = ChildLogger.create(baseLogger);\n    }\n\n    [Symbol.iterator](): Iterator<[string, FluidDataStoreContext]> {\n        return this._contexts.entries();\n    }\n\n    public get size(): number {\n        return this._contexts.size;\n    }\n\n    public get disposed() { return this.disposeOnce.evaluated; }\n    public readonly dispose = () => this.disposeOnce.value;\n\n    public notBoundLength() {\n        return this.notBoundContexts.size;\n    }\n\n    public isNotBound(id: string) {\n        return this.notBoundContexts.has(id);\n    }\n\n    public has(id: string) {\n        return this._contexts.has(id);\n    }\n\n    public get(id: string): FluidDataStoreContext | undefined {\n        return this._contexts.get(id);\n    }\n\n    public delete(id: string): boolean {\n        this.deferredContexts.delete(id);\n        this.notBoundContexts.delete(id);\n        return this._contexts.delete(id);\n    }\n\n    /**\n     * Return the unbound local context with the given id,\n     * or undefined if it's not found or not unbound.\n     */\n    public getUnbound(id: string): LocalFluidDataStoreContext | undefined {\n        const context = this._contexts.get(id);\n        if (context === undefined || !this.notBoundContexts.has(id)) {\n            return undefined;\n        }\n\n        return this._contexts.get(id) as LocalFluidDataStoreContext;\n    }\n\n    /**\n     * Add the given context, marking it as to-be-bound\n     */\n    public addUnbound(context: LocalFluidDataStoreContext) {\n        const id = context.id;\n        assert(!this._contexts.has(id), 0x158 /* \"Creating store with existing ID\" */);\n\n        this._contexts.set(id, context);\n\n        this.notBoundContexts.add(id);\n        this.ensureDeferred(id);\n    }\n\n    /**\n     * Get the context with the given id, once it exists locally and is attached.\n     * e.g. If created locally, it must be bound, or if created remotely then it's fine as soon as it's sync'd in.\n     * @param id - The id of the context to get\n     * @param wait - If false, return undefined if the context isn't present and ready now. Otherwise, wait for it.\n     */\n    public async getBoundOrRemoted(id: string, wait: boolean): Promise<FluidDataStoreContext | undefined> {\n        const deferredContext = this.ensureDeferred(id);\n\n        if (!wait && !deferredContext.isCompleted) {\n            return undefined;\n        }\n\n        return deferredContext.promise;\n    }\n\n    private ensureDeferred(id: string): Deferred<FluidDataStoreContext> {\n        const deferred = this.deferredContexts.get(id);\n        if (deferred) { return deferred; }\n\n        const newDeferred = new Deferred<FluidDataStoreContext>();\n        this.deferredContexts.set(id, newDeferred);\n        return newDeferred;\n    }\n\n    /**\n     * Update this context as bound\n     */\n    public bind(id: string) {\n        const removed: boolean = this.notBoundContexts.delete(id);\n        assert(removed, 0x159 /* \"The given id was not found in notBoundContexts to delete\" */);\n\n        this.resolveDeferred(id);\n    }\n\n    /**\n     * Triggers the deferred to resolve, indicating the context is not local-only\n     * @param id - The id of the context to resolve to\n     */\n    private resolveDeferred(id: string) {\n        const context = this._contexts.get(id);\n        assert(!!context, 0x15a /* \"Cannot find context to resolve to\" */);\n        assert(!this.notBoundContexts.has(id),\n            0x15b /* \"Expected this id to already be removed from notBoundContexts\" */);\n\n        const deferred = this.deferredContexts.get(id);\n        assert(!!deferred, 0x15c /* \"Cannot find deferred to resolve\" */);\n        deferred.resolve(context);\n    }\n\n    /**\n     * Add the given context, marking it as not local-only.\n     * This could be because it's a local context that's been bound, or because it's a remote context.\n     * @param context - The context to add\n     */\n    public addBoundOrRemoted(context: FluidDataStoreContext) {\n        const id = context.id;\n        assert(!this._contexts.has(id), 0x15d /* \"Creating store with existing ID\" */);\n\n        this._contexts.set(id, context);\n\n        // Resolve the deferred immediately since this context is not unbound\n        this.ensureDeferred(id);\n        this.resolveDeferred(id);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\n\n/**\n * Utility counter which will send event only if the provided value\n * is above a configured threshold\n */\nexport class ThresholdCounter {\n    public constructor(\n        private readonly threshold: number,\n        private readonly logger: ITelemetryLogger,\n        private thresholdMultiple = threshold,\n    ) {}\n\n    /**\n     * Sends the value if it's above the treshold.\n     */\n    public send(eventName: string, value: number) {\n        if (value < this.threshold) {\n            return;\n        }\n        this.logger.sendPerformanceEvent({\n            eventName,\n            value,\n        });\n    }\n\n    /**\n     * Sends the value if it's above the treshold\n     * and a multiple of the threshold.\n     *\n     * To be used in scenarios where we'd like to record a\n     * threshold violation while reducing telemetry noise.\n     */\n    public sendIfMultiple(eventName: string, value: number) {\n        if (value === this.thresholdMultiple) {\n            this.logger.sendPerformanceEvent({\n                eventName,\n                value,\n            });\n            // reduce number of \"multiple\" events.\n            this.thresholdMultiple = this.thresholdMultiple * 2;\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IGCResult } from \"./interfaces\";\n\n/**\n * Runs garbage collection on the given reference graph.\n * @param referenceGraph - The reference graph to run GC on. It's a list of nodes where each node has an id and set of\n * routes to other nodes in the graph.\n * @param rootIds - The ids of root nodes that are considered referenced.\n * @returns the ids of referenced nodes and the ids of deleted nodes in the referenced graph.\n */\nexport function runGarbageCollection(referenceGraph: { [id: string]: string[]; }, rootIds: string[]): IGCResult {\n    // This set keeps track of nodes that we have visited. It is used to detect cycles in the graph.\n    const visited: Set<string> = new Set();\n\n    // This tracks the ids of referenced nodes. The nodes corresponding to rootIds are always considered\n    // referenced so we start with those.\n    const referencedIds: string[] = [...rootIds];\n    for (const id of referencedIds) {\n        // If we have already seen this node, ignore and continue. Else, add it to visited list.\n        if (visited.has(id)) {\n            continue;\n        }\n        visited.add(id);\n\n        // Get the node for the referenced id and add its outbound routes to referencedIds since they are\n        // also referenced.\n        const routes = referenceGraph[id];\n        if (routes !== undefined) {\n            referencedIds.push(...routes);\n        }\n    }\n\n    const referencedNodeIds: string[] = [];\n    const deletedNodeIds: string[] = [];\n    for (const id of Object.keys(referenceGraph)) {\n        // The nodes from the reference graph whose ids are in the visited list are referenced.\n        // The rest of the nodes are deleted.\n        if (visited.has(id)) {\n            referencedNodeIds.push(id);\n        } else {\n            deletedNodeIds.push(id);\n        }\n    }\n    return { referencedNodeIds, deletedNodeIds };\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITelemetryLogger, ITelemetryPerformanceEvent } from \"@fluidframework/common-definitions\";\nimport { assert, LazyPromise, Timer } from \"@fluidframework/common-utils\";\nimport { ICriticalContainerError } from \"@fluidframework/container-definitions\";\nimport { ClientSessionExpiredError, DataProcessingError, UsageError } from \"@fluidframework/container-utils\";\nimport { IRequestHeader } from \"@fluidframework/core-interfaces\";\nimport {\n    cloneGCData,\n    concatGarbageCollectionStates,\n    concatGarbageCollectionData,\n    IGCResult,\n    runGarbageCollection,\n    unpackChildNodesGCDetails,\n} from \"@fluidframework/garbage-collector\";\nimport { ISnapshotTree, SummaryType } from \"@fluidframework/protocol-definitions\";\nimport {\n    gcBlobKey,\n    IGarbageCollectionData,\n    IGarbageCollectionState,\n    IGarbageCollectionDetailsBase,\n    ISummarizeResult,\n    ITelemetryContext,\n    IGarbageCollectionNodeData,\n} from \"@fluidframework/runtime-definitions\";\nimport {\n    mergeStats,\n    ReadAndParseBlob,\n    RefreshSummaryResult,\n    SummaryTreeBuilder,\n} from \"@fluidframework/runtime-utils\";\nimport {\n    ChildLogger,\n    loggerToMonitoringContext,\n    MonitoringContext,\n    PerformanceEvent,\n    TelemetryDataTag,\n} from \"@fluidframework/telemetry-utils\";\n\nimport { IGCRuntimeOptions, RuntimeHeaders } from \"./containerRuntime\";\nimport { getSummaryForDatastores } from \"./dataStores\";\nimport {\n    getGCVersion,\n    GCVersion,\n    IContainerRuntimeMetadata,\n    metadataBlobName,\n    ReadFluidDataStoreAttributes,\n    dataStoreAttributesBlobName,\n    IGCMetadata,\n} from \"./summaryFormat\";\n\n/** This is the current version of garbage collection. */\nconst GCVersion = 1;\n\n// The key for the GC tree in summary.\nexport const gcTreeKey = \"gc\";\n// They prefix for GC blobs in the GC tree in summary.\nexport const gcBlobPrefix = \"__gc\";\n\n// Feature gate key to turn GC on / off.\nconst runGCKey = \"Fluid.GarbageCollection.RunGC\";\n// Feature gate key to turn GC sweep on / off.\nconst runSweepKey = \"Fluid.GarbageCollection.RunSweep\";\n// Feature gate key to turn GC test mode on / off.\nconst gcTestModeKey = \"Fluid.GarbageCollection.GCTestMode\";\n// Feature gate key to write GC data at the root of the summary tree.\nconst writeAtRootKey = \"Fluid.GarbageCollection.WriteDataAtRoot\";\n// Feature gate key to expire a session after a set period of time.\nexport const runSessionExpiryKey = \"Fluid.GarbageCollection.RunSessionExpiry\";\n// Feature gate key to disable expiring session after a set period of time, even if expiry value is present\nexport const disableSessionExpiryKey = \"Fluid.GarbageCollection.DisableSessionExpiry\";\n// Feature gate key to write the gc blob as a handle if the data is the same.\nexport const trackGCStateKey = \"Fluid.GarbageCollection.TrackGCState\";\n// Feature gate key to turn GC sweep log off.\nconst disableSweepLogKey = \"Fluid.GarbageCollection.DisableSweepLog\";\n\n// One day in milliseconds.\nexport const oneDayMs = 1 * 24 * 60 * 60 * 1000;\n\nconst defaultInactiveTimeoutMs = 7 * oneDayMs; // 7 days\nexport const defaultSessionExpiryDurationMs = 30 * oneDayMs; // 30 days\n\n/** The statistics of the system state after a garbage collection run. */\nexport interface IGCStats {\n    /** The number of nodes in the container. */\n    nodeCount: number;\n    /** The number of data stores in the container. */\n    dataStoreCount: number;\n    /** The number of attachment blobs in the container. */\n    attachmentBlobCount: number;\n    /** The number of unreferenced nodes in the container. */\n    unrefNodeCount: number;\n    /** The number of unreferenced data stores in the container. */\n    unrefDataStoreCount: number;\n    /** The number of unreferenced attachment blobs in the container. */\n    unrefAttachmentBlobCount: number;\n    /** The number of nodes whose reference state updated since last GC run. */\n    updatedNodeCount: number;\n    /** The number of data stores whose reference state updated since last GC run. */\n    updatedDataStoreCount: number;\n    /** The number of attachment blobs whose reference state updated since last GC run. */\n    updatedAttachmentBlobCount: number;\n}\n\n/** The types of GC nodes in the GC reference graph. */\nexport const GCNodeType = {\n    // Nodes that are for data stores.\n    DataStore: \"DataStore\",\n    // Nodes that are within a data store. For example, DDS nodes.\n    SubDataStore: \"SubDataStore\",\n    // Nodes that are for attachment blobs, i.e., blobs uploaded via BlobManager.\n    Blob: \"Blob\",\n    // Nodes that are neither of the above. For example, root node.\n    Other: \"Other\",\n};\nexport type GCNodeType = typeof GCNodeType[keyof typeof GCNodeType];\n\n/** Defines the APIs for the runtime object to be passed to the garbage collector. */\nexport interface IGarbageCollectionRuntime {\n    /** Before GC runs, called to notify the runtime to update any pending GC state. */\n    updateStateBeforeGC(): Promise<void>;\n    /** Returns the garbage collection data of the runtime. */\n    getGCData(fullGC?: boolean): Promise<IGarbageCollectionData>;\n    /** After GC has run, called to notify the runtime of routes that are used in it. */\n    updateUsedRoutes(usedRoutes: string[], gcTimestamp?: number): void;\n    /** After GC has run, called to delete objects in the runtime whose routes are unused. */\n    deleteUnusedRoutes(unusedRoutes: string[]): void;\n    /** Returns a referenced timestamp to be used to track unreferenced nodes. */\n    getCurrentReferenceTimestampMs(): number | undefined;\n    /** Returns the type of the GC node. */\n    getNodeType(nodePath: string): GCNodeType;\n    /** Called when the runtime should close because of an error. */\n    closeFn(error?: ICriticalContainerError): void;\n}\n\n/** Defines the contract for the garbage collector. */\nexport interface IGarbageCollector {\n    /** Tells whether GC should run or not. */\n    readonly shouldRunGC: boolean;\n    /** Tells whether the GC state in summary needs to be reset in the next summary. */\n    readonly summaryStateNeedsReset: boolean;\n    /** Tells whether GC data should be written to the root of the summary tree. */\n    readonly writeDataAtRoot: boolean;\n    readonly trackGCState: boolean;\n    /** Run garbage collection and update the reference / used state of the system. */\n    collectGarbage(\n        options: { logger?: ITelemetryLogger; runSweep?: boolean; fullGC?: boolean; },\n    ): Promise<IGCStats>;\n    /** Summarizes the GC data and returns it as a summary tree. */\n    summarize(\n        fullTree: boolean,\n        trackState: boolean,\n        telemetryContext?: ITelemetryContext,\n    ): ISummarizeResult | undefined;\n    /** Returns the garbage collector specific metadata to be written into the summary. */\n    getMetadata(): IGCMetadata;\n    /** Returns a map of each node id to its base GC details in the base summary. */\n    getBaseGCDetails(): Promise<Map<string, IGarbageCollectionDetailsBase>>;\n    /** Called when the latest summary of the system has been refreshed. */\n    latestSummaryStateRefreshed(result: RefreshSummaryResult, readAndParseBlob: ReadAndParseBlob): Promise<void>;\n    /** Called when a node is updated. Used to detect and log when an inactive node is changed or loaded. */\n    nodeUpdated(\n        nodePath: string,\n        reason: \"Loaded\" | \"Changed\",\n        timestampMs?: number,\n        packagePath?: readonly string[],\n        requestHeaders?: IRequestHeader,\n    ): void;\n    /** Called when a reference is added to a node. Used to identify nodes that were referenced between summaries. */\n    addedOutboundReference(fromNodePath: string, toNodePath: string): void;\n    dispose(): void;\n}\n\n/** Parameters necessary for creating a GarbageCollector. */\nexport interface IGarbageCollectorCreateParams {\n    readonly runtime: IGarbageCollectionRuntime;\n    readonly gcOptions: IGCRuntimeOptions;\n    readonly baseLogger: ITelemetryLogger;\n    readonly existing: boolean;\n    readonly metadata: IContainerRuntimeMetadata | undefined;\n    readonly baseSnapshot: ISnapshotTree | undefined;\n    readonly isSummarizerClient: boolean;\n    readonly getNodePackagePath: (nodePath: string) => Promise<readonly string[] | undefined>;\n    readonly getLastSummaryTimestampMs: () => number | undefined;\n    readonly readAndParseBlob: ReadAndParseBlob;\n    readonly snapshotCacheExpiryMs?: number;\n}\n\n/** The state of node that is unreferenced. */\nconst UnreferencedState = {\n    /** The node is active, i.e., it can become referenced again. */\n    Active: \"Active\",\n    /** The node is inactive, i.e., it should not become referenced. */\n    Inactive: \"Inactive\",\n    /** The node is ready to be deleted by the sweep phase. */\n    SweepReady: \"SweepReady\",\n};\nexport type UnreferencedState = typeof UnreferencedState[keyof typeof UnreferencedState];\n\n/** The event that is logged when unreferenced node is used after a certain time. */\ninterface IUnreferencedEventProps {\n    usageType: \"Changed\" | \"Loaded\" | \"Revived\";\n    state: UnreferencedState;\n    id: string;\n    type: GCNodeType;\n    unrefTime: number;\n    age: number;\n    completedGCRuns: number;\n    fromId?: string;\n    timeout?: number;\n    lastSummaryTime?: number;\n    externalRequest?: boolean;\n    viaHandle?: boolean;\n}\n\n/**\n * Helper class that tracks the state of an unreferenced node such as the time it was unreferenced and if it can\n * be deleted by the sweep phase.\n */\nclass UnreferencedStateTracker {\n    private _state: UnreferencedState = UnreferencedState.Active;\n    public get state(): UnreferencedState {\n        return this._state;\n    }\n\n    private inactiveTimer: Timer | undefined;\n    private sweepTimer: ReturnType<typeof setTimeout> | undefined;\n\n    constructor(\n        public readonly unreferencedTimestampMs: number,\n        /** The time after which node transitions to Inactive state. */\n        private readonly inactiveTimeoutMs: number,\n        /** The time after which node transitions to SweepReady state; undefined if session expiry is disabled. */\n        private readonly sweepTimeoutMs?: number,\n        /** The current reference timestamp; undefined if no ops have ever been processed which can happen in tests. */\n        currentReferenceTimestampMs?: number,\n    ) {\n        // If there is no current reference timestamp, don't track the node's unreferenced state. This will happen\n        // later when updateTracking is called with a reference timestamp.\n        if (currentReferenceTimestampMs !== undefined) {\n            this.updateTracking(currentReferenceTimestampMs);\n        }\n    }\n\n    /* Updates the unreferenced state based on the provided timestamp. */\n    public updateTracking(currentReferenceTimestampMs: number) {\n        const unreferencedDurationMs = currentReferenceTimestampMs - this.unreferencedTimestampMs;\n\n        // If the node has been unreferenced for sweep timeout amount of time, update the state to SweepReady.\n        if (this.sweepTimeoutMs !== undefined && unreferencedDurationMs >= this.sweepTimeoutMs) {\n            this._state = UnreferencedState.SweepReady;\n            this.clearTimers();\n            return;\n        }\n\n        // If the node has been unreferenced for inactive timeoutMs amount of time, update the state to inactive.\n        // Also, start a timer for the sweep timeout.\n        if (unreferencedDurationMs >= this.inactiveTimeoutMs) {\n            this._state = UnreferencedState.Inactive;\n            this.clearTimers();\n\n            if (this.sweepTimeoutMs !== undefined) {\n                setLongTimeout(\n                    this.sweepTimeoutMs - unreferencedDurationMs,\n                    () => { this._state = UnreferencedState.SweepReady; },\n                    (timer) => { this.sweepTimer = timer; },\n                );\n            }\n            return;\n        }\n\n        // The node is still active. Start the inactive timer for the remaining duration.\n        const remainingDurationMs = this.inactiveTimeoutMs - unreferencedDurationMs;\n        if (this.inactiveTimer === undefined) {\n            const inactiveTimeoutHandler = () => {\n                this._state = UnreferencedState.Inactive;\n                // After the node becomes inactive, start the sweep timer after which the node will be ready for sweep.\n                if (this.sweepTimeoutMs !== undefined) {\n                    setLongTimeout(\n                        this.sweepTimeoutMs - this.inactiveTimeoutMs,\n                        () => { this._state = UnreferencedState.SweepReady; },\n                        (timer) => { this.sweepTimer = timer; },\n                    );\n                }\n            };\n            this.inactiveTimer = new Timer(remainingDurationMs, () => inactiveTimeoutHandler());\n        }\n        this.inactiveTimer.restart(remainingDurationMs);\n    }\n\n    private clearTimers() {\n        this.inactiveTimer?.clear();\n        if (this.sweepTimer !== undefined) {\n            clearTimeout(this.sweepTimer);\n        }\n    }\n\n    /** Stop tracking this node. Reset the unreferenced timers and state, if any. */\n    public stopTracking() {\n        this.clearTimers();\n        this._state = UnreferencedState.Active;\n    }\n}\n\n/**\n * The garbage collector for the container runtime. It consolidates the garbage collection functionality and maintains\n * its state across summaries.\n *\n * Node - represented as nodeId, it's a node on the GC graph\n * Outbound Route - a path from one node to another node, think `nodeA` -\\> `nodeB`\n * Graph - all nodes with their respective routes\n *             GC Graph\n *\n *               Node\n *        NodeId = \"datastore1\"\n *           /             \\\\\n *    OutboundRoute   OutboundRoute\n *         /                 \\\\\n *       Node               Node\n *  NodeId = \"dds1\"     NodeId = \"dds2\"\n */\nexport class GarbageCollector implements IGarbageCollector {\n    public static create(createParams: IGarbageCollectorCreateParams): IGarbageCollector {\n        return new GarbageCollector(createParams);\n    }\n\n    /**\n     * Tells whether the GC state needs to be reset in the next summary. We need to do this if:\n     * 1. GC was enabled and is now disabled. The GC state needs to be removed and everything becomes referenced.\n     * 2. GC was disabled and is now enabled. The GC state needs to be regenerated and added to summary.\n     * 3. The GC version in the latest summary is different from the current GC version. This can happen if:\n     *    3.1. The summary this client loaded with has data from a different GC version.\n     *    3.2. This client's latest summary was updated from a snapshot that has a different GC version.\n     */\n    public get summaryStateNeedsReset(): boolean {\n        return this.initialStateNeedsReset ||\n            (this.shouldRunGC && this.latestSummaryGCVersion !== this.currentGCVersion);\n    }\n\n    /**\n     * Tracks if GC is enabled for this document. This is specified during document creation and doesn't change\n     * throughout its lifetime.\n     */\n    private readonly gcEnabled: boolean;\n    /**\n     * Tracks if sweep phase is enabled for this document. This is specified during document creation and doesn't change\n     * throughout its lifetime.\n     */\n    private readonly sweepEnabled: boolean;\n\n    /**\n     * Tracks if GC should run or not. Even if GC is enabled for a document (see gcEnabled), it can be explicitly\n     * disabled via runtime options or feature flags.\n     */\n    public readonly shouldRunGC: boolean;\n    /**\n     * Tracks if sweep phase should run or not. Even if the sweep phase is enabled for a document (see sweepEnabled), it\n     * can be explicitly disabled via feature flags. It also won't run if session expiry is not enabled.\n     */\n    private readonly shouldRunSweep: boolean;\n\n    public readonly trackGCState: boolean;\n\n    private readonly testMode: boolean;\n    private readonly mc: MonitoringContext;\n\n    /**\n     * Tells whether the GC data should be written to the root of the summary tree.\n     */\n    private _writeDataAtRoot: boolean = true;\n    public get writeDataAtRoot(): boolean {\n        return this._writeDataAtRoot;\n    }\n\n    /**\n     * Tells whether the initial GC state needs to be reset. This can happen under 2 conditions:\n     * 1. The base snapshot contains GC state but GC is disabled. This will happen the first time GC is disabled after\n     *    it was enabled before. GC state needs to be removed from summary and all nodes should be marked referenced.\n     * 2. The base snapshot does not have GC state but GC is enabled. This will happen the very first time GC runs on\n     *    a document and the first time GC is enabled after is was disabled before.\n     *\n     * Note that the state needs reset only for the very first time summary is generated by this client. After that, the\n     * state will be up-to-date and this flag will be reset.\n    */\n    private initialStateNeedsReset: boolean = false;\n\n    // The current GC version that this container is running.\n    private readonly currentGCVersion = GCVersion;\n    // This is the version of GC data in the latest summary being tracked.\n    private latestSummaryGCVersion: GCVersion;\n\n    // Keeps track of the GC state from the last run.\n    private previousGCDataFromLastRun: IGarbageCollectionData | undefined;\n    /**\n     * Keeps track of the serialized GC blob from the latest summary successfully submitted to the server.\n     */\n    private latestSerializedSummaryState: string | undefined;\n    /**\n     * Keeps track of the serialized GC blob from the last GC run of the client.\n     */\n    private pendingSerializedSummaryState: string | undefined;\n    // Keeps a list of references (edges in the GC graph) between GC runs. Each entry has a node id and a list of\n    // outbound routes from that node.\n    private readonly newReferencesSinceLastRun: Map<string, string[]> = new Map();\n\n    // Promise when resolved initializes the base state of the nodes from the base summary state.\n    private readonly initializeBaseStateP: Promise<void>;\n    // The map of data store ids to their GC details in the base summary returned in getDataStoreGCDetails().\n    private readonly baseGCDetailsP: Promise<Map<string, IGarbageCollectionDetailsBase>>;\n    // Map of node ids to their unreferenced state tracker.\n    private readonly unreferencedNodesState: Map<string, UnreferencedStateTracker> = new Map();\n    // The timeout responsible for closing the container when the session has expired\n    private sessionExpiryTimer?: ReturnType<typeof setTimeout>;\n\n    // Keeps track of unreferenced events that are logged for a node. This is used to limit the log generation to one\n    // per event per node.\n    private readonly loggedUnreferencedEvents: Set<string> = new Set();\n    // Queue for unreferenced events that should be logged the next time GC runs.\n    private pendingEventsQueue: IUnreferencedEventProps[] = [];\n\n    // The number of times GC has successfully completed on this instance of GarbageCollector.\n    private completedRuns = 0;\n\n    private readonly runtime: IGarbageCollectionRuntime;\n    private readonly gcOptions: IGCRuntimeOptions;\n    private readonly isSummarizerClient: boolean;\n\n    /** The time in ms to expire a session for a client for gc. */\n    private readonly sessionExpiryTimeoutMs: number | undefined;\n    /** The time after which an unreferenced node is inactive. */\n    private readonly inactiveTimeoutMs: number;\n    /** The time after which an unreferenced node is ready to be swept. */\n    private readonly sweepTimeoutMs: number | undefined;\n\n    /** For a given node path, returns the node's package path. */\n    private readonly getNodePackagePath: (nodePath: string) => Promise<readonly string[] | undefined>;\n    /** Returns the timestamp of the last summary generated for this container. */\n    private readonly getLastSummaryTimestampMs: () => number | undefined;\n\n    protected constructor(createParams: IGarbageCollectorCreateParams) {\n        this.runtime = createParams.runtime;\n        this.isSummarizerClient = createParams.isSummarizerClient;\n        this.gcOptions = createParams.gcOptions;\n        this.getNodePackagePath = createParams.getNodePackagePath;\n        this.getLastSummaryTimestampMs = createParams.getLastSummaryTimestampMs;\n\n        const baseSnapshot = createParams.baseSnapshot;\n        const metadata = createParams.metadata;\n        const readAndParseBlob = createParams.readAndParseBlob;\n\n        this.mc = loggerToMonitoringContext(ChildLogger.create(\n            createParams.baseLogger, \"GarbageCollector\", { all: { completedGCRuns: () => this.completedRuns } },\n        ));\n\n        let prevSummaryGCVersion: number | undefined;\n\n        /**\n         * The following GC state is enabled during container creation and cannot be changed throughout its lifetime:\n         * 1. Whether running GC mark phase is allowed or not.\n         * 2. Whether running GC sweep phase is allowed or not.\n         * 3. Whether GC session expiry is enabled or not.\n         * For existing containers, we get this information from the metadata blob of its summary.\n         */\n        if (createParams.existing) {\n            prevSummaryGCVersion = getGCVersion(metadata);\n            // Existing documents which did not have metadata blob or had GC disabled have version as 0. For all\n            // other existing documents, GC is enabled.\n            this.gcEnabled = prevSummaryGCVersion > 0;\n            this.sweepEnabled = metadata?.sweepEnabled ?? false;\n            this.sessionExpiryTimeoutMs = metadata?.sessionExpiryTimeoutMs;\n        } else {\n            // Sweep should not be enabled without enabling GC mark phase. We could silently disable sweep in this\n            // scenario but explicitly failing makes it clearer and promotes correct usage.\n            if (this.gcOptions.sweepAllowed && this.gcOptions.gcAllowed === false) {\n                throw new UsageError(\"GC sweep phase cannot be enabled without enabling GC mark phase\");\n            }\n\n            // For new documents, GC is enabled by default. It can be explicitly disabled by setting the gcAllowed\n            // flag in GC options to false.\n            this.gcEnabled = this.gcOptions.gcAllowed !== false;\n            // The sweep phase has to be explicitly enabled by setting the sweepAllowed flag in GC options to true.\n            this.sweepEnabled = this.gcOptions.sweepAllowed === true;\n\n            // Set the Session Expiry only if the flag is enabled or the test option is set.\n            if (this.mc.config.getBoolean(runSessionExpiryKey) && this.gcEnabled) {\n                this.sessionExpiryTimeoutMs = defaultSessionExpiryDurationMs;\n            }\n        }\n\n        // If session expiry is enabled, we need to close the container when the session expiry timeout expires.\n        if (this.sessionExpiryTimeoutMs !== undefined && this.mc.config.getBoolean(disableSessionExpiryKey) !== true) {\n            // If Test Override config is set, override Session Expiry timeout.\n            const overrideSessionExpiryTimeoutMs =\n                this.mc.config.getNumber(\"Fluid.GarbageCollection.TestOverride.SessionExpiryMs\");\n            const timeoutMs = overrideSessionExpiryTimeoutMs ?? this.sessionExpiryTimeoutMs;\n\n            setLongTimeout(\n                timeoutMs,\n                () => { this.runtime.closeFn(new ClientSessionExpiredError(`Client session expired.`, timeoutMs)); },\n                (timer) => { this.sessionExpiryTimer = timer; },\n            );\n\n            /**\n             * Sweep timeout is the time after which unreferenced content can be swept.\n             * Sweep timeout = session expiry timeout + snapshot cache expiry timeout + one day buffer. The buffer is\n             * added to account for any clock skew. We use server timestamps throughout so the skew should be minimal\n             * but make it one day to be safe.\n             */\n            if (createParams.snapshotCacheExpiryMs !== undefined) {\n                this.sweepTimeoutMs = this.sessionExpiryTimeoutMs + createParams.snapshotCacheExpiryMs + oneDayMs;\n            }\n        }\n\n        // For existing document, the latest summary is the one that we loaded from. So, use its GC version as the\n        // latest tracked GC version. For new documents, we will be writing the first summary with the current version.\n        this.latestSummaryGCVersion = prevSummaryGCVersion ?? this.currentGCVersion;\n\n        /**\n         * Whether GC should run or not. The following conditions have to be met to run sweep:\n         * 1. GC should be enabled for this container.\n         * 2. GC should not be disabled via disableGC GC option.\n         * These conditions can be overridden via runGCKey feature flag.\n         */\n        this.shouldRunGC = this.mc.config.getBoolean(runGCKey) ?? (\n            // GC must be enabled for the document.\n            this.gcEnabled\n            // GC must not be disabled via GC options.\n            && !this.gcOptions.disableGC\n        );\n\n        /**\n         * Whether sweep should run or not. The following conditions have to be met to run sweep:\n         * 1. Overall GC or mark phase must be enabled (this.shouldRunGC).\n         * 2. Sweep timeout should be available. Without this, we wouldn't know when an object should be deleted.\n         * 3. Sweep should be enabled for this container (this.sweepEnabled). This can be overridden via runSweep\n         *    feature flag.\n         */\n        this.shouldRunSweep = this.shouldRunGC\n            && this.sweepTimeoutMs !== undefined\n            && (this.mc.config.getBoolean(runSweepKey) ?? this.sweepEnabled);\n\n        this.trackGCState = this.mc.config.getBoolean(trackGCStateKey) === true;\n\n        // Override inactive timeout if test config or gc options to override it is set.\n        this.inactiveTimeoutMs = this.mc.config.getNumber(\"Fluid.GarbageCollection.TestOverride.InactiveTimeoutMs\") ??\n            this.gcOptions.inactiveTimeoutMs ??\n            defaultInactiveTimeoutMs;\n\n        // Inactive timeout must be greater than sweep timeout since a node goes from active -> inactive -> sweep ready.\n        if (this.sweepTimeoutMs !== undefined && this.inactiveTimeoutMs > this.sweepTimeoutMs) {\n            throw new UsageError(\"inactive timeout should not be greated than the sweep timeout\");\n        }\n\n        // Whether we are running in test mode. In this mode, unreferenced nodes are immediately deleted.\n        this.testMode = this.mc.config.getBoolean(gcTestModeKey) ?? this.gcOptions.runGCInTestMode === true;\n\n        // GC state is written into root of the summary tree by default. Can be overridden via feature flag for now.\n        this._writeDataAtRoot = this.mc.config.getBoolean(writeAtRootKey) ?? true;\n\n        if (this._writeDataAtRoot) {\n            // The GC state needs to be reset if the base snapshot contains GC tree and GC is disabled or it doesn't\n            // contain GC tree and GC is enabled.\n            const gcTreePresent = baseSnapshot?.trees[gcTreeKey] !== undefined;\n            this.initialStateNeedsReset = gcTreePresent !== this.shouldRunGC;\n        }\n\n        // Get the GC state from the GC blob in the base snapshot. Use LazyPromise because we only want to do\n        // this once since it involves fetching blobs from storage which is expensive.\n        const baseSummaryStateP = new LazyPromise<IGarbageCollectionState | undefined>(async () => {\n            if (baseSnapshot === undefined) {\n                return undefined;\n            }\n\n            // For newer documents, GC data should be present in the GC tree in the root of the snapshot.\n            const gcSnapshotTree = baseSnapshot.trees[gcTreeKey];\n            if (gcSnapshotTree !== undefined) {\n                // If the GC tree is written at root, we should also do the same.\n                this._writeDataAtRoot = true;\n                const baseGCState = await getGCStateFromSnapshot(\n                    gcSnapshotTree,\n                    readAndParseBlob,\n                );\n                if (this.trackGCState) {\n                    this.latestSerializedSummaryState = JSON.stringify(generateSortedGCState(baseGCState));\n                }\n                return baseGCState;\n            }\n\n            // back-compat - Older documents will have the GC blobs in each data store's summary tree. Get them and\n            // consolidate into IGarbageCollectionState format.\n            // Add a node for the root node that is not present in older snapshot format.\n            const gcState: IGarbageCollectionState = { gcNodes: { \"/\": { outboundRoutes: [] } } };\n            const dataStoreSnapshotTree = getSummaryForDatastores(baseSnapshot, metadata);\n            assert(dataStoreSnapshotTree !== undefined,\n                0x2a8 /* \"Expected data store snapshot tree in base snapshot\" */);\n            for (const [dsId, dsSnapshotTree] of Object.entries(dataStoreSnapshotTree.trees)) {\n                const blobId = dsSnapshotTree.blobs[gcBlobKey];\n                if (blobId === undefined) {\n                    continue;\n                }\n\n                const gcSummaryDetails = await readAndParseBlob<IGarbageCollectionDetailsBase>(blobId);\n                // If there are no nodes for this data store, skip it.\n                if (gcSummaryDetails.gcData?.gcNodes === undefined) {\n                    continue;\n                }\n\n                const dsRootId = `/${dsId}`;\n                // Since we used to write GC data at data store level, we won't have an entry for the root (\"/\").\n                // Construct that entry by adding root data store ids to its outbound routes.\n                const initialSnapshotDetails = await readAndParseBlob<ReadFluidDataStoreAttributes>(\n                    dsSnapshotTree.blobs[dataStoreAttributesBlobName],\n                );\n                if (initialSnapshotDetails.isRootDataStore) {\n                    gcState.gcNodes[\"/\"].outboundRoutes.push(dsRootId);\n                }\n\n                for (const [id, outboundRoutes] of Object.entries(gcSummaryDetails.gcData.gcNodes)) {\n                    // Prefix the data store id to the GC node ids to make them relative to the root from being\n                    // relative to the data store. Similar to how its done in DataStore::getGCData.\n                    const rootId = id === \"/\" ? dsRootId : `${dsRootId}${id}`;\n                    gcState.gcNodes[rootId] = { outboundRoutes: Array.from(outboundRoutes) };\n                }\n                assert(gcState.gcNodes[dsRootId] !== undefined,\n                    0x2a9 /* GC nodes for data store not in GC blob */);\n                gcState.gcNodes[dsRootId].unreferencedTimestampMs = gcSummaryDetails.unrefTimestamp;\n            }\n\n            // If there is only one node (root node just added above), either GC is disabled or we are loading from the\n            // very first summary generated by detached container. In both cases, GC was not run - return undefined.\n            return Object.keys(gcState.gcNodes).length === 1 ? undefined : gcState;\n        });\n\n        /**\n         * Set up the initializer which initializes the base GC state from the base snapshot. Note that the reference\n         * timestamp maybe from old ops which were not summarized and stored in the file. So, the unreferenced state\n         * may be out of date. This is fine because the state is updated every time GC runs based on the time then.\n         */\n        this.initializeBaseStateP = new LazyPromise<void>(async () => {\n            const currentReferenceTimestampMs = this.runtime.getCurrentReferenceTimestampMs();\n            const baseState = await baseSummaryStateP;\n            if (baseState === undefined) {\n                return;\n            }\n\n            const gcNodes: { [id: string]: string[]; } = {};\n            for (const [nodeId, nodeData] of Object.entries(baseState.gcNodes)) {\n                if (nodeData.unreferencedTimestampMs !== undefined) {\n                    this.unreferencedNodesState.set(\n                        nodeId,\n                        new UnreferencedStateTracker(\n                            nodeData.unreferencedTimestampMs,\n                            this.inactiveTimeoutMs,\n                            this.sweepTimeoutMs,\n                            currentReferenceTimestampMs,\n                        ),\n                    );\n                }\n                gcNodes[nodeId] = Array.from(nodeData.outboundRoutes);\n            }\n            this.previousGCDataFromLastRun = { gcNodes };\n        });\n\n        // Get the GC details for each node from the GC state in the base summary. This is returned in getBaseGCDetails\n        // which the caller uses to initialize each node's GC state.\n        this.baseGCDetailsP = new LazyPromise<Map<string, IGarbageCollectionDetailsBase>>(async () => {\n            const baseState = await baseSummaryStateP;\n            if (baseState === undefined) {\n                return new Map();\n            }\n\n            const gcNodes: { [id: string]: string[]; } = {};\n            for (const [nodeId, nodeData] of Object.entries(baseState.gcNodes)) {\n                gcNodes[nodeId] = Array.from(nodeData.outboundRoutes);\n            }\n            // Run GC on the nodes in the base summary to get the routes used in each node in the container.\n            // This is an optimization for space (vs performance) wherein we don't need to store the used routes of\n            // each node in the summary.\n            const usedRoutes = runGarbageCollection(gcNodes, [\"/\"]).referencedNodeIds;\n\n            const baseGCDetailsMap = unpackChildNodesGCDetails({ gcData: { gcNodes }, usedRoutes });\n            // Currently, the nodes may write the GC data. So, we need to update it's base GC details with the\n            // unreferenced timestamp. Once we start writing the GC data here, we won't need to do this anymore.\n            for (const [nodeId, nodeData] of Object.entries(baseState.gcNodes)) {\n                if (nodeData.unreferencedTimestampMs !== undefined) {\n                    const dataStoreGCDetails = baseGCDetailsMap.get(nodeId.slice(1));\n                    if (dataStoreGCDetails !== undefined) {\n                        dataStoreGCDetails.unrefTimestamp = nodeData.unreferencedTimestampMs;\n                    }\n                }\n            }\n            return baseGCDetailsMap;\n        });\n\n        // Log all the GC options and the state determined by the garbage collector. This is interesting only for the\n        // summarizer client since it is the only one that runs GC. It also helps keep the telemetry less noisy.\n        const gcConfigProps = JSON.stringify({\n            gcEnabled: this.gcEnabled,\n            sweepEnabled: this.sweepEnabled,\n            runGC: this.shouldRunGC,\n            runSweep: this.shouldRunSweep,\n            writeAtRoot: this._writeDataAtRoot,\n            testMode: this.testMode,\n            sessionExpiry: this.sessionExpiryTimeoutMs,\n            inactiveTimeout: this.inactiveTimeoutMs,\n            existing: createParams.existing,\n            trackGCState: this.trackGCState,\n            ...this.gcOptions,\n        });\n        if (this.isSummarizerClient) {\n            this.mc.logger.sendTelemetryEvent({\n                eventName: \"GarbageCollectorLoaded\",\n                gcConfigs: gcConfigProps,\n            });\n        }\n\n        // Initialize the base state that is used to detect when inactive objects are used.\n        if (this.shouldRunGC) {\n            this.initializeBaseStateP.catch((error) => {\n                const dpe = DataProcessingError.wrapIfUnrecognized(\n                    error,\n                    \"FailedToInitializeGC\",\n                );\n                dpe.addTelemetryProperties({ gcConfigs: gcConfigProps });\n                throw dpe;\n            });\n        }\n    }\n\n    /**\n     * Runs garbage collection and updates the reference / used state of the nodes in the container.\n     * @returns the number of data stores that have been marked as unreferenced.\n     */\n    public async collectGarbage(\n        options: {\n            /** Logger to use for logging GC events */\n            logger?: ITelemetryLogger;\n            /** True to run GC sweep phase after the mark phase */\n            runSweep?: boolean;\n            /** True to generate full GC data */\n            fullGC?: boolean;\n        },\n    ): Promise<IGCStats> {\n        const {\n            fullGC = this.gcOptions.runFullGC === true || this.summaryStateNeedsReset,\n        } = options;\n\n        const logger = options.logger\n            ? ChildLogger.create(options.logger, undefined, { all: { completedGCRuns: () => this.completedRuns } })\n            : this.mc.logger;\n\n        return PerformanceEvent.timedExecAsync(logger, { eventName: \"GarbageCollection\" }, async (event) => {\n            await this.runPreGCSteps();\n\n            // Get the runtime's GC data and run GC on the reference graph in it.\n            const gcData = await this.runtime.getGCData(fullGC);\n            const gcResult = runGarbageCollection(gcData.gcNodes, [\"/\"]);\n\n            const gcStats = await this.runPostGCSteps(gcData, gcResult, logger);\n            event.end({ ...gcStats });\n            this.completedRuns++;\n            return gcStats;\n        }, { end: true, cancel: \"error\" });\n    }\n\n    private async runPreGCSteps() {\n        // Ensure that base state has been initialized.\n        await this.initializeBaseStateP;\n        // Let the runtime update its pending state before GC runs.\n        await this.runtime.updateStateBeforeGC();\n    }\n\n    private async runPostGCSteps(gcData: IGarbageCollectionData, gcResult: IGCResult, logger: ITelemetryLogger) {\n        // Generate statistics from the current run. This is done before updating the current state because it\n        // generates some of its data based on previous state of the system.\n        const gcStats = this.generateStats(gcResult);\n\n        // Update the state since the last GC run. There can be nodes that were referenced between the last and\n        // the current run. We need to identify than and update their unreferenced state if needed.\n        this.updateStateSinceLastRun(gcData, logger);\n\n        // Update the current state and update the runtime of all routes or ids that used as per the GC run.\n        const currentReferenceTimestampMs = this.runtime.getCurrentReferenceTimestampMs();\n        this.updateCurrentState(gcData, gcResult, currentReferenceTimestampMs);\n        this.runtime.updateUsedRoutes(gcResult.referencedNodeIds, currentReferenceTimestampMs);\n\n        // Log events for objects that are ready to be deleted by sweep. When we have sweep enabled, we will\n        // delete these objects here instead.\n        this.logSweepEvents(logger, currentReferenceTimestampMs);\n\n        // If we are running in GC test mode, delete objects for unused routes. This enables testing scenarios\n        // involving access to deleted data.\n        if (this.testMode) {\n            this.runtime.deleteUnusedRoutes(gcResult.deletedNodeIds);\n        }\n\n        // Log pending unreferenced events such as a node being used after inactive. This is done after GC runs and\n        // updates its state so that we don't send false positives based on intermediate state. For example, we may get\n        // reference to an unreferenced node from another unreferenced node which means the node wasn't revived.\n        await this.logUnreferencedEvents(logger);\n\n        return gcStats;\n    }\n\n    /**\n     * Summarizes the GC data and returns it as a summary tree.\n     * We current write the entire GC state in a single blob. This can be modified later to write multiple\n     * blobs. All the blob keys should start with `gcBlobPrefix`.\n     */\n    public summarize(\n        fullTree: boolean,\n        trackState: boolean,\n        telemetryContext?: ITelemetryContext,\n    ): ISummarizeResult | undefined {\n        if (!this.shouldRunGC || this.previousGCDataFromLastRun === undefined) {\n            return;\n        }\n\n        const gcState: IGarbageCollectionState = { gcNodes: {} };\n        for (const [nodeId, outboundRoutes] of Object.entries(this.previousGCDataFromLastRun.gcNodes)) {\n            gcState.gcNodes[nodeId] = {\n                outboundRoutes,\n                unreferencedTimestampMs: this.unreferencedNodesState.get(nodeId)?.unreferencedTimestampMs,\n            };\n        }\n\n        const newSerializedSummaryState = JSON.stringify(generateSortedGCState(gcState));\n\n        /**\n         * As an optimization if the GC tree hasn't changed and we're tracking the gc state, return a tree handle\n         * instead of returning the whole GC tree. If there are changes, then we want to return the whole tree.\n         */\n        if (this.trackGCState) {\n            this.pendingSerializedSummaryState = newSerializedSummaryState;\n            if (\n                this.latestSerializedSummaryState !== undefined &&\n                this.latestSerializedSummaryState === newSerializedSummaryState &&\n                !fullTree &&\n                trackState\n            ) {\n                const stats = mergeStats();\n                stats.handleNodeCount++;\n                return {\n                    summary: {\n                        type: SummaryType.Handle,\n                        handle: `/${gcTreeKey}`,\n                        handleType: SummaryType.Tree,\n                    },\n                    stats,\n                };\n            }\n        }\n\n        const builder = new SummaryTreeBuilder();\n        builder.addBlob(`${gcBlobPrefix}_root`, newSerializedSummaryState);\n        return builder.getSummaryTree();\n    }\n\n    public getMetadata(): IGCMetadata {\n        return {\n            /**\n             * If GC is enabled, the GC data is written using the current GC version and that is the gcFeature that goes\n             * into the metadata blob. If GC is disabled, the gcFeature is 0.\n             */\n            gcFeature: this.gcEnabled ? this.currentGCVersion : 0,\n            sessionExpiryTimeoutMs: this.sessionExpiryTimeoutMs,\n            sweepEnabled: this.sweepEnabled,\n        };\n    }\n\n    /**\n     * Returns a map of node ids to their base GC details generated from the base summary. This is used by the caller\n     * to initialize the GC state of the nodes.\n     */\n    public async getBaseGCDetails(): Promise<Map<string, IGarbageCollectionDetailsBase>> {\n        return this.baseGCDetailsP;\n    }\n\n    /**\n     * Called when the latest summary of the system has been refreshed. This will be used to update the state of the\n     * latest summary tracked.\n     */\n    public async latestSummaryStateRefreshed(\n        result: RefreshSummaryResult,\n        readAndParseBlob: ReadAndParseBlob,\n    ): Promise<void> {\n        if (!this.shouldRunGC || !result.latestSummaryUpdated) {\n            return;\n        }\n\n        // If the summary was tracked by this client, it was the one that generated the summary in the first place.\n        // Basically, it was written in the current GC version.\n        if (result.wasSummaryTracked) {\n            this.latestSummaryGCVersion = this.currentGCVersion;\n            this.initialStateNeedsReset = false;\n            if (this.trackGCState) {\n                this.latestSerializedSummaryState = this.pendingSerializedSummaryState;\n                this.pendingSerializedSummaryState = undefined;\n            }\n            return;\n        }\n        // If the summary was not tracked by this client, update latest GC version and blob from the snapshot in the\n        // result as that is now the latest summary.\n        const snapshot = result.snapshot;\n        const metadataBlobId = snapshot.blobs[metadataBlobName];\n        if (metadataBlobId) {\n            const metadata = await readAndParseBlob<IContainerRuntimeMetadata>(metadataBlobId);\n            this.latestSummaryGCVersion = getGCVersion(metadata);\n        }\n\n        const gcSnapshotTree = snapshot.trees[gcTreeKey];\n        if (gcSnapshotTree !== undefined && this.trackGCState) {\n            const latestGCState = await getGCStateFromSnapshot(\n                gcSnapshotTree,\n                readAndParseBlob,\n            );\n            this.latestSerializedSummaryState = JSON.stringify(generateSortedGCState(latestGCState));\n        } else {\n            this.latestSerializedSummaryState = undefined;\n        }\n        this.pendingSerializedSummaryState = undefined;\n    }\n\n    /**\n     * Called when a node with the given id is updated. If the node is inactive, log an error.\n     * @param nodePath - The id of the node that changed.\n     * @param reason - Whether the node was loaded or changed.\n     * @param timestampMs - The timestamp when the node changed.\n     * @param packagePath - The package path of the node. This may not be available if the node hasn't been loaded yet.\n     * @param requestHeaders - If the node was loaded via request path, the headers in the request.\n     */\n    public nodeUpdated(\n        nodePath: string,\n        reason: \"Loaded\" | \"Changed\",\n        timestampMs?: number,\n        packagePath?: readonly string[],\n        requestHeaders?: IRequestHeader,\n    ) {\n        if (!this.shouldRunGC) {\n            return;\n        }\n\n        const nodeStateTracker = this.unreferencedNodesState.get(nodePath);\n        if (nodeStateTracker && nodeStateTracker.state !== UnreferencedState.Active) {\n            this.inactiveNodeUsed(\n                reason,\n                nodePath,\n                nodeStateTracker,\n                undefined /* fromNodeId */,\n                packagePath,\n                timestampMs,\n                requestHeaders,\n            );\n        }\n    }\n\n    /**\n     * Called when an outbound reference is added to a node. This is used to identify all nodes that have been\n     * referenced between summaries so that their unreferenced timestamp can be reset.\n     *\n     * @param fromNodePath - The node from which the reference is added.\n     * @param toNodePath - The node to which the reference is added.\n     */\n    public addedOutboundReference(fromNodePath: string, toNodePath: string) {\n        if (!this.shouldRunGC) {\n            return;\n        }\n\n        const outboundRoutes = this.newReferencesSinceLastRun.get(fromNodePath) ?? [];\n        outboundRoutes.push(toNodePath);\n        this.newReferencesSinceLastRun.set(fromNodePath, outboundRoutes);\n\n        const nodeStateTracker = this.unreferencedNodesState.get(toNodePath);\n        if (nodeStateTracker && nodeStateTracker.state !== UnreferencedState.Active) {\n            this.inactiveNodeUsed(\"Revived\", toNodePath, nodeStateTracker, fromNodePath);\n        }\n    }\n\n    public dispose(): void {\n        if (this.sessionExpiryTimer !== undefined) {\n            clearTimeout(this.sessionExpiryTimer);\n            this.sessionExpiryTimer = undefined;\n        }\n    }\n\n    /**\n     * Updates the state of the system as per the current GC run. It does the following:\n     * 1. Sets up the current GC state as per the gcData.\n     * 2. Starts tracking for nodes that have become unreferenced in this run.\n     * 3. Clears tracking for nodes that were unreferenced but became referenced in this run.\n     * @param gcData - The data representing the reference graph on which GC is run.\n     * @param gcResult - The result of the GC run on the gcData.\n     * @param currentReferenceTimestampMs - The timestamp to be used for unreferenced nodes' timestamp.\n     */\n    private updateCurrentState(\n        gcData: IGarbageCollectionData,\n        gcResult: IGCResult,\n        currentReferenceTimestampMs?: number,\n    ) {\n        this.previousGCDataFromLastRun = cloneGCData(gcData);\n        this.newReferencesSinceLastRun.clear();\n\n        // Iterate through the referenced nodes and stop tracking if they were unreferenced before.\n        for (const nodeId of gcResult.referencedNodeIds) {\n            const nodeStateTracker = this.unreferencedNodesState.get(nodeId);\n            if (nodeStateTracker !== undefined) {\n                // Stop tracking so as to clear out any running timers.\n                nodeStateTracker.stopTracking();\n                // Delete the node as we don't need to track it any more.\n                this.unreferencedNodesState.delete(nodeId);\n            }\n        }\n\n        /**\n         * If there is no current reference time, skip tracking when a node becomes unreferenced. This would happen\n         * if no ops have been processed ever and we still try to run GC. If so, there is nothing interesting to track\n         * anyway.\n         */\n        if (currentReferenceTimestampMs === undefined) {\n            return;\n        }\n\n        /**\n         * If a node became unreferenced in this run, start tracking it.\n         * If a node was already unreferenced, update its tracking information. Since the current reference time is\n         * from the ops seen, this will ensure that we keep updating the unreferenced state as time moves forward.\n         */\n        for (const nodeId of gcResult.deletedNodeIds) {\n            const nodeStateTracker = this.unreferencedNodesState.get(nodeId);\n            if (nodeStateTracker === undefined) {\n                this.unreferencedNodesState.set(\n                    nodeId,\n                    new UnreferencedStateTracker(\n                        currentReferenceTimestampMs,\n                        this.inactiveTimeoutMs,\n                        this.sweepTimeoutMs,\n                        currentReferenceTimestampMs,\n                    ),\n                );\n            } else {\n                nodeStateTracker.updateTracking(currentReferenceTimestampMs);\n            }\n        }\n    }\n\n    /**\n     * Since GC runs periodically, the GC data that is generated only tells us the state of the world at that point in\n     * time. It's possible that nodes transition from `unreferenced -> referenced -> unreferenced` between two runs. The\n     * unreferenced timestamp of such nodes needs to be reset as they may have been accessed when they were referenced.\n     *\n     * This function identifies nodes that were referenced since last run and removes their unreferenced state, if any.\n     * If these nodes are currently unreferenced, they will be assigned new unreferenced state by the current run.\n     */\n    private updateStateSinceLastRun(currentGCData: IGarbageCollectionData, logger: ITelemetryLogger) {\n        // If we haven't run GC before there is nothing to do.\n        if (this.previousGCDataFromLastRun === undefined) {\n            return;\n        }\n\n        // Find any references that haven't been identified correctly.\n        const missingExplicitReferences = this.findMissingExplicitReferences(\n            currentGCData,\n            this.previousGCDataFromLastRun,\n            this.newReferencesSinceLastRun,\n        );\n\n        if (this.writeDataAtRoot && missingExplicitReferences.length > 0) {\n            missingExplicitReferences.forEach((missingExplicitReference) => {\n                const event: ITelemetryPerformanceEvent = {\n                    eventName: \"gcUnknownOutboundReferences\",\n                    gcNodeId: missingExplicitReference[0],\n                    gcRoutes: JSON.stringify(missingExplicitReference[1]),\n                };\n                logger.sendPerformanceEvent(event);\n            });\n        }\n\n        // No references were added since the last run so we don't have to update reference states of any unreferenced\n        // nodes\n        if (this.newReferencesSinceLastRun.size === 0) {\n            return;\n        }\n\n        /**\n         * Generate a super set of the GC data that contains the nodes and edges from last run, plus any new node and\n         * edges that have been added since then. To do this, combine the GC data from the last run and the current\n         * run, and then add the references since last run.\n         *\n         * Note on why we need to combine the data from previous run, current run and all references in between -\n         * 1. We need data from last run because some of its references may have been deleted since then. If those\n         *    references added new outbound references before getting deleted, we need to detect them.\n         * 2. We need new outbound references since last run because some of them may have been deleted later. If those\n         *    references added new outbound references before getting deleted, we need to detect them.\n         * 3. We need data from the current run because currently we may not detect when DDSes are referenced:\n         *    - We don't require DDSes handles to be stored in a referenced DDS. For this, we need GC at DDS level\n         *      which is tracked by https://github.com/microsoft/FluidFramework/issues/8470.\n         *    - A new data store may have \"root\" DDSes already created and we don't detect them today.\n         */\n        const gcDataSuperSet = concatGarbageCollectionData(this.previousGCDataFromLastRun, currentGCData);\n        this.newReferencesSinceLastRun.forEach((outboundRoutes: string[], sourceNodeId: string) => {\n            if (gcDataSuperSet.gcNodes[sourceNodeId] === undefined) {\n                gcDataSuperSet.gcNodes[sourceNodeId] = outboundRoutes;\n            } else {\n                gcDataSuperSet.gcNodes[sourceNodeId].push(...outboundRoutes);\n            }\n        });\n\n        /**\n         * Run GC on the above reference graph to find all nodes that are referenced. For each one, if they are\n         * unreferenced, stop tracking them and remove from unreferenced list.\n         * Some of these nodes may be unreferenced now and if so, the current run will add unreferenced state for them.\n         */\n        const gcResult = runGarbageCollection(gcDataSuperSet.gcNodes, [\"/\"]);\n        for (const nodeId of gcResult.referencedNodeIds) {\n            const nodeStateTracker = this.unreferencedNodesState.get(nodeId);\n            if (nodeStateTracker !== undefined) {\n                // Stop tracking so as to clear out any running timers.\n                nodeStateTracker.stopTracking();\n                // Delete the node as we don't need to track it any more.\n                this.unreferencedNodesState.delete(nodeId);\n            }\n        }\n    }\n\n    /**\n     * Finds all new references or outbound routes in the current graph that haven't been explicitly notified to GC.\n     * The principle is that every new reference or outbound route must be notified to GC via the\n     * addedOutboundReference method. It it hasn't, its a bug and we want to identify these scenarios.\n     *\n     * In more simple terms:\n     * Missing Explicit References = Current References - Previous References - Explicitly Added References;\n     *\n     * @param currentGCData - The GC data (reference graph) from the current GC run.\n     * @param previousGCData - The GC data (reference graph) from the previous GC run.\n     * @param explicitReferences - New references added explicity between the previous and the current run.\n     * @returns - a list of missing explicit references\n     */\n    private findMissingExplicitReferences(\n        currentGCData: IGarbageCollectionData,\n        previousGCData: IGarbageCollectionData,\n        explicitReferences: Map<string, string[]>,\n    ): [string, string[]][] {\n        assert(\n            previousGCData !== undefined,\n            0x2b7, /* \"Can't validate correctness without GC data from last run\" */\n        );\n\n        const currentGraph = Object.entries(currentGCData.gcNodes);\n        const missingExplicitReferences: [string, string[]][] = [];\n        currentGraph.forEach(([nodeId, currentOutboundRoutes]) => {\n            const previousRoutes = previousGCData.gcNodes[nodeId] ?? [];\n            const explicitRoutes = explicitReferences.get(nodeId) ?? [];\n            const missingExplicitRoutes: string[] = [];\n            currentOutboundRoutes.forEach((route) => {\n                const isBlobOrDataStoreRoute =\n                    this.runtime.getNodeType(route) === GCNodeType.Blob ||\n                    this.runtime.getNodeType(route) === GCNodeType.DataStore;\n                // Ignore implicitly added DDS routes to their parent datastores\n                const notRouteFromDDSToParentDataStore = !nodeId.startsWith(route);\n                if (\n                    isBlobOrDataStoreRoute &&\n                    notRouteFromDDSToParentDataStore &&\n                    (!previousRoutes.includes(route) && !explicitRoutes.includes(route))\n                ) {\n                    missingExplicitRoutes.push(route);\n                }\n            });\n            if (missingExplicitRoutes.length > 0) {\n                missingExplicitReferences.push([nodeId, missingExplicitRoutes]);\n            }\n        });\n\n        // Ideally missingExplicitReferences should always have a size 0\n        return missingExplicitReferences;\n    }\n\n    /**\n     * Generates the stats of a garbage collection run from the given results of the run.\n     * @param gcResult - The result of a GC run.\n     * @returns the GC stats of the GC run.\n     */\n    private generateStats(gcResult: IGCResult): IGCStats {\n        const gcStats: IGCStats = {\n            nodeCount: 0,\n            dataStoreCount: 0,\n            attachmentBlobCount: 0,\n            unrefNodeCount: 0,\n            unrefDataStoreCount: 0,\n            unrefAttachmentBlobCount: 0,\n            updatedNodeCount: 0,\n            updatedDataStoreCount: 0,\n            updatedAttachmentBlobCount: 0,\n        };\n\n        const updateNodeStats = (nodeId: string, referenced: boolean) => {\n            gcStats.nodeCount++;\n            // If there is no previous GC data, every node's state is generated and is considered as updated.\n            // Otherwise, find out if any node went from referenced to unreferenced or vice-versa.\n            const stateUpdated = this.previousGCDataFromLastRun === undefined ||\n                this.unreferencedNodesState.has(nodeId) === referenced;\n            if (stateUpdated) {\n                gcStats.updatedNodeCount++;\n            }\n            if (!referenced) {\n                gcStats.unrefNodeCount++;\n            }\n\n            if (this.runtime.getNodeType(nodeId) === GCNodeType.DataStore) {\n                gcStats.dataStoreCount++;\n                if (stateUpdated) {\n                    gcStats.updatedDataStoreCount++;\n                }\n                if (!referenced) {\n                    gcStats.unrefDataStoreCount++;\n                }\n            }\n            if (this.runtime.getNodeType(nodeId) === GCNodeType.Blob) {\n                gcStats.attachmentBlobCount++;\n                if (stateUpdated) {\n                    gcStats.updatedAttachmentBlobCount++;\n                }\n                if (!referenced) {\n                    gcStats.unrefAttachmentBlobCount++;\n                }\n            }\n        };\n\n        for (const nodeId of gcResult.referencedNodeIds) {\n            updateNodeStats(nodeId, true /* referenced */);\n        }\n\n        for (const nodeId of gcResult.deletedNodeIds) {\n            updateNodeStats(nodeId, false /* referenced */);\n        }\n\n        return gcStats;\n    }\n\n    /**\n     * For nodes that are ready to sweep, log an event for now. Until we start running sweep which deletes objects,\n     * this will give us a view into how much deleted content a container has.\n     */\n    private logSweepEvents(logger: ITelemetryLogger, currentReferenceTimestampMs?: number) {\n        if (this.mc.config.getBoolean(disableSweepLogKey) === true\n            || currentReferenceTimestampMs === undefined\n            || this.sweepTimeoutMs === undefined) {\n            return;\n        }\n\n        this.unreferencedNodesState.forEach((nodeStateTracker, nodeId) => {\n            if (nodeStateTracker.state !== UnreferencedState.SweepReady) {\n                return;\n            }\n\n            const nodeType = this.runtime.getNodeType(nodeId);\n            if (nodeType !== GCNodeType.DataStore && nodeType !== GCNodeType.Blob) {\n                return;\n            }\n\n            // Log deleted event for each node only once to reduce noise in telemetry.\n            const uniqueEventId = `Deleted-${nodeId}`;\n            if (this.loggedUnreferencedEvents.has(uniqueEventId)) {\n                return;\n            }\n            this.loggedUnreferencedEvents.add(uniqueEventId);\n            logger.sendTelemetryEvent({\n                eventName: \"GCObjectDeleted\",\n                id: nodeId,\n                type: nodeType,\n                age: currentReferenceTimestampMs - nodeStateTracker.unreferencedTimestampMs,\n                timeout: this.sweepTimeoutMs,\n                completedGCRuns: this.completedRuns,\n                lastSummaryTime: this.getLastSummaryTimestampMs(),\n            });\n        });\n    }\n\n    /**\n     * Called when an inactive node is used after. Queue up an event that will be logged next time GC runs.\n     */\n    private inactiveNodeUsed(\n        usageType: \"Changed\" | \"Loaded\" | \"Revived\",\n        nodeId: string,\n        nodeStateTracker: UnreferencedStateTracker,\n        fromNodeId?: string,\n        packagePath?: readonly string[],\n        currentReferenceTimestampMs = this.runtime.getCurrentReferenceTimestampMs(),\n        requestHeaders?: IRequestHeader,\n    ) {\n        // If there is no reference timestamp to work with, no ops have been processed after creation. If so, skip\n        // logging as nothing interesting would have happened worth logging.\n        // If the node is active, skip logging.\n        if (currentReferenceTimestampMs === undefined || nodeStateTracker.state === UnreferencedState.Active) {\n            return;\n        }\n\n        // For non-summarizer clients, only log \"Loaded\" type events since these objects may not be loaded in the\n        // summarizer clients if they are based off of user actions (such as scrolling to content for these objects).\n        if (!this.isSummarizerClient && usageType !== \"Loaded\") {\n            return;\n        }\n\n        // We only care about data stores and attachment blobs for this telemetry since GC only marks these objects\n        // as unreferenced. Also, if an inactive DDS is used, the corresponding data store store will also be used.\n        const nodeType = this.runtime.getNodeType(nodeId);\n        if (nodeType !== GCNodeType.DataStore && nodeType !== GCNodeType.Blob) {\n            return;\n        }\n\n        const state = nodeStateTracker.state;\n        const uniqueEventId = `${state}-${nodeId}-${usageType}`;\n        if (this.loggedUnreferencedEvents.has(uniqueEventId)) {\n            return;\n        }\n        this.loggedUnreferencedEvents.add(uniqueEventId);\n\n        const propsToLog = {\n            id: nodeId,\n            type: nodeType,\n            unrefTime: nodeStateTracker.unreferencedTimestampMs,\n            age: currentReferenceTimestampMs - nodeStateTracker.unreferencedTimestampMs,\n            timeout: nodeStateTracker.state === UnreferencedState.Inactive\n                ? this.inactiveTimeoutMs\n                : this.sweepTimeoutMs,\n            completedGCRuns: this.completedRuns,\n            lastSummaryTime: this.getLastSummaryTimestampMs(),\n            externalRequest: requestHeaders?.[RuntimeHeaders.externalRequest],\n            viaHandle: requestHeaders?.[RuntimeHeaders.viaHandle],\n            fromId: fromNodeId,\n        };\n\n        // For summarizer client, queue the event so it is logged the next time GC runs if the event is still valid.\n        // For non-summarizer client, log the event now since GC won't run on it. This may result in false positives\n        // but it's a good signal nonetheless and we can consume it with a grain of salt.\n        if (this.isSummarizerClient) {\n            this.pendingEventsQueue.push({ ...propsToLog, usageType, state });\n        } else {\n            this.mc.logger.sendErrorEvent({\n                ...propsToLog,\n                eventName: `${state}Object_${usageType}`,\n                pkg: packagePath ? { value: packagePath.join(\"/\"), tag: TelemetryDataTag.CodeArtifact } : undefined,\n            });\n        }\n    }\n\n    private async logUnreferencedEvents(logger: ITelemetryLogger) {\n        for (const eventProps of this.pendingEventsQueue) {\n            const { usageType, state, ...propsToLog } = eventProps;\n            /**\n             * Revived event is logged only if the node is active. If the node is not active, the reference to it was\n             * from another unreferenced node and this scenario is not interesting to log.\n             * Loaded and Changed events are logged only if the node is not active. If the node is active, it was\n             * revived and a Revived event will be logged for it.\n             */\n            const nodeStateTracker = this.unreferencedNodesState.get(eventProps.id);\n            const active = nodeStateTracker === undefined || nodeStateTracker.state === UnreferencedState.Active;\n            if ((usageType === \"Revived\") === active) {\n                const pkg = await this.getNodePackagePath(eventProps.id);\n                const fromPkg = eventProps.fromId ? await this.getNodePackagePath(eventProps.fromId) : undefined;\n                logger.sendErrorEvent({\n                    ...propsToLog,\n                    eventName: `${state}Object_${usageType}`,\n                    pkg: pkg ? { value: pkg.join(\"/\"), tag: TelemetryDataTag.CodeArtifact } : undefined,\n                    fromPkg: fromPkg ? { value: fromPkg.join(\"/\"), tag: TelemetryDataTag.CodeArtifact } : undefined,\n                });\n            }\n        }\n        this.pendingEventsQueue = [];\n    }\n}\n\n/**\n * Gets the garbage collection state from the given snapshot tree. The GC state may be written into multiple blobs.\n * Merge the GC state from all such blobs and return the merged GC state.\n */\nasync function getGCStateFromSnapshot(\n    gcSnapshotTree: ISnapshotTree,\n    readAndParseBlob: ReadAndParseBlob,\n): Promise<IGarbageCollectionState> {\n    let rootGCState: IGarbageCollectionState = { gcNodes: {} };\n    for (const key of Object.keys(gcSnapshotTree.blobs)) {\n        // Skip blobs that do not start with the GC prefix.\n        if (!key.startsWith(gcBlobPrefix)) {\n            continue;\n        }\n\n        const blobId = gcSnapshotTree.blobs[key];\n        if (blobId === undefined) {\n            continue;\n        }\n        const gcState = await readAndParseBlob<IGarbageCollectionState>(blobId);\n        assert(gcState !== undefined, 0x2ad /* \"GC blob missing from snapshot\" */);\n        // Merge the GC state of this blob into the root GC state.\n        rootGCState = concatGarbageCollectionStates(rootGCState, gcState);\n    }\n    return rootGCState;\n}\n\nfunction generateSortedGCState(gcState: IGarbageCollectionState): IGarbageCollectionState {\n    const sortableArray: [string, IGarbageCollectionNodeData][] = Object.entries(gcState.gcNodes);\n    sortableArray.sort(([a], [b]) => a.localeCompare(b));\n    const sortedGCState: IGarbageCollectionState = { gcNodes: {} };\n    for (const [nodeId, nodeData] of sortableArray) {\n        nodeData.outboundRoutes.sort();\n        sortedGCState.gcNodes[nodeId] = nodeData;\n    }\n    return sortedGCState;\n}\n\n/**\n * setLongTimeout is used for timeouts longer than setTimeout's ~24.8 day max\n * @param timeoutMs - the total time the timeout needs to last in ms\n * @param timeoutFn - the function to execute when the timer ends\n * @param setTimerFn - the function used to update your timer variable\n */\nfunction setLongTimeout(\n    timeoutMs: number,\n    timeoutFn: () => void,\n    setTimerFn: (timer: ReturnType<typeof setTimeout>) => void,\n) {\n    // The setTimeout max is 24.8 days before looping occurs.\n    const maxTimeout = 2147483647;\n    let timer: ReturnType<typeof setTimeout>;\n    if (timeoutMs > maxTimeout) {\n        const newTimeoutMs = timeoutMs - maxTimeout;\n        timer = setTimeout(() => setLongTimeout(newTimeoutMs, timeoutFn, setTimerFn), maxTimeout);\n    } else {\n        timer = setTimeout(() => timeoutFn(), timeoutMs);\n    }\n    setTimerFn(timer);\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { assert } from \"@fluidframework/common-utils\";\nimport { IDocumentStorageService } from \"@fluidframework/driver-definitions\";\nimport { readAndParse } from \"@fluidframework/driver-utils\";\nimport { ISequencedDocumentMessage, ISnapshotTree, SummaryType } from \"@fluidframework/protocol-definitions\";\nimport { channelsTreeName, ISummaryTreeWithStats } from \"@fluidframework/runtime-definitions\";\nimport { gcTreeKey } from \"./garbageCollection\";\n\ntype OmitAttributesVersions<T> = Omit<T, \"snapshotFormatVersion\" | \"summaryFormatVersion\">;\ninterface IFluidDataStoreAttributes0 {\n    readonly snapshotFormatVersion?: undefined;\n    readonly summaryFormatVersion?: undefined;\n    pkg: string;\n    /**\n     * This tells whether a data store is root. Root data stores are never collected.\n     * Non-root data stores may be collected if they are not used. If this is not present, default it to\n     * true. This will ensure that older data stores are incorrectly collected.\n     */\n    readonly isRootDataStore?: boolean;\n}\ninterface IFluidDataStoreAttributes1 extends OmitAttributesVersions<IFluidDataStoreAttributes0> {\n    readonly snapshotFormatVersion: \"0.1\";\n    readonly summaryFormatVersion?: undefined;\n}\ninterface IFluidDataStoreAttributes2 extends OmitAttributesVersions<IFluidDataStoreAttributes1> {\n    /** Switch from snapshotFormatVersion to summaryFormatVersion */\n    readonly snapshotFormatVersion?: undefined;\n    readonly summaryFormatVersion: 2;\n    /**\n     * True if channels are not isolated in .channels subtrees, otherwise isolated.\n     * This is required in both datastore attributes as well as the root container,\n     * because reused summary handles may cause different format versions in each\n     * datastore subtree within the summary.\n     */\n    readonly disableIsolatedChannels?: true;\n}\n/**\n * Added IFluidDataStoreAttributes similar to IChannelAttributes which will tell the attributes of a\n * store like the package, snapshotFormatVersion to take different decisions based on a particular\n * snapshotFormatVersion.\n */\nexport type ReadFluidDataStoreAttributes =\n    | IFluidDataStoreAttributes0\n    | IFluidDataStoreAttributes1\n    | IFluidDataStoreAttributes2;\nexport type WriteFluidDataStoreAttributes = IFluidDataStoreAttributes1 | IFluidDataStoreAttributes2;\n\nexport function getAttributesFormatVersion(attributes: ReadFluidDataStoreAttributes): number {\n    if (attributes.summaryFormatVersion) {\n        /**\n         * Version 2+: Introduces .channels trees for isolation of\n         * channel trees from data store objects.\n         */\n        return attributes.summaryFormatVersion;\n    } else if (attributes.snapshotFormatVersion === \"0.1\") {\n        /**\n         * Version 1: from this version the pkg within the data store\n         * attributes blob is a JSON array rather than a string.\n         */\n        return 1;\n    }\n    /**\n     * Version 0: format version is missing from summary.\n     * This indicates it is an older version.\n     */\n    return 0;\n}\n\nexport function hasIsolatedChannels(attributes: ReadFluidDataStoreAttributes): boolean {\n    return !!attributes.summaryFormatVersion && !attributes.disableIsolatedChannels;\n}\n\nexport interface IContainerRuntimeMetadata extends ICreateContainerMetadata, IGCMetadata {\n    readonly summaryFormatVersion: 1;\n    /** The last message processed at the time of summary. Only primitive property types are added to the summary. */\n    readonly message: ISummaryMetadataMessage | undefined;\n    /** True if channels are not isolated in .channels subtrees, otherwise isolated. */\n    readonly disableIsolatedChannels?: true;\n    /** The summary number for a container's summary. Incremented on summaries throughout its lifetime. */\n    readonly summaryNumber?: number;\n    /**\n     * @deprecated - User summaryNumber instead.\n     * Counter of the last summary happened, increments every time we summarize\n     */\n    readonly summaryCount?: number;\n}\n\nexport interface ICreateContainerMetadata {\n    /** Runtime version of the container when it was first created */\n    createContainerRuntimeVersion?: string;\n    /** Timestamp of the container when it was first created */\n    createContainerTimestamp?: number;\n}\n\nexport type GCVersion = number;\nexport interface IGCMetadata {\n    /**\n     * The version of the GC code that was run to generate the GC data that is written in the summary.\n     * Also, used to determine whether GC is enabled for this container or not:\n     * - A value of 0 or undefined means GC is disabled.\n     * - A value greater than 0 means GC is enabled.\n     */\n    readonly gcFeature?: GCVersion;\n    /** If this is present, the session for this container will expire after this time and the container will close */\n    readonly sessionExpiryTimeoutMs?: number;\n    /**\n     * Tells whether the GC sweep phase is enabled for this container.\n     * - True means sweep phase is enabled.\n     * - False means sweep phase is disabled. If GC is disabled as per gcFeature, sweep is also disabled.\n     */\n    readonly sweepEnabled?: boolean;\n}\n\n/** The properties of an ISequencedDocumentMessage to be stored in the metadata blob in summary. */\nexport type ISummaryMetadataMessage = Pick<ISequencedDocumentMessage,\n    | \"clientId\"\n    | \"clientSequenceNumber\"\n    | \"minimumSequenceNumber\"\n    | \"referenceSequenceNumber\"\n    | \"sequenceNumber\"\n    | \"timestamp\"\n    | \"type\">;\n\n/**\n * Extracts the properties from an ISequencedDocumentMessage as defined by ISummaryMetadataMessage. This message is\n * added to the metadata blob in summary.\n */\nexport const extractSummaryMetadataMessage = (\n    message?: ISequencedDocumentMessage,\n): ISummaryMetadataMessage | undefined => message === undefined ? undefined : {\n    clientId: message.clientId,\n    clientSequenceNumber: message.clientSequenceNumber,\n    minimumSequenceNumber: message.minimumSequenceNumber,\n    referenceSequenceNumber: message.referenceSequenceNumber,\n    sequenceNumber: message.sequenceNumber,\n    timestamp: message.timestamp,\n    type: message.type,\n};\n\nexport function getMetadataFormatVersion(metadata?: IContainerRuntimeMetadata): number {\n    /**\n     * Version 2+: Introduces runtime sequence number for data verification.\n     *\n     * Version 1+: Introduces .metadata blob and .channels trees for isolation of\n     * data store trees from container-level objects.\n     * Also introduces enableGC option stored in the summary.\n     *\n     * Version 0: metadata blob missing; format version is missing from summary.\n     * This indicates it is an older version.\n     */\n    return metadata?.summaryFormatVersion ?? 0;\n}\n\nexport const aliasBlobName = \".aliases\";\nexport const metadataBlobName = \".metadata\";\nexport const chunksBlobName = \".chunks\";\nexport const electedSummarizerBlobName = \".electedSummarizer\";\nexport const blobsTreeName = \".blobs\";\n\nexport function rootHasIsolatedChannels(metadata?: IContainerRuntimeMetadata): boolean {\n    return !!metadata && !metadata.disableIsolatedChannels;\n}\n\nexport function getGCVersion(metadata?: IGCMetadata): GCVersion {\n    if (!metadata) {\n        // Force to 0/disallowed in prior versions\n        return 0;\n    }\n    return metadata.gcFeature ?? 0;\n}\n\nexport const protocolTreeName = \".protocol\";\n\n/**\n * List of tree IDs at the container level which are reserved.\n * This is for older versions of summaries that do not yet have an\n * isolated data stores namespace. Without the namespace, this must\n * be used to prevent name collisions with data store IDs.\n */\nexport const nonDataStorePaths = [protocolTreeName, \".logTail\", \".serviceProtocol\", blobsTreeName, gcTreeKey];\n\nexport const dataStoreAttributesBlobName = \".component\";\n\n/**\n * Modifies summary tree and stats to put tree under .channels tree.\n *\n * @param summarizeResult - Summary tree and stats to modify\n *\n * @example\n * Converts from:\n * ```typescript\n * {\n *     type: SummaryType.Tree,\n *     tree: { a: {...}, b: {...}, c: {...} },\n * }\n * ```\n *\n * to:\n *\n * ```typescript\n * {\n *     type: SummaryType.Tree,\n *     tree: {\n *         \".channels\": {\n *             type: SummaryType.Tree,\n *             tree: { a: {...}, b: {...}, c: {...} }\n *         },\n *     },\n * }\n * ```\n * And adds +1 to treeNodeCount in stats.\n */\nexport function wrapSummaryInChannelsTree(summarizeResult: ISummaryTreeWithStats): void {\n    summarizeResult.summary = {\n        type: SummaryType.Tree,\n        tree: { [channelsTreeName]: summarizeResult.summary },\n    };\n    summarizeResult.stats.treeNodeCount++;\n}\n\nexport async function getFluidDataStoreAttributes(\n    storage: IDocumentStorageService,\n    snapshot: ISnapshotTree,\n): Promise<ReadFluidDataStoreAttributes> {\n    const attributes = await readAndParse<ReadFluidDataStoreAttributes>(\n        storage, snapshot.blobs[dataStoreAttributesBlobName]);\n    // Use the snapshotFormatVersion to determine how the pkg is encoded in the snapshot.\n    // For snapshotFormatVersion = \"0.1\" (1) or above, pkg is jsonified, otherwise it is just a string.\n    // However the feature of loading a detached container from snapshot, is added when the\n    // snapshotFormatVersion is at least \"0.1\" (1), so we don't expect it to be anything else.\n    const formatVersion = getAttributesFormatVersion(attributes);\n    assert(formatVersion > 0,\n        0x1d5 /* Invalid snapshot format version */);\n    return attributes;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IDisposable, ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport {\n    FluidObject,\n    IRequest,\n    IResponse,\n    IFluidHandle,\n} from \"@fluidframework/core-interfaces\";\nimport {\n    IAudience,\n    IDeltaManager,\n    BindState,\n    AttachState,\n    ILoaderOptions,\n} from \"@fluidframework/container-definitions\";\nimport {\n    assert,\n    Deferred,\n    LazyPromise,\n    TypedEventEmitter,\n} from \"@fluidframework/common-utils\";\nimport { IDocumentStorageService } from \"@fluidframework/driver-definitions\";\nimport { readAndParse } from \"@fluidframework/driver-utils\";\nimport { BlobTreeEntry } from \"@fluidframework/protocol-base\";\nimport {\n    IClientDetails,\n    IDocumentMessage,\n    IQuorumClients,\n    ISequencedDocumentMessage,\n    ISnapshotTree,\n    ITreeEntry,\n} from \"@fluidframework/protocol-definitions\";\nimport {\n    IContainerRuntime,\n} from \"@fluidframework/container-runtime-definitions\";\nimport {\n    channelsTreeName,\n    CreateChildSummarizerNodeFn,\n    CreateChildSummarizerNodeParam,\n    FluidDataStoreRegistryEntry,\n    gcBlobKey,\n    IAttachMessage,\n    IFluidDataStoreChannel,\n    IFluidDataStoreContext,\n    IFluidDataStoreContextDetached,\n    IFluidDataStoreContextEvents,\n    IFluidDataStoreRegistry,\n    IGarbageCollectionData,\n    IGarbageCollectionDetailsBase,\n    IGarbageCollectionSummaryDetails,\n    IInboundSignalMessage,\n    IProvideFluidDataStoreFactory,\n    ISummarizeInternalResult,\n    ISummarizeResult,\n    ISummarizerNodeWithGC,\n    SummarizeInternalFn,\n    ITelemetryContext,\n} from \"@fluidframework/runtime-definitions\";\nimport { addBlobToSummary, convertSummaryTreeToITree } from \"@fluidframework/runtime-utils\";\nimport {\n    ChildLogger,\n    LoggingError,\n    TelemetryDataTag,\n    ThresholdCounter,\n} from \"@fluidframework/telemetry-utils\";\nimport { DataProcessingError } from \"@fluidframework/container-utils\";\n\nimport { ContainerRuntime } from \"./containerRuntime\";\nimport {\n    dataStoreAttributesBlobName,\n    hasIsolatedChannels,\n    wrapSummaryInChannelsTree,\n    ReadFluidDataStoreAttributes,\n    WriteFluidDataStoreAttributes,\n    getAttributesFormatVersion,\n    getFluidDataStoreAttributes,\n} from \"./summaryFormat\";\n\nfunction createAttributes(\n    pkg: readonly string[],\n    isRootDataStore: boolean,\n    disableIsolatedChannels: boolean,\n): WriteFluidDataStoreAttributes {\n    const stringifiedPkg = JSON.stringify(pkg);\n    return disableIsolatedChannels ? {\n        pkg: stringifiedPkg,\n        snapshotFormatVersion: \"0.1\",\n        isRootDataStore,\n    } : {\n        pkg: stringifiedPkg,\n        summaryFormatVersion: 2,\n        isRootDataStore,\n    };\n}\nexport function createAttributesBlob(\n    pkg: readonly string[],\n    isRootDataStore: boolean,\n    disableIsolatedChannels: boolean,\n): ITreeEntry {\n    const attributes = createAttributes(pkg, isRootDataStore, disableIsolatedChannels);\n    return new BlobTreeEntry(dataStoreAttributesBlobName, JSON.stringify(attributes));\n}\n\ninterface ISnapshotDetails {\n    pkg: readonly string[];\n    isRootDataStore: boolean;\n    snapshot?: ISnapshotTree;\n}\n\ninterface FluidDataStoreMessage {\n    content: any;\n    type: string;\n}\n\n/** Properties necessary for creating a FluidDataStoreContext */\nexport interface IFluidDataStoreContextProps {\n    readonly id: string;\n    readonly runtime: ContainerRuntime;\n    readonly storage: IDocumentStorageService;\n    readonly scope: FluidObject;\n    readonly createSummarizerNodeFn: CreateChildSummarizerNodeFn;\n    readonly writeGCDataAtRoot: boolean;\n    readonly disableIsolatedChannels: boolean;\n    readonly pkg?: Readonly<string[]>;\n}\n\n/** Properties necessary for creating a local FluidDataStoreContext */\nexport interface ILocalFluidDataStoreContextProps extends IFluidDataStoreContextProps {\n    readonly pkg: Readonly<string[]> | undefined;\n    readonly snapshotTree: ISnapshotTree | undefined;\n    readonly isRootDataStore: boolean | undefined;\n    readonly makeLocallyVisibleFn: () => void;\n    /**\n     * @deprecated 0.16 Issue #1635, #3631\n     */\n    readonly createProps?: any;\n}\n\n/** Properties necessary for creating a remote FluidDataStoreContext */\nexport interface IRemoteFluidDataStoreContextProps extends IFluidDataStoreContextProps {\n    readonly snapshotTree: ISnapshotTree | string | undefined;\n    readonly getBaseGCDetails: () => Promise<IGarbageCollectionDetailsBase | undefined>;\n}\n\n/**\n * Represents the context for the store. This context is passed to the store runtime.\n */\nexport abstract class FluidDataStoreContext extends TypedEventEmitter<IFluidDataStoreContextEvents> implements\n    IFluidDataStoreContext,\n    IDisposable {\n    public get packagePath(): readonly string[] {\n        assert(this.pkg !== undefined, 0x139 /* \"Undefined package path\" */);\n        return this.pkg;\n    }\n\n    public get options(): ILoaderOptions {\n        return this._containerRuntime.options;\n    }\n\n    public get clientId(): string | undefined {\n        return this._containerRuntime.clientId;\n    }\n\n    public get clientDetails(): IClientDetails {\n        return this._containerRuntime.clientDetails;\n    }\n\n    public get logger(): ITelemetryLogger {\n        return this._containerRuntime.logger;\n    }\n\n    public get deltaManager(): IDeltaManager<ISequencedDocumentMessage, IDocumentMessage> {\n        return this._containerRuntime.deltaManager;\n    }\n\n    public get connected(): boolean {\n        return this._containerRuntime.connected;\n    }\n\n    public get IFluidHandleContext() {\n        return this._containerRuntime.IFluidHandleContext;\n    }\n\n    public get containerRuntime(): IContainerRuntime {\n        return this._containerRuntime;\n    }\n\n    public get isLoaded(): boolean {\n        return this.loaded;\n    }\n\n    public get baseSnapshot(): ISnapshotTree | undefined {\n        return this._baseSnapshot;\n    }\n\n    private _disposed = false;\n    public get disposed() { return this._disposed; }\n\n    public get attachState(): AttachState {\n        return this._attachState;\n    }\n\n    public get IFluidDataStoreRegistry(): IFluidDataStoreRegistry | undefined {\n        return this.registry;\n    }\n\n    /**\n     * A datastore is considered as root if it\n     * 1. is root in memory - see isInMemoryRoot\n     * 2. is root as part of the base snapshot that the datastore loaded from\n     * @returns whether a datastore is root\n     */\n    public async isRoot(): Promise<boolean> {\n        return this.isInMemoryRoot() || (await this.getInitialSnapshotDetails()).isRootDataStore;\n    }\n\n    /**\n     * There are 3 states where isInMemoryRoot needs to be true\n     * 1. when a datastore becomes aliased. This can happen for both remote and local datastores\n     * 2. when a datastore is created locally as root\n     * 3. when a datastore is created locally as root and is rehydrated\n     * @returns whether a datastore is root in memory\n     */\n    protected isInMemoryRoot(): boolean {\n        return this._isInMemoryRoot;\n    }\n\n    protected registry: IFluidDataStoreRegistry | undefined;\n\n    protected detachedRuntimeCreation = false;\n    public readonly bindToContext: () => void;\n    protected channel: IFluidDataStoreChannel | undefined;\n    private loaded = false;\n    protected pending: ISequencedDocumentMessage[] | undefined = [];\n    protected channelDeferred: Deferred<IFluidDataStoreChannel> | undefined;\n    private _baseSnapshot: ISnapshotTree | undefined;\n    protected _attachState: AttachState;\n    private _isInMemoryRoot: boolean = false;\n    protected readonly summarizerNode: ISummarizerNodeWithGC;\n    private readonly subLogger: ITelemetryLogger;\n    private readonly thresholdOpsCounter: ThresholdCounter;\n    private static readonly pendingOpsCountThreshold = 1000;\n\n    // The used state of this node as per the last GC run. This is used to update the used state of the channel\n    // if it realizes after GC is run.\n    private lastUsedState: { usedRoutes: string[]; gcTimestamp?: number; } | undefined;\n\n    public readonly id: string;\n    private readonly _containerRuntime: ContainerRuntime;\n    public readonly storage: IDocumentStorageService;\n    public readonly scope: FluidObject;\n    private readonly writeGCDataAtRoot: boolean;\n    protected readonly disableIsolatedChannels: boolean;\n    protected pkg?: readonly string[];\n\n    constructor(\n        props: IFluidDataStoreContextProps,\n        private readonly existing: boolean,\n        private bindState: BindState,\n        public readonly isLocalDataStore: boolean,\n        private readonly makeLocallyVisibleFn: () => void,\n    ) {\n        super();\n\n        this._containerRuntime = props.runtime;\n        this.id = props.id;\n        this.storage = props.storage;\n        this.scope = props.scope;\n        this.writeGCDataAtRoot = props.writeGCDataAtRoot;\n        this.disableIsolatedChannels = props.disableIsolatedChannels;\n        this.pkg = props.pkg;\n\n        // URIs use slashes as delimiters. Handles use URIs.\n        // Thus having slashes in types almost guarantees trouble down the road!\n        assert(!this.id.includes(\"/\"), 0x13a /* Data store ID contains slash */);\n\n        this._attachState = this.containerRuntime.attachState !== AttachState.Detached && this.existing ?\n            this.containerRuntime.attachState : AttachState.Detached;\n\n        this.bindToContext = () => {\n            assert(this.bindState === BindState.NotBound, 0x13b /* \"datastore context is already in bound state\" */);\n            this.bindState = BindState.Binding;\n            assert(this.channel !== undefined, 0x13c /* \"undefined channel on datastore context\" */);\n            this.makeLocallyVisible();\n            this.bindState = BindState.Bound;\n        };\n\n        const thisSummarizeInternal =\n            async (fullTree: boolean, trackState: boolean, telemetryContext?: ITelemetryContext) =>\n            this.summarizeInternal(fullTree, trackState, telemetryContext);\n\n        this.summarizerNode = props.createSummarizerNodeFn(\n            thisSummarizeInternal,\n            async (fullGC?: boolean) => this.getGCDataInternal(fullGC),\n            async () => this.getBaseGCDetails(),\n        );\n\n        this.subLogger = ChildLogger.create(this.logger, \"FluidDataStoreContext\");\n        this.thresholdOpsCounter = new ThresholdCounter(FluidDataStoreContext.pendingOpsCountThreshold, this.subLogger);\n    }\n\n    public dispose(): void {\n        if (this._disposed) {\n            return;\n        }\n        this._disposed = true;\n\n        // Dispose any pending runtime after it gets fulfilled\n        // Errors are logged where this.channelDeferred is consumed/generated (realizeCore(), bindRuntime())\n        if (this.channelDeferred) {\n            this.channelDeferred.promise.then((runtime) => {\n                runtime.dispose();\n            }).catch((error) => {});\n        }\n    }\n\n    private rejectDeferredRealize(reason: string, packageName?: string): never {\n        throw new LoggingError(reason, { packageName: { value: packageName, tag: TelemetryDataTag.PackageData } });\n    }\n\n    public async realize(): Promise<IFluidDataStoreChannel> {\n        assert(!this.detachedRuntimeCreation, 0x13d /* \"Detached runtime creation on realize()\" */);\n        if (!this.channelDeferred) {\n            this.channelDeferred = new Deferred<IFluidDataStoreChannel>();\n            this.realizeCore(this.existing).catch((error) => {\n                const errorWrapped = DataProcessingError.wrapIfUnrecognized(error, \"realizeFluidDataStoreContext\");\n                errorWrapped.addTelemetryProperties({ fluidDataStoreId: { value: this.id, tag: \"PackageData\" } });\n                this.channelDeferred?.reject(errorWrapped);\n                this.logger.sendErrorEvent({ eventName: \"RealizeError\" }, errorWrapped);\n            });\n        }\n        return this.channelDeferred.promise;\n    }\n\n    protected async factoryFromPackagePath(packages?: readonly string[]) {\n        assert(this.pkg === packages, 0x13e /* \"Unexpected package path\" */);\n        if (packages === undefined) {\n            this.rejectDeferredRealize(\"packages is undefined\");\n        }\n\n        let entry: FluidDataStoreRegistryEntry | undefined;\n        let registry: IFluidDataStoreRegistry | undefined = this._containerRuntime.IFluidDataStoreRegistry;\n        let lastPkg: string | undefined;\n        for (const pkg of packages) {\n            if (!registry) {\n                this.rejectDeferredRealize(\"No registry for package\", lastPkg);\n            }\n            lastPkg = pkg;\n            entry = await registry.get(pkg);\n            if (!entry) {\n                this.rejectDeferredRealize(\"Registry does not contain entry for the package\", pkg);\n            }\n            registry = entry.IFluidDataStoreRegistry;\n        }\n        const factory = entry?.IFluidDataStoreFactory;\n        if (factory === undefined) {\n            this.rejectDeferredRealize(\"Can't find factory for package\", lastPkg);\n        }\n\n        return { factory, registry };\n    }\n\n    private async realizeCore(existing: boolean): Promise<void> {\n        const details = await this.getInitialSnapshotDetails();\n        // Base snapshot is the baseline where pending ops are applied to.\n        // It is important that this be in sync with the pending ops, and also\n        // that it is set here, before bindRuntime is called.\n        this._baseSnapshot = details.snapshot;\n        const packages = details.pkg;\n\n        const { factory, registry } = await this.factoryFromPackagePath(packages);\n\n        assert(this.registry === undefined, 0x13f /* \"datastore context registry is already set\" */);\n        this.registry = registry;\n\n        const channel = await factory.instantiateDataStore(this, existing);\n        assert(channel !== undefined, 0x140 /* \"undefined channel on datastore context\" */);\n        this.bindRuntime(channel);\n    }\n\n    /**\n     * Notifies this object about changes in the connection state.\n     * @param value - New connection state.\n     * @param clientId - ID of the client. It's old ID when in disconnected state and\n     * it's new client ID when we are connecting or connected.\n     */\n    public setConnectionState(connected: boolean, clientId?: string) {\n        this.verifyNotClosed();\n\n        // Connection events are ignored if the store is not yet loaded\n        if (!this.loaded) {\n            return;\n        }\n\n        assert(this.connected === connected, 0x141 /* \"Unexpected connected state\" */);\n\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.channel!.setConnectionState(connected, clientId);\n    }\n\n    public process(messageArg: ISequencedDocumentMessage, local: boolean, localOpMetadata: unknown): void {\n        this.verifyNotClosed();\n\n        const innerContents = messageArg.contents as FluidDataStoreMessage;\n        const message = {\n            ...messageArg,\n            type: innerContents.type,\n            contents: innerContents.content,\n        };\n\n        this.summarizerNode.recordChange(message);\n\n        if (this.loaded) {\n            return this.channel?.process(message, local, localOpMetadata);\n        } else {\n            assert(!local, 0x142 /* \"local store channel is not loaded\" */);\n            assert(this.pending !== undefined, 0x23d /* \"pending is undefined\" */);\n            this.pending.push(message);\n            this.thresholdOpsCounter.sendIfMultiple(\"StorePendingOps\", this.pending.length);\n        }\n    }\n\n    public processSignal(message: IInboundSignalMessage, local: boolean): void {\n        this.verifyNotClosed();\n\n        // Signals are ignored if the store is not yet loaded\n        if (!this.loaded) {\n            return;\n        }\n\n        this.channel?.processSignal(message, local);\n    }\n\n    public getQuorum(): IQuorumClients {\n        return this._containerRuntime.getQuorum();\n    }\n\n    public getAudience(): IAudience {\n        return this._containerRuntime.getAudience();\n    }\n\n    /**\n     * Returns a summary at the current sequence number.\n     * @param fullTree - true to bypass optimizations and force a full summary tree\n     * @param trackState - This tells whether we should track state from this summary.\n     * @param telemetryContext - summary data passed through the layers for telemetry purposes\n     */\n    public async summarize(\n        fullTree: boolean = false,\n        trackState: boolean = true,\n        telemetryContext?: ITelemetryContext,\n    ): Promise<ISummarizeResult> {\n        return this.summarizerNode.summarize(fullTree, trackState, telemetryContext);\n    }\n\n    private async summarizeInternal(\n        fullTree: boolean,\n        trackState: boolean,\n        telemetryContext?: ITelemetryContext,\n    ): Promise<ISummarizeInternalResult> {\n        await this.realize();\n\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const summarizeResult = await this.channel!.summarize(fullTree, trackState, telemetryContext);\n        let pathPartsForChildren: string[] | undefined;\n\n        if (!this.disableIsolatedChannels) {\n            // Wrap dds summaries in .channels subtree.\n            wrapSummaryInChannelsTree(summarizeResult);\n            pathPartsForChildren = [channelsTreeName];\n        }\n\n        // Add data store's attributes to the summary.\n        const { pkg } = await this.getInitialSnapshotDetails();\n        const isRoot = await this.isRoot();\n        const attributes = createAttributes(pkg, isRoot, this.disableIsolatedChannels);\n        addBlobToSummary(summarizeResult, dataStoreAttributesBlobName, JSON.stringify(attributes));\n\n        // Add GC data to the summary if it's not written at the root.\n        if (!this.writeGCDataAtRoot) {\n            addBlobToSummary(summarizeResult, gcBlobKey, JSON.stringify(this.summarizerNode.getGCSummaryDetails()));\n        }\n\n        // If we are not referenced, mark the summary tree as unreferenced. Also, update unreferenced blob\n        // size in the summary stats with the blobs size of this data store.\n        if (!this.summarizerNode.isReferenced()) {\n            summarizeResult.summary.unreferenced = true;\n            summarizeResult.stats.unreferencedBlobSize = summarizeResult.stats.totalBlobSize;\n        }\n\n        return {\n            ...summarizeResult,\n            id: this.id,\n            pathPartsForChildren,\n        };\n    }\n\n    /**\n     * Returns the data used for garbage collection. This includes a list of GC nodes that represent this data store\n     * including any of its child channel contexts. Each node has a set of outbound routes to other GC nodes in the\n     * document.\n     * If there is no new data in this data store since the last summary, previous GC data is used.\n     * If there is new data, the GC data is generated again (by calling getGCDataInternal).\n     * @param fullGC - true to bypass optimizations and force full generation of GC data.\n     */\n    public async getGCData(fullGC: boolean = false): Promise<IGarbageCollectionData> {\n        return this.summarizerNode.getGCData(fullGC);\n    }\n\n    /**\n     * Generates data used for garbage collection. This is called when there is new data since last summary. It\n     * realizes the data store and calls into each channel context to get its GC data.\n     * @param fullGC - true to bypass optimizations and force full generation of GC data.\n     */\n    private async getGCDataInternal(fullGC: boolean = false): Promise<IGarbageCollectionData> {\n        await this.realize();\n        assert(this.channel !== undefined, 0x143 /* \"Channel should not be undefined when running GC\" */);\n\n        return this.channel.getGCData(fullGC);\n    }\n\n    /**\n     * After GC has run, called to notify the data store of routes used in it. These are used for the following:\n     * 1. To identify if this data store is being referenced in the document or not.\n     * 2. To determine if it needs to re-summarize in case used routes changed since last summary.\n     * 3. These are added to the summary generated by the data store.\n     * 4. To notify child contexts of their used routes. This is done immediately if the data store is loaded. Else,\n     *    it is done when realizing the data store.\n     * 5. To update the timestamp when this data store or any children are marked as unreferenced.\n     * @param usedRoutes - The routes that are used in this data store.\n     * @param gcTimestamp - The time when GC was run that generated these used routes. If any node becomes unreferenced\n     * as part of this GC run, this should be used to update the time when it happens.\n     */\n    public updateUsedRoutes(usedRoutes: string[], gcTimestamp?: number) {\n        // Update the used routes in this data store's summarizer node.\n        this.summarizerNode.updateUsedRoutes(usedRoutes, gcTimestamp);\n\n        /**\n         * If the data store has not been realized yet, we need this used state to update the used state of the channel\n         * when it realizes. It's safe to keep only the last used state because if something changes because of this GC\n         * run, the data store will be immediately realized as part of the summary that follows GC. For example, if a\n         * child's reference state changes, the gcTimestamp has to be used to update its unreferencedTimestamp. Since\n         * it will result in a change in this data store's used routes, it will be realized to regenerate its summary.\n         */\n        this.lastUsedState = { usedRoutes, gcTimestamp };\n\n        // If we are loaded, call the channel so it can update the used routes of the child contexts.\n        // If we are not loaded, we will update this when we are realized.\n        if (this.loaded) {\n            this.updateChannelUsedRoutes();\n        }\n    }\n\n    /**\n     * Called when a new outbound reference is added to another node. This is used by garbage collection to identify\n     * all references added in the system.\n     * @param srcHandle - The handle of the node that added the reference.\n     * @param outboundHandle - The handle of the outbound node that is referenced.\n     */\n    public addedGCOutboundReference(srcHandle: IFluidHandle, outboundHandle: IFluidHandle) {\n        this._containerRuntime.addedGCOutboundReference(srcHandle, outboundHandle);\n    }\n\n    /**\n     * Updates the used routes of the channel and its child contexts. The channel must be loaded before calling this.\n     * It is called in these two scenarios:\n     * 1. When the used routes of the data store is updated and the data store is loaded.\n     * 2. When the data store is realized. This updates the channel's used routes as per last GC run.\n     */\n    private updateChannelUsedRoutes() {\n        assert(this.loaded, 0x144 /* \"Channel should be loaded when updating used routes\" */);\n        assert(this.channel !== undefined, 0x145 /* \"Channel should be present when data store is loaded\" */);\n\n        // If there is no lastUsedState, GC has not run up until this point.\n        if (this.lastUsedState === undefined) {\n            return;\n        }\n\n        // Remove the route to this data store, if it exists.\n        const usedChannelRoutes = this.lastUsedState.usedRoutes.filter(\n            (id: string) => { return id !== \"/\" && id !== \"\"; },\n        );\n        this.channel.updateUsedRoutes(usedChannelRoutes, this.lastUsedState.gcTimestamp);\n    }\n\n    /**\n     * @deprecated 0.18.Should call request on the runtime directly\n     */\n    public async request(request: IRequest): Promise<IResponse> {\n        const runtime = await this.realize();\n        return runtime.request(request);\n    }\n\n    public submitMessage(type: string, content: any, localOpMetadata: unknown): void {\n        this.verifyNotClosed();\n        assert(!!this.channel, 0x146 /* \"Channel must exist when submitting message\" */);\n        const fluidDataStoreContent: FluidDataStoreMessage = {\n            content,\n            type,\n        };\n        this._containerRuntime.submitDataStoreOp(\n            this.id,\n            fluidDataStoreContent,\n            localOpMetadata);\n    }\n\n    /**\n     * This is called from a SharedSummaryBlock that does not generate ops but only wants to be part of the summary.\n     * It indicates that there is data in the object that needs to be summarized.\n     * We will update the latestSequenceNumber of the summary tracker of this\n     * store and of the object's channel.\n     *\n     * @param address - The address of the channel that is dirty.\n     *\n     */\n    public setChannelDirty(address: string): void {\n        this.verifyNotClosed();\n\n        // Get the latest sequence number.\n        const latestSequenceNumber = this.deltaManager.lastSequenceNumber;\n\n        this.summarizerNode.invalidate(latestSequenceNumber);\n\n        const channelSummarizerNode = this.summarizerNode.getChild(address);\n\n        if (channelSummarizerNode) {\n            channelSummarizerNode.invalidate(latestSequenceNumber); // TODO: lazy load problem?\n        }\n    }\n\n    public submitSignal(type: string, content: any) {\n        this.verifyNotClosed();\n        assert(!!this.channel, 0x147 /* \"Channel must exist on submitting signal\" */);\n        return this._containerRuntime.submitDataStoreSignal(this.id, type, content);\n    }\n\n    /**\n     * This is called by the data store channel when it becomes locally visible indicating that it is ready to become\n     * globally visible now.\n     */\n    public makeLocallyVisible() {\n        assert(this.channel !== undefined, 0x2cf /* \"undefined channel on datastore context\" */);\n        this.makeLocallyVisibleFn();\n    }\n\n    protected bindRuntime(channel: IFluidDataStoreChannel) {\n        if (this.channel) {\n            throw new Error(\"Runtime already bound\");\n        }\n\n        try {\n            assert(!this.detachedRuntimeCreation, 0x148 /* \"Detached runtime creation on runtime bind\" */);\n            assert(this.channelDeferred !== undefined, 0x149 /* \"Undefined channel deferral\" */);\n            assert(this.pkg !== undefined, 0x14a /* \"Undefined package path\" */);\n\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const pending = this.pending!;\n\n            // Apply all pending ops\n            for (const op of pending) {\n                channel.process(op, false, undefined /* localOpMetadata */);\n            }\n\n            this.thresholdOpsCounter.send(\"ProcessPendingOps\", pending.length);\n            this.pending = undefined;\n\n            // And now mark the runtime active\n            this.loaded = true;\n            this.channel = channel;\n\n            // Freeze the package path to ensure that someone doesn't modify it when it is\n            // returned in packagePath().\n            Object.freeze(this.pkg);\n\n            /**\n             * Update the used routes of the channel. If GC has run before this data store was realized, we will have\n             * the used routes saved. So, this will ensure that all the child contexts have up-to-date used routes as\n             * per the last time GC was run.\n             * Also, this data store may have been realized during summarize. In that case, the child contexts need to\n             * have their used routes updated to determine if its needs to summarize again and to add it to the summary.\n             */\n            this.updateChannelUsedRoutes();\n\n            // And notify the pending promise it is now available\n            this.channelDeferred.resolve(this.channel);\n        } catch (error) {\n            this.channelDeferred?.reject(error);\n            this.logger.sendErrorEvent(\n                { eventName: \"BindRuntimeError\", fluidDataStoreId: { value: this.id, tag: \"PackageData\" } },\n                error);\n        }\n    }\n\n    public async getAbsoluteUrl(relativeUrl: string): Promise<string | undefined> {\n        if (this.attachState !== AttachState.Attached) {\n            return undefined;\n        }\n        return this._containerRuntime.getAbsoluteUrl(relativeUrl);\n    }\n\n    public abstract generateAttachMessage(): IAttachMessage;\n\n    public abstract getInitialSnapshotDetails(): Promise<ISnapshotDetails>;\n\n    /**\n     * @deprecated - Sets the datastore as root, for aliasing purposes: #7948\n     * This method should not be used outside of the aliasing context.\n     * It will be removed, as the source of truth for this flag will be the aliasing blob.\n     */\n    public setInMemoryRoot(): void {\n        this._isInMemoryRoot = true;\n    }\n\n    /**\n     * @deprecated - Renamed to getBaseGCDetails().\n     */\n    public abstract getInitialGCSummaryDetails(): Promise<IGarbageCollectionSummaryDetails>;\n\n    public abstract getBaseGCDetails(): Promise<IGarbageCollectionDetailsBase>;\n\n    public reSubmit(contents: any, localOpMetadata: unknown) {\n        assert(!!this.channel, 0x14b /* \"Channel must exist when resubmitting ops\" */);\n        const innerContents = contents as FluidDataStoreMessage;\n        this.channel.reSubmit(innerContents.type, innerContents.content, localOpMetadata);\n    }\n\n    public rollback(contents: any, localOpMetadata: unknown) {\n        if (!this.channel) {\n            throw new Error(\"Channel must exist when rolling back ops\");\n        }\n        if (!this.channel.rollback) {\n            throw new Error(\"Channel doesn't support rollback\");\n        }\n        const innerContents = contents as FluidDataStoreMessage;\n        this.channel.rollback(innerContents.type, innerContents.content, localOpMetadata);\n    }\n\n    public async applyStashedOp(contents: any): Promise<unknown> {\n        if (!this.channel) {\n            await this.realize();\n        }\n        assert(!!this.channel, 0x14c /* \"Channel must exist when rebasing ops\" */);\n        const innerContents = contents as FluidDataStoreMessage;\n        return this.channel.applyStashedOp(innerContents.content);\n    }\n\n    private verifyNotClosed() {\n        if (this._disposed) {\n            throw new Error(\"Context is closed\");\n        }\n    }\n\n    public getCreateChildSummarizerNodeFn(id: string, createParam: CreateChildSummarizerNodeParam) {\n        return (\n            summarizeInternal: SummarizeInternalFn,\n            getGCDataFn: (fullGC?: boolean) => Promise<IGarbageCollectionData>,\n            getBaseGCDetailsFn: () => Promise<IGarbageCollectionDetailsBase>,\n        ) => this.summarizerNode.createChild(\n            summarizeInternal,\n            id,\n            createParam,\n            // DDS will not create failure summaries\n            { throwOnFailure: true },\n            getGCDataFn,\n            getBaseGCDetailsFn,\n        );\n    }\n\n    public async uploadBlob(blob: ArrayBufferLike): Promise<IFluidHandle<ArrayBufferLike>> {\n        return this.containerRuntime.uploadBlob(blob);\n    }\n}\n\nexport class RemoteFluidDataStoreContext extends FluidDataStoreContext {\n    private readonly initSnapshotValue: ISnapshotTree | string | undefined;\n    private readonly baseGCDetailsP: Promise<IGarbageCollectionDetailsBase>;\n\n    constructor(props: IRemoteFluidDataStoreContextProps) {\n        super(\n            props,\n            true /* existing */,\n            BindState.Bound,\n            false /* isLocalDataStore */,\n            () => {\n                throw new Error(\"Already attached\");\n            },\n        );\n\n        this.initSnapshotValue = props.snapshotTree;\n        this.baseGCDetailsP = new LazyPromise<IGarbageCollectionDetailsBase>(async () => {\n            return (await props.getBaseGCDetails()) ?? {};\n        });\n    }\n\n    private readonly initialSnapshotDetailsP = new LazyPromise<ISnapshotDetails>(async () => {\n        let tree: ISnapshotTree | undefined;\n        let isRootDataStore = true;\n\n        if (typeof this.initSnapshotValue === \"string\") {\n            const commit = (await this.storage.getVersions(this.initSnapshotValue, 1))[0];\n            tree = await this.storage.getSnapshotTree(commit) ?? undefined;\n        } else {\n            tree = this.initSnapshotValue;\n        }\n\n        const localReadAndParse = async <T>(id: string) => readAndParse<T>(this.storage, id);\n        if (tree) {\n            const loadedSummary = await this.summarizerNode.loadBaseSummary(tree, localReadAndParse);\n            tree = loadedSummary.baseSummary;\n            // Prepend outstanding ops to pending queue of ops to process.\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.pending = loadedSummary.outstandingOps.concat(this.pending!);\n        }\n\n        if (!!tree && tree.blobs[dataStoreAttributesBlobName] !== undefined) {\n            // Need to get through snapshot and use that to populate extraBlobs\n            const attributes =\n                await localReadAndParse<ReadFluidDataStoreAttributes>(tree.blobs[dataStoreAttributesBlobName]);\n\n            let pkgFromSnapshot: string[];\n            // Use the snapshotFormatVersion to determine how the pkg is encoded in the snapshot.\n            // For snapshotFormatVersion = \"0.1\" (1) or above, pkg is jsonified, otherwise it is just a string.\n            const formatVersion = getAttributesFormatVersion(attributes);\n            if (formatVersion < 1) {\n                if (attributes.pkg.startsWith(\"[\\\"\") && attributes.pkg.endsWith(\"\\\"]\")) {\n                    pkgFromSnapshot = JSON.parse(attributes.pkg) as string[];\n                } else {\n                    pkgFromSnapshot = [attributes.pkg];\n                }\n            } else {\n                pkgFromSnapshot = JSON.parse(attributes.pkg) as string[];\n            }\n            this.pkg = pkgFromSnapshot;\n\n            /**\n             * If there is no isRootDataStore in the attributes blob, set it to true. This will ensure that\n             * data stores in older documents are not garbage collected incorrectly. This may lead to additional\n             * roots in the document but they won't break.\n             */\n            isRootDataStore = attributes.isRootDataStore ?? true;\n\n            if (hasIsolatedChannels(attributes)) {\n                tree = tree.trees[channelsTreeName];\n                assert(tree !== undefined,\n                    0x1fe /* \"isolated channels subtree should exist in remote datastore snapshot\" */);\n            }\n        }\n\n        return {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            pkg: this.pkg!,\n            isRootDataStore,\n            snapshot: tree,\n        };\n    });\n\n    public async getInitialSnapshotDetails(): Promise<ISnapshotDetails> {\n        return this.initialSnapshotDetailsP;\n    }\n\n    /**\n     * @deprecated - Renamed to getBaseGCDetails.\n     */\n    public async getInitialGCSummaryDetails(): Promise<IGarbageCollectionSummaryDetails> {\n        return this.getBaseGCDetails();\n    }\n\n    public async getBaseGCDetails(): Promise<IGarbageCollectionDetailsBase> {\n        return this.baseGCDetailsP;\n    }\n\n    public generateAttachMessage(): IAttachMessage {\n        throw new Error(\"Cannot attach remote store\");\n    }\n}\n\n/**\n * Base class for detached & attached context classes\n */\nexport class LocalFluidDataStoreContextBase extends FluidDataStoreContext {\n    private readonly snapshotTree: ISnapshotTree | undefined;\n    /**\n     * @deprecated 0.16 Issue #1635, #3631\n     */\n    public readonly createProps?: any;\n\n    constructor(props: ILocalFluidDataStoreContextProps) {\n        super(\n            props,\n            props.snapshotTree !== undefined ? true : false /* existing */,\n            props.snapshotTree ? BindState.Bound : BindState.NotBound,\n            true /* isLocalDataStore */,\n            props.makeLocallyVisibleFn,\n        );\n\n        this.snapshotTree = props.snapshotTree;\n        if (props.isRootDataStore === true) {\n            this.setInMemoryRoot();\n        }\n        this.createProps = props.createProps;\n        this.attachListeners();\n    }\n\n    private attachListeners(): void {\n        this.once(\"attaching\", () => {\n            assert(this.attachState === AttachState.Detached, 0x14d /* \"Should move from detached to attaching\" */);\n            this._attachState = AttachState.Attaching;\n        });\n        this.once(\"attached\", () => {\n            assert(this.attachState === AttachState.Attaching, 0x14e /* \"Should move from attaching to attached\" */);\n            this._attachState = AttachState.Attached;\n        });\n    }\n\n    public generateAttachMessage(): IAttachMessage {\n        assert(this.channel !== undefined, 0x14f /* \"There should be a channel when generating attach message\" */);\n        assert(this.pkg !== undefined, 0x150 /* \"pkg should be available in local data store context\" */);\n\n        const summarizeResult = this.channel.getAttachSummary();\n\n        if (!this.disableIsolatedChannels) {\n            // Wrap dds summaries in .channels subtree.\n            wrapSummaryInChannelsTree(summarizeResult);\n        }\n\n        // Add data store's attributes to the summary.\n        const attributes = createAttributes(\n            this.pkg,\n            this.isInMemoryRoot(),\n            this.disableIsolatedChannels,\n        );\n        addBlobToSummary(summarizeResult, dataStoreAttributesBlobName, JSON.stringify(attributes));\n\n        // Attach message needs the summary in ITree format. Convert the ISummaryTree into an ITree.\n        const snapshot = convertSummaryTreeToITree(summarizeResult.summary);\n\n        const message: IAttachMessage = {\n            id: this.id,\n            snapshot,\n            type: this.pkg[this.pkg.length - 1],\n        };\n\n        return message;\n    }\n\n    public async getInitialSnapshotDetails(): Promise<ISnapshotDetails> {\n        let snapshot = this.snapshotTree;\n        let attributes: ReadFluidDataStoreAttributes;\n        let isRootDataStore = false;\n        if (snapshot !== undefined) {\n            // Get the dataStore attributes.\n            // Note: storage can be undefined in special case while detached.\n            attributes = await getFluidDataStoreAttributes(this.storage, snapshot);\n            if (hasIsolatedChannels(attributes)) {\n                snapshot = snapshot.trees[channelsTreeName];\n                assert(snapshot !== undefined,\n                    0x1ff /* \"isolated channels subtree should exist in local datastore snapshot\" */);\n            }\n            if (this.pkg === undefined) {\n                this.pkg = JSON.parse(attributes.pkg) as string[];\n                // If there is no isRootDataStore in the attributes blob, set it to true. This ensures that data\n                // stores in older documents are not garbage collected incorrectly. This may lead to additional\n                // roots in the document but they won't break.\n                if (attributes.isRootDataStore ?? true) {\n                    isRootDataStore = true;\n                    this.setInMemoryRoot();\n                }\n            }\n        }\n        assert(this.pkg !== undefined, 0x152 /* \"pkg should be available in local data store\" */);\n\n        return {\n            pkg: this.pkg,\n            isRootDataStore,\n            snapshot,\n        };\n    }\n\n    /**\n     * @deprecated - Renamed to getBaseGCDetails.\n     */\n    public async getInitialGCSummaryDetails(): Promise<IGarbageCollectionSummaryDetails> {\n        // Local data store does not have initial summary.\n        return {};\n    }\n\n    public async getBaseGCDetails(): Promise<IGarbageCollectionDetailsBase> {\n        // Local data store does not have initial summary.\n        return {};\n    }\n}\n\n/**\n * context implementation for \"attached\" data store runtime.\n * Various workflows (snapshot creation, requests) result in .realize() being called\n * on context, resulting in instantiation and attachment of runtime.\n * Runtime is created using data store factory that is associated with this context.\n */\nexport class LocalFluidDataStoreContext extends LocalFluidDataStoreContextBase {\n    constructor(props: ILocalFluidDataStoreContextProps) {\n        super(props);\n    }\n}\n\n/**\n * Detached context. Data Store runtime will be attached to it by attachRuntime() call\n * Before attachment happens, this context is not associated with particular type of runtime\n * or factory, i.e. it's package path is undefined.\n * Attachment process provides all missing parts - package path, data store runtime, and data store factory\n */\nexport class LocalDetachedFluidDataStoreContext\n    extends LocalFluidDataStoreContextBase\n    implements IFluidDataStoreContextDetached {\n    constructor(props: ILocalFluidDataStoreContextProps) {\n        super(props);\n        this.detachedRuntimeCreation = true;\n    }\n\n    public async attachRuntime(\n        registry: IProvideFluidDataStoreFactory,\n        dataStoreChannel: IFluidDataStoreChannel) {\n        assert(this.detachedRuntimeCreation, 0x154 /* \"runtime creation is already attached\" */);\n        assert(this.channelDeferred === undefined, 0x155 /* \"channel deferral is already set\" */);\n\n        const factory = registry.IFluidDataStoreFactory;\n\n        const entry = await this.factoryFromPackagePath(this.pkg);\n        assert(entry.factory === factory, 0x156 /* \"Unexpected factory for package path\" */);\n\n        assert(this.registry === undefined, 0x157 /* \"datastore registry already attached\" */);\n        this.registry = entry.registry;\n\n        this.detachedRuntimeCreation = false;\n        this.channelDeferred = new Deferred<IFluidDataStoreChannel>();\n\n        super.bindRuntime(dataStoreChannel);\n\n        if (await this.isRoot()) {\n            // back-compat 0.59.1000 - makeVisibleAndAttachGraph was added in this version to IFluidDataStoreChannel.\n            // For older versions, we still have to call bindToContext.\n            if (dataStoreChannel.makeVisibleAndAttachGraph !== undefined) {\n                dataStoreChannel.makeVisibleAndAttachGraph();\n            } else {\n                dataStoreChannel.bindToContext();\n            }\n        }\n    }\n\n    public async getInitialSnapshotDetails(): Promise<ISnapshotDetails> {\n        if (this.detachedRuntimeCreation) {\n            throw new Error(\"Detached Fluid Data Store context can't be realized! Please attach runtime first!\");\n        }\n        return super.getInitialSnapshotDetails();\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { assert, unreachableCase } from \"@fluidframework/common-utils\";\nimport { AttachState } from \"@fluidframework/container-definitions\";\nimport { UsageError } from \"@fluidframework/container-utils\";\nimport { IRequest, IResponse } from \"@fluidframework/core-interfaces\";\nimport { AliasResult, IDataStore, IFluidDataStoreChannel } from \"@fluidframework/runtime-definitions\";\nimport { TelemetryDataTag } from \"@fluidframework/telemetry-utils\";\nimport { ContainerRuntime } from \"./containerRuntime\";\nimport { DataStores } from \"./dataStores\";\n\n/**\n * Interface for an op to be used for assigning an\n * alias to a datastore\n */\nexport interface IDataStoreAliasMessage {\n    /** The internal id of the datastore */\n    readonly internalId: string;\n    /** The alias name to be assigned to the datastore */\n    readonly alias: string;\n}\n\n/**\n * Type guard that returns true if the given alias message is actually an instance of\n * a class which implements {@link IDataStoreAliasMessage}\n * @param maybeDataStoreAliasMessage - message object to be validated\n * @returns True if the {@link IDataStoreAliasMessage} is fully implemented, false otherwise\n */\nexport const isDataStoreAliasMessage = (\n    maybeDataStoreAliasMessage: any,\n): maybeDataStoreAliasMessage is IDataStoreAliasMessage => {\n    return typeof maybeDataStoreAliasMessage?.internalId === \"string\"\n        && typeof maybeDataStoreAliasMessage?.alias === \"string\";\n};\n\nexport const channelToDataStore = (\n    fluidDataStoreChannel: IFluidDataStoreChannel,\n    internalId: string,\n    runtime: ContainerRuntime,\n    datastores: DataStores,\n    logger: ITelemetryLogger,\n): IDataStore => new DataStore(fluidDataStoreChannel, internalId, runtime, datastores, logger);\n\nenum AliasState {\n    Aliased = \"Aliased\",\n    Aliasing = \"Aliasing\",\n    None = \"None\",\n}\n\nclass DataStore implements IDataStore {\n    private aliasState: AliasState = AliasState.None;\n    private alias: string | undefined;\n    private aliasResult: Promise<AliasResult> | undefined;\n\n    async trySetAlias(alias: string): Promise<AliasResult> {\n        if (alias.includes(\"/\")) {\n            throw new UsageError(`The alias cannot contain slashes: '${alias}'`);\n        }\n\n        switch (this.aliasState) {\n            // If we're already aliasing, check if it's for the same value and return\n            // the stored promise, otherwise return 'AlreadyAliased'\n            case AliasState.Aliasing:\n                assert(this.aliasResult !== undefined,\n                    0x316 /* There should be a cached promise of in-progress aliasing */);\n                await this.aliasResult;\n                return this.alias === alias ? \"Success\" : \"AlreadyAliased\";\n\n            // If this datastore is already aliased, return true only if this\n            // is a repeated call for the same alias\n            case AliasState.Aliased:\n                return this.alias === alias ? \"Success\" : \"AlreadyAliased\";\n\n            // There is no current or past alias operation for this datastore,\n            // it is safe to continue execution\n            case AliasState.None: break;\n            default: unreachableCase(this.aliasState);\n        }\n\n        this.aliasState = AliasState.Aliasing;\n        this.aliasResult = this.trySetAliasInternal(alias);\n        return this.aliasResult;\n    }\n\n    async trySetAliasInternal(alias: string): Promise<AliasResult> {\n        const message: IDataStoreAliasMessage = {\n            internalId: this.internalId,\n            alias,\n        };\n\n        // back-compat 0.58.2000 - makeVisibleAndAttachGraph was added in this version to IFluidDataStoreChannel. For\n        // older versions, we still have to call bindToContext.\n        if (this.fluidDataStoreChannel.makeVisibleAndAttachGraph !== undefined) {\n            this.fluidDataStoreChannel.makeVisibleAndAttachGraph();\n        } else {\n            this.fluidDataStoreChannel.bindToContext();\n        }\n\n        if (this.runtime.attachState === AttachState.Detached) {\n            const localResult = this.datastores.processAliasMessageCore(message);\n            // Explicitly lock-out future attempts of aliasing,\n            // regardless of result\n            this.aliasState = AliasState.Aliased;\n            return localResult ? \"Success\" : \"Conflict\";\n        }\n\n        const aliased = await this.ackBasedPromise<boolean>((resolve) => {\n            this.runtime.submitDataStoreAliasOp(message, resolve);\n        }).then((succeeded) => {\n            // Explicitly Lock-out future attempts of aliasing,\n            // regardless of result\n            this.aliasState = AliasState.Aliased;\n            if (succeeded) {\n                this.alias = alias;\n            }\n\n            return succeeded;\n        }).catch((error) => {\n            this.logger.sendErrorEvent({\n                eventName: \"AliasingException\",\n                alias: {\n                    value: alias,\n                    tag: TelemetryDataTag.UserData,\n                },\n                internalId: {\n                    value: this.internalId,\n                    tag: TelemetryDataTag.PackageData,\n                },\n            }, error);\n            this.aliasState = AliasState.None;\n            return false;\n        });\n\n        return aliased ? \"Success\" : \"Conflict\";\n    }\n\n    async request(request: IRequest): Promise<IResponse> {\n        return this.fluidDataStoreChannel.request(request);\n    }\n\n    constructor(\n        private readonly fluidDataStoreChannel: IFluidDataStoreChannel,\n        private readonly internalId: string,\n        private readonly runtime: ContainerRuntime,\n        private readonly datastores: DataStores,\n        private readonly logger: ITelemetryLogger,\n    ) { }\n    public get IFluidRouter() { return this.fluidDataStoreChannel; }\n\n    private async ackBasedPromise<T>(\n        executor: (resolve: (value: T | PromiseLike<T>) => void,\n            reject: (reason?: any) => void) => void,\n    ): Promise<T> {\n        let rejectBecauseDispose: () => void;\n        return new Promise<T>((resolve, reject) => {\n            rejectBecauseDispose =\n                () => reject(new Error(\"ContainerRuntime disposed while this ack-based Promise was pending\"));\n\n            if (this.runtime.disposed) {\n                rejectBecauseDispose();\n                return;\n            }\n\n            this.runtime.on(\"dispose\", rejectBecauseDispose);\n            executor(resolve, reject);\n        }).finally(() => {\n            this.runtime.off(\"dispose\", rejectBecauseDispose);\n        });\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IDisposable, IEvent, ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { Deferred, assert, TypedEventEmitter } from \"@fluidframework/common-utils\";\nimport { IDeltaManager } from \"@fluidframework/container-definitions\";\nimport {\n    IDocumentMessage,\n    ISequencedDocumentMessage,\n    ISummaryAck,\n    ISummaryContent,\n    ISummaryNack,\n    MessageType,\n} from \"@fluidframework/protocol-definitions\";\n\n/**\n * Interface for summary op messages with typed contents.\n */\nexport interface ISummaryOpMessage extends ISequencedDocumentMessage {\n    type: MessageType.Summarize;\n    contents: ISummaryContent;\n}\n\n/**\n * Interface for summary ack messages with typed contents.\n */\nexport interface ISummaryAckMessage extends ISequencedDocumentMessage {\n    type: MessageType.SummaryAck;\n    contents: ISummaryAck;\n}\n\n/**\n * Interface for summary nack messages with typed contents.\n */\nexport interface ISummaryNackMessage extends ISequencedDocumentMessage {\n    type: MessageType.SummaryNack;\n    contents: ISummaryNack;\n}\n\n/**\n * A single summary which can be tracked as it goes through its life cycle.\n * The life cycle is: Local to Broadcast to Acked/Nacked.\n */\nexport interface ISummary {\n    readonly clientId: string;\n    readonly clientSequenceNumber: number;\n    waitBroadcast(): Promise<ISummaryOpMessage>;\n    waitAckNack(): Promise<ISummaryAckMessage | ISummaryNackMessage>;\n}\n\n/**\n * A single summary which has already been acked by the server.\n */\nexport interface IAckedSummary {\n    readonly summaryOp: ISummaryOpMessage;\n    readonly summaryAck: ISummaryAckMessage;\n}\n\nenum SummaryState {\n    Local = 0,\n    Broadcast = 1,\n    Acked = 2,\n    Nacked = -1,\n}\n\nclass Summary implements ISummary {\n    public static createLocal(clientId: string, clientSequenceNumber: number) {\n        return new Summary(clientId, clientSequenceNumber);\n    }\n    public static createFromOp(op: ISummaryOpMessage) {\n        const summary = new Summary(op.clientId, op.clientSequenceNumber);\n        summary.broadcast(op);\n        return summary;\n    }\n\n    private state = SummaryState.Local;\n\n    private _summaryOp?: ISummaryOpMessage;\n    private _summaryAckNack?: ISummaryAckMessage | ISummaryNackMessage;\n\n    private readonly defSummaryOp = new Deferred<void>();\n    private readonly defSummaryAck = new Deferred<void>();\n\n    public get summaryOp() { return this._summaryOp; }\n    public get summaryAckNack() { return this._summaryAckNack; }\n\n    private constructor(\n        public readonly clientId: string,\n        public readonly clientSequenceNumber: number) { }\n\n    public hasBeenAcked(): this is IAckedSummary {\n        return this.state === SummaryState.Acked;\n    }\n\n    public broadcast(op: ISummaryOpMessage) {\n        assert(this.state === SummaryState.Local, 0x175 /* \"Can only broadcast if summarizer starts in local state\" */);\n        this._summaryOp = op;\n        this.defSummaryOp.resolve();\n        this.state = SummaryState.Broadcast;\n        return true;\n    }\n\n    public ackNack(op: ISummaryAckMessage | ISummaryNackMessage) {\n        assert(this.state === SummaryState.Broadcast,\n            0x176 /* \"Can only ack/nack if summarizer is in broadcasting state\" */);\n        this._summaryAckNack = op;\n        this.defSummaryAck.resolve();\n        this.state = op.type === MessageType.SummaryAck ? SummaryState.Acked : SummaryState.Nacked;\n        return true;\n    }\n\n    public async waitBroadcast(): Promise<ISummaryOpMessage> {\n        await this.defSummaryOp.promise;\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this._summaryOp!;\n    }\n\n    public async waitAckNack(): Promise<ISummaryAckMessage | ISummaryNackMessage> {\n        await this.defSummaryAck.promise;\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this._summaryAckNack!;\n    }\n}\n\n/**\n * Watches summaries created by a specific client.\n */\nexport interface IClientSummaryWatcher extends IDisposable {\n    watchSummary(clientSequenceNumber: number): ISummary;\n    waitFlushed(): Promise<IAckedSummary | undefined>;\n}\n\n/**\n * This class watches summaries created by a specific client.\n * It should be created and managed from a SummaryCollection.\n */\nclass ClientSummaryWatcher implements IClientSummaryWatcher {\n    // key: clientSeqNum\n    private readonly localSummaries = new Map<number, Summary>();\n    private _disposed = false;\n\n    public get disposed() { return this._disposed; }\n\n    public constructor(\n        public readonly clientId: string,\n        private readonly summaryCollection: SummaryCollection,\n    ) { }\n\n    /**\n     * Watches for a specific sent summary op.\n     * @param clientSequenceNumber - client sequence number of sent summary op\n     */\n    public watchSummary(clientSequenceNumber: number): ISummary {\n        let summary = this.localSummaries.get(clientSequenceNumber);\n        if (!summary) {\n            summary = Summary.createLocal(this.clientId, clientSequenceNumber);\n            this.localSummaries.set(summary.clientSequenceNumber, summary);\n        }\n        return summary;\n    }\n\n    /**\n     * Waits until all of the pending summaries in the underlying SummaryCollection\n     * are acked/nacked.\n     */\n    // eslint-disable-next-line @typescript-eslint/promise-function-async\n    public waitFlushed() {\n        return this.summaryCollection.waitFlushed();\n    }\n\n    /**\n     * Gets a watched summary or returns undefined if not watched.\n     * @param clientSequenceNumber - client sequence number of sent summary op\n     */\n    public tryGetSummary(clientSequenceNumber: number) {\n        return this.localSummaries.get(clientSequenceNumber);\n    }\n\n    /**\n     * Starts watching a summary made by this client.\n     * @param summary - summary to start watching\n     */\n    public setSummary(summary: Summary) {\n        this.localSummaries.set(summary.clientSequenceNumber, summary);\n    }\n\n    public dispose() {\n        this.summaryCollection.removeWatcher(this.clientId);\n        this._disposed = true;\n    }\n}\n\nexport type OpActionEventName = MessageType.Summarize | MessageType.SummaryAck | MessageType.SummaryNack | \"default\";\nexport type OpActionEventListener = (op: ISequencedDocumentMessage) => void;\nexport interface ISummaryCollectionOpEvents extends IEvent {\n    (event: OpActionEventName, listener: OpActionEventListener);\n}\n\n/**\n * Data structure that looks at the op stream to track summaries as they\n * are broadcast, acked and nacked.\n * It provides functionality for watching specific summaries.\n */\nexport class SummaryCollection extends TypedEventEmitter<ISummaryCollectionOpEvents> {\n    // key: clientId\n    private readonly summaryWatchers = new Map<string, ClientSummaryWatcher>();\n    // key: summarySeqNum\n    private readonly pendingSummaries = new Map<number, Summary>();\n    private refreshWaitNextAck = new Deferred<void>();\n\n    private lastSummaryTimestamp: number | undefined;\n    private maxAckWaitTime: number | undefined;\n    private pendingAckTimerTimeoutCallback: (() => void) | undefined;\n    private lastAck: IAckedSummary | undefined;\n\n    public get latestAck(): IAckedSummary | undefined { return this.lastAck; }\n\n    public emit(event: OpActionEventName, ...args: Parameters<OpActionEventListener>): boolean {\n        return super.emit(event, ...args);\n    }\n\n    public get opsSinceLastAck() {\n        return this.deltaManager.lastSequenceNumber -\n            (this.lastAck?.summaryAck.sequenceNumber ?? this.deltaManager.initialSequenceNumber);\n    }\n\n    public addOpListener(listener: () => void) {\n        this.deltaManager.on(\"op\", listener);\n    }\n\n    public removeOpListener(listener: () => void) {\n        this.deltaManager.off(\"op\", listener);\n    }\n\n    public constructor(\n        private readonly deltaManager: IDeltaManager<ISequencedDocumentMessage, IDocumentMessage>,\n        private readonly logger: ITelemetryLogger,\n    ) {\n        super();\n        this.deltaManager.on(\n            \"op\",\n            (op) => this.handleOp(op));\n    }\n\n    /**\n     * Creates and returns a summary watcher for a specific client.\n     * This will allow for local sent summaries to be better tracked.\n     * @param clientId - client id for watcher\n     */\n    public createWatcher(clientId: string): IClientSummaryWatcher {\n        const watcher = new ClientSummaryWatcher(clientId, this);\n        this.summaryWatchers.set(clientId, watcher);\n        return watcher;\n    }\n\n    public removeWatcher(clientId: string) {\n        this.summaryWatchers.delete(clientId);\n    }\n\n    public setPendingAckTimerTimeoutCallback(maxAckWaitTime: number, timeoutCallback: () => void) {\n        this.maxAckWaitTime = maxAckWaitTime;\n        this.pendingAckTimerTimeoutCallback = timeoutCallback;\n    }\n\n    public unsetPendingAckTimerTimeoutCallback() {\n        this.maxAckWaitTime = undefined;\n        this.pendingAckTimerTimeoutCallback = undefined;\n    }\n\n    /**\n     * Returns a promise that resolves once all pending summary ops\n     * have been acked or nacked.\n     */\n    public async waitFlushed(): Promise<IAckedSummary | undefined> {\n        while (this.pendingSummaries.size > 0) {\n            // eslint-disable-next-line @typescript-eslint/promise-function-async\n            const promises = Array.from(this.pendingSummaries, ([, summary]) => summary.waitAckNack());\n            await Promise.all(promises);\n        }\n        return this.lastAck;\n    }\n\n    /**\n     * Returns a promise that resolves once a summary is acked that has a reference\n     * sequence number greater than or equal to the passed in sequence number.\n     * @param referenceSequenceNumber - reference sequence number to wait for\n     * @returns The latest acked summary\n     */\n    public async waitSummaryAck(referenceSequenceNumber: number): Promise<IAckedSummary> {\n        while (!this.lastAck || this.lastAck.summaryOp.referenceSequenceNumber < referenceSequenceNumber) {\n            await this.refreshWaitNextAck.promise;\n        }\n        return this.lastAck;\n    }\n\n    /**\n     * Handler for ops; only handles ops relating to summaries.\n     * @param op - op message to handle\n     */\n    private handleOp(op: ISequencedDocumentMessage) {\n        switch (op.type) {\n            case MessageType.Summarize: {\n                this.handleSummaryOp(op as ISummaryOpMessage);\n                return;\n            }\n            case MessageType.SummaryAck: {\n                this.handleSummaryAck(op as ISummaryAckMessage);\n                return;\n            }\n            case MessageType.SummaryNack: {\n                this.handleSummaryNack(op as ISummaryNackMessage);\n                return;\n            }\n            default: {\n                // If the difference between timestamp of current op and last summary op is greater than\n                // the maxAckWaitTime, then we need to inform summarizer to not wait and summarize\n                // immediately as we have already waited for maxAckWaitTime.\n                const lastOpTimestamp = op.timestamp;\n                if (this.lastSummaryTimestamp !== undefined &&\n                    this.maxAckWaitTime !== undefined &&\n                    lastOpTimestamp - this.lastSummaryTimestamp >= this.maxAckWaitTime\n                ) {\n                    this.pendingAckTimerTimeoutCallback?.();\n                }\n                this.emit(\"default\", op);\n\n                return;\n            }\n        }\n    }\n\n    private handleSummaryOp(op: ISummaryOpMessage) {\n        let summary: Summary | undefined;\n\n        // Check if summary already being watched, broadcast if so\n        const watcher = this.summaryWatchers.get(op.clientId);\n        if (watcher) {\n            summary = watcher.tryGetSummary(op.clientSequenceNumber);\n            if (summary) {\n                summary.broadcast(op);\n            }\n        }\n\n        // If not watched, create from op\n        if (!summary) {\n            summary = Summary.createFromOp(op);\n            if (watcher) {\n                watcher.setSummary(summary);\n            }\n        }\n        this.pendingSummaries.set(op.sequenceNumber, summary);\n        this.lastSummaryTimestamp = op.timestamp;\n        this.emit(MessageType.Summarize, op);\n    }\n\n    private handleSummaryAck(op: ISummaryAckMessage) {\n        const seq = op.contents.summaryProposal.summarySequenceNumber;\n        const summary = this.pendingSummaries.get(seq);\n        if (!summary || summary.summaryOp === undefined) {\n            // Summary ack without an op should be rare. We could fetch the\n            // reference sequence number from the snapshot, but instead we\n            // will not emit this ack. It should be the case that the summary\n            // op that this ack is for is earlier than this file was loaded\n            // from. i.e. initialSequenceNumber > summarySequenceNumber.\n            // We really don't care about it for now, since it is older than\n            // the one we loaded from.\n            if (seq >= this.deltaManager.initialSequenceNumber) {\n                // Potential causes for it to be later than our initialSequenceNumber\n                // are that the summaryOp was nacked then acked, double-acked, or\n                // the summarySequenceNumber is incorrect.\n                this.logger.sendErrorEvent({\n                    eventName: \"SummaryAckWithoutOp\",\n                    sequenceNumber: op.sequenceNumber, // summary ack seq #\n                    summarySequenceNumber: seq, // missing summary seq #\n                    initialSequenceNumber: this.deltaManager.initialSequenceNumber,\n                });\n            }\n            return;\n        }\n        summary.ackNack(op);\n        this.pendingSummaries.delete(seq);\n\n        // Track latest ack\n        if (!this.lastAck || seq > this.lastAck.summaryAck.contents.summaryProposal.summarySequenceNumber) {\n            this.lastAck = {\n                summaryOp: summary.summaryOp,\n                summaryAck: op,\n            };\n            this.refreshWaitNextAck.resolve();\n            this.refreshWaitNextAck = new Deferred<void>();\n            this.emit(MessageType.SummaryAck, op);\n        }\n    }\n\n    private handleSummaryNack(op: ISummaryNackMessage) {\n        const seq = op.contents.summaryProposal.summarySequenceNumber;\n        const summary = this.pendingSummaries.get(seq);\n        if (summary) {\n            summary.ackNack(op);\n            this.pendingSummaries.delete(seq);\n            this.emit(MessageType.SummaryNack, op);\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITelemetryLogger, ITelemetryBaseLogger, IDisposable } from \"@fluidframework/common-definitions\";\nimport { DataCorruptionError, extractSafePropertiesFromMessage } from \"@fluidframework/container-utils\";\nimport { IFluidHandle } from \"@fluidframework/core-interfaces\";\nimport { FluidObjectHandle } from \"@fluidframework/datastore\";\nimport {\n    ISequencedDocumentMessage,\n    ISnapshotTree,\n} from \"@fluidframework/protocol-definitions\";\nimport {\n    channelsTreeName,\n    CreateChildSummarizerNodeFn,\n    CreateChildSummarizerNodeParam,\n    CreateSummarizerNodeSource,\n    IAttachMessage,\n    IEnvelope,\n    IFluidDataStoreContextDetached,\n    IGarbageCollectionData,\n    IGarbageCollectionDetailsBase,\n    IInboundSignalMessage,\n    InboundAttachMessage,\n    ISummarizeResult,\n    ISummaryTreeWithStats,\n    ITelemetryContext,\n} from \"@fluidframework/runtime-definitions\";\nimport {\n     convertSnapshotTreeToSummaryTree,\n     convertToSummaryTree,\n     create404Response,\n     responseToException,\n     SummaryTreeBuilder,\n} from \"@fluidframework/runtime-utils\";\nimport { ChildLogger, LoggingError, TelemetryDataTag } from \"@fluidframework/telemetry-utils\";\nimport { AttachState } from \"@fluidframework/container-definitions\";\nimport { BlobCacheStorageService, buildSnapshotTree } from \"@fluidframework/driver-utils\";\nimport { assert, Lazy, LazyPromise } from \"@fluidframework/common-utils\";\nimport { v4 as uuid } from \"uuid\";\nimport { GCDataBuilder, unpackChildNodesUsedRoutes } from \"@fluidframework/garbage-collector\";\nimport { DataStoreContexts } from \"./dataStoreContexts\";\nimport { ContainerRuntime } from \"./containerRuntime\";\nimport {\n    FluidDataStoreContext,\n    RemoteFluidDataStoreContext,\n    LocalFluidDataStoreContext,\n    createAttributesBlob,\n    LocalDetachedFluidDataStoreContext,\n} from \"./dataStoreContext\";\nimport { IContainerRuntimeMetadata, nonDataStorePaths, rootHasIsolatedChannels } from \"./summaryFormat\";\nimport { IDataStoreAliasMessage, isDataStoreAliasMessage } from \"./dataStore\";\nimport { GCNodeType } from \"./garbageCollection\";\n\ntype PendingAliasResolve = (success: boolean) => void;\n\n /**\n  * This class encapsulates data store handling. Currently it is only used by the container runtime,\n  * but eventually could be hosted on any channel once we formalize the channel api boundary.\n  */\nexport class DataStores implements IDisposable {\n    // Stores tracked by the Domain\n    private readonly pendingAttach = new Map<string, IAttachMessage>();\n    // 0.24 back-compat attachingBeforeSummary\n    public readonly attachOpFiredForDataStore = new Set<string>();\n\n    private readonly logger: ITelemetryLogger;\n\n    private readonly disposeOnce = new Lazy<void>(() => this.contexts.dispose());\n\n    public readonly containerLoadStats: {\n        // number of dataStores during loadContainer\n        readonly containerLoadDataStoreCount: number;\n        // number of unreferenced dataStores during loadContainer\n        readonly referencedDataStoreCount: number;\n    };\n\n    // Stores the ids of new data stores between two GC runs. This is used to notify the garbage collector of new\n    // root data stores that are added.\n    private dataStoresSinceLastGC: string[] = [];\n    // The handle to the container runtime. This is used mainly for GC purposes to represent outbound reference from\n    // the container runtime to other nodes.\n    private readonly containerRuntimeHandle: IFluidHandle;\n\n    constructor(\n        private readonly baseSnapshot: ISnapshotTree | undefined,\n        private readonly runtime: ContainerRuntime,\n        private readonly submitAttachFn: (attachContent: any) => void,\n        private readonly getCreateChildSummarizerNodeFn:\n            (id: string, createParam: CreateChildSummarizerNodeParam) => CreateChildSummarizerNodeFn,\n        private readonly deleteChildSummarizerNodeFn: (id: string) => void,\n        baseLogger: ITelemetryBaseLogger,\n        getBaseGCDetails: () => Promise<Map<string, IGarbageCollectionDetailsBase>>,\n        private readonly gcNodeUpdated: (\n            nodePath: string, timestampMs: number, packagePath?: readonly string[]) => void,\n        private readonly aliasMap: Map<string, string>,\n        private readonly writeGCDataAtRoot: boolean,\n        private readonly contexts: DataStoreContexts = new DataStoreContexts(baseLogger),\n    ) {\n        this.logger = ChildLogger.create(baseLogger);\n        this.containerRuntimeHandle = new FluidObjectHandle(this.runtime, \"/\", this.runtime.IFluidHandleContext);\n\n        const baseGCDetailsP = new LazyPromise(async () => {\n            return getBaseGCDetails();\n        });\n        // Returns the base GC details for the data store with the given id.\n        const dataStoreBaseGCDetails = async (dataStoreId: string) => {\n            const baseGCDetails = await baseGCDetailsP;\n            return baseGCDetails.get(dataStoreId);\n        };\n\n        // Extract stores stored inside the snapshot\n        const fluidDataStores = new Map<string, ISnapshotTree>();\n        if (baseSnapshot) {\n            for (const [key, value] of Object.entries(baseSnapshot.trees)) {\n                fluidDataStores.set(key, value);\n            }\n        }\n\n        let unreferencedDataStoreCount = 0;\n        // Create a context for each of them\n        for (const [key, value] of fluidDataStores) {\n            let dataStoreContext: FluidDataStoreContext;\n\n            // counting number of unreferenced data stores\n            if (value.unreferenced) {\n                unreferencedDataStoreCount++;\n            }\n            // If we have a detached container, then create local data store contexts.\n            if (this.runtime.attachState !== AttachState.Detached) {\n                dataStoreContext = new RemoteFluidDataStoreContext({\n                    id: key,\n                    snapshotTree: value,\n                    getBaseGCDetails: async () => dataStoreBaseGCDetails(key),\n                    runtime: this.runtime,\n                    storage: this.runtime.storage,\n                    scope: this.runtime.scope,\n                    createSummarizerNodeFn: this.getCreateChildSummarizerNodeFn(\n                        key,\n                        { type: CreateSummarizerNodeSource.FromSummary },\n                    ),\n                    writeGCDataAtRoot: this.writeGCDataAtRoot,\n                    disableIsolatedChannels: this.runtime.disableIsolatedChannels,\n                });\n            } else {\n                if (typeof value !== \"object\") {\n                    throw new LoggingError(\"Snapshot should be there to load from!!\");\n                }\n                const snapshotTree = value;\n                dataStoreContext = new LocalFluidDataStoreContext({\n                    id: key,\n                    pkg: undefined,\n                    runtime: this.runtime,\n                    storage: this.runtime.storage,\n                    scope: this.runtime.scope,\n                    createSummarizerNodeFn: this.getCreateChildSummarizerNodeFn(\n                        key,\n                        { type: CreateSummarizerNodeSource.FromSummary },\n                    ),\n                    makeLocallyVisibleFn: () => this.makeDataStoreLocallyVisible(key),\n                    snapshotTree,\n                    isRootDataStore: undefined,\n                    writeGCDataAtRoot: this.writeGCDataAtRoot,\n                    disableIsolatedChannels: this.runtime.disableIsolatedChannels,\n                });\n            }\n            this.contexts.addBoundOrRemoted(dataStoreContext);\n        }\n        this.containerLoadStats = {\n            containerLoadDataStoreCount: fluidDataStores.size,\n            referencedDataStoreCount: fluidDataStores.size - unreferencedDataStoreCount,\n        };\n    }\n\n    public aliases(): ReadonlyMap<string, string> {\n        return this.aliasMap;\n    }\n\n    public processAttachMessage(message: ISequencedDocumentMessage, local: boolean) {\n        const attachMessage = message.contents as InboundAttachMessage;\n\n        this.dataStoresSinceLastGC.push(attachMessage.id);\n\n        // The local object has already been attached\n        if (local) {\n            assert(this.pendingAttach.has(attachMessage.id),\n                0x15e /* \"Local object does not have matching attach message id\" */);\n            this.contexts.get(attachMessage.id)?.emit(\"attached\");\n            this.pendingAttach.delete(attachMessage.id);\n            return;\n        }\n\n         // If a non-local operation then go and create the object, otherwise mark it as officially attached.\n        if (this.alreadyProcessed(attachMessage.id)) {\n            // TODO: dataStoreId may require a different tag from PackageData #7488\n            const error = new DataCorruptionError(\n                // pre-0.58 error message: duplicateDataStoreCreatedWithExistingId\n                \"Duplicate DataStore created with existing id\",\n                {\n                    ...extractSafePropertiesFromMessage(message),\n                    dataStoreId: {\n                        value: attachMessage.id,\n                        tag: TelemetryDataTag.PackageData,\n                    },\n                },\n            );\n            throw error;\n        }\n\n        const flatBlobs = new Map<string, ArrayBufferLike>();\n        let snapshotTree: ISnapshotTree | undefined;\n        if (attachMessage.snapshot) {\n            snapshotTree = buildSnapshotTree(attachMessage.snapshot.entries, flatBlobs);\n        }\n\n        // Include the type of attach message which is the pkg of the store to be\n        // used by RemoteFluidDataStoreContext in case it is not in the snapshot.\n        const pkg = [attachMessage.type];\n        const remoteFluidDataStoreContext = new RemoteFluidDataStoreContext({\n            id: attachMessage.id,\n            snapshotTree,\n            // New data stores begin with empty GC details since GC hasn't run on them yet.\n            getBaseGCDetails: async () => { return {}; },\n            runtime: this.runtime,\n            storage: new BlobCacheStorageService(this.runtime.storage, flatBlobs),\n            scope: this.runtime.scope,\n            createSummarizerNodeFn: this.getCreateChildSummarizerNodeFn(\n                attachMessage.id,\n                {\n                    type: CreateSummarizerNodeSource.FromAttach,\n                    sequenceNumber: message.sequenceNumber,\n                    snapshot: attachMessage.snapshot ?? {\n                        entries: [createAttributesBlob(\n                            pkg,\n                            true /* isRootDataStore */,\n                            this.runtime.disableIsolatedChannels,\n                        )],\n                    },\n                },\n            ),\n            writeGCDataAtRoot: this.writeGCDataAtRoot,\n            disableIsolatedChannels: this.runtime.disableIsolatedChannels,\n            pkg,\n        });\n\n        this.contexts.addBoundOrRemoted(remoteFluidDataStoreContext);\n    }\n\n    public processAliasMessage(\n        message: ISequencedDocumentMessage,\n        localOpMetadata: unknown,\n        local: boolean,\n    ): void {\n        const aliasMessage = message.contents as IDataStoreAliasMessage;\n        if (!isDataStoreAliasMessage(aliasMessage)) {\n            throw new DataCorruptionError(\n                \"malformedDataStoreAliasMessage\",\n                {\n                    ...extractSafePropertiesFromMessage(message),\n                },\n            );\n        }\n\n        const resolve = localOpMetadata as PendingAliasResolve;\n        const aliasResult = this.processAliasMessageCore(aliasMessage);\n        if (local) {\n            resolve(aliasResult);\n        }\n    }\n\n    public processAliasMessageCore(aliasMessage: IDataStoreAliasMessage): boolean {\n        if (this.alreadyProcessed(aliasMessage.alias)) {\n            return false;\n        }\n\n        const context = this.contexts.get(aliasMessage.internalId);\n        if (context === undefined) {\n            this.logger.sendErrorEvent({\n                eventName: \"AliasFluidDataStoreNotFound\",\n                fluidDataStoreId: aliasMessage.internalId,\n            });\n            return false;\n        }\n\n        const handle = new FluidObjectHandle(\n            context,\n            aliasMessage.internalId,\n            this.runtime.IFluidHandleContext,\n        );\n        this.runtime.addedGCOutboundReference(this.containerRuntimeHandle, handle);\n\n        this.aliasMap.set(aliasMessage.alias, context.id);\n        context.setInMemoryRoot();\n        return true;\n    }\n\n    private alreadyProcessed(id: string): boolean {\n        return this.aliasMap.get(id) !== undefined || this.contexts.get(id) !== undefined;\n    }\n\n    /**\n     * Make the data stores locally visible in the container graph by moving the data store context from unbound to\n     * bound list. This data store can now be reached from the root.\n     * @param id - The id of the data store context to make visible.\n     */\n    private makeDataStoreLocallyVisible(id: string): void {\n        const localContext = this.contexts.getUnbound(id);\n        assert(!!localContext, 0x15f /* \"Could not find unbound context to bind\" */);\n\n        /**\n         * If the container is not detached, it is globally visible to all clients. This data store should also be\n         * globally visible. Move it to attaching state and send an \"attach\" op for it.\n         * If the container is detached, this data store will be part of the summary that makes the container attached.\n         */\n        if (this.runtime.attachState !== AttachState.Detached) {\n            localContext.emit(\"attaching\");\n            const message = localContext.generateAttachMessage();\n\n            this.pendingAttach.set(id, message);\n            this.submitAttachFn(message);\n            this.attachOpFiredForDataStore.add(id);\n        }\n\n        this.contexts.bind(id);\n    }\n\n    public createDetachedDataStoreCore(\n        pkg: Readonly<string[]>,\n        isRoot: boolean,\n        id = uuid()): IFluidDataStoreContextDetached {\n        assert(!id.includes(\"/\"), 0x30c /* Id cannot contain slashes */);\n\n        const context = new LocalDetachedFluidDataStoreContext({\n            id,\n            pkg,\n            runtime: this.runtime,\n            storage: this.runtime.storage,\n            scope: this.runtime.scope,\n            createSummarizerNodeFn: this.getCreateChildSummarizerNodeFn(\n                id,\n                { type: CreateSummarizerNodeSource.Local },\n            ),\n            makeLocallyVisibleFn: () => this.makeDataStoreLocallyVisible(id),\n            snapshotTree: undefined,\n            isRootDataStore: isRoot,\n            writeGCDataAtRoot: this.writeGCDataAtRoot,\n            disableIsolatedChannels: this.runtime.disableIsolatedChannels,\n        });\n        this.contexts.addUnbound(context);\n        return context;\n    }\n\n    public _createFluidDataStoreContext(pkg: string[], id: string, isRoot: boolean, props?: any) {\n        assert(!id.includes(\"/\"), 0x30d /* Id cannot contain slashes */);\n        const context = new LocalFluidDataStoreContext({\n            id,\n            pkg,\n            runtime: this.runtime,\n            storage: this.runtime.storage,\n            scope: this.runtime.scope,\n            createSummarizerNodeFn: this.getCreateChildSummarizerNodeFn(\n                id,\n                { type: CreateSummarizerNodeSource.Local },\n            ),\n            makeLocallyVisibleFn: () => this.makeDataStoreLocallyVisible(id),\n            snapshotTree: undefined,\n            isRootDataStore: isRoot,\n            writeGCDataAtRoot: this.writeGCDataAtRoot,\n            disableIsolatedChannels: this.runtime.disableIsolatedChannels,\n            createProps: props,\n        });\n        this.contexts.addUnbound(context);\n        return context;\n    }\n\n    public get disposed() { return this.disposeOnce.evaluated; }\n    public readonly dispose = () => this.disposeOnce.value;\n\n    public resubmitDataStoreOp(content: any, localOpMetadata: unknown) {\n        const envelope = content as IEnvelope;\n        const context = this.contexts.get(envelope.address);\n        assert(!!context, 0x160 /* \"There should be a store context for the op\" */);\n        context.reSubmit(envelope.contents, localOpMetadata);\n    }\n\n    public rollbackDataStoreOp(content: any, localOpMetadata: unknown) {\n        const envelope = content as IEnvelope;\n        const context = this.contexts.get(envelope.address);\n        assert(!!context, 0x2e8 /* \"There should be a store context for the op\" */);\n        context.rollback(envelope.contents, localOpMetadata);\n    }\n\n    public async applyStashedOp(content: any): Promise<unknown> {\n        const envelope = content as IEnvelope;\n        const context = this.contexts.get(envelope.address);\n        assert(!!context, 0x161 /* \"There should be a store context for the op\" */);\n        return context.applyStashedOp(envelope.contents);\n    }\n\n    public async applyStashedAttachOp(message: IAttachMessage) {\n        this.pendingAttach.set(message.id, message);\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        this.processAttachMessage({ contents: message } as ISequencedDocumentMessage, false);\n    }\n\n    public processFluidDataStoreOp(message: ISequencedDocumentMessage, local: boolean, localMessageMetadata: unknown) {\n        const envelope = message.contents as IEnvelope;\n        const transformed = { ...message, contents: envelope.contents };\n        const context = this.contexts.get(envelope.address);\n        assert(!!context, 0x162 /* \"There should be a store context for the op\" */);\n        context.process(transformed, local, localMessageMetadata);\n\n        // Notify that a GC node for the data store changed. This is used to detect if a deleted data store is\n        // being used.\n        this.gcNodeUpdated(\n            `/${envelope.address}`,\n            message.timestamp,\n            context.isLoaded ? context.packagePath : undefined,\n        );\n    }\n\n    public async getDataStore(id: string, wait: boolean): Promise<FluidDataStoreContext> {\n        const context = await this.contexts.getBoundOrRemoted(id, wait);\n        if (context === undefined) {\n            // The requested data store does not exits. Throw a 404 response exception.\n            const request = { url: id };\n            throw responseToException(create404Response(request), request);\n        }\n\n        return context;\n    }\n\n    public processSignal(address: string, message: IInboundSignalMessage, local: boolean) {\n        const context = this.contexts.get(address);\n        if (!context) {\n            // Attach message may not have been processed yet\n            assert(!local, 0x163 /* \"Missing datastore for local signal\" */);\n            this.logger.sendTelemetryEvent({\n                eventName: \"SignalFluidDataStoreNotFound\",\n                fluidDataStoreId: {\n                    value: address,\n                    tag: TelemetryDataTag.PackageData,\n                },\n            });\n            return;\n        }\n\n        context.processSignal(message, local);\n    }\n\n    public setConnectionState(connected: boolean, clientId?: string) {\n        for (const [fluidDataStore, context] of this.contexts) {\n            try {\n                context.setConnectionState(connected, clientId);\n            } catch (error) {\n                this.logger.sendErrorEvent({\n                    eventName: \"SetConnectionStateError\",\n                    clientId,\n                    fluidDataStore,\n                }, error);\n            }\n        }\n    }\n\n    public setAttachState(attachState: AttachState.Attaching | AttachState.Attached): void {\n        let eventName: \"attaching\" | \"attached\";\n        if (attachState === AttachState.Attaching) {\n            eventName = \"attaching\";\n        } else {\n            eventName = \"attached\";\n        }\n        for (const [,context] of this.contexts) {\n            // Fire only for bounded stores.\n            if (!this.contexts.isNotBound(context.id)) {\n                context.emit(eventName);\n            }\n        }\n    }\n\n    public get size(): number {\n        return this.contexts.size;\n    }\n\n    public async summarize(\n        fullTree: boolean,\n        trackState: boolean,\n        telemetryContext?: ITelemetryContext,\n    ): Promise<ISummaryTreeWithStats> {\n        const summaryBuilder = new SummaryTreeBuilder();\n\n        // Iterate over each store and ask it to snapshot\n        await Promise.all(Array.from(this.contexts)\n            .filter(([_, context]) => {\n                // Summarizer works only with clients with no local changes!\n                assert(context.attachState !== AttachState.Attaching,\n                    0x165 /* \"Summarizer cannot work if client has local changes\" */);\n                return context.attachState === AttachState.Attached;\n            }).map(async ([contextId, context]) => {\n                const contextSummary = await context.summarize(fullTree, trackState, telemetryContext);\n                summaryBuilder.addWithStats(contextId, contextSummary);\n            }));\n\n        return summaryBuilder.getSummaryTree();\n    }\n\n    public createSummary(telemetryContext?: ITelemetryContext): ISummaryTreeWithStats {\n        const builder = new SummaryTreeBuilder();\n        // Attaching graph of some stores can cause other stores to get bound too.\n        // So keep taking summary until no new stores get bound.\n        let notBoundContextsLength: number;\n        do {\n            const builderTree = builder.summary.tree;\n            notBoundContextsLength = this.contexts.notBoundLength();\n            // Iterate over each data store and ask it to snapshot\n            Array.from(this.contexts)\n                .filter(([key, _]) =>\n                    // Take summary of bounded data stores only, make sure we haven't summarized them already\n                    // and no attach op has been fired for that data store because for loader versions <= 0.24\n                    // we set attach state as \"attaching\" before taking createNew summary.\n                    !(this.contexts.isNotBound(key)\n                        || builderTree[key]\n                        || this.attachOpFiredForDataStore.has(key)),\n                )\n                .map(([key, value]) => {\n                    let dataStoreSummary: ISummarizeResult;\n                    if (value.isLoaded) {\n                        const snapshot = value.generateAttachMessage().snapshot;\n                        dataStoreSummary = convertToSummaryTree(snapshot, true);\n                    } else {\n                        // If this data store is not yet loaded, then there should be no changes in the snapshot from\n                        // which it was created as it is detached container. So just use the previous snapshot.\n                        assert(!!this.baseSnapshot,\n                            0x166 /* \"BaseSnapshot should be there as detached container loaded from snapshot\" */);\n                        dataStoreSummary = convertSnapshotTreeToSummaryTree(this.baseSnapshot.trees[key]);\n                    }\n                    builder.addWithStats(key, dataStoreSummary);\n                });\n        } while (notBoundContextsLength !== this.contexts.notBoundLength());\n\n        return builder.getSummaryTree();\n    }\n\n    /**\n     * Before GC runs, called by the garbage collector to update any pending GC state.\n     * The garbage collector needs to know all outbound references that are added. Since root data stores are not\n     * explicitly marked as referenced, notify GC of new root data stores that were added since the last GC run.\n     */\n    public async updateStateBeforeGC(): Promise<void> {\n        for (const id of this.dataStoresSinceLastGC) {\n            const context = this.contexts.get(id);\n            assert(context !== undefined, 0x2b6 /* Missing data store context */);\n            if (await context.isRoot()) {\n                // A root data store is basically a reference from the container runtime to the data store.\n                const handle = new FluidObjectHandle(context, id, this.runtime.IFluidHandleContext);\n                this.runtime.addedGCOutboundReference(this.containerRuntimeHandle, handle);\n            }\n        }\n        this.dataStoresSinceLastGC = [];\n    }\n\n    /**\n     * Generates data used for garbage collection. It does the following:\n     * 1. Calls into each child data store context to get its GC data.\n     * 2. Prefixes the child context's id to the GC nodes in the child's GC data. This makes sure that the node can be\n     *    identified as belonging to the child.\n     * 3. Adds a GC node for this channel to the nodes received from the children. All these nodes together represent\n     *    the GC data of this channel.\n     * @param fullGC - true to bypass optimizations and force full generation of GC data.\n     */\n    public async getGCData(fullGC: boolean = false): Promise<IGarbageCollectionData> {\n        const builder = new GCDataBuilder();\n        // Iterate over each store and get their GC data.\n        await Promise.all(Array.from(this.contexts)\n            .filter(([_, context]) => {\n                // Get GC data only for attached contexts. Detached contexts are not connected in the GC reference\n                // graph so any references they might have won't be connected as well.\n                return context.attachState === AttachState.Attached;\n            }).map(async ([contextId, context]) => {\n                const contextGCData = await context.getGCData(fullGC);\n                // Prefix the child's id to the ids of its GC nodes so they can be identified as belonging to the child.\n                // This also gradually builds the id of each node to be a path from the root.\n                builder.prefixAndAddNodes(contextId, contextGCData.gcNodes);\n            }));\n\n        // Get the outbound routes and add a GC node for this channel.\n        builder.addNode(\"/\", await this.getOutboundRoutes());\n        return builder.getGCData();\n    }\n\n    /**\n     * After GC has run, called to notify this Container's data stores of routes that are used in it.\n     * @param usedRoutes - The routes that are used in all data stores in this Container.\n     * @param gcTimestamp - The time when GC was run that generated these used routes. If any node node becomes\n     * unreferenced as part of this GC run, this should be used to update the time when it happens.\n     */\n    public updateUsedRoutes(usedRoutes: string[], gcTimestamp?: number) {\n        // Get a map of data store ids to routes used in it.\n        const usedDataStoreRoutes = unpackChildNodesUsedRoutes(usedRoutes);\n\n        // Verify that the used routes are correct.\n        for (const [id] of usedDataStoreRoutes) {\n            assert(this.contexts.has(id), 0x167 /* \"Used route does not belong to any known data store\" */);\n        }\n\n        // Update the used routes in each data store. Used routes is empty for unused data stores.\n        for (const [contextId, context] of this.contexts) {\n            context.updateUsedRoutes(usedDataStoreRoutes.get(contextId) ?? [], gcTimestamp);\n        }\n    }\n\n    /**\n     * When running GC in test mode, this is called to delete objects whose routes are unused. This enables testing\n     * scenarios with accessing deleted content.\n     * @param unusedRoutes - The routes that are unused in all data stores in this Container.\n     */\n    public deleteUnusedRoutes(unusedRoutes: string[]) {\n        for (const route of unusedRoutes) {\n            const pathParts = route.split(\"/\");\n            // Delete data store only if its route (/datastoreId) is in unusedRoutes. We don't want to delete a data\n            // store based on its DDS being unused.\n            if (pathParts.length > 2) {\n                continue;\n            }\n            const dataStoreId = pathParts[1];\n            assert(this.contexts.has(dataStoreId), 0x2d7 /* No data store with specified id */);\n            // Delete the contexts of unused data stores.\n            this.contexts.delete(dataStoreId);\n            // Delete the summarizer node of the unused data stores.\n            this.deleteChildSummarizerNodeFn(dataStoreId);\n        }\n    }\n\n    /**\n     * Returns the outbound routes of this channel. Only root data stores are considered referenced and their paths are\n     * part of outbound routes.\n     */\n    private async getOutboundRoutes(): Promise<string[]> {\n        const outboundRoutes: string[] = [];\n        for (const [contextId, context] of this.contexts) {\n            const isRootDataStore = await context.isRoot();\n            if (isRootDataStore) {\n                outboundRoutes.push(`/${contextId}`);\n            }\n        }\n        return outboundRoutes;\n    }\n\n    /**\n     * Called by GC to retrieve the package path of a data store node with the given path.\n     */\n    public async getDataStorePackagePath(nodePath: string): Promise<readonly string[] | undefined> {\n        // If the node belongs to a data store, return its package path. For DDSes, we return the package path of the\n        // data store that contains it.\n        const context = this.contexts.get(nodePath.split(\"/\")[1]);\n        return (await context?.getInitialSnapshotDetails())?.pkg;\n    }\n\n    /**\n     * Called by GC to determine if a node is for a data store or for an object within a data store (for e.g. DDS).\n     * @returns the GC node type if the node belongs to a data store or object within data store, undefined otherwise.\n     */\n    public getGCNodeType(nodePath: string): GCNodeType | undefined {\n        const pathParts = nodePath.split(\"/\");\n        if (!this.contexts.has(pathParts[1])) {\n            return undefined;\n        }\n\n        // Data stores paths are of the format \"/dataStoreId\".\n        // Sub data store paths are of the format \"/dataStoreId/subPath/...\".\n        if (pathParts.length === 2) {\n            return GCNodeType.DataStore;\n        }\n        return GCNodeType.SubDataStore;\n    }\n}\n\nexport function getSummaryForDatastores(\n    snapshot: ISnapshotTree | undefined,\n    metadata?: IContainerRuntimeMetadata,\n): ISnapshotTree | undefined {\n    if (!snapshot) {\n        return undefined;\n    }\n\n    if (rootHasIsolatedChannels(metadata)) {\n        const datastoresSnapshot = snapshot.trees[channelsTreeName];\n        assert(!!datastoresSnapshot, 0x168 /* Expected tree in snapshot not found */);\n        return datastoresSnapshot;\n    } else {\n        // back-compat: strip out all non-datastore paths before giving to DataStores object.\n        const datastoresTrees: ISnapshotTree[\"trees\"] = {};\n        for (const [key, value] of Object.entries(snapshot.trees)) {\n            if (!nonDataStorePaths.includes(key)) {\n                datastoresTrees[key] = value;\n            }\n        }\n        return {\n            ...snapshot,\n            trees: datastoresTrees,\n        };\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { EventEmitter } from \"events\";\nimport { ITelemetryBaseLogger, ITelemetryGenericEvent, ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport {\n    FluidObject,\n    IFluidHandle,\n    IFluidHandleContext,\n    IFluidRouter,\n    IRequest,\n    IResponse,\n} from \"@fluidframework/core-interfaces\";\nimport {\n    IAudience,\n    IFluidTokenProvider,\n    IContainerContext,\n    IDeltaManager,\n    IDeltaSender,\n    IRuntime,\n    ICriticalContainerError,\n    AttachState,\n    ILoaderOptions,\n    LoaderHeader,\n    ISnapshotTreeWithBlobContents,\n} from \"@fluidframework/container-definitions\";\nimport {\n    IContainerRuntime,\n    IContainerRuntimeEvents,\n} from \"@fluidframework/container-runtime-definitions\";\nimport {\n    assert,\n    Trace,\n    TypedEventEmitter,\n    unreachableCase,\n    performance,\n} from \"@fluidframework/common-utils\";\nimport {\n    ChildLogger,\n    raiseConnectedEvent,\n    PerformanceEvent,\n    TaggedLoggerAdapter,\n    MonitoringContext,\n    loggerToMonitoringContext,\n    TelemetryDataTag,\n} from \"@fluidframework/telemetry-utils\";\nimport { DriverHeader, IDocumentStorageService, ISummaryContext } from \"@fluidframework/driver-definitions\";\nimport { readAndParse, isUnpackedRuntimeMessage } from \"@fluidframework/driver-utils\";\nimport {\n    DataCorruptionError,\n    DataProcessingError,\n    GenericError,\n    UsageError,\n    extractSafePropertiesFromMessage,\n} from \"@fluidframework/container-utils\";\nimport {\n    IClientDetails,\n    IDocumentMessage,\n    IQuorumClients,\n    ISequencedDocumentMessage,\n    ISignalMessage,\n    ISnapshotTree,\n    ISummaryContent,\n    ISummaryTree,\n    MessageType,\n    SummaryType,\n} from \"@fluidframework/protocol-definitions\";\nimport {\n    FlushMode,\n    InboundAttachMessage,\n    IFluidDataStoreContextDetached,\n    IFluidDataStoreRegistry,\n    IFluidDataStoreChannel,\n    IGarbageCollectionData,\n    IGarbageCollectionDetailsBase,\n    IEnvelope,\n    IInboundSignalMessage,\n    ISignalEnvelope,\n    NamedFluidDataStoreRegistryEntries,\n    ISummaryTreeWithStats,\n    ISummarizeInternalResult,\n    CreateChildSummarizerNodeParam,\n    SummarizeInternalFn,\n    channelsTreeName,\n    IAttachMessage,\n    IDataStore,\n    ITelemetryContext,\n} from \"@fluidframework/runtime-definitions\";\nimport {\n    addBlobToSummary,\n    addSummarizeResultToSummary,\n    addTreeToSummary,\n    createRootSummarizerNodeWithGC,\n    IRootSummarizerNodeWithGC,\n    RequestParser,\n    create404Response,\n    exceptionToResponse,\n    requestFluidObject,\n    responseToException,\n    seqFromTree,\n    calculateStats,\n    TelemetryContext,\n} from \"@fluidframework/runtime-utils\";\nimport { GCDataBuilder, trimLeadingAndTrailingSlashes } from \"@fluidframework/garbage-collector\";\nimport { v4 as uuid } from \"uuid\";\nimport { ContainerFluidHandleContext } from \"./containerHandleContext\";\nimport { FluidDataStoreRegistry } from \"./dataStoreRegistry\";\nimport { Summarizer } from \"./summarizer\";\nimport { SummaryManager } from \"./summaryManager\";\nimport { DeltaScheduler } from \"./deltaScheduler\";\nimport {\n    ReportOpPerfTelemetry,\n    latencyThreshold,\n    IPerfSignalReport,\n} from \"./connectionTelemetry\";\nimport { IPendingLocalState, PendingStateManager } from \"./pendingStateManager\";\nimport { pkgVersion } from \"./packageVersion\";\nimport { BlobManager, IBlobManagerLoadInfo } from \"./blobManager\";\nimport { DataStores, getSummaryForDatastores } from \"./dataStores\";\nimport {\n    aliasBlobName,\n    blobsTreeName,\n    chunksBlobName,\n    electedSummarizerBlobName,\n    extractSummaryMetadataMessage,\n    IContainerRuntimeMetadata,\n    ICreateContainerMetadata,\n    ISummaryMetadataMessage,\n    metadataBlobName,\n    wrapSummaryInChannelsTree,\n} from \"./summaryFormat\";\nimport { SummaryCollection } from \"./summaryCollection\";\nimport { ISerializedElection, OrderedClientCollection, OrderedClientElection } from \"./orderedClientElection\";\nimport { SummarizerClientElection, summarizerClientType } from \"./summarizerClientElection\";\nimport {\n    SubmitSummaryResult,\n    IConnectableRuntime,\n    IGeneratedSummaryStats,\n    ISubmitSummaryOptions,\n    ISummarizer,\n    ISummarizerInternalsProvider,\n    ISummarizerOptions,\n    ISummarizerRuntime,\n} from \"./summarizerTypes\";\nimport { formExponentialFn, Throttler } from \"./throttler\";\nimport { RunWhileConnectedCoordinator } from \"./runWhileConnectedCoordinator\";\nimport {\n    GarbageCollector,\n    GCNodeType,\n    gcTreeKey,\n    IGarbageCollectionRuntime,\n    IGarbageCollector,\n    IGCStats,\n} from \"./garbageCollection\";\nimport {\n    channelToDataStore,\n    IDataStoreAliasMessage,\n    isDataStoreAliasMessage,\n} from \"./dataStore\";\nimport { BindBatchTracker } from \"./batchTracker\";\nimport { ISerializedBaseSnapshotBlobs, SerializedSnapshotStorage } from \"./serializedSnapshotStorage\";\nimport { OpTracker } from \"./opTelemetry\";\n\nexport enum ContainerMessageType {\n    // An op to be delivered to store\n    FluidDataStoreOp = \"component\",\n\n    // Creates a new store\n    Attach = \"attach\",\n\n    // Chunked operation.\n    ChunkedOp = \"chunkedOp\",\n\n    // Signifies that a blob has been attached and should not be garbage collected by storage\n    BlobAttach = \"blobAttach\",\n\n    // Ties our new clientId to our old one on reconnect\n    Rejoin = \"rejoin\",\n\n    // Sets the alias of a root data store\n    Alias = \"alias\",\n}\n\nexport interface IChunkedOp {\n    chunkId: number;\n\n    totalChunks: number;\n\n    contents: string;\n\n    originalType: MessageType | ContainerMessageType;\n}\n\nexport interface ContainerRuntimeMessage {\n    contents: any;\n    type: ContainerMessageType;\n}\nexport interface ISummaryBaseConfiguration {\n    /**\n     *  Delay before first attempt to spawn summarizing container.\n     */\n    initialSummarizerDelayMs: number;\n\n    /**\n     * Flag that will enable changing elected summarizer client after maxOpsSinceLastSummary.\n     * This defaults to false (disabled) and must be explicitly set to true to enable.\n     */\n    summarizerClientElection: boolean;\n\n    /**\n     * Defines the maximum allowed time to wait for a pending summary ack.\n     * The maximum amount of time client will wait for a summarize is the minimum of\n     * maxSummarizeAckWaitTime (currently 10 * 60 * 1000) and maxAckWaitTime.\n     */\n    maxAckWaitTime: number;\n    /**\n     * Defines the maximum number of Ops in between Summaries that can be\n     * allowed before forcibly electing a new summarizer client.\n     */\n    maxOpsSinceLastSummary: number;\n}\n\nexport interface ISummaryConfigurationHeuristics extends ISummaryBaseConfiguration {\n    state: \"enabled\";\n    /**\n     * Defines the maximum allowed time in between summarizations.\n     */\n    idleTime: number;\n    /**\n     * Defines the maximum allowed time, since the last received Ack,  before running the summary\n     * with reason maxTime.\n     */\n    maxTime: number;\n    /**\n     * Defines the maximum number of Ops, since the last received Ack, that can be allowed\n     * before running the summary with reason maxOps.\n     */\n    maxOps: number;\n    /**\n     * Defines the minimum number of Ops, since the last received Ack, that can be allowed\n     * before running the last summary.\n     */\n    minOpsForLastSummaryAttempt: number;\n}\n\nexport interface ISummaryConfigurationDisableSummarizer {\n    state: \"disabled\";\n}\n\nexport interface ISummaryConfigurationDisableHeuristics extends ISummaryBaseConfiguration {\n    state: \"disableHeuristics\";\n}\n\nexport type ISummaryConfiguration =\n    | ISummaryConfigurationDisableSummarizer\n    | ISummaryConfigurationDisableHeuristics\n    | ISummaryConfigurationHeuristics;\n\nexport const DefaultSummaryConfiguration: ISummaryConfiguration = {\n    state: \"enabled\",\n\n    idleTime: 5000 * 3,\n\n    maxTime: 5000 * 12,\n\n    maxOps: 100, // Summarize if 100 ops received since last snapshot.\n\n    minOpsForLastSummaryAttempt: 10,\n\n    maxAckWaitTime: 6 * 10 * 1000, // 6 min.\n\n    maxOpsSinceLastSummary: 7000,\n\n    initialSummarizerDelayMs: 5000, // 5 secs.\n\n    summarizerClientElection: false,\n};\n\nexport interface IGCRuntimeOptions {\n    /**\n     * Flag that if true, will enable running garbage collection (GC) in a container. GC has mark phase and sweep phase.\n     * In mark phase, unreferenced objects are identified and marked as such in the summary. This option enables the\n     * mark phase.\n     * In sweep phase, unreferenced objects are eventually deleted from the container if they meet certain conditions.\n     * Sweep phase can be enabled via the \"sweepAllowed\" option.\n     * Note: This setting becomes part of the container's summary and cannot be changed.\n     */\n    gcAllowed?: boolean;\n\n    /**\n     * Flag that if true, enables GC's sweep phase which will eventually delete unreferenced objects from the container.\n     * This flag should only be set to true if \"gcAllowed\" is true.\n     * Note: This setting becomes part of the container's summary and cannot be changed.\n     */\n    sweepAllowed?: boolean;\n\n    /**\n     * Flag that will disable garbage collection if set to true. Can be used to disable running GC on container where\n     * is allowed via the gcAllowed option.\n     */\n    disableGC?: boolean;\n\n    /**\n     * Flag that will bypass optimizations and generate GC data for all nodes irrespective of whether a node\n     * changed or not.\n     */\n    runFullGC?: boolean;\n\n    /**\n     * Allows additional GC options to be passed.\n     */\n    [key: string]: any;\n}\n\nexport interface ISummaryRuntimeOptions {\n\n    /** Override summary configurations set by the server. */\n    summaryConfigOverrides?: ISummaryConfiguration;\n\n    // Flag that disables putting channels in isolated subtrees for each data store\n    // and the root node when generating a summary if set to true.\n    // Defaults to FALSE (enabled) for now.\n    disableIsolatedChannels?: boolean;\n\n    /**\n     *  @deprecated - use `summaryConfigOverrides.initialSummarizerDelayMs` instead.\n     *  Delay before first attempt to spawn summarizing container.\n    */\n    initialSummarizerDelayMs?: number;\n\n    /**\n     * @deprecated - use `summaryConfigOverrides.disableSummaries` instead.\n     * Flag that disables summaries if it is set to true.\n     */\n    disableSummaries?: boolean;\n\n    /**\n     * @deprecated - use `summaryConfigOverrides.maxOpsSinceLastSummary` instead.\n     * Defaults to 7000 ops\n     */\n    maxOpsSinceLastSummary?: number;\n\n    /**\n    * @deprecated - use `summaryConfigOverrides.summarizerClientElection` instead.\n    * Flag that will enable changing elected summarizer client after maxOpsSinceLastSummary.\n    * This defaults to false (disabled) and must be explicitly set to true to enable.\n    */\n    summarizerClientElection?: boolean;\n\n    /**\n     * @deprecated - use `summaryConfigOverrides.state = \"DisableHeuristics\"` instead.\n     *  Options that control the running summarizer behavior. */\n    summarizerOptions?: Readonly<Partial<ISummarizerOptions>>;\n}\n\n/**\n * Options for container runtime.\n */\nexport interface IContainerRuntimeOptions {\n    readonly summaryOptions?: ISummaryRuntimeOptions;\n    readonly gcOptions?: IGCRuntimeOptions;\n    /**\n     * Affects the behavior while loading the runtime when the data verification check which\n     * compares the DeltaManager sequence number (obtained from protocol in summary) to the\n     * runtime sequence number (obtained from runtime metadata in summary) finds a mismatch.\n     * 1. \"close\" (default) will close the container with an assertion.\n     * 2. \"log\" will log an error event to telemetry, but still continue to load.\n     * 3. \"bypass\" will skip the check entirely. This is not recommended.\n     */\n    readonly loadSequenceNumberVerification?: \"close\" | \"log\" | \"bypass\";\n    /**\n     * Should the runtime use data store aliasing for creating root datastores.\n     * In case of aliasing conflicts, the runtime will raise an exception which does\n     * not effect the status of the container.\n     */\n    readonly useDataStoreAliasing?: boolean;\n    /**\n     * Sets the flush mode for the runtime. In Immediate flush mode the runtime will immediately\n     * send all operations to the driver layer, while in TurnBased the operations will be buffered\n     * and then sent them as a single batch at the end of the turn.\n     * By default, flush mode is TurnBased.\n     */\n    readonly flushMode?: FlushMode;\n    /**\n     * Save enough runtime state to be able to serialize upon request and load to the same state in a new container.\n     */\n    readonly enableOfflineLoad?: boolean;\n}\n\ntype IRuntimeMessageMetadata = undefined | {\n    batch?: boolean;\n};\n\n/**\n * The summary tree returned by the root node. It adds state relevant to the root of the tree.\n */\nexport interface IRootSummaryTreeWithStats extends ISummaryTreeWithStats {\n    /** The garbage collection stats if GC ran, undefined otherwise. */\n    gcStats?: IGCStats;\n}\n\n/**\n * Accepted header keys for requests coming to the runtime.\n */\nexport enum RuntimeHeaders {\n    /** True to wait for a data store to be created and loaded before returning it. */\n    wait = \"wait\",\n    /**\n     * True if the request is from an external app. Used for GC to handle scenarios where a data store\n     * is deleted and requested via an external app.\n     */\n    externalRequest = \"externalRequest\",\n    /** True if the request is coming from an IFluidHandle. */\n    viaHandle = \"viaHandle\",\n}\n\n/**\n * @deprecated\n * Untagged logger is unsupported going forward. There are old loaders with old ContainerContexts that only\n * have the untagged logger, so to accommodate that scenario the below interface is used. It can be removed once\n * its usage is removed from TaggedLoggerAdapter fallback.\n */\ninterface OldContainerContextWithLogger extends Omit<IContainerContext, \"taggedLogger\"> {\n    logger: ITelemetryBaseLogger;\n    taggedLogger: undefined;\n}\n\n/**\n * State saved when the container closes, to be given back to a newly\n * instantiated runtime in a new instance of the container, so it can load to the\n * same state\n */\nexport interface IPendingRuntimeState {\n    /**\n     * Pending ops from PendingStateManager\n     */\n    pending?: IPendingLocalState;\n    /**\n     * A base snapshot at a sequence number prior to the first pending op\n     */\n    baseSnapshot: ISnapshotTree;\n    /**\n     * Serialized blobs from the base snapshot. Used to load offline since\n     * storage is not available.\n     */\n    snapshotBlobs: ISerializedBaseSnapshotBlobs;\n    /**\n     * All runtime ops since base snapshot sequence number up to the latest op\n     * seen when the container was closed. Used to apply stashed (saved pending)\n     * ops at the same sequence number at which they were made.\n     */\n    savedOps: ISequencedDocumentMessage[];\n}\n\nconst useDataStoreAliasingKey = \"Fluid.ContainerRuntime.UseDataStoreAliasing\";\nconst maxConsecutiveReconnectsKey = \"Fluid.ContainerRuntime.MaxConsecutiveReconnects\";\n\n// Feature gate for the max op size. If the value is negative, chunking is enabled\n// and all ops over 16k would be chunked. If the value is positive, all ops with\n// a size strictly larger will be rejected and the container closed with an error.\nconst maxOpSizeInBytesKey = \"Fluid.ContainerRuntime.MaxOpSizeInBytes\";\n\n// By default, we should reject any op larger than 768KB,\n// in order to account for some extra overhead from serialization\n// to not reach the 1MB limits in socket.io and Kafka.\nconst defaultMaxOpSizeInBytes = 768000;\n\n// By default, the size of the contents for the incoming ops is tracked.\n// However, in certain situations, this may incur a performance hit.\n// The feature-gate below can be used to disable this feature.\nconst disableOpTrackingKey = \"Fluid.ContainerRuntime.DisableOpTracking\";\n\nconst defaultFlushMode = FlushMode.TurnBased;\n\nexport enum RuntimeMessage {\n    FluidDataStoreOp = \"component\",\n    Attach = \"attach\",\n    ChunkedOp = \"chunkedOp\",\n    BlobAttach = \"blobAttach\",\n    Rejoin = \"rejoin\",\n    Alias = \"alias\",\n    Operation = \"op\",\n}\n\nexport function isRuntimeMessage(message: ISequencedDocumentMessage): boolean {\n    if ((Object.values(RuntimeMessage) as string[]).includes(message.type)) {\n        return true;\n    }\n    return false;\n}\n\nexport function unpackRuntimeMessage(message: ISequencedDocumentMessage) {\n    if (message.type === MessageType.Operation) {\n        // legacy op format?\n        if (message.contents.address !== undefined && message.contents.type === undefined) {\n            message.type = ContainerMessageType.FluidDataStoreOp;\n        } else {\n            // new format\n            const innerContents = message.contents as ContainerRuntimeMessage;\n            assert(innerContents.type !== undefined, 0x121 /* \"Undefined inner contents type!\" */);\n            message.type = innerContents.type;\n            message.contents = innerContents.contents;\n        }\n        assert(isUnpackedRuntimeMessage(message), 0x122 /* \"Message to unpack is not proper runtime message\" */);\n    } else {\n        // Legacy format, but it's already \"unpacked\",\n        // i.e. message.type is actually ContainerMessageType.\n        // Nothing to do in such case.\n    }\n    return message;\n}\n\n/**\n * This class controls pausing and resuming of inbound queue to ensure that we never\n * start processing ops in a batch IF we do not have all ops in the batch.\n */\nclass ScheduleManagerCore {\n    private pauseSequenceNumber: number | undefined;\n    private currentBatchClientId: string | undefined;\n    private localPaused = false;\n    private timePaused = 0;\n    private batchCount = 0;\n\n    constructor(\n        private readonly deltaManager: IDeltaManager<ISequencedDocumentMessage, IDocumentMessage>,\n        private readonly logger: ITelemetryLogger,\n    ) {\n        // Listen for delta manager sends and add batch metadata to messages\n        this.deltaManager.on(\"prepareSend\", (messages: IDocumentMessage[]) => {\n            if (messages.length === 0) {\n                return;\n            }\n\n            // First message will have the batch flag set to true if doing a batched send\n            const firstMessageMetadata = messages[0].metadata as IRuntimeMessageMetadata;\n            if (!firstMessageMetadata?.batch) {\n                return;\n            }\n\n            // If the batch contains only a single op, clear the batch flag.\n            if (messages.length === 1) {\n                delete firstMessageMetadata.batch;\n                return;\n            }\n\n            // Set the batch flag to false on the last message to indicate the end of the send batch\n            const lastMessage = messages[messages.length - 1];\n            lastMessage.metadata = { ...lastMessage.metadata, batch: false };\n        });\n\n        // Listen for updates and peek at the inbound\n        this.deltaManager.inbound.on(\n            \"push\",\n            (message: ISequencedDocumentMessage) => {\n                this.trackPending(message);\n            });\n\n        // Start with baseline - empty inbound queue.\n        assert(!this.localPaused, 0x293 /* \"initial state\" */);\n\n        const allPending = this.deltaManager.inbound.toArray();\n        for (const pending of allPending) {\n            this.trackPending(pending);\n        }\n\n        // We are intentionally directly listening to the \"op\" to inspect system ops as well.\n        // If we do not observe system ops, we are likely to hit 0x296 assert when system ops\n        // precedes start of incomplete batch.\n        this.deltaManager.on(\"op\", (message) => this.afterOpProcessing(message.sequenceNumber));\n    }\n\n    /**\n     * The only public function in this class - called when we processed an op,\n     * to make decision if op processing should be paused or not afer that.\n     */\n    public afterOpProcessing(sequenceNumber: number) {\n        assert(!this.localPaused, 0x294 /* \"can't have op processing paused if we are processing an op\" */);\n\n        // If the inbound queue is ever empty, nothing to do!\n        if (this.deltaManager.inbound.length === 0) {\n            assert(this.pauseSequenceNumber === undefined,\n                0x295 /* \"there should be no pending batch if we have no ops\" */);\n            return;\n        }\n\n        // The queue is\n        // 1. paused only when the next message to be processed is the beginning of a batch. Done in two places:\n        //    - here (processing ops until reaching start of incomplete batch)\n        //    - in trackPending(), when queue was empty and start of batch showed up.\n        // 2. resumed when batch end comes in (in trackPending())\n\n        // do we have incomplete batch to worry about?\n        if (this.pauseSequenceNumber !== undefined) {\n            assert(sequenceNumber < this.pauseSequenceNumber,\n                0x296 /* \"we should never start processing incomplete batch!\" */);\n            // If the next op is the start of incomplete batch, then we can't process it until it's fully in - pause!\n            if (sequenceNumber + 1 === this.pauseSequenceNumber) {\n                this.pauseQueue();\n            }\n        }\n    }\n\n    private pauseQueue() {\n        assert(!this.localPaused, 0x297 /* \"always called from resumed state\" */);\n        this.localPaused = true;\n        this.timePaused = performance.now();\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.deltaManager.inbound.pause();\n    }\n\n    private resumeQueue(startBatch: number, messageEndBatch: ISequencedDocumentMessage) {\n        const endBatch = messageEndBatch.sequenceNumber;\n        const duration = this.localPaused ? (performance.now() - this.timePaused) : undefined;\n\n        this.batchCount++;\n        if (this.batchCount % 1000 === 1) {\n            this.logger.sendTelemetryEvent({\n                eventName: \"BatchStats\",\n                sequenceNumber: endBatch,\n                length: endBatch - startBatch + 1,\n                msnDistance: endBatch - messageEndBatch.minimumSequenceNumber,\n                duration,\n                batchCount: this.batchCount,\n                interrupted: this.localPaused,\n            });\n        }\n\n        // Return early if no change in value\n        if (!this.localPaused) {\n            return;\n        }\n\n        this.localPaused = false;\n\n        // Random round number - we want to know when batch waiting paused op processing.\n        if (duration !== undefined && duration > latencyThreshold) {\n            this.logger.sendErrorEvent({\n                eventName: \"MaxBatchWaitTimeExceeded\",\n                duration,\n                sequenceNumber: endBatch,\n                length: endBatch - startBatch,\n            });\n        }\n        this.deltaManager.inbound.resume();\n    }\n\n    /**\n     * Called for each incoming op (i.e. inbound \"push\" notification)\n     */\n    private trackPending(message: ISequencedDocumentMessage) {\n        assert(this.deltaManager.inbound.length !== 0,\n            0x298 /* \"we have something in the queue that generates this event\" */);\n\n        assert((this.currentBatchClientId === undefined) === (this.pauseSequenceNumber === undefined),\n            0x299 /* \"non-synchronized state\" */);\n\n        const metadata = message.metadata as IRuntimeMessageMetadata;\n        const batchMetadata = metadata?.batch;\n\n        // Protocol messages are never part of a runtime batch of messages\n        if (!isUnpackedRuntimeMessage(message)) {\n            // Protocol messages should never show up in the middle of the batch!\n            assert(this.currentBatchClientId === undefined, 0x29a /* \"System message in the middle of batch!\" */);\n            assert(batchMetadata === undefined, 0x29b /* \"system op in a batch?\" */);\n            assert(!this.localPaused, 0x29c /* \"we should be processing ops when there is no active batch\" */);\n            return;\n        }\n\n        if (this.currentBatchClientId === undefined && batchMetadata === undefined) {\n            assert(!this.localPaused, 0x29d /* \"we should be processing ops when there is no active batch\" */);\n            return;\n        }\n\n        // If the client ID changes then we can move the pause point. If it stayed the same then we need to check.\n        // If batchMetadata is not undefined then if it's true we've begun a new batch - if false we've ended\n        // the previous one\n        if (this.currentBatchClientId !== undefined || batchMetadata === false) {\n            if (this.currentBatchClientId !== message.clientId) {\n                // \"Batch not closed, yet message from another client!\"\n                throw new DataCorruptionError(\n                    \"OpBatchIncomplete\",\n                    {\n                        runtimeVersion: pkgVersion,\n                        batchClientId: this.currentBatchClientId,\n                        ...extractSafePropertiesFromMessage(message),\n                    });\n            }\n        }\n\n        // The queue is\n        // 1. paused only when the next message to be processed is the beginning of a batch. Done in two places:\n        //    - in afterOpProcessing() - processing ops until reaching start of incomplete batch\n        //    - here (batchMetadata == false below), when queue was empty and start of batch showed up.\n        // 2. resumed when batch end comes in (batchMetadata === true case below)\n\n        if (batchMetadata) {\n            assert(this.currentBatchClientId === undefined, 0x29e /* \"there can't be active batch\" */);\n            assert(!this.localPaused, 0x29f /* \"we should be processing ops when there is no active batch\" */);\n            this.pauseSequenceNumber = message.sequenceNumber;\n            this.currentBatchClientId = message.clientId;\n            // Start of the batch\n            // Only pause processing if queue has no other ops!\n            // If there are any other ops in the queue, processing will be stopped when they are processed!\n            if (this.deltaManager.inbound.length === 1) {\n                this.pauseQueue();\n            }\n        } else if (batchMetadata === false) {\n            assert(this.pauseSequenceNumber !== undefined, 0x2a0 /* \"batch presence was validated above\" */);\n            // Batch is complete, we can process it!\n            this.resumeQueue(this.pauseSequenceNumber, message);\n            this.pauseSequenceNumber = undefined;\n            this.currentBatchClientId = undefined;\n        } else {\n            // Continuation of current batch. Do nothing\n            assert(this.currentBatchClientId !== undefined, 0x2a1 /* \"logic error\" */);\n        }\n    }\n}\n\n/**\n * This class has the following responsibilities:\n * 1. It tracks batches as we process ops and raises \"batchBegin\" and \"batchEnd\" events.\n *    As part of it, it validates batch correctness (i.e. no system ops in the middle of batch)\n * 2. It creates instance of ScheduleManagerCore that ensures we never start processing ops from batch\n *    unless all ops of the batch are in.\n */\nexport class ScheduleManager {\n    private readonly deltaScheduler: DeltaScheduler;\n    private batchClientId: string | undefined;\n    private hitError = false;\n\n    constructor(\n        private readonly deltaManager: IDeltaManager<ISequencedDocumentMessage, IDocumentMessage>,\n        private readonly emitter: EventEmitter,\n        private readonly logger: ITelemetryLogger,\n    ) {\n        this.deltaScheduler = new DeltaScheduler(\n            this.deltaManager,\n            ChildLogger.create(this.logger, \"DeltaScheduler\"),\n        );\n        void new ScheduleManagerCore(deltaManager, logger);\n    }\n\n    public beforeOpProcessing(message: ISequencedDocumentMessage) {\n        if (this.batchClientId !== message.clientId) {\n            assert(this.batchClientId === undefined,\n                0x2a2 /* \"Batch is interrupted by other client op. Should be caught by trackPending()\" */);\n\n            // This could be the beginning of a new batch or an individual message.\n            this.emitter.emit(\"batchBegin\", message);\n            this.deltaScheduler.batchBegin(message);\n\n            const batch = (message?.metadata as IRuntimeMessageMetadata)?.batch;\n            if (batch) {\n                this.batchClientId = message.clientId;\n            } else {\n                this.batchClientId = undefined;\n            }\n        }\n    }\n\n    public afterOpProcessing(error: any | undefined, message: ISequencedDocumentMessage) {\n        // If this is no longer true, we need to revisit what we do where we set this.hitError.\n        assert(!this.hitError, 0x2a3 /* \"container should be closed on any error\" */);\n\n        if (error) {\n            // We assume here that loader will close container and stop processing all future ops.\n            // This is implicit dependency. If this flow changes, this code might no longer be correct.\n            this.hitError = true;\n            this.batchClientId = undefined;\n            this.emitter.emit(\"batchEnd\", error, message);\n            this.deltaScheduler.batchEnd(message);\n            return;\n        }\n\n        const batch = (message?.metadata as IRuntimeMessageMetadata)?.batch;\n        // If no batchClientId has been set then we're in an individual batch. Else, if we get\n        // batch end metadata, this is end of the current batch.\n        if (this.batchClientId === undefined || batch === false) {\n            this.batchClientId = undefined;\n            this.emitter.emit(\"batchEnd\", undefined, message);\n            this.deltaScheduler.batchEnd(message);\n            return;\n        }\n    }\n}\n\n/**\n * Legacy ID for the built-in AgentScheduler.  To minimize disruption while removing it, retaining this as a\n * special-case for document dirty state.  Ultimately we should have no special-cases from the\n * ContainerRuntime's perspective.\n */\nexport const agentSchedulerId = \"_scheduler\";\n\n// safely check navigator and get the hardware spec value\nexport function getDeviceSpec() {\n    try {\n        if (typeof navigator === \"object\" && navigator !== null) {\n            return {\n                deviceMemory: (navigator as any).deviceMemory,\n                hardwareConcurrency: navigator.hardwareConcurrency,\n            };\n        }\n    } catch {\n    }\n    return {};\n}\n\n/**\n * Represents the runtime of the container. Contains helper functions/state of the container.\n * It will define the store level mappings.\n */\nexport class ContainerRuntime extends TypedEventEmitter<IContainerRuntimeEvents>\n    implements\n    IContainerRuntime,\n    IGarbageCollectionRuntime,\n    IRuntime,\n    ISummarizerRuntime,\n    ISummarizerInternalsProvider {\n    public get IContainerRuntime() { return this; }\n    public get IFluidRouter() { return this; }\n\n    /**\n     * Load the stores from a snapshot and returns the runtime.\n     * @param context - Context of the container.\n     * @param registryEntries - Mapping to the stores.\n     * @param requestHandler - Request handlers for the container runtime\n     * @param runtimeOptions - Additional options to be passed to the runtime\n     * @param existing - (optional) When loading from an existing snapshot. Precedes context.existing if provided\n     */\n    public static async load(\n        context: IContainerContext,\n        registryEntries: NamedFluidDataStoreRegistryEntries,\n        requestHandler?: (request: IRequest, runtime: IContainerRuntime) => Promise<IResponse>,\n        runtimeOptions: IContainerRuntimeOptions = {},\n        containerScope: FluidObject = context.scope,\n        existing?: boolean,\n    ): Promise<ContainerRuntime> {\n        // If taggedLogger exists, use it. Otherwise, wrap the vanilla logger:\n        // back-compat: Remove the TaggedLoggerAdapter fallback once all the host are using loader > 0.45\n        const backCompatContext: IContainerContext | OldContainerContextWithLogger = context;\n        const passLogger = backCompatContext.taggedLogger ??\n            new TaggedLoggerAdapter((backCompatContext as OldContainerContextWithLogger).logger);\n        const logger = ChildLogger.create(passLogger, undefined, {\n            all: {\n                runtimeVersion: pkgVersion,\n            },\n        });\n\n        const {\n            summaryOptions = {},\n            gcOptions = {},\n            loadSequenceNumberVerification = \"close\",\n            useDataStoreAliasing = false,\n            flushMode = defaultFlushMode,\n            enableOfflineLoad = false,\n        } = runtimeOptions;\n\n        const pendingRuntimeState = context.pendingLocalState as IPendingRuntimeState | undefined;\n        const baseSnapshot: ISnapshotTree | undefined = pendingRuntimeState?.baseSnapshot ?? context.baseSnapshot;\n        const storage = !pendingRuntimeState ?\n            context.storage :\n            new SerializedSnapshotStorage(() => { return context.storage; }, pendingRuntimeState.snapshotBlobs);\n\n        const registry = new FluidDataStoreRegistry(registryEntries);\n\n        const tryFetchBlob = async <T>(blobName: string): Promise<T | undefined> => {\n            const blobId = baseSnapshot?.blobs[blobName];\n            if (baseSnapshot && blobId) {\n                // IContainerContext storage api return type still has undefined in 0.39 package version.\n                // So once we release 0.40 container-defn package we can remove this check.\n                assert(storage !== undefined, 0x1f5 /* \"Attached state should have storage\" */);\n                return readAndParse<T>(storage, blobId);\n            }\n        };\n\n        const [chunks, metadata, electedSummarizerData, aliases] = await Promise.all([\n            tryFetchBlob<[string, string[]][]>(chunksBlobName),\n            tryFetchBlob<IContainerRuntimeMetadata>(metadataBlobName),\n            tryFetchBlob<ISerializedElection>(electedSummarizerBlobName),\n            tryFetchBlob<[string, string][]>(aliasBlobName),\n        ]);\n\n        const loadExisting = existing === true || context.existing === true;\n\n        // read snapshot blobs needed for BlobManager to load\n        const blobManagerSnapshot = await BlobManager.load(\n            baseSnapshot?.trees[blobsTreeName],\n            async (id) => {\n                // IContainerContext storage api return type still has undefined in 0.39 package version.\n                // So once we release 0.40 container-defn package we can remove this check.\n                assert(storage !== undefined, 0x256 /* \"storage undefined in attached container\" */);\n                return readAndParse(storage, id);\n            },\n        );\n\n        // Verify summary runtime sequence number matches protocol sequence number.\n        const runtimeSequenceNumber = metadata?.message?.sequenceNumber;\n        // When we load with pending state, we reuse an old snapshot so we don't expect these numbers to match\n        if (!pendingRuntimeState && runtimeSequenceNumber !== undefined) {\n            const protocolSequenceNumber = context.deltaManager.initialSequenceNumber;\n            // Unless bypass is explicitly set, then take action when sequence numbers mismatch.\n            if (loadSequenceNumberVerification !== \"bypass\" && runtimeSequenceNumber !== protocolSequenceNumber) {\n                // \"Load from summary, runtime metadata sequenceNumber !== initialSequenceNumber\"\n                const error = new DataCorruptionError(\n                    // pre-0.58 error message: SummaryMetadataMismatch\n                    \"Summary metadata mismatch\",\n                    { runtimeVersion: pkgVersion, runtimeSequenceNumber, protocolSequenceNumber },\n                );\n\n                if (loadSequenceNumberVerification === \"log\") {\n                    logger.sendErrorEvent({ eventName: \"SequenceNumberMismatch\" }, error);\n                } else {\n                    context.closeFn(error);\n                }\n            }\n        }\n\n        const runtime = new ContainerRuntime(\n            context,\n            registry,\n            metadata,\n            electedSummarizerData,\n            chunks ?? [],\n            aliases ?? [],\n            {\n                summaryOptions,\n                gcOptions,\n                loadSequenceNumberVerification,\n                useDataStoreAliasing,\n                flushMode,\n                enableOfflineLoad,\n            },\n            containerScope,\n            logger,\n            loadExisting,\n            blobManagerSnapshot,\n            storage,\n            requestHandler,\n        );\n\n        if (pendingRuntimeState) {\n            await runtime.processSavedOps(pendingRuntimeState);\n            // delete these once runtime has seen them to save space\n            pendingRuntimeState.savedOps = [];\n        }\n\n        await runtime.getSnapshotBlobs();\n\n        return runtime;\n    }\n\n    public get options(): ILoaderOptions {\n        return this.context.options;\n    }\n\n    public get clientId(): string | undefined {\n        return this.context.clientId;\n    }\n\n    public get clientDetails(): IClientDetails {\n        return this.context.clientDetails;\n    }\n\n    public get deltaManager(): IDeltaManager<ISequencedDocumentMessage, IDocumentMessage> {\n        return this.context.deltaManager;\n    }\n\n    public get storage(): IDocumentStorageService {\n        return this._storage;\n    }\n\n    public get reSubmitFn(): (\n        type: ContainerMessageType,\n        content: any,\n        localOpMetadata: unknown,\n        opMetadata: Record<string, unknown> | undefined,\n    ) => void {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        return this.reSubmit;\n    }\n\n    public get closeFn(): (error?: ICriticalContainerError) => void {\n        return this.context.closeFn;\n    }\n\n    public get flushMode(): FlushMode {\n        return this._flushMode;\n    }\n\n    public get scope(): FluidObject {\n        return this.containerScope;\n    }\n\n    public get IFluidDataStoreRegistry(): IFluidDataStoreRegistry {\n        return this.registry;\n    }\n\n    public get attachState(): AttachState {\n        return this.context.attachState;\n    }\n\n    public get IFluidHandleContext(): IFluidHandleContext {\n        return this.handleContext;\n    }\n    private readonly handleContext: ContainerFluidHandleContext;\n\n    // internal logger for ContainerRuntime. Use this.logger for stores, summaries, etc.\n    private readonly mc: MonitoringContext;\n    private readonly summarizerClientElection?: SummarizerClientElection;\n    /**\n     * summaryManager will only be created if this client is permitted to spawn a summarizing client\n     * It is created only by interactive client, i.e. summarizer client, as well as non-interactive bots\n     * do not create it (see SummarizerClientElection.clientDetailsPermitElection() for details)\n     */\n    private readonly summaryManager?: SummaryManager;\n    private readonly summaryCollection: SummaryCollection;\n\n    private readonly summarizerNode: IRootSummarizerNodeWithGC;\n    private readonly _aliasingEnabled: boolean;\n    private readonly _maxOpSizeInBytes: number;\n\n    private readonly maxConsecutiveReconnects: number;\n    private readonly defaultMaxConsecutiveReconnects = 15;\n\n    private _orderSequentiallyCalls: number = 0;\n    private _flushMode: FlushMode;\n    private needsFlush = false;\n    private flushTrigger = false;\n\n    private _connected: boolean;\n\n    private readonly savedOps: ISequencedDocumentMessage[] = [];\n    private baseSnapshotBlobs?: ISerializedBaseSnapshotBlobs;\n\n    private consecutiveReconnects = 0;\n\n    public get connected(): boolean {\n        return this._connected;\n    }\n\n    /** clientId of parent (non-summarizing) container that owns summarizer container */\n    public get summarizerClientId(): string | undefined {\n        return this.summarizerClientElection?.electedClientId;\n    }\n\n    private _disposed = false;\n    public get disposed() { return this._disposed; }\n\n    private dirtyContainer: boolean;\n    private emitDirtyDocumentEvent = true;\n\n    private readonly defaultTelemetrySignalSampleCount = 100;\n    private _perfSignalData: IPerfSignalReport = {\n        signalsLost: 0,\n        signalSequenceNumber: 0,\n        signalTimestamp: 0,\n        trackingSignalSequenceNumber: undefined,\n    };\n\n    /**\n     * Summarizer is responsible for coordinating when to send generate and send summaries.\n     * It is the main entry point for summary work.\n     * It is created only by summarizing container (i.e. one with clientType === \"summarizer\")\n     */\n    private readonly _summarizer?: Summarizer;\n    private readonly deltaSender: IDeltaSender;\n    private readonly scheduleManager: ScheduleManager;\n    private readonly blobManager: BlobManager;\n    private readonly pendingStateManager: PendingStateManager;\n    private readonly garbageCollector: IGarbageCollector;\n\n    // Local copy of incomplete received chunks.\n    private readonly chunkMap: Map<string, string[]>;\n\n    private readonly dataStores: DataStores;\n\n    /**\n     * True if generating summaries with isolated channels is\n     * explicitly disabled. This only affects how summaries are written,\n     * and is the single source of truth for this container.\n     */\n    public readonly disableIsolatedChannels: boolean;\n    /** The last message processed at the time of the last summary. */\n    private messageAtLastSummary: ISummaryMetadataMessage | undefined;\n\n    private get summarizer(): Summarizer {\n        assert(this._summarizer !== undefined, 0x257 /* \"This is not summarizing container\" */);\n        return this._summarizer;\n    }\n\n    private readonly summariesDisabled: boolean;\n    private isSummariesDisabled(): boolean {\n        // back-compat: disableSummaries was moved from ISummaryRuntimeOptions\n        //   to ISummaryConfiguration in 0.60.\n        if (this.runtimeOptions.summaryOptions.disableSummaries === true) {\n            return true;\n        }\n        return this.summaryConfiguration.state === \"disabled\";\n    }\n\n    private readonly heuristicsDisabled: boolean;\n    private isHeuristicsDisabled(): boolean {\n        // back-compat: disableHeuristics was moved from ISummarizerOptions\n        //   to ISummaryConfiguration in 0.60.\n        if (this.runtimeOptions.summaryOptions.summarizerOptions?.disableHeuristics === true) {\n            return true;\n        }\n        return this.summaryConfiguration.state === \"disableHeuristics\";\n    }\n\n    private readonly summarizerClientElectionEnabled: boolean;\n    private isSummarizerClientElectionEnabled(): boolean {\n        if (this.mc.config.getBoolean(\"Fluid.ContainerRuntime.summarizerClientElection\")) {\n            return this.mc.config.getBoolean(\"Fluid.ContainerRuntime.summarizerClientElection\") ?? true;\n        }\n        // back-compat: summarizerClientElection was moved from ISummaryRuntimeOptions\n        //   to ISummaryConfiguration in 0.60.\n        if (this.runtimeOptions.summaryOptions.summarizerClientElection === true) {\n            return true;\n        }\n        if (this.summaryConfiguration.state !== \"disabled\") {\n            return this.summaryConfiguration.summarizerClientElection === true;\n        } else {\n            return false;\n        }\n    }\n    private readonly maxOpsSinceLastSummary: number;\n    private getMaxOpsSinceLastSummary(): number {\n        // back-compat: maxOpsSinceLastSummary was moved from ISummaryRuntimeOptions\n        //   to ISummaryConfiguration in 0.60.\n        if (this.runtimeOptions.summaryOptions.maxOpsSinceLastSummary !== undefined) {\n            return this.runtimeOptions.summaryOptions.maxOpsSinceLastSummary;\n        }\n        if (this.summaryConfiguration.state !== \"disabled\") {\n            return this.summaryConfiguration.maxOpsSinceLastSummary;\n        } else {\n            return 0;\n        }\n    }\n\n    private readonly initialSummarizerDelayMs: number;\n    private getInitialSummarizerDelayMs(): number {\n        // back-compat: initialSummarizerDelayMs was moved from ISummaryRuntimeOptions\n        //   to ISummaryConfiguration in 0.60.\n        if (this.runtimeOptions.summaryOptions.initialSummarizerDelayMs !== undefined) {\n            return this.runtimeOptions.summaryOptions.initialSummarizerDelayMs;\n        }\n        if (this.summaryConfiguration.state !== \"disabled\") {\n            return this.summaryConfiguration.initialSummarizerDelayMs;\n        } else {\n            return 0;\n        }\n    }\n\n    private readonly createContainerMetadata: ICreateContainerMetadata;\n    /**\n     * The summary number of the next summary that will be generated for this container. This is incremented every time\n     * a summary is generated.\n     */\n    private nextSummaryNumber: number;\n    private readonly opTracker: OpTracker;\n\n    private constructor(\n        private readonly context: IContainerContext,\n        private readonly registry: IFluidDataStoreRegistry,\n        metadata: IContainerRuntimeMetadata | undefined,\n        electedSummarizerData: ISerializedElection | undefined,\n        chunks: [string, string[]][],\n        dataStoreAliasMap: [string, string][],\n        private readonly runtimeOptions: Readonly<Required<IContainerRuntimeOptions>>,\n        private readonly containerScope: FluidObject,\n        public readonly logger: ITelemetryLogger,\n        existing: boolean,\n        blobManagerSnapshot: IBlobManagerLoadInfo,\n        private readonly _storage: IDocumentStorageService,\n        private readonly requestHandler?: (request: IRequest, runtime: IContainerRuntime) => Promise<IResponse>,\n        private readonly summaryConfiguration: ISummaryConfiguration = {\n            // the defaults\n            ...DefaultSummaryConfiguration,\n            // the runtime configuration overrides\n            ...runtimeOptions.summaryOptions?.summaryConfigOverrides,\n        },\n    ) {\n        super();\n        this.messageAtLastSummary = metadata?.message;\n\n        // Default to false (enabled).\n        this.disableIsolatedChannels = this.runtimeOptions.summaryOptions.disableIsolatedChannels ?? false;\n\n        this._connected = this.context.connected;\n        this.chunkMap = new Map<string, string[]>(chunks);\n\n        this.handleContext = new ContainerFluidHandleContext(\"\", this);\n\n        this.mc = loggerToMonitoringContext(\n            ChildLogger.create(this.logger, \"ContainerRuntime\"));\n\n        this.summariesDisabled = this.isSummariesDisabled();\n        this.heuristicsDisabled = this.isHeuristicsDisabled();\n        this.summarizerClientElectionEnabled = this.isSummarizerClientElectionEnabled();\n        this.maxOpsSinceLastSummary = this.getMaxOpsSinceLastSummary();\n        this.initialSummarizerDelayMs = this.getInitialSummarizerDelayMs();\n\n        this._aliasingEnabled =\n            (this.mc.config.getBoolean(useDataStoreAliasingKey) ?? false) ||\n            (runtimeOptions.useDataStoreAliasing ?? false);\n\n        this._maxOpSizeInBytes = (this.mc.config.getNumber(maxOpSizeInBytesKey) ?? defaultMaxOpSizeInBytes);\n        this.maxConsecutiveReconnects =\n            this.mc.config.getNumber(maxConsecutiveReconnectsKey) ?? this.defaultMaxConsecutiveReconnects;\n\n        this._flushMode = runtimeOptions.flushMode;\n\n        const pendingRuntimeState = context.pendingLocalState as IPendingRuntimeState | undefined;\n        const baseSnapshot: ISnapshotTree | undefined = pendingRuntimeState?.baseSnapshot ?? context.baseSnapshot;\n\n        this.garbageCollector = GarbageCollector.create({\n            runtime: this,\n            gcOptions: this.runtimeOptions.gcOptions,\n            baseSnapshot,\n            baseLogger: this.mc.logger,\n            existing,\n            metadata,\n            isSummarizerClient: this.context.clientDetails.type === summarizerClientType,\n            getNodePackagePath: async (nodePath: string) => this.getGCNodePackagePath(nodePath),\n            getLastSummaryTimestampMs: () => this.messageAtLastSummary?.timestamp,\n            readAndParseBlob: async <T>(id: string) => readAndParse<T>(this.storage, id),\n        });\n\n        const loadedFromSequenceNumber = this.deltaManager.initialSequenceNumber;\n        this.summarizerNode = createRootSummarizerNodeWithGC(\n            ChildLogger.create(this.logger, \"SummarizerNode\"),\n            // Summarize function to call when summarize is called. Summarizer node always tracks summary state.\n            async (fullTree: boolean, trackState: boolean, telemetryContext?: ITelemetryContext) =>\n                this.summarizeInternal(fullTree, trackState, telemetryContext),\n            // Latest change sequence number, no changes since summary applied yet\n            loadedFromSequenceNumber,\n            // Summary reference sequence number, undefined if no summary yet\n            baseSnapshot ? loadedFromSequenceNumber : undefined,\n            {\n                // Must set to false to prevent sending summary handle which would be pointing to\n                // a summary with an older protocol state.\n                canReuseHandle: false,\n                // Must set to true to throw on any data stores failure that was too severe to be handled.\n                // We also are not decoding the base summaries at the root.\n                throwOnFailure: true,\n                // If GC should not run, let the summarizer node know so that it does not track GC state.\n                gcDisabled: !this.garbageCollector.shouldRunGC,\n            },\n        );\n\n        if (baseSnapshot) {\n            this.summarizerNode.loadBaseSummaryWithoutDifferential(baseSnapshot);\n        }\n\n        this.dataStores = new DataStores(\n            getSummaryForDatastores(baseSnapshot, metadata),\n            this,\n            (attachMsg) => this.submit(ContainerMessageType.Attach, attachMsg),\n            (id: string, createParam: CreateChildSummarizerNodeParam) => (\n                summarizeInternal: SummarizeInternalFn,\n                getGCDataFn: (fullGC?: boolean) => Promise<IGarbageCollectionData>,\n                getBaseGCDetailsFn: () => Promise<IGarbageCollectionDetailsBase>,\n            ) => this.summarizerNode.createChild(\n                summarizeInternal,\n                id,\n                createParam,\n                undefined,\n                getGCDataFn,\n                getBaseGCDetailsFn,\n            ),\n            (id: string) => this.summarizerNode.deleteChild(id),\n            this.mc.logger,\n            async () => this.garbageCollector.getBaseGCDetails(),\n            (path: string, timestampMs: number, packagePath?: readonly string[]) => this.garbageCollector.nodeUpdated(\n                path,\n                \"Changed\",\n                timestampMs,\n                packagePath,\n            ),\n            new Map<string, string>(dataStoreAliasMap),\n            this.garbageCollector.writeDataAtRoot,\n        );\n\n        this.blobManager = new BlobManager(\n            this.handleContext,\n            blobManagerSnapshot,\n            () => this.storage,\n            (blobId: string) => this.submit(ContainerMessageType.BlobAttach, undefined, undefined, { blobId }),\n            (blobPath: string) => this.garbageCollector.nodeUpdated(blobPath, \"Loaded\"),\n            this,\n            this.logger,\n        );\n\n        this.scheduleManager = new ScheduleManager(\n            context.deltaManager,\n            this,\n            ChildLogger.create(this.logger, \"ScheduleManager\"),\n        );\n\n        this.deltaSender = this.deltaManager;\n\n        this.pendingStateManager = new PendingStateManager(\n            {\n                applyStashedOp: this.applyStashedOp.bind(this),\n                clientId: () => this.clientId,\n                close: this.closeFn,\n                connected: () => this.connected,\n                flush: this.flush.bind(this),\n                flushMode: () => this.flushMode,\n                reSubmit: this.reSubmit.bind(this),\n                rollback: this.rollback.bind(this),\n                setFlushMode: (mode) => this.setFlushMode(mode),\n            },\n            this._flushMode,\n            pendingRuntimeState?.pending);\n\n        this.context.quorum.on(\"removeMember\", (clientId: string) => {\n            this.clearPartialChunks(clientId);\n        });\n\n        this.summaryCollection = new SummaryCollection(this.deltaManager, this.logger);\n\n        this.dirtyContainer = this.context.attachState !== AttachState.Attached\n            || this.pendingStateManager.hasPendingMessages();\n        this.context.updateDirtyContainerState(this.dirtyContainer);\n\n        if (this.summariesDisabled) {\n            this.mc.logger.sendTelemetryEvent({ eventName: \"SummariesDisabled\" });\n        } else {\n            const orderedClientLogger = ChildLogger.create(this.logger, \"OrderedClientElection\");\n            const orderedClientCollection = new OrderedClientCollection(\n                orderedClientLogger,\n                this.context.deltaManager,\n                this.context.quorum,\n            );\n            const orderedClientElectionForSummarizer = new OrderedClientElection(\n\n                orderedClientLogger,\n                orderedClientCollection,\n                electedSummarizerData ?? this.context.deltaManager.lastSequenceNumber,\n                SummarizerClientElection.isClientEligible,\n            );\n\n            this.summarizerClientElection = new SummarizerClientElection(\n                orderedClientLogger,\n                this.summaryCollection,\n                orderedClientElectionForSummarizer,\n                this.maxOpsSinceLastSummary,\n                this.summarizerClientElectionEnabled,\n            );\n\n            if (this.context.clientDetails.type === summarizerClientType) {\n                this._summarizer = new Summarizer(\n                    \"/_summarizer\",\n                    this /* ISummarizerRuntime */,\n                    () => this.summaryConfiguration,\n                    this /* ISummarizerInternalsProvider */,\n                    this.handleContext,\n                    this.summaryCollection,\n                    async (runtime: IConnectableRuntime) => RunWhileConnectedCoordinator.create(runtime),\n                );\n            } else if (SummarizerClientElection.clientDetailsPermitElection(this.context.clientDetails)) {\n                // Only create a SummaryManager and SummarizerClientElection\n                // if summaries are enabled and we are not the summarizer client.\n                const defaultAction = () => {\n                    if (this.summaryCollection.opsSinceLastAck > this.maxOpsSinceLastSummary) {\n                        this.logger.sendErrorEvent({ eventName: \"SummaryStatus:Behind\" });\n                        // unregister default to no log on every op after falling behind\n                        // and register summary ack handler to re-register this handler\n                        // after successful summary\n                        this.summaryCollection.once(MessageType.SummaryAck, () => {\n                            this.logger.sendTelemetryEvent({ eventName: \"SummaryStatus:CaughtUp\" });\n                            // we've caught up, so re-register the default action to monitor for\n                            // falling behind, and unregister ourself\n                            this.summaryCollection.on(\"default\", defaultAction);\n                        });\n                        this.summaryCollection.off(\"default\", defaultAction);\n                    }\n                };\n\n                this.summaryCollection.on(\"default\", defaultAction);\n\n                // Create the SummaryManager and mark the initial state\n                this.summaryManager = new SummaryManager(\n                    this.summarizerClientElection,\n                    this, // IConnectedState\n                    this.summaryCollection,\n                    this.logger,\n                    this.formRequestSummarizerFn(this.context.loader),\n                    new Throttler(\n                        60 * 1000, // 60 sec delay window\n                        30 * 1000, // 30 sec max delay\n                        // throttling function increases exponentially (0ms, 40ms, 80ms, 160ms, etc)\n                        formExponentialFn({ coefficient: 20, initialDelay: 0 }),\n                    ),\n                    {\n                        initialDelayMs: this.initialSummarizerDelayMs,\n                    },\n                    this.heuristicsDisabled,\n                );\n                this.summaryManager.start();\n            }\n        }\n\n        this.deltaManager.on(\"readonly\", (readonly: boolean) => {\n            // we accumulate ops while being in read-only state.\n            // once user gets write permissions and we have active connection, flush all pending ops.\n            assert(readonly === this.deltaManager.readOnlyInfo.readonly,\n                0x124 /* \"inconsistent readonly property/event state\" */);\n\n            // We need to be very careful with when we (re)send pending ops, to ensure that we only send ops\n            // when we either never send an op, or attempted to send it but we know for sure it was not\n            // sequenced by server and will never be sequenced (i.e. was lost)\n            // For loss of connection, we wait for our own \"join\" op and use it a a barrier to know all the\n            // ops that made it from previous connection, before switching clientId and raising \"connected\" event\n            // But with read-only permissions, if we transition between read-only and r/w states while on same\n            // connection, then we have no good signal to tell us when it's safe to send ops we accumulated while\n            // being in read-only state.\n            // For that reason, we support getting to read-only state only when disconnected. This ensures that we\n            // can rely on same safety mechanism and resend ops only when we establish new connection.\n            // This is applicable for read-only permissions (event is raised before connection is properly registered),\n            // but it's an extra requirement for Container.forceReadonly() API\n            assert(!readonly || !this.connected, 0x125 /* \"Unsafe to transition to read-only state!\" */);\n\n            this.replayPendingStates();\n        });\n\n        // logging hardware telemetry\n        logger.sendTelemetryEvent({\n            eventName: \"DeviceSpec\",\n            ...getDeviceSpec(),\n        });\n\n        let loadSummaryNumber: number;\n        // Get the container creation metadata. For new container, we initialize these. For existing containers,\n        // get the values from the metadata blob.\n        if (existing) {\n            this.createContainerMetadata = {\n                createContainerRuntimeVersion: metadata?.createContainerRuntimeVersion,\n                createContainerTimestamp: metadata?.createContainerTimestamp,\n            };\n            // back-compat 0.59.3000 - Older document may either write summaryCount or not write it at all. If it does\n            // not write it, initialize summaryNumber to 0.\n            loadSummaryNumber = metadata?.summaryNumber ?? metadata?.summaryCount ?? 0;\n        } else {\n            this.createContainerMetadata = {\n                createContainerRuntimeVersion: pkgVersion,\n                createContainerTimestamp: Date.now(),\n            };\n            loadSummaryNumber = 0;\n        }\n        this.nextSummaryNumber = loadSummaryNumber + 1;\n\n        this.logger.sendTelemetryEvent({\n            eventName: \"ContainerLoadStats\",\n            ...this.createContainerMetadata,\n            ...this.dataStores.containerLoadStats,\n            summaryNumber: loadSummaryNumber,\n            summaryFormatVersion: metadata?.summaryFormatVersion,\n            disableIsolatedChannels: metadata?.disableIsolatedChannels,\n            gcVersion: metadata?.gcFeature,\n        });\n\n        ReportOpPerfTelemetry(this.context.clientId, this.deltaManager, this.logger);\n        BindBatchTracker(this, this.logger);\n        this.opTracker = new OpTracker(this.deltaManager, this.mc.config.getBoolean(disableOpTrackingKey) === true);\n    }\n\n    public dispose(error?: Error): void {\n        if (this._disposed) {\n            return;\n        }\n        this._disposed = true;\n\n        this.logger.sendTelemetryEvent({\n            eventName: \"ContainerRuntimeDisposed\",\n            isDirty: this.isDirty,\n            lastSequenceNumber: this.deltaManager.lastSequenceNumber,\n            attachState: this.attachState,\n        }, error);\n\n        if (this.summaryManager !== undefined) {\n            this.summaryManager.dispose();\n        }\n        this.garbageCollector.dispose();\n        this._summarizer?.dispose();\n        this.dataStores.dispose();\n        this.pendingStateManager.dispose();\n        this.emit(\"dispose\");\n        this.removeAllListeners();\n    }\n\n    public get IFluidTokenProvider() {\n        if (this.options?.intelligence) {\n            // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n            return {\n                intelligence: this.options.intelligence,\n            } as IFluidTokenProvider;\n        }\n        return undefined;\n    }\n\n    /**\n     * Notifies this object about the request made to the container.\n     * @param request - Request made to the handler.\n     */\n    public async request(request: IRequest): Promise<IResponse> {\n        try {\n            const parser = RequestParser.create(request);\n            const id = parser.pathParts[0];\n\n            if (id === \"_summarizer\" && parser.pathParts.length === 1) {\n                if (this._summarizer !== undefined) {\n                    return {\n                        status: 200,\n                        mimeType: \"fluid/object\",\n                        value: this.summarizer,\n                    };\n                }\n                return create404Response(request);\n            }\n            if (this.requestHandler !== undefined) {\n                return this.requestHandler(parser, this);\n            }\n\n            return create404Response(request);\n        } catch (error) {\n            return exceptionToResponse(error);\n        }\n    }\n\n    /**\n     * Resolves URI representing handle\n     * @param request - Request made to the handler.\n     */\n    public async resolveHandle(request: IRequest): Promise<IResponse> {\n        try {\n            const requestParser = RequestParser.create(request);\n            const id = requestParser.pathParts[0];\n\n            if (id === \"_channels\") {\n                return this.resolveHandle(requestParser.createSubRequest(1));\n            }\n\n            if (id === BlobManager.basePath && requestParser.isLeaf(2)) {\n                const handle = await this.blobManager.getBlob(requestParser.pathParts[1]);\n                if (handle) {\n                    return {\n                        status: 200,\n                        mimeType: \"fluid/object\",\n                        value: handle.get(),\n                    };\n                } else {\n                    return create404Response(request);\n                }\n            } else if (requestParser.pathParts.length > 0) {\n                const dataStore = await this.getDataStoreFromRequest(id, request);\n                const subRequest = requestParser.createSubRequest(1);\n                // We always expect createSubRequest to include a leading slash, but asserting here to protect against\n                // unintentionally modifying the url if that changes.\n                assert(subRequest.url.startsWith(\"/\"),\n                    0x126 /* \"Expected createSubRequest url to include a leading slash\" */);\n                return dataStore.IFluidRouter.request(subRequest);\n            }\n\n            return create404Response(request);\n        } catch (error) {\n            return exceptionToResponse(error);\n        }\n    }\n\n    private internalId(maybeAlias: string): string {\n        return this.dataStores.aliases().get(maybeAlias) ?? maybeAlias;\n    }\n\n    private async getDataStoreFromRequest(id: string, request: IRequest): Promise<IFluidRouter> {\n        const wait = typeof request.headers?.[RuntimeHeaders.wait] === \"boolean\"\n            ? request.headers?.[RuntimeHeaders.wait]\n            : true;\n\n        const internalId = this.internalId(id);\n        const dataStoreContext = await this.dataStores.getDataStore(internalId, wait);\n\n        /**\n         * If GC should run and this an external app request with \"externalRequest\" header, we need to return\n         * an error if the data store being requested is marked as unreferenced as per the data store's base\n         * GC data.\n         *\n         * This is a workaround to handle scenarios where a data store shared with an external app is deleted\n         * and marked as unreferenced by GC. Returning an error will fail to load the data store for the app.\n         */\n        if (request.headers?.[RuntimeHeaders.externalRequest] && this.garbageCollector.shouldRunGC) {\n            // The data store is referenced if used routes in the base summary has a route to self.\n            // Older documents may not have used routes in the summary. They are considered referenced.\n            const usedRoutes = (await dataStoreContext.getBaseGCDetails()).usedRoutes;\n            if (!(usedRoutes === undefined || usedRoutes.includes(\"\") || usedRoutes.includes(\"/\"))) {\n                throw responseToException(create404Response(request), request);\n            }\n        }\n\n        const dataStoreChannel = await dataStoreContext.realize();\n\n        // Remove query params, leading and trailing slashes from the url. This is done to make sure the format is\n        // the same as GC nodes id.\n        const urlWithoutQuery = trimLeadingAndTrailingSlashes(request.url.split(\"?\")[0]);\n        this.garbageCollector.nodeUpdated(\n            `/${urlWithoutQuery}`,\n            \"Loaded\",\n            undefined /* timestampMs */,\n            dataStoreContext.packagePath,\n            request?.headers,\n        );\n        return dataStoreChannel;\n    }\n\n    /** Adds the container's metadata to the given summary tree. */\n    private addMetadataToSummary(summaryTree: ISummaryTreeWithStats) {\n        const metadata: IContainerRuntimeMetadata = {\n            ...this.createContainerMetadata,\n            // back-compat 0.59.3000: This is renamed to summaryNumber. Can be removed when 0.59.3000 saturates.\n            summaryCount: this.nextSummaryNumber,\n            // Increment the summary number for the next summary that will be generated.\n            summaryNumber: this.nextSummaryNumber++,\n            summaryFormatVersion: 1,\n            disableIsolatedChannels: this.disableIsolatedChannels || undefined,\n            ...this.garbageCollector.getMetadata(),\n            // The last message processed at the time of summary. If there are no new messages, use the message from the\n            // last summary.\n            message: extractSummaryMetadataMessage(this.deltaManager.lastMessage) ?? this.messageAtLastSummary,\n        };\n        addBlobToSummary(summaryTree, metadataBlobName, JSON.stringify(metadata));\n    }\n\n    private addContainerStateToSummary(\n        summaryTree: ISummaryTreeWithStats,\n        fullTree: boolean,\n        trackState: boolean,\n        telemetryContext?: ITelemetryContext,\n    ) {\n        this.addMetadataToSummary(summaryTree);\n\n        if (this.chunkMap.size > 0) {\n            const content = JSON.stringify([...this.chunkMap]);\n            addBlobToSummary(summaryTree, chunksBlobName, content);\n        }\n\n        const dataStoreAliases = this.dataStores.aliases();\n        if (dataStoreAliases.size > 0) {\n            addBlobToSummary(summaryTree, aliasBlobName, JSON.stringify([...dataStoreAliases]));\n        }\n\n        if (this.summarizerClientElection) {\n            const electedSummarizerContent = JSON.stringify(this.summarizerClientElection?.serialize());\n            addBlobToSummary(summaryTree, electedSummarizerBlobName, electedSummarizerContent);\n        }\n\n        const blobManagerSummary = this.blobManager.summarize();\n        // Some storage (like git) doesn't allow empty tree, so we can omit it.\n        // and the blob manager can handle the tree not existing when loading\n        if (Object.keys(blobManagerSummary.summary.tree).length > 0) {\n            addTreeToSummary(summaryTree, blobsTreeName, blobManagerSummary);\n        }\n\n        if (this.garbageCollector.writeDataAtRoot) {\n            const gcSummary = this.garbageCollector.summarize(fullTree, trackState, telemetryContext);\n            if (gcSummary !== undefined) {\n                addSummarizeResultToSummary(summaryTree, gcTreeKey, gcSummary);\n            }\n        }\n    }\n\n    // Track how many times the container tries to reconnect with pending messages.\n    // This happens when the connection state is changed and we reset the counter\n    // when we are able to process a local op or when there are no pending messages.\n    // If this counter reaches a max, it's a good indicator that the container\n    // is not making progress and it is stuck in a retry loop.\n    private shouldContinueReconnecting(): boolean {\n        if (this.maxConsecutiveReconnects <= 0) {\n            // Feature disabled, we never stop reconnecting\n            return true;\n        }\n\n        if (!this.pendingStateManager.hasPendingMessages()) {\n            // If there are no pending messages, we can always reconnect\n            this.resetReconnectCount();\n            return true;\n        }\n\n        if (this.consecutiveReconnects === Math.floor(this.maxConsecutiveReconnects / 2)) {\n            // If we're halfway through the max reconnects, send an event in order\n            // to better identify false positives, if any. If the rate of this event\n            // matches Container Close count below, we can safely cut down\n            // maxConsecutiveReconnects to half.\n            this.mc.logger.sendTelemetryEvent({\n                eventName: \"ReconnectsWithNoProgress\",\n                attempts: this.consecutiveReconnects,\n                pendingMessages: this.pendingStateManager.pendingMessagesCount,\n            });\n        }\n\n        return this.consecutiveReconnects < this.maxConsecutiveReconnects;\n    }\n\n    private resetReconnectCount() {\n        this.consecutiveReconnects = 0;\n    }\n\n    private replayPendingStates() {\n        // We need to be able to send ops to replay states\n        if (!this.canSendOps()) { return; }\n\n        // We need to temporary clear the dirty flags and disable\n        // dirty state change events to detect whether replaying ops\n        // has any effect.\n\n        // Save the old state, reset to false, disable event emit\n        const oldState = this.dirtyContainer;\n        this.dirtyContainer = false;\n\n        assert(this.emitDirtyDocumentEvent, 0x127 /* \"dirty document event not set on replay\" */);\n        this.emitDirtyDocumentEvent = false;\n        let newState: boolean;\n\n        try {\n            // replay the ops\n            this.pendingStateManager.replayPendingStates();\n        } finally {\n            // Save the new start and restore the old state, re-enable event emit\n            newState = this.dirtyContainer;\n            this.dirtyContainer = oldState;\n            this.emitDirtyDocumentEvent = true;\n        }\n\n        // Officially transition from the old state to the new state.\n        this.updateDocumentDirtyState(newState);\n    }\n\n    private async applyStashedOp(type: ContainerMessageType, op: ISequencedDocumentMessage): Promise<unknown> {\n        switch (type) {\n            case ContainerMessageType.FluidDataStoreOp:\n                return this.dataStores.applyStashedOp(op);\n            case ContainerMessageType.Attach:\n                return this.dataStores.applyStashedAttachOp(op as unknown as IAttachMessage);\n            case ContainerMessageType.Alias:\n            case ContainerMessageType.BlobAttach:\n                return;\n            case ContainerMessageType.ChunkedOp:\n                throw new Error(\"chunkedOp not expected here\");\n            case ContainerMessageType.Rejoin:\n                throw new Error(\"rejoin not expected here\");\n            default:\n                unreachableCase(type, `Unknown ContainerMessageType: ${type}`);\n        }\n    }\n\n    public setConnectionState(connected: boolean, clientId?: string) {\n        this.verifyNotClosed();\n\n        // There might be no change of state due to Container calling this API after loading runtime.\n        const changeOfState = this._connected !== connected;\n        const reconnection = changeOfState && connected;\n        this._connected = connected;\n\n        if (!connected) {\n            this._perfSignalData.signalsLost = 0;\n            this._perfSignalData.signalTimestamp = 0;\n            this._perfSignalData.trackingSignalSequenceNumber = undefined;\n        }\n\n        if (reconnection) {\n            this.consecutiveReconnects++;\n\n            if (!this.shouldContinueReconnecting()) {\n                this.closeFn(\n                    // pre-0.58 error message: MaxReconnectsWithNoProgress\n                    DataProcessingError.create(\n                        \"Runtime detected too many reconnects with no progress syncing local ops\",\n                        \"setConnectionState\",\n                        undefined,\n                       {\n                        dataLoss: 1,\n                        attempts: this.consecutiveReconnects,\n                        pendingMessages: this.pendingStateManager.pendingMessagesCount,\n                    }));\n                return;\n            }\n        }\n\n        if (changeOfState) {\n            this.replayPendingStates();\n        }\n\n        this.dataStores.setConnectionState(connected, clientId);\n\n        raiseConnectedEvent(this.mc.logger, this, connected, clientId);\n    }\n\n    public process(messageArg: ISequencedDocumentMessage, local: boolean) {\n        this.verifyNotClosed();\n\n        // If it's not message for runtime, bail out right away.\n        if (!isUnpackedRuntimeMessage(messageArg)) {\n            return;\n        }\n\n        if (this.mc.config.getBoolean(\"enableOfflineLoad\") ?? this.runtimeOptions.enableOfflineLoad) {\n            this.savedOps.push(messageArg);\n        }\n\n        // Do shallow copy of message, as methods below will modify it.\n        // There might be multiple container instances receiving same message\n        // We do not need to make deep copy, as each layer will just replace message.content itself,\n        // but would not modify contents details\n        let message = { ...messageArg };\n\n        // Surround the actual processing of the operation with messages to the schedule manager indicating\n        // the beginning and end. This allows it to emit appropriate events and/or pause the processing of new\n        // messages once a batch has been fully processed.\n        this.scheduleManager.beforeOpProcessing(message);\n\n        try {\n            message = unpackRuntimeMessage(message);\n\n            // Chunk processing must come first given that we will transform the message to the unchunked version\n            // once all pieces are available\n            message = this.processRemoteChunkedMessage(message);\n\n            let localOpMetadata: unknown;\n            if (local) {\n                // Call the PendingStateManager to process local messages.\n                // Do not process local chunked ops until all pieces are available.\n                if (message.type !== ContainerMessageType.ChunkedOp) {\n                    localOpMetadata = this.pendingStateManager.processPendingLocalMessage(message);\n                }\n            }\n\n            // If there are no more pending messages after processing a local message,\n            // the document is no longer dirty.\n            if (!this.pendingStateManager.hasPendingMessages()) {\n                this.updateDocumentDirtyState(false);\n            }\n\n            switch (message.type) {\n                case ContainerMessageType.Attach:\n                    this.dataStores.processAttachMessage(message, local);\n                    break;\n                case ContainerMessageType.Alias:\n                    this.processAliasMessage(message, localOpMetadata, local);\n                    break;\n                case ContainerMessageType.FluidDataStoreOp:\n                    this.dataStores.processFluidDataStoreOp(message, local, localOpMetadata);\n                    break;\n                case ContainerMessageType.BlobAttach:\n                    assert(message?.metadata?.blobId, 0x12a /* \"Missing blob id on metadata\" */);\n                    this.blobManager.processBlobAttachOp(message.metadata.blobId, local);\n                    break;\n                default:\n            }\n\n            this.emit(\"op\", message);\n            this.scheduleManager.afterOpProcessing(undefined, message);\n\n            if (local) {\n                // If we have processed a local op, this means that the container is\n                // making progress and we can reset the counter for how many times\n                // we have consecutively replayed the pending states\n                this.resetReconnectCount();\n            }\n        } catch (e) {\n            this.scheduleManager.afterOpProcessing(e, message);\n            throw e;\n        }\n    }\n\n    private processAliasMessage(\n        message: ISequencedDocumentMessage,\n        localOpMetadata: unknown,\n        local: boolean,\n    ) {\n        this.dataStores.processAliasMessage(message, localOpMetadata, local);\n    }\n\n    /**\n     * Emits the Signal event and update the perf signal data.\n     * @param clientSignalSequenceNumber - is the client signal sequence number to be uploaded.\n     */\n    private sendSignalTelemetryEvent(clientSignalSequenceNumber: number) {\n        const duration = Date.now() - this._perfSignalData.signalTimestamp;\n        this.logger.sendPerformanceEvent({\n            eventName: \"SignalLatency\",\n            duration,\n            signalsLost: this._perfSignalData.signalsLost,\n        });\n\n        this._perfSignalData.signalsLost = 0;\n        this._perfSignalData.signalTimestamp = 0;\n    }\n\n    public processSignal(message: ISignalMessage, local: boolean) {\n        const envelope = message.content as ISignalEnvelope;\n        const transformed: IInboundSignalMessage = {\n            clientId: message.clientId,\n            content: envelope.contents.content,\n            type: envelope.contents.type,\n        };\n\n        // Only collect signal telemetry for messages sent by the current client.\n        if (message.clientId === this.clientId && this.connected) {\n            // Check to see if the signal was lost.\n            if (this._perfSignalData.trackingSignalSequenceNumber !== undefined &&\n                envelope.clientSignalSequenceNumber > this._perfSignalData.trackingSignalSequenceNumber) {\n                this._perfSignalData.signalsLost++;\n                this._perfSignalData.trackingSignalSequenceNumber = undefined;\n                this.logger.sendErrorEvent({\n                    eventName: \"SignalLost\",\n                    type: envelope.contents.type,\n                    signalsLost: this._perfSignalData.signalsLost,\n                    trackingSequenceNumber: this._perfSignalData.trackingSignalSequenceNumber,\n                    clientSignalSequenceNumber: envelope.clientSignalSequenceNumber,\n                });\n            } else if (envelope.clientSignalSequenceNumber === this._perfSignalData.trackingSignalSequenceNumber) {\n                this.sendSignalTelemetryEvent(envelope.clientSignalSequenceNumber);\n                this._perfSignalData.trackingSignalSequenceNumber = undefined;\n            }\n        }\n\n        if (envelope.address === undefined) {\n            // No address indicates a container signal message.\n            this.emit(\"signal\", transformed, local);\n            return;\n        }\n\n        this.dataStores.processSignal(envelope.address, transformed, local);\n    }\n\n    public async getRootDataStore(id: string, wait = true): Promise<IFluidRouter> {\n        const internalId = this.internalId(id);\n        const context = await this.dataStores.getDataStore(internalId, wait);\n        assert(await context.isRoot(), 0x12b /* \"did not get root data store\" */);\n        return context.realize();\n    }\n\n    public setFlushMode(mode: FlushMode): void {\n        if (mode === this._flushMode) {\n            return;\n        }\n\n        this.mc.logger.sendTelemetryEvent({\n            eventName: \"FlushMode Updated\",\n            old: this._flushMode,\n            new: mode,\n        });\n\n        // Flush any pending batches if switching to immediate\n        if (mode === FlushMode.Immediate) {\n            this.flush();\n        }\n\n        this._flushMode = mode;\n\n        // Let the PendingStateManager know that FlushMode has been updated.\n        this.pendingStateManager.onFlushModeUpdated(mode);\n    }\n\n    public flush(): void {\n        assert(this._orderSequentiallyCalls === 0,\n            0x24c /* \"Cannot call `flush()` from `orderSequentially`'s callback\" */);\n\n        if (!this.deltaSender) {\n            return;\n        }\n\n        // Let the PendingStateManager know that there was an attempt to flush messages.\n        // Note that this should happen before the `this.needsFlush` check below because in the scenario where we are\n        // not connected, `this.needsFlush` will be false but the PendingStateManager might have pending messages and\n        // hence needs to track this.\n        this.pendingStateManager.onFlush();\n\n        // If flush has already been called then exit early\n        if (!this.needsFlush) {\n            return;\n        }\n\n        this.needsFlush = false;\n\n        // Did we disconnect in the middle of turn-based batch?\n        // If so, do nothing, as pending state manager will resubmit it correctly on reconnect.\n        if (!this.canSendOps()) {\n            return;\n        }\n\n        return this.deltaSender.flush();\n    }\n\n    public orderSequentially(callback: () => void): void {\n        // If flush mode is already TurnBased we are either\n        // nested in another orderSequentially, or\n        // the app is flushing manually, in which\n        // case this invocation doesn't own\n        // flushing.\n        if (this.flushMode === FlushMode.TurnBased) {\n            this.trackOrderSequentiallyCalls(callback);\n            return;\n        }\n\n        const savedFlushMode = this.flushMode;\n        this.setFlushMode(FlushMode.TurnBased);\n\n        try {\n            this.trackOrderSequentiallyCalls(callback);\n            this.flush();\n        } finally {\n            this.setFlushMode(savedFlushMode);\n        }\n    }\n\n    private trackOrderSequentiallyCalls(callback: () => void): void {\n        let checkpoint: { rollback: () => void; } | undefined;\n        if (this.mc.config.getBoolean(\"Fluid.ContainerRuntime.EnableRollback\")) {\n            checkpoint = this.pendingStateManager.checkpoint();\n        }\n\n        try {\n            this._orderSequentiallyCalls++;\n            callback();\n        } catch (error) {\n            if (checkpoint) {\n                // This will throw and close the container if rollback fails\n                checkpoint.rollback();\n            } else {\n                // pre-0.58 error message: orderSequentiallyCallbackException\n                this.closeFn(new GenericError(\"orderSequentially callback exception\", error));\n            }\n            throw error; // throw the original error for the consumer of the runtime\n        } finally {\n            this._orderSequentiallyCalls--;\n        }\n    }\n\n    public async createDataStore(pkg: string | string[]): Promise<IDataStore> {\n        const internalId = uuid();\n        return channelToDataStore(\n            await this._createDataStore(pkg, false /* isRoot */, internalId),\n            internalId,\n            this,\n            this.dataStores,\n            this.mc.logger);\n    }\n\n    /**\n     * Creates a root datastore directly with a user generated id and attaches it to storage.\n     * It is vulnerable to name collisions and should not be used.\n     *\n     * This method will be removed. See #6465.\n     */\n    private async createRootDataStoreLegacy(pkg: string | string[], rootDataStoreId: string): Promise<IFluidRouter> {\n        const fluidDataStore = await this._createDataStore(pkg, true /* isRoot */, rootDataStoreId);\n        // back-compat 0.59.1000 - makeVisibleAndAttachGraph was added in this version to IFluidDataStoreChannel. For\n        // older versions, we still have to call bindToContext.\n        if (fluidDataStore.makeVisibleAndAttachGraph !== undefined) {\n            fluidDataStore.makeVisibleAndAttachGraph();\n        } else {\n            fluidDataStore.bindToContext();\n        }\n        return fluidDataStore;\n    }\n\n    /**\n     * @deprecated - will be removed in an upcoming release. See #9660.\n     */\n    public async createRootDataStore(pkg: string | string[], rootDataStoreId: string): Promise<IFluidRouter> {\n        if (rootDataStoreId.includes(\"/\")) {\n            throw new UsageError(`Id cannot contain slashes: '${rootDataStoreId}'`);\n        }\n        return this._aliasingEnabled === true ?\n            this.createAndAliasDataStore(pkg, rootDataStoreId) :\n            this.createRootDataStoreLegacy(pkg, rootDataStoreId);\n    }\n\n    /**\n     * Creates a data store then attempts to alias it.\n     * If aliasing fails, it will raise an exception.\n     *\n     * This method will be removed. See #6465.\n     *\n     * @param pkg - Package name of the data store\n     * @param alias - Alias to be assigned to the data store\n     * @param props - Properties for the data store\n     * @returns - An aliased data store which can can be found / loaded by alias.\n     */\n    private async createAndAliasDataStore(pkg: string | string[], alias: string, props?: any): Promise<IDataStore> {\n        const internalId = uuid();\n        const dataStore = await this._createDataStore(pkg, false /* isRoot */, internalId, props);\n        const aliasedDataStore = channelToDataStore(dataStore, internalId, this, this.dataStores, this.mc.logger);\n        const result = await aliasedDataStore.trySetAlias(alias);\n        if (result !== \"Success\") {\n            throw new GenericError(\n                \"dataStoreAliasFailure\",\n                undefined /* error */,\n                {\n                    alias: {\n                        value: alias,\n                        tag: TelemetryDataTag.UserData,\n                    },\n                    internalId: {\n                        value: internalId,\n                        tag: TelemetryDataTag.PackageData,\n                    },\n                    aliasResult: result,\n                });\n        }\n\n        return aliasedDataStore;\n    }\n\n    public createDetachedRootDataStore(\n        pkg: Readonly<string[]>,\n        rootDataStoreId: string): IFluidDataStoreContextDetached {\n        if (rootDataStoreId.includes(\"/\")) {\n            throw new UsageError(`Id cannot contain slashes: '${rootDataStoreId}'`);\n        }\n        return this.dataStores.createDetachedDataStoreCore(pkg, true, rootDataStoreId);\n    }\n\n    public createDetachedDataStore(pkg: Readonly<string[]>): IFluidDataStoreContextDetached {\n        return this.dataStores.createDetachedDataStoreCore(pkg, false);\n    }\n\n    /**\n     * Creates a possibly root datastore directly with a possibly user generated id and attaches it to storage.\n     * It is vulnerable to name collisions if both aforementioned conditions are true, and should not be used.\n     *\n     * This method will be removed. See #6465.\n     */\n    private async _createDataStoreWithPropsLegacy(\n        pkg: string | string[],\n        props?: any,\n        id = uuid(),\n        isRoot = false,\n    ): Promise<IDataStore> {\n        const fluidDataStore = await this.dataStores._createFluidDataStoreContext(\n            Array.isArray(pkg) ? pkg : [pkg], id, isRoot, props).realize();\n        if (isRoot) {\n            // back-compat 0.59.1000 - makeVisibleAndAttachGraph was added in this version to IFluidDataStoreChannel.\n            // For older versions, we still have to call bindToContext.\n            if (fluidDataStore.makeVisibleAndAttachGraph !== undefined) {\n                fluidDataStore.makeVisibleAndAttachGraph();\n            } else {\n                fluidDataStore.bindToContext();\n            }\n            this.logger.sendTelemetryEvent({\n                eventName: \"Root datastore with props\",\n                hasProps: props !== undefined,\n            });\n        }\n        return channelToDataStore(fluidDataStore, id, this, this.dataStores, this.mc.logger);\n    }\n\n    public async _createDataStoreWithProps(\n        pkg: string | string[],\n        props?: any,\n        id = uuid(),\n        isRoot = false,\n    ): Promise<IDataStore> {\n        return this._aliasingEnabled === true && isRoot ?\n            this.createAndAliasDataStore(pkg, id, props) :\n            this._createDataStoreWithPropsLegacy(pkg, props, id, isRoot);\n    }\n\n    private async _createDataStore(\n        pkg: string | string[],\n        isRoot: boolean,\n        id = uuid(),\n        props?: any,\n    ): Promise<IFluidDataStoreChannel> {\n        return this.dataStores\n            ._createFluidDataStoreContext(Array.isArray(pkg) ? pkg : [pkg], id, isRoot, props)\n            .realize();\n    }\n\n    private canSendOps() {\n        return this.connected && !this.deltaManager.readOnlyInfo.readonly;\n    }\n\n    public getQuorum(): IQuorumClients {\n        return this.context.quorum;\n    }\n\n    public getAudience(): IAudience {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this.context.audience!;\n    }\n\n    /**\n     * Returns true of container is dirty, i.e. there are some pending local changes that\n     * either were not sent out to delta stream or were not yet acknowledged.\n     */\n    public get isDirty(): boolean {\n        return this.dirtyContainer;\n    }\n\n    private isContainerMessageDirtyable(type: ContainerMessageType, contents: any) {\n        // For legacy purposes, exclude the old built-in AgentScheduler from dirty consideration as a special-case.\n        // Ultimately we should have no special-cases from the ContainerRuntime's perspective.\n        if (type === ContainerMessageType.Attach) {\n            const attachMessage = contents as InboundAttachMessage;\n            if (attachMessage.id === agentSchedulerId) {\n                return false;\n            }\n        } else if (type === ContainerMessageType.FluidDataStoreOp) {\n            const envelope = contents as IEnvelope;\n            if (envelope.address === agentSchedulerId) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private createNewSignalEnvelope(address: string | undefined, type: string, content: any): ISignalEnvelope {\n        const newSequenceNumber = ++this._perfSignalData.signalSequenceNumber;\n        const newEnvelope: ISignalEnvelope = {\n            address,\n            clientSignalSequenceNumber: newSequenceNumber,\n            contents: { type, content },\n        };\n\n        // We should not track any signals in case we already have a tracking number.\n        if (newSequenceNumber % this.defaultTelemetrySignalSampleCount === 1 &&\n            this._perfSignalData.trackingSignalSequenceNumber === undefined) {\n            this._perfSignalData.signalTimestamp = Date.now();\n            this._perfSignalData.trackingSignalSequenceNumber = newSequenceNumber;\n        }\n\n        return newEnvelope;\n    }\n\n    /**\n     * Submits the signal to be sent to other clients.\n     * @param type - Type of the signal.\n     * @param content - Content of the signal.\n     */\n    public submitSignal(type: string, content: any) {\n        this.verifyNotClosed();\n        const envelope = this.createNewSignalEnvelope(undefined /* address */, type, content);\n        return this.context.submitSignalFn(envelope);\n    }\n\n    public submitDataStoreSignal(address: string, type: string, content: any) {\n        const envelope = this.createNewSignalEnvelope(address, type, content);\n        return this.context.submitSignalFn(envelope);\n    }\n\n    public setAttachState(attachState: AttachState.Attaching | AttachState.Attached): void {\n        if (attachState === AttachState.Attaching) {\n            assert(this.attachState === AttachState.Attaching,\n                0x12d /* \"Container Context should already be in attaching state\" */);\n        } else {\n            assert(this.attachState === AttachState.Attached,\n                0x12e /* \"Container Context should already be in attached state\" */);\n            this.emit(\"attached\");\n        }\n\n        if (attachState === AttachState.Attached && !this.pendingStateManager.hasPendingMessages()) {\n            this.updateDocumentDirtyState(false);\n        }\n        this.dataStores.setAttachState(attachState);\n    }\n\n    /**\n     * Create a summary. Used when attaching or serializing a detached container.\n     *\n     * @param blobRedirectTable - A table passed during the attach process. While detached, blob upload is supported\n     * using IDs generated locally. After attach, these IDs cannot be used, so this table maps the old local IDs to the\n     * new storage IDs so requests can be redirected.\n     * @param telemetryContext - summary data passed through the layers for telemetry purposes\n     */\n    public createSummary(blobRedirectTable?: Map<string, string>, telemetryContext?: ITelemetryContext): ISummaryTree {\n        if (blobRedirectTable) {\n            this.blobManager.setRedirectTable(blobRedirectTable);\n        }\n\n        const summarizeResult = this.dataStores.createSummary(telemetryContext);\n        if (!this.disableIsolatedChannels) {\n            // Wrap data store summaries in .channels subtree.\n            wrapSummaryInChannelsTree(summarizeResult);\n        }\n        this.addContainerStateToSummary(\n            summarizeResult,\n            true /* fullTree */,\n            false /* trackState */,\n            telemetryContext,\n        );\n        return summarizeResult.summary;\n    }\n\n    public async getAbsoluteUrl(relativeUrl: string): Promise<string | undefined> {\n        if (this.context.getAbsoluteUrl === undefined) {\n            throw new Error(\"Driver does not implement getAbsoluteUrl\");\n        }\n        if (this.attachState !== AttachState.Attached) {\n            return undefined;\n        }\n        return this.context.getAbsoluteUrl(relativeUrl);\n    }\n\n    private async summarizeInternal(\n        fullTree: boolean,\n        trackState: boolean,\n        telemetryContext?: ITelemetryContext,\n    ): Promise<ISummarizeInternalResult> {\n        const summarizeResult = await this.dataStores.summarize(fullTree, trackState, telemetryContext);\n        let pathPartsForChildren: string[] | undefined;\n\n        if (!this.disableIsolatedChannels) {\n            // Wrap data store summaries in .channels subtree.\n            wrapSummaryInChannelsTree(summarizeResult);\n            pathPartsForChildren = [channelsTreeName];\n        }\n        this.addContainerStateToSummary(summarizeResult, fullTree, trackState, telemetryContext);\n        return {\n            ...summarizeResult,\n            id: \"\",\n            pathPartsForChildren,\n        };\n    }\n\n    /**\n     * Returns a summary of the runtime at the current sequence number.\n     */\n    public async summarize(options: {\n        /** True to generate the full tree with no handle reuse optimizations; defaults to false */\n        fullTree?: boolean;\n        /** True to track the state for this summary in the SummarizerNodes; defaults to true */\n        trackState?: boolean;\n        /** Logger to use for correlated summary events */\n        summaryLogger?: ITelemetryLogger;\n        /** True to run garbage collection before summarizing; defaults to true */\n        runGC?: boolean;\n        /** True to generate full GC data */\n        fullGC?: boolean;\n        /** True to run GC sweep phase after the mark phase */\n        runSweep?: boolean;\n    }): Promise<IRootSummaryTreeWithStats> {\n        this.verifyNotClosed();\n\n        const {\n            fullTree = false,\n            trackState = true,\n            summaryLogger = this.mc.logger,\n            runGC = this.garbageCollector.shouldRunGC,\n            runSweep,\n            fullGC,\n        } = options;\n\n        let gcStats: IGCStats | undefined;\n        if (runGC) {\n            gcStats = await this.collectGarbage({ logger: summaryLogger, runSweep, fullGC });\n        }\n\n        const telemetryContext = new TelemetryContext();\n        const { stats, summary } = await this.summarizerNode.summarize(fullTree, trackState, telemetryContext);\n\n        this.logger.sendTelemetryEvent({ eventName: \"SummarizeTelemetry\", details: telemetryContext.serialize() });\n\n        assert(summary.type === SummaryType.Tree,\n            0x12f /* \"Container Runtime's summarize should always return a tree\" */);\n\n        return { stats, summary, gcStats };\n    }\n\n    /**\n     * Implementation of IGarbageCollectionRuntime::updateStateBeforeGC.\n     * Before GC runs, called by the garbage collector to update any pending GC state. This is mainly used to notify\n     * the garbage collector of references detected since the last GC run. Most references are notified immediately\n     * but there can be some for which async operation is required (such as detecting new root data stores).\n     */\n    public async updateStateBeforeGC() {\n        return this.dataStores.updateStateBeforeGC();\n    }\n\n    /**\n     * Implementation of IGarbageCollectionRuntime::getGCData.\n     * Generates and returns the GC data for this container.\n     * @param fullGC - true to bypass optimizations and force full generation of GC data.\n     */\n    public async getGCData(fullGC?: boolean): Promise<IGarbageCollectionData> {\n        const builder = new GCDataBuilder();\n        const dsGCData = await this.dataStores.getGCData(fullGC);\n        builder.addNodes(dsGCData.gcNodes);\n\n        const blobsGCData = this.blobManager.getGCData(fullGC);\n        builder.addNodes(blobsGCData.gcNodes);\n        return builder.getGCData();\n    }\n\n    /**\n     * Implementation of IGarbageCollectionRuntime::updateUsedRoutes.\n     * After GC has run, called to notify this container's nodes of routes that are used in it.\n     * @param usedRoutes - The routes that are used in all nodes in this Container.\n     * @param gcTimestamp - The time when GC was run that generated these used routes. If any node node becomes\n     * unreferenced as part of this GC run, this should be used to update the time when it happens.\n     */\n    public updateUsedRoutes(usedRoutes: string[], gcTimestamp?: number) {\n        // Update our summarizer node's used routes. Updating used routes in summarizer node before\n        // summarizing is required and asserted by the the summarizer node. We are the root and are\n        // always referenced, so the used routes is only self-route (empty string).\n        this.summarizerNode.updateUsedRoutes([\"\"]);\n\n        const dataStoreUsedRoutes: string[] = [];\n        for (const route of usedRoutes) {\n            if (route.split(\"/\")[1] !== BlobManager.basePath) {\n                dataStoreUsedRoutes.push(route);\n            }\n        }\n\n        return this.dataStores.updateUsedRoutes(dataStoreUsedRoutes, gcTimestamp);\n    }\n\n    /**\n     * When running GC in test mode, this is called to delete objects whose routes are unused. This enables testing\n     * scenarios with accessing deleted content.\n     * @param unusedRoutes - The routes that are unused in all data stores in this Container.\n     */\n    public deleteUnusedRoutes(unusedRoutes: string[]) {\n        const blobManagerUnusedRoutes: string[] = [];\n        const dataStoreUnusedRoutes: string[] = [];\n        for (const route of unusedRoutes) {\n            if (this.isBlobPath(route)) {\n                blobManagerUnusedRoutes.push(route);\n            } else {\n                dataStoreUnusedRoutes.push(route);\n            }\n        }\n\n        this.blobManager.deleteUnusedRoutes(blobManagerUnusedRoutes);\n        this.dataStores.deleteUnusedRoutes(dataStoreUnusedRoutes);\n    }\n\n    /**\n     * Returns a server generated referenced timestamp to be used to track unreferenced nodes by GC.\n     */\n    public getCurrentReferenceTimestampMs(): number | undefined {\n        // Use the timestamp of the last message seen by this client as that is server generated. If no messages have\n        // been processed, use the timestamp of the message from the last summary.\n        return this.deltaManager.lastMessage?.timestamp ?? this.messageAtLastSummary?.timestamp;\n    }\n\n    /**\n     * Returns the type of the GC node. Currently, there are nodes that belong to the root (\"/\"), data stores or\n     * blob manager.\n     */\n    public getNodeType(nodePath: string): GCNodeType {\n        if (this.isBlobPath(nodePath)) {\n            return GCNodeType.Blob;\n        }\n        return this.dataStores.getGCNodeType(nodePath) ?? GCNodeType.Other;\n    }\n\n    /**\n     * Called by GC to retrieve the package path of the node with the given path. The node should belong to a\n     * data store or an attachment blob.\n     */\n    public async getGCNodePackagePath(nodePath: string): Promise<readonly string[] | undefined> {\n        switch (this.getNodeType(nodePath)) {\n            case GCNodeType.Blob:\n                return [\"_blobs\"];\n            case GCNodeType.DataStore:\n            case GCNodeType.SubDataStore:\n                return this.dataStores.getDataStorePackagePath(nodePath);\n            default:\n                assert(false, 0x2de /* \"Package path requested for unsupported node type.\" */);\n        }\n    }\n\n    /**\n     * Returns whether a given path is for attachment blobs that are in the format - \"/BlobManager.basePath/...\".\n     */\n    private isBlobPath(path: string): boolean {\n        const pathParts = path.split(\"/\");\n        if (pathParts.length < 2 || pathParts[1] !== BlobManager.basePath) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Runs garbage collection and updates the reference / used state of the nodes in the container.\n     * @returns the statistics of the garbage collection run.\n     */\n    public async collectGarbage(\n        options: {\n            /** Logger to use for logging GC events */\n            logger?: ITelemetryLogger;\n            /** True to run GC sweep phase after the mark phase */\n            runSweep?: boolean;\n            /** True to generate full GC data */\n            fullGC?: boolean;\n        },\n    ): Promise<IGCStats> {\n        return this.garbageCollector.collectGarbage(options);\n    }\n\n    /**\n     * Called when a new outbound reference is added to another node. This is used by garbage collection to identify\n     * all references added in the system.\n     * @param srcHandle - The handle of the node that added the reference.\n     * @param outboundHandle - The handle of the outbound node that is referenced.\n     */\n    public addedGCOutboundReference(srcHandle: IFluidHandle, outboundHandle: IFluidHandle) {\n        this.garbageCollector.addedOutboundReference(srcHandle.absolutePath, outboundHandle.absolutePath);\n    }\n\n    /**\n     * Generates the summary tree, uploads it to storage, and then submits the summarize op.\n     * This is intended to be called by the summarizer, since it is the implementation of\n     * ISummarizerInternalsProvider.submitSummary.\n     * It takes care of state management at the container level, including pausing inbound\n     * op processing, updating SummarizerNode state tracking, and garbage collection.\n     * @param options - options controlling how the summary is generated or submitted\n     */\n    public async submitSummary(options: ISubmitSummaryOptions): Promise<SubmitSummaryResult> {\n        const { fullTree, refreshLatestAck, summaryLogger } = options;\n        // The summary number for this summary. This will be updated during the summary process, so get it now and\n        // use it for all events logged during this summary.\n        const summaryNumber = this.nextSummaryNumber;\n        const summaryNumberLogger = ChildLogger.create(\n            summaryLogger,\n            undefined,\n            {\n                all: { summaryNumber },\n            },\n        );\n\n        if (refreshLatestAck) {\n            const latestSummaryRefSeq = await this.refreshLatestSummaryAckFromServer(\n                ChildLogger.create(summaryNumberLogger, undefined, { all: { safeSummary: true } }));\n\n            if (latestSummaryRefSeq > this.deltaManager.lastSequenceNumber) {\n                // We need to catch up to the latest summary's reference sequence number before pausing.\n                await PerformanceEvent.timedExecAsync(\n                    summaryNumberLogger,\n                    {\n                        eventName: \"WaitingForSeq\",\n                        lastSequenceNumber: this.deltaManager.lastSequenceNumber,\n                        targetSequenceNumber: latestSummaryRefSeq,\n                        lastKnownSeqNumber: this.deltaManager.lastKnownSeqNumber,\n                    },\n                    async () => waitForSeq(this.deltaManager, latestSummaryRefSeq),\n                    { start: true, end: true, cancel: \"error\" }, // definitely want start event\n                );\n            }\n        }\n\n        try {\n            await this.deltaManager.inbound.pause();\n\n            const summaryRefSeqNum = this.deltaManager.lastSequenceNumber;\n            const minimumSequenceNumber = this.deltaManager.minimumSequenceNumber;\n            const message = `Summary @${summaryRefSeqNum}:${this.deltaManager.minimumSequenceNumber}`;\n\n            // We should be here is we haven't processed be here. If we are of if the last message's sequence number\n            // doesn't match the last processed sequence number, log an error.\n            if (summaryRefSeqNum !== this.deltaManager.lastMessage?.sequenceNumber) {\n                summaryNumberLogger.sendErrorEvent({\n                    eventName: \"LastSequenceMismatch\",\n                    error: message,\n                });\n            }\n\n            this.summarizerNode.startSummary(summaryRefSeqNum, summaryNumberLogger);\n\n            // Helper function to check whether we should still continue between each async step.\n            const checkContinue = (): { continue: true; } | { continue: false; error: string; } => {\n                // Do not check for loss of connectivity directly! Instead leave it up to\n                // RunWhileConnectedCoordinator to control policy in a single place.\n                // This will allow easier change of design if we chose to. For example, we may chose to allow\n                // summarizer to reconnect in the future.\n                // Also checking for cancellation is a must as summary process may be abandoned for other reasons,\n                // like loss of connectivity for main (interactive) client.\n                if (options.cancellationToken.cancelled) {\n                    return { continue: false, error: \"disconnected\" };\n                }\n                // That said, we rely on submitSystemMessage() that today only works in connected state.\n                // So if we fail here, it either means that RunWhileConnectedCoordinator does not work correctly,\n                // OR that design changed and we need to remove this check and fix submitSystemMessage.\n                assert(this.connected, 0x258 /* \"connected\" */);\n\n                // Ensure that lastSequenceNumber has not changed after pausing.\n                // We need the summary op's reference sequence number to match our summary sequence number,\n                // otherwise we'll get the wrong sequence number stamped on the summary's .protocol attributes.\n                if (this.deltaManager.lastSequenceNumber !== summaryRefSeqNum) {\n                    return {\n                        continue: false,\n                        // eslint-disable-next-line max-len\n                        error: `lastSequenceNumber changed before uploading to storage. ${this.deltaManager.lastSequenceNumber} !== ${summaryRefSeqNum}`,\n                    };\n                }\n                return { continue: true };\n            };\n\n            let continueResult = checkContinue();\n            if (!continueResult.continue) {\n                return {\n                    stage: \"base\",\n                    referenceSequenceNumber: summaryRefSeqNum,\n                    minimumSequenceNumber,\n                    error: continueResult.error,\n                };\n            }\n\n            const trace = Trace.start();\n            let summarizeResult: IRootSummaryTreeWithStats;\n            // If the GC state needs to be reset, we need to force a full tree summary and update the unreferenced\n            // state of all the nodes.\n            const forcedFullTree = this.garbageCollector.summaryStateNeedsReset;\n            try {\n                summarizeResult = await this.summarize({\n                    fullTree: fullTree || forcedFullTree,\n                    trackState: true,\n                    summaryLogger: summaryNumberLogger,\n                    runGC: this.garbageCollector.shouldRunGC,\n                });\n            } catch (error) {\n                return {\n                    stage: \"base\",\n                    referenceSequenceNumber: summaryRefSeqNum,\n                    minimumSequenceNumber,\n                    error,\n                };\n            }\n            const { summary: summaryTree, stats: partialStats } = summarizeResult;\n\n            // Now that we have generated the summary, update the message at last summary to the last message processed.\n            this.messageAtLastSummary = this.deltaManager.lastMessage;\n\n            // Counting dataStores and handles\n            // Because handles are unchanged dataStores in the current logic,\n            // summarized dataStore count is total dataStore count minus handle count\n            const dataStoreTree = this.disableIsolatedChannels ? summaryTree : summaryTree.tree[channelsTreeName];\n\n            assert(dataStoreTree.type === SummaryType.Tree, 0x1fc /* \"summary is not a tree\" */);\n            const handleCount = Object.values(dataStoreTree.tree).filter(\n                (value) => value.type === SummaryType.Handle).length;\n            const gcSummaryTreeStats = summaryTree.tree[gcTreeKey]\n                ? calculateStats(summaryTree.tree[gcTreeKey])\n                : undefined;\n\n            const summaryStats: IGeneratedSummaryStats = {\n                dataStoreCount: this.dataStores.size,\n                summarizedDataStoreCount: this.dataStores.size - handleCount,\n                gcStateUpdatedDataStoreCount: summarizeResult.gcStats?.updatedDataStoreCount,\n                gcBlobNodeCount: gcSummaryTreeStats?.blobNodeCount,\n                gcTotalBlobsSize: gcSummaryTreeStats?.totalBlobSize,\n                opsSizesSinceLastSummary: this.opTracker.opsSizeAccumulator,\n                nonSystemOpsSinceLastSummary: this.opTracker.nonSystemOpCount,\n                summaryNumber,\n                ...partialStats,\n            };\n            const generateSummaryData = {\n                referenceSequenceNumber: summaryRefSeqNum,\n                minimumSequenceNumber,\n                summaryTree,\n                summaryStats,\n                generateDuration: trace.trace().duration,\n                forcedFullTree,\n            } as const;\n\n            continueResult = checkContinue();\n            if (!continueResult.continue) {\n                return { stage: \"generate\", ...generateSummaryData, error: continueResult.error };\n            }\n\n            const lastAck = this.summaryCollection.latestAck;\n            const summaryContext: ISummaryContext =\n                lastAck === undefined\n                    ? {\n                        proposalHandle: undefined,\n                        ackHandle: this.context.getLoadedFromVersion()?.id,\n                        referenceSequenceNumber: summaryRefSeqNum,\n                    }\n                    : {\n                        proposalHandle: lastAck.summaryOp.contents.handle,\n                        ackHandle: lastAck.summaryAck.contents.handle,\n                        referenceSequenceNumber: summaryRefSeqNum,\n                    };\n\n            let handle: string;\n            try {\n                handle = await this.storage.uploadSummaryWithContext(summarizeResult.summary, summaryContext);\n            } catch (error) {\n                return { stage: \"generate\", ...generateSummaryData, error };\n            }\n\n            const parent = summaryContext.ackHandle;\n            const summaryMessage: ISummaryContent = {\n                handle,\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                head: parent!,\n                message,\n                parents: parent ? [parent] : [],\n            };\n            const uploadData = {\n                ...generateSummaryData,\n                handle,\n                uploadDuration: trace.trace().duration,\n            } as const;\n\n            continueResult = checkContinue();\n            if (!continueResult.continue) {\n                return { stage: \"upload\", ...uploadData, error: continueResult.error };\n            }\n\n            let clientSequenceNumber: number;\n            try {\n                clientSequenceNumber = this.submitSystemMessage(MessageType.Summarize, summaryMessage);\n            } catch (error) {\n                return { stage: \"upload\", ...uploadData, error };\n            }\n\n            const submitData = {\n                stage: \"submit\",\n                ...uploadData,\n                clientSequenceNumber,\n                submitOpDuration: trace.trace().duration,\n            } as const;\n\n            this.summarizerNode.completeSummary(handle);\n            this.opTracker.reset();\n            return submitData;\n        } finally {\n            // Cleanup wip summary in case of failure\n            this.summarizerNode.clearSummary();\n            // Restart the delta manager\n            this.deltaManager.inbound.resume();\n        }\n    }\n\n    private processRemoteChunkedMessage(message: ISequencedDocumentMessage) {\n        if (message.type !== ContainerMessageType.ChunkedOp) {\n            return message;\n        }\n\n        const clientId = message.clientId;\n        const chunkedContent = message.contents as IChunkedOp;\n        this.addChunk(clientId, chunkedContent);\n        if (chunkedContent.chunkId === chunkedContent.totalChunks) {\n            const newMessage = { ...message };\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const serializedContent = this.chunkMap.get(clientId)!.join(\"\");\n            newMessage.contents = JSON.parse(serializedContent);\n            newMessage.type = chunkedContent.originalType;\n            this.clearPartialChunks(clientId);\n            return newMessage;\n        }\n        return message;\n    }\n\n    private addChunk(clientId: string, chunkedContent: IChunkedOp) {\n        let map = this.chunkMap.get(clientId);\n        if (map === undefined) {\n            map = [];\n            this.chunkMap.set(clientId, map);\n        }\n        assert(chunkedContent.chunkId === map.length + 1,\n            0x131 /* \"Mismatch between new chunkId and expected chunkMap\" */); // 1-based indexing\n        map.push(chunkedContent.contents);\n    }\n\n    private clearPartialChunks(clientId: string) {\n        if (this.chunkMap.has(clientId)) {\n            this.chunkMap.delete(clientId);\n        }\n    }\n\n    private updateDocumentDirtyState(dirty: boolean) {\n        if (this.dirtyContainer === dirty) {\n            return;\n        }\n\n        this.dirtyContainer = dirty;\n        if (this.emitDirtyDocumentEvent) {\n            this.emit(dirty ? \"dirty\" : \"saved\");\n            this.context.updateDirtyContainerState(dirty);\n        }\n    }\n\n    public submitDataStoreOp(\n        id: string,\n        contents: any,\n        localOpMetadata: unknown = undefined): void {\n        const envelope: IEnvelope = {\n            address: id,\n            contents,\n        };\n        this.submit(ContainerMessageType.FluidDataStoreOp, envelope, localOpMetadata);\n    }\n\n    public submitDataStoreAliasOp(contents: any, localOpMetadata: unknown): void {\n        const aliasMessage = contents as IDataStoreAliasMessage;\n        if (!isDataStoreAliasMessage(aliasMessage)) {\n            throw new UsageError(\"malformedDataStoreAliasMessage\");\n        }\n\n        this.submit(ContainerMessageType.Alias, contents, localOpMetadata);\n    }\n\n    public async uploadBlob(blob: ArrayBufferLike): Promise<IFluidHandle<ArrayBufferLike>> {\n        this.verifyNotClosed();\n        return this.blobManager.createBlob(blob);\n    }\n\n    private submit(\n        type: ContainerMessageType,\n        content: any,\n        localOpMetadata: unknown = undefined,\n        opMetadata: Record<string, unknown> | undefined = undefined,\n    ): void {\n        this.verifyNotClosed();\n\n        // There should be no ops in detached container state!\n        assert(this.attachState !== AttachState.Detached, 0x132 /* \"sending ops in detached container\" */);\n\n        let clientSequenceNumber: number = -1;\n        let opMetadataInternal = opMetadata;\n\n        if (this.canSendOps()) {\n            const serializedContent = JSON.stringify(content);\n            const maxOpSize = this.context.deltaManager.maxMessageSize;\n\n            // If in TurnBased flush mode we will trigger a flush at the next turn break\n            if (this.flushMode === FlushMode.TurnBased && !this.needsFlush) {\n                opMetadataInternal = {\n                    ...opMetadata,\n                    batch: true,\n                };\n                this.needsFlush = true;\n\n                // Use Promise.resolve().then() to queue a microtask to detect the end of the turn and force a flush.\n                if (!this.flushTrigger) {\n                    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                    Promise.resolve().then(() => {\n                        this.flushTrigger = false;\n                        this.flush();\n                    });\n                }\n            }\n\n            clientSequenceNumber = this.submitMaybeChunkedMessages(\n                type,\n                content,\n                serializedContent,\n                maxOpSize,\n                this._flushMode === FlushMode.TurnBased,\n                opMetadataInternal);\n        }\n\n        // Let the PendingStateManager know that a message was submitted.\n        this.pendingStateManager.onSubmitMessage(\n            type,\n            clientSequenceNumber,\n            this.deltaManager.lastSequenceNumber,\n            content,\n            localOpMetadata,\n            opMetadataInternal,\n        );\n        if (this.isContainerMessageDirtyable(type, content)) {\n            this.updateDocumentDirtyState(true);\n        }\n    }\n\n    private submitMaybeChunkedMessages(\n        type: ContainerMessageType,\n        content: any,\n        serializedContent: string,\n        serverMaxOpSize: number,\n        batch: boolean,\n        opMetadataInternal: unknown = undefined,\n    ): number {\n        if (this._maxOpSizeInBytes >= 0) {\n            // Chunking disabled\n            if (!serializedContent || serializedContent.length <= this._maxOpSizeInBytes) {\n                return this.submitRuntimeMessage(type, content, batch, opMetadataInternal);\n            }\n\n            // When chunking is disabled, we ignore the server max message size\n            // and if the content length is larger than the client configured message size\n            // instead of splitting the content, we will fail by explicitly close the container\n            this.closeFn(new GenericError(\n                \"OpTooLarge\",\n                /* error */ undefined,\n                {\n                    length: {\n                        value: serializedContent.length,\n                        tag: TelemetryDataTag.PackageData,\n                    },\n                    limit: {\n                        value: this._maxOpSizeInBytes,\n                        tag: TelemetryDataTag.PackageData,\n                    },\n                }));\n            return -1;\n        }\n\n        // Chunking enabled, fallback on the server's max message size\n        // and split the content accordingly\n        if (!serializedContent || serializedContent.length <= serverMaxOpSize) {\n            return this.submitRuntimeMessage(type, content, batch, opMetadataInternal);\n        }\n\n        return this.submitChunkedMessage(type, serializedContent, serverMaxOpSize);\n    }\n\n    private submitChunkedMessage(type: ContainerMessageType, content: string, maxOpSize: number): number {\n        const contentLength = content.length;\n        const chunkN = Math.floor((contentLength - 1) / maxOpSize) + 1;\n        let offset = 0;\n        let clientSequenceNumber: number = 0;\n        for (let i = 1; i <= chunkN; i = i + 1) {\n            const chunkedOp: IChunkedOp = {\n                chunkId: i,\n                contents: content.substr(offset, maxOpSize),\n                originalType: type,\n                totalChunks: chunkN,\n            };\n            offset += maxOpSize;\n            clientSequenceNumber = this.submitRuntimeMessage(\n                ContainerMessageType.ChunkedOp,\n                chunkedOp,\n                false);\n        }\n        return clientSequenceNumber;\n    }\n\n    private submitSystemMessage(\n        type: MessageType,\n        contents: any) {\n        this.verifyNotClosed();\n        assert(this.connected, 0x133 /* \"Container disconnected when trying to submit system message\" */);\n\n        // System message should not be sent in the middle of the batch.\n        // That said, we can preserve existing behavior by not flushing existing buffer.\n        // That might be not what caller hopes to get, but we can look deeper if telemetry tells us it's a problem.\n        const middleOfBatch = this.flushMode === FlushMode.TurnBased && this.needsFlush;\n        if (middleOfBatch) {\n            this.mc.logger.sendErrorEvent({ eventName: \"submitSystemMessageError\", type });\n        }\n\n        return this.context.submitFn(\n            type,\n            contents,\n            middleOfBatch);\n    }\n\n    private submitRuntimeMessage(\n        type: ContainerMessageType,\n        contents: any,\n        batch: boolean,\n        appData?: any,\n    ) {\n        this.verifyNotClosed();\n        assert(this.connected, 0x259 /* \"Container disconnected when trying to submit system message\" */);\n        const payload: ContainerRuntimeMessage = { type, contents };\n        return this.context.submitFn(\n            MessageType.Operation,\n            payload,\n            batch,\n            appData);\n    }\n\n    /**\n     * Throw an error if the runtime is closed.  Methods that are expected to potentially\n     * be called after dispose due to asynchrony should not call this.\n     */\n    private verifyNotClosed() {\n        if (this._disposed) {\n            throw new Error(\"Runtime is closed\");\n        }\n    }\n\n    /**\n     * Finds the right store and asks it to resubmit the message. This typically happens when we\n     * reconnect and there are pending messages.\n     * @param content - The content of the original message.\n     * @param localOpMetadata - The local metadata associated with the original message.\n     */\n    private reSubmit(\n        type: ContainerMessageType,\n        content: any,\n        localOpMetadata: unknown,\n        opMetadata: Record<string, unknown> | undefined,\n    ) {\n        switch (type) {\n            case ContainerMessageType.FluidDataStoreOp:\n                // For Operations, call resubmitDataStoreOp which will find the right store\n                // and trigger resubmission on it.\n                this.dataStores.resubmitDataStoreOp(content, localOpMetadata);\n                break;\n            case ContainerMessageType.Attach:\n            case ContainerMessageType.Alias:\n                this.submit(type, content, localOpMetadata);\n                break;\n            case ContainerMessageType.ChunkedOp:\n                throw new Error(`chunkedOp not expected here`);\n            case ContainerMessageType.BlobAttach:\n                this.submit(type, content, localOpMetadata, opMetadata);\n                break;\n            case ContainerMessageType.Rejoin:\n                this.submit(type, content);\n                break;\n            default:\n                unreachableCase(type, `Unknown ContainerMessageType: ${type}`);\n        }\n    }\n\n    private rollback(\n        type: ContainerMessageType,\n        content: any,\n        localOpMetadata: unknown,\n    ) {\n        switch (type) {\n            case ContainerMessageType.FluidDataStoreOp:\n                // For operations, call rollbackDataStoreOp which will find the right store\n                // and trigger rollback on it.\n                this.dataStores.rollbackDataStoreOp(content, localOpMetadata);\n                break;\n            default:\n                throw new Error(`Can't rollback ${type}`);\n        }\n    }\n\n    /** Implementation of ISummarizerInternalsProvider.refreshLatestSummaryAck */\n    public async refreshLatestSummaryAck(\n        proposalHandle: string | undefined,\n        ackHandle: string,\n        summaryRefSeq: number,\n        summaryLogger: ITelemetryLogger,\n    ) {\n        const readAndParseBlob = async <T>(id: string) => readAndParse<T>(this.storage, id);\n        const result = await this.summarizerNode.refreshLatestSummary(\n            proposalHandle,\n            summaryRefSeq,\n            async () => this.fetchSnapshotFromStorage(ackHandle, summaryLogger, {\n                eventName: \"RefreshLatestSummaryGetSnapshot\",\n                ackHandle,\n                summaryRefSeq,\n                fetchLatest: false,\n            }),\n            readAndParseBlob,\n            summaryLogger,\n        );\n\n        // Notify the garbage collector so it can update its latest summary state.\n        await this.garbageCollector.latestSummaryStateRefreshed(result, readAndParseBlob);\n    }\n\n    /**\n     * Fetches the latest snapshot from storage and uses it to refresh SummarizerNode's\n     * internal state as it should be considered the latest summary ack.\n     * @param summaryLogger - logger to use when fetching snapshot from storage\n     * @returns downloaded snapshot's reference sequence number\n     */\n    private async refreshLatestSummaryAckFromServer(summaryLogger: ITelemetryLogger): Promise<number> {\n        const snapshot = await this.fetchSnapshotFromStorage(null, summaryLogger, {\n            eventName: \"RefreshLatestSummaryGetSnapshot\",\n            fetchLatest: true,\n        });\n\n        const readAndParseBlob = async <T>(id: string) => readAndParse<T>(this.storage, id);\n        const snapshotRefSeq = await seqFromTree(snapshot, readAndParseBlob);\n\n        const result = await this.summarizerNode.refreshLatestSummary(\n            undefined,\n            snapshotRefSeq,\n            async () => snapshot,\n            readAndParseBlob,\n            summaryLogger,\n        );\n\n        // Notify the garbage collector so it can update its latest summary state.\n        await this.garbageCollector.latestSummaryStateRefreshed(result, readAndParseBlob);\n\n        return snapshotRefSeq;\n    }\n\n    private async fetchSnapshotFromStorage(\n        versionId: string | null, logger: ITelemetryLogger, event: ITelemetryGenericEvent) {\n        return PerformanceEvent.timedExecAsync(\n            logger, event, async (perfEvent: {\n                end: (arg0: {\n                    getVersionDuration?: number | undefined;\n                    getSnapshotDuration?: number | undefined;\n                }) => void;\n            }) => {\n            const stats: { getVersionDuration?: number; getSnapshotDuration?: number; } = {};\n            const trace = Trace.start();\n\n            const versions = await this.storage.getVersions(versionId, 1);\n            assert(!!versions && !!versions[0], 0x137 /* \"Failed to get version from storage\" */);\n            stats.getVersionDuration = trace.trace().duration;\n\n            const maybeSnapshot = await this.storage.getSnapshotTree(versions[0]);\n            assert(!!maybeSnapshot, 0x138 /* \"Failed to get snapshot from storage\" */);\n            stats.getSnapshotDuration = trace.trace().duration;\n\n            perfEvent.end(stats);\n            return maybeSnapshot;\n        });\n    }\n\n    public notifyAttaching(snapshot: ISnapshotTreeWithBlobContents) {\n        if (this.mc.config.getBoolean(\"enableOfflineLoad\") ?? this.runtimeOptions.enableOfflineLoad) {\n            this.baseSnapshotBlobs = SerializedSnapshotStorage.serializeTreeWithBlobContents(snapshot);\n        }\n    }\n\n    public async getSnapshotBlobs(): Promise<void> {\n        if (!(this.mc.config.getBoolean(\"enableOfflineLoad\") ?? this.runtimeOptions.enableOfflineLoad) ||\n            this.attachState !== AttachState.Attached || this.context.pendingLocalState) {\n            return;\n        }\n        assert(!!this.context.baseSnapshot, 0x2e5 /* \"Must have a base snapshot\" */);\n        this.baseSnapshotBlobs = await SerializedSnapshotStorage.serializeTree(this.context.baseSnapshot, this.storage);\n    }\n\n    public getPendingLocalState(): IPendingRuntimeState {\n        if (!(this.mc.config.getBoolean(\"enableOfflineLoad\") ?? this.runtimeOptions.enableOfflineLoad)) {\n            throw new UsageError(\"can't get state when offline load disabled\");\n        }\n\n        const previousPendingState = this.context.pendingLocalState as IPendingRuntimeState | undefined;\n        if (previousPendingState) {\n            return {\n                pending: this.pendingStateManager.getLocalState(),\n                snapshotBlobs: previousPendingState.snapshotBlobs,\n                baseSnapshot: previousPendingState.baseSnapshot,\n                savedOps: this.savedOps,\n            };\n        }\n        assert(!!this.context.baseSnapshot, 0x2e6 /* \"Must have a base snapshot\" */);\n        assert(!!this.baseSnapshotBlobs, 0x2e7 /* \"Must serialize base snapshot blobs before getting runtime state\" */);\n        return {\n            pending: this.pendingStateManager.getLocalState(),\n            snapshotBlobs: this.baseSnapshotBlobs,\n            baseSnapshot: this.context.baseSnapshot,\n            savedOps: this.savedOps,\n        };\n    }\n\n    public readonly summarizeOnDemand: ISummarizer[\"summarizeOnDemand\"] = (...args) => {\n        if (this.clientDetails.type === summarizerClientType) {\n            return this.summarizer.summarizeOnDemand(...args);\n        } else if (this.summaryManager !== undefined) {\n            return this.summaryManager.summarizeOnDemand(...args);\n        } else {\n            // If we're not the summarizer, and we don't have a summaryManager, we expect that\n            // disableSummaries is turned on. We are throwing instead of returning a failure here,\n            // because it is a misuse of the API rather than an expected failure.\n            throw new UsageError(\n                `Can't summarize, disableSummaries: ${this.summariesDisabled}`,\n            );\n        }\n    };\n\n    public readonly enqueueSummarize: ISummarizer[\"enqueueSummarize\"] = (...args) => {\n        if (this.clientDetails.type === summarizerClientType) {\n            return this.summarizer.enqueueSummarize(...args);\n        } else if (this.summaryManager !== undefined) {\n            return this.summaryManager.enqueueSummarize(...args);\n        } else {\n            // If we're not the summarizer, and we don't have a summaryManager, we expect that\n            // generateSummaries is turned off. We are throwing instead of returning a failure here,\n            // because it is a misuse of the API rather than an expected failure.\n            throw new UsageError(\n                `Can't summarize, disableSummaries: ${this.summariesDisabled}`,\n            );\n        }\n    };\n\n    /**\n     * * Forms a function that will request a Summarizer.\n     * @param loaderRouter - the loader acting as an IFluidRouter\n     * */\n    private formRequestSummarizerFn(loaderRouter: IFluidRouter) {\n        return async () => {\n            const request: IRequest = {\n                headers: {\n                    [LoaderHeader.cache]: false,\n                    [LoaderHeader.clientDetails]: {\n                        capabilities: { interactive: false },\n                        type: summarizerClientType,\n                    },\n                    [DriverHeader.summarizingClient]: true,\n                    [LoaderHeader.reconnect]: false,\n                },\n                url: \"/_summarizer\",\n            };\n\n            const fluidObject = await requestFluidObject<FluidObject<ISummarizer>>(loaderRouter, request);\n            const summarizer = fluidObject.ISummarizer;\n\n            if (!summarizer) {\n                throw new UsageError(\"Fluid object does not implement ISummarizer\");\n            }\n\n            return summarizer;\n        };\n    }\n\n    private async processSavedOps(state: IPendingRuntimeState) {\n        for (const op of state.savedOps) {\n            this.process(op, false);\n            await this.pendingStateManager.applyStashedOpsAt(op.sequenceNumber);\n        }\n        // we may not have seen every sequence number (because of system ops) so apply everything once we\n        // don't have any more saved ops\n        await this.pendingStateManager.applyStashedOpsAt();\n    }\n}\n\n/**\n * Wait for a specific sequence number. Promise should resolve when we reach that number,\n * or reject if closed.\n */\nconst waitForSeq = async (\n    deltaManager: IDeltaManager<Pick<ISequencedDocumentMessage, \"sequenceNumber\">, unknown>,\n    targetSeq: number,\n): Promise<void> => new Promise<void>((resolve, reject) => {\n    // TODO: remove cast to any when actual event is determined\n    deltaManager.on(\"closed\" as any, reject);\n\n    const handleOp = (message: Pick<ISequencedDocumentMessage, \"sequenceNumber\">) => {\n        if (message.sequenceNumber >= targetSeq) {\n            resolve();\n            deltaManager.off(\"op\", handleOp);\n        }\n    };\n    deltaManager.on(\"op\", handleOp);\n});\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n/* eslint-disable @rushstack/no-new-null */\nimport { IEvent, IEventProvider, ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { assert, TypedEventEmitter } from \"@fluidframework/common-utils\";\nimport { IDeltaManager } from \"@fluidframework/container-definitions\";\nimport { UsageError } from \"@fluidframework/container-utils\";\nimport { IClient, IQuorumClients, ISequencedClient } from \"@fluidframework/protocol-definitions\";\nimport { ChildLogger } from \"@fluidframework/telemetry-utils\";\nimport { summarizerClientType } from \"./summarizerClientElection\";\n\n// helper types for recursive readonly.\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport type ImmutablePrimitives = undefined | null | boolean | string | number | Function;\nexport type Immutable<T> = T extends ImmutablePrimitives\n    ? T\n    : T extends (infer A)[]\n    ? readonly Immutable<A>[]\n    : T extends Map<infer K, infer V>\n    ? ReadonlyMap<Immutable<K>, Immutable<V>>\n    : T extends Set<infer V>\n    ? ReadonlySet<Immutable<V>>\n    : { readonly [K in keyof T]: Immutable<T[K]> };\n\n/** Minimum information for a client tracked for election consideration. */\nexport interface ITrackedClient {\n    readonly clientId: string;\n    readonly sequenceNumber: number;\n    readonly client: Immutable<IClient>;\n}\n\n/** Common contract for link nodes within an OrderedClientCollection. */\nexport interface ILinkNode {\n    readonly sequenceNumber: number;\n    youngerClient: ILinkedClient | undefined;\n}\n\n/** Placeholder root node within an OrderedClientCollection; does not represent a client. */\nexport interface IRootLinkNode extends ILinkNode {\n    readonly sequenceNumber: -1;\n    readonly olderClient: undefined;\n}\n\n/** Additional information required to keep track of the client within the doubly-linked list. */\nexport interface ILinkedClient extends ILinkNode, ITrackedClient {\n    olderClient: LinkNode;\n}\n\n/** Any link node within OrderedClientCollection including the placeholder root node. */\nexport type LinkNode = IRootLinkNode | ILinkedClient;\n\n/** Events raised by an OrderedClientCollection. */\nexport interface IOrderedClientCollectionEvents extends IEvent {\n    /** Event fires when client is being added. */\n    (event: \"addClient\" | \"removeClient\", listener: (client: ILinkedClient, sequenceNumber: number) => void);\n}\n\n/** Contract for a sorted collection of all clients in the quorum. */\nexport interface IOrderedClientCollection extends IEventProvider<IOrderedClientCollectionEvents> {\n    /** Count of clients in the collection. */\n    readonly count: number;\n    /** Pointer to the oldest client in the collection. */\n    readonly oldestClient: ILinkedClient | undefined;\n    /** Returns a sorted array of all the clients in the collection. */\n    getAllClients(): ILinkedClient[];\n}\n\n/**\n * Tracks clients in the Quorum. It maintains their order using their join op\n * sequence numbers.\n * Internally, the collection of clients is maintained in a doubly-linked list,\n * with pointers to both the first and last nodes.\n * The first (root) node is a placeholder to simplify logic and reduce null checking.\n */\nexport class OrderedClientCollection\n    extends TypedEventEmitter<IOrderedClientCollectionEvents>\n    implements IOrderedClientCollection {\n    /** Collection of ALL clients currently in the quorum, with client ids as keys. */\n    private readonly clientMap = new Map<string, ILinkedClient>();\n    /** Placeholder head node of linked list, for simplified null checking. */\n    private readonly rootNode: IRootLinkNode = {\n        sequenceNumber: -1,\n        olderClient: undefined,\n        youngerClient: undefined,\n    };\n    /** Pointer to end of linked list, for optimized client adds. */\n    private _youngestClient: LinkNode = this.rootNode;\n    private readonly logger: ITelemetryLogger;\n\n    public get count() {\n        return this.clientMap.size;\n    }\n    public get oldestClient() {\n        return this.rootNode.youngerClient;\n    }\n\n    constructor(\n        logger: ITelemetryLogger,\n        deltaManager: Pick<IDeltaManager<unknown, unknown>, \"lastSequenceNumber\">,\n        quorum: Pick<IQuorumClients, \"getMembers\" | \"on\">,\n    ) {\n        super();\n        this.logger = ChildLogger.create(logger, \"OrderedClientCollection\");\n        const members = quorum.getMembers();\n        for (const [clientId, client] of members) {\n            this.addClient(clientId, client);\n        }\n\n        quorum.on(\"addMember\", (clientId, client) => {\n            const newClient = this.addClient(clientId, client);\n            this.emit(\"addClient\", newClient, deltaManager.lastSequenceNumber);\n        });\n        quorum.on(\"removeMember\", (clientId) => {\n            const sequenceNumber = deltaManager.lastSequenceNumber;\n            const removeClient = this.removeClient(clientId);\n            if (removeClient === undefined) {\n                this.logger.sendErrorEvent({ eventName: \"ClientNotFound\", clientId, sequenceNumber });\n            } else {\n                this.emit(\"removeClient\", removeClient, sequenceNumber);\n            }\n        });\n    }\n\n    private addClient(clientId: string, client: ISequencedClient): ITrackedClient {\n        // Normal case is adding the latest client, which will bypass loop.\n        // Find where it belongs otherwise (maybe possible during initial load?).\n        assert(client.sequenceNumber > -1, 0x1f6 /* \"Negative client sequence number not allowed\" */);\n        let currClient = this._youngestClient;\n        while (currClient.sequenceNumber > client.sequenceNumber) {\n            assert(currClient.olderClient !== undefined, 0x1f7 /* \"Previous client should always be defined\" */);\n            // Note: If adding a client older than the elected client, it will not be automatically elected.\n            currClient = currClient.olderClient;\n        }\n\n        // Now currClient is the node right before where the new client node should be.\n        const newClient: ILinkedClient = {\n            clientId,\n            sequenceNumber: client.sequenceNumber,\n            client: { ...client.client }, // shallow clone\n            olderClient: currClient,\n            youngerClient: currClient.youngerClient,\n        };\n\n        // Update prev node to point to this new node.\n        newClient.olderClient.youngerClient = newClient;\n\n        if (newClient.youngerClient === undefined) {\n            // Update linked list end pointer to youngest client.\n            this._youngestClient = newClient;\n        } else {\n            // Update next node to point back to this new node.\n            newClient.youngerClient.olderClient = newClient;\n        }\n\n        this.clientMap.set(clientId, newClient);\n        return newClient;\n    }\n\n    private removeClient(clientId: string): ITrackedClient | undefined {\n        const removeClient = this.clientMap.get(clientId);\n        if (removeClient === undefined) {\n            return;\n        }\n\n        // Update prev node to point to next node.\n        removeClient.olderClient.youngerClient = removeClient.youngerClient;\n\n        if (removeClient.youngerClient === undefined) {\n            // Update linked list end pointer to youngest client.\n            this._youngestClient = removeClient.olderClient;\n        } else {\n            // Update next node to point back to previous node.\n            removeClient.youngerClient.olderClient = removeClient.olderClient;\n        }\n\n        this.clientMap.delete(clientId);\n        return removeClient;\n    }\n\n    /** Returns an array of all clients being tracked in order from oldest to newest. */\n    public getAllClients(): ILinkedClient[] {\n        const result: ILinkedClient[] = [];\n        let currClient: LinkNode = this.rootNode;\n        while (currClient.youngerClient !== undefined) {\n            result.push(currClient.youngerClient);\n            currClient = currClient.youngerClient;\n        }\n        return result;\n    }\n}\n\n/** Events raised by an OrderedClientElection. */\nexport interface IOrderedClientElectionEvents extends IEvent {\n    /** Event fires when the currently elected client changes. */\n    (event: \"election\", listener: (\n        /** Newly elected client. */\n        client: ITrackedClient | undefined,\n        /** Sequence number where election took place. */\n        sequenceNumber: number,\n        /** Previously elected client. */\n        prevClient: ITrackedClient | undefined,\n    ) => void);\n}\n\n/** Serialized state of IOrderedClientElection. */\nexport interface ISerializedElection {\n    /** Sequence number at the time of the latest election. */\n    readonly electionSequenceNumber: number;\n    /** Most recently elected client id. This is either:\n     * 1. the interactive elected parent client, in which case electedClientId === electedParentId,\n     *  and the SummaryManager on the elected client will spawn a summarizer client, or\n     * 2. the non-interactive summarizer client itself. */\n    readonly electedClientId: string | undefined;\n    /** Most recently elected parent client id. This is always an interactive client. */\n    readonly electedParentId: string | undefined;\n}\n\n/** Contract for maintaining a deterministic client election based on eligibility. */\nexport interface IOrderedClientElection extends IEventProvider<IOrderedClientElectionEvents> {\n    /** Count of eligible clients in the collection. */\n    readonly eligibleCount: number;\n    /** Currently elected client. This is either:\n     * 1. the interactive elected parent client, in which case electedClientId === electedParentId,\n     *  and the SummaryManager on the elected client will spawn a summarizer client, or\n     * 2. the non-interactive summarizer client itself. */\n    readonly electedClient: ITrackedClient | undefined;\n    /** Currently elected parent client. This is always an interactive client. */\n    readonly electedParent: ITrackedClient | undefined;\n    /** Sequence number of most recent election. */\n    readonly electionSequenceNumber: number;\n    /** Marks the currently elected client as invalid, and elects the next eligible client. */\n    incrementElectedClient(sequenceNumber: number): void;\n    /** Resets the currently elected client back to the oldest eligible client. */\n    resetElectedClient(sequenceNumber: number): void;\n    /** Peeks at what the next elected client would be if incrementElectedClient were called. */\n    peekNextElectedClient(): ITrackedClient | undefined;\n    /** Returns a sorted array of all the eligible clients in the collection. */\n    getAllEligibleClients(): ITrackedClient[];\n    /** Serialize election data */\n    serialize(): ISerializedElection;\n}\n\n/**\n * Adapter for OrderedClientCollection, with the purpose of deterministically maintaining\n * a currently elected client, excluding ineligible clients, in a distributed fashion.\n * This can be true as long as incrementElectedClient and resetElectedClient calls\n * are called under the same conditions for all clients.\n */\nexport class OrderedClientElection\n    extends TypedEventEmitter<IOrderedClientElectionEvents>\n    implements IOrderedClientElection {\n    private _eligibleCount: number = 0;\n    private _electedClient: ILinkedClient | undefined;\n    private _electedParent: ILinkedClient | undefined;\n    private _electionSequenceNumber: number;\n\n    public get eligibleCount() {\n        return this._eligibleCount;\n    }\n    public get electionSequenceNumber() {\n        return this._electionSequenceNumber;\n    }\n\n    /**\n     * OrderedClientCollection tracks electedClient and electedParent separately. This allows us to handle the case\n     * where a new interactive parent client has been elected, but the summarizer is still doing work, so\n     * a new summarizer should not yet be spawned. In this case, changing electedParent will cause SummaryManager\n     * to stop the current summarizer, but a new summarizer will not be spawned until the old summarizer client has\n     * left the quorum.\n     *\n     * Details:\n     *\n     * electedParent is the interactive client that has been elected to spawn a summarizer. It is typically the oldest\n     * eligible interactive client in the quorum. Only the electedParent is permitted to spawn a summarizer.\n     * Once elected, this client will remain the electedParent until it leaves the quorum or the summarizer that\n     * it spawned stops producing summaries, at which point a new electedParent will be chosen.\n     *\n     * electedClient is the non-interactive summarizer client if one exists. If not, then electedClient is equal to\n     * electedParent. If electedParent === electedClient, this is the signal for electedParent to spawn a new\n     * electedClient. Once a summarizer client becomes electedClient, a new summarizer will not be spawned until\n     * electedClient leaves the quorum.\n     *\n     * A typical sequence looks like this:\n     * i. Begin by electing A. electedParent === A, electedClient === A.\n     * ii. SummaryManager running on A spawns a summarizer client, A'. electedParent === A, electedClient === A'\n     * iii. A' stops producing summaries. A new parent client, B, is elected. electedParent === B, electedClient === A'\n     * iv. SummaryManager running on A detects the change to electedParent and tells the summarizer to stop, but A'\n     *      is in mid-summarization. No new summarizer is spawned, as electedParent !== electedClient.\n     * v. A' completes its summary, and the summarizer and backing client are torn down.\n     * vi. A' leaves the quorum, and B takes its place as electedClient. electedParent === B, electedClient === B\n     * vii. SummaryManager running on B spawns a summarizer client, B'. electedParent === B, electedClient === B'\n     */\n    public get electedClient() {\n        return this._electedClient;\n    }\n    public get electedParent() {\n        return this._electedParent;\n    }\n\n    constructor(\n        logger: ITelemetryLogger,\n        private readonly orderedClientCollection: IOrderedClientCollection,\n        /** Serialized state from summary or current sequence number at time of load if new. */\n        initialState: ISerializedElection | number,\n        private readonly isEligibleFn: (c: ITrackedClient) => boolean,\n    ) {\n        super();\n        let initialClient: ILinkedClient | undefined;\n        let initialParent: ILinkedClient | undefined;\n        for (const client of orderedClientCollection.getAllClients()) {\n            this.addClient(client, 0);\n            if (typeof initialState !== \"number\") {\n                if (client.clientId === initialState.electedClientId) {\n                    initialClient = client;\n                    if (initialState.electedParentId === undefined &&\n                        client.client.details.type !== summarizerClientType) {\n                        // If there was no elected parent in the serialized data, use this one.\n                        initialParent = client;\n                    }\n                }\n                if (client.clientId === initialState.electedParentId) {\n                    initialParent = client;\n                }\n            }\n        }\n        orderedClientCollection.on(\"addClient\", (client, seq) => this.addClient(client, seq));\n        orderedClientCollection.on(\"removeClient\", (client, seq) => this.removeClient(client, seq));\n\n        if (typeof initialState === \"number\") {\n            this._electionSequenceNumber = initialState;\n        } else {\n            // Override the initially elected client with the initial state.\n            if (initialClient?.clientId !== initialState.electedClientId) {\n                // Cannot find initially elected client, so elect undefined.\n                logger.sendErrorEvent({\n                    eventName: \"InitialElectedClientNotFound\",\n                    electionSequenceNumber: initialState.electionSequenceNumber,\n                    expectedClientId: initialState.electedClientId,\n                    electedClientId: initialClient?.clientId,\n                    clientCount: orderedClientCollection.count,\n                });\n            } else if (initialClient !== undefined && !isEligibleFn(initialClient)) {\n                // Initially elected client is ineligible, so elect next eligible client.\n                initialClient = initialParent = this.findFirstEligibleParent(initialParent);\n                logger.sendErrorEvent({\n                    eventName: \"InitialElectedClientIneligible\",\n                    electionSequenceNumber: initialState.electionSequenceNumber,\n                    expectedClientId: initialState.electedClientId,\n                    electedClientId: initialClient?.clientId,\n                });\n            }\n            this._electedParent = initialParent;\n            this._electedClient = initialClient;\n            this._electionSequenceNumber = initialState.electionSequenceNumber;\n        }\n    }\n\n    /** Tries changing the elected client, raising an event if it is different.\n     * Note that this function does no eligibility or suitability checks. If we get here, then\n     * we will set _electedClient, and we will set _electedParent if this is an interactive client.\n     */\n    private tryElectingClient(client: ILinkedClient | undefined, sequenceNumber: number): void {\n        let change = false;\n        const isSummarizerClient = client?.client.details.type === summarizerClientType;\n        const prevClient = this._electedClient;\n        if (this._electedClient !== client) {\n            // Changing the elected client. Record the sequence number and note that we have to fire an event.\n            this._electionSequenceNumber = sequenceNumber;\n            this._electedClient = client;\n            change = true;\n        }\n        if (this._electedParent !== client && !isSummarizerClient) {\n            // Changing the elected parent as well.\n            this._electedParent = client;\n            change = true;\n        }\n        if (change) {\n            this.emit(\"election\", client, sequenceNumber, prevClient);\n        }\n    }\n\n    private tryElectingParent(client: ILinkedClient | undefined, sequenceNumber: number): void {\n        if (this._electedParent !== client) {\n            this._electedParent = client;\n            this.emit(\"election\", this._electedClient, sequenceNumber, this._electedClient);\n        }\n    }\n\n    /**\n     * Helper function to find the first eligible parent client starting with the passed in client,\n     * or undefined if none are eligible.\n     * @param client - client to start checking\n     * @returns oldest eligible client starting with passed in client or undefined if none.\n     */\n    private findFirstEligibleParent(client: ILinkedClient | undefined): ILinkedClient | undefined {\n        let candidateClient = client;\n        while (candidateClient !== undefined &&\n            (!this.isEligibleFn(candidateClient) || candidateClient.client.details.type === summarizerClientType)) {\n            candidateClient = candidateClient.youngerClient;\n        }\n        return candidateClient;\n    }\n\n    /**\n     * Updates tracking for when a new client is added to the collection.\n     * Will automatically elect that new client if none is elected currently.\n     * @param client - client added to the collection\n     * @param sequenceNumber - sequence number when client was added\n     */\n    private addClient(client: ILinkedClient, sequenceNumber: number): void {\n        if (this.isEligibleFn(client)) {\n            this._eligibleCount++;\n            const newClientIsSummarizer = client.client.details.type === summarizerClientType;\n            const electedClientIsSummarizer = this._electedClient?.client.details.type === summarizerClientType;\n            // Note that we allow a summarizer client to supercede an interactive client as elected client.\n            if (this._electedClient === undefined || (!electedClientIsSummarizer && newClientIsSummarizer)) {\n                this.tryElectingClient(client, sequenceNumber);\n            } else if (this._electedParent === undefined && !newClientIsSummarizer) {\n                // This is an odd case. If the _electedClient is set, the _electedParent should be as well.\n                this.tryElectingParent(client, sequenceNumber);\n            }\n        }\n    }\n\n    /**\n     * Updates tracking for when an existing client is removed from the collection.\n     * Will automatically elect next oldest client if currently elected is removed.\n     * @param client - client removed from the collection\n     * @param sequenceNumber - sequence number when client was removed\n     */\n    private removeClient(client: ILinkedClient, sequenceNumber: number): void {\n        if (this.isEligibleFn(client)) {\n            this._eligibleCount--;\n            if (this._electedClient === client) {\n                // Removing the _electedClient. There are 2 possible cases:\n                if (this._electedParent !== client) {\n                    // 1. The _electedClient is a summarizer that we've been allowing to finish its work.\n                    // Let the _electedParent become the _electedClient so that it can start its own summarizer.\n                    if (this._electedClient.client.details.type !== summarizerClientType) {\n                        throw new UsageError(\"Elected client should be a summarizer client 1\");\n                    }\n                    this.tryElectingClient(this._electedParent, sequenceNumber);\n                } else {\n                    // 2. The _electedClient is an interactive client that has left the quorum.\n                    // Automatically shift to next oldest client.\n                    const nextClient = this.findFirstEligibleParent(this._electedParent?.youngerClient) ??\n                        this.findFirstEligibleParent(this.orderedClientCollection.oldestClient);\n                    this.tryElectingClient(nextClient, sequenceNumber);\n                }\n            } else if (this._electedParent === client) {\n                // Removing the _electedParent (but not _electedClient).\n                // Shift to the next oldest parent, but do not replace the _electedClient,\n                // which is a summarizer that is still doing work.\n                if (this._electedClient?.client.details.type !== summarizerClientType) {\n                    throw new UsageError(\"Elected client should be a summarizer client 2\");\n                }\n                const nextParent = this.findFirstEligibleParent(this._electedParent?.youngerClient) ??\n                    this.findFirstEligibleParent(this.orderedClientCollection.oldestClient);\n                this.tryElectingParent(nextParent, sequenceNumber);\n            }\n        }\n    }\n\n    public getAllEligibleClients(): ITrackedClient[] {\n        return this.orderedClientCollection.getAllClients().filter(this.isEligibleFn);\n    }\n\n    /** Advance election to the next-oldest client. This is called if the current parent is leaving the quorum,\n     * or if the current summarizer is not responsive and we want to stop it and spawn a new one.\n     */\n    public incrementElectedClient(sequenceNumber: number): void {\n        const nextClient = this.findFirstEligibleParent(this._electedParent?.youngerClient) ??\n            this.findFirstEligibleParent(this.orderedClientCollection.oldestClient);\n        if (this._electedClient === undefined || this._electedClient === this._electedParent) {\n            this.tryElectingClient(nextClient, sequenceNumber);\n        } else {\n            // The _electedClient is a summarizer and should not be replaced until it leaves the quorum.\n            // Changing the _electedParent will stop the summarizer.\n            this.tryElectingParent(nextClient, sequenceNumber);\n        }\n    }\n\n    /** (Re-)start election with the oldest client in the quorum. This is called if we need to summarize\n     * and no client has been elected.\n     */\n    public resetElectedClient(sequenceNumber: number): void {\n        const firstClient = this.findFirstEligibleParent(this.orderedClientCollection.oldestClient);\n        if (this._electedClient === undefined || this._electedClient === this._electedParent) {\n            this.tryElectingClient(firstClient, sequenceNumber);\n        } else {\n            // The _electedClient is a summarizer and should not be replaced until it leaves the quorum.\n            // Changing the _electedParent will stop the summarizer.\n            this.tryElectingParent(firstClient, sequenceNumber);\n        }\n    }\n\n    public peekNextElectedClient(): ITrackedClient | undefined {\n        return this.findFirstEligibleParent(this._electedParent?.youngerClient) ??\n            this.findFirstEligibleParent(this.orderedClientCollection.oldestClient);\n    }\n\n    public serialize(): ISerializedElection {\n        return {\n            electionSequenceNumber: this.electionSequenceNumber,\n            electedClientId: this.electedClient?.clientId,\n            electedParentId: this.electedParent?.clientId,\n        };\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport interface IThrottler {\n    /**\n     * Computes what the throttle delay should be, and records an attempt\n     * which will be used for calculating future attempt delays.\n     */\n    getDelay(): number;\n\n    /**\n     * Number of attempts that occurred within the sliding window as of\n     * the most recent delay computation.\n     */\n    readonly numAttempts: number;\n\n    /** Width of sliding delay window in milliseconds. */\n    readonly delayWindowMs: number;\n    /** Maximum delay allowed in milliseconds. */\n    readonly maxDelayMs: number;\n    /**\n     * Delay function used to calculate what the delay should be.\n     * The input is the number of attempts that occurred within the sliding window.\n     * The result is the calculated delay in milliseconds.\n     */\n    readonly delayFn: (numAttempts: number) => number;\n}\n\n/**\n * Used to give increasing delay times for throttling a single functionality.\n * Delay is based on previous attempts within specified time window, subtracting delay time.\n */\nexport class Throttler implements IThrottler {\n    private startTimes: number[] = [];\n\n    public get numAttempts() {\n        return this.startTimes.length;\n    }\n\n    /**\n     * Gets all attempt start times after compensating for the delay times\n     * by adding the delay times to the actual times.\n     */\n    public getAttempts(): readonly number[] {\n        return [...this.startTimes];\n    }\n\n    /**\n     * Latest attempt time after compensating for the delay time itself\n     * by adding the delay time to the actual time.\n     */\n    public get latestAttemptTime() {\n        return this.startTimes.length > 0 ? this.startTimes[this.startTimes.length - 1] : undefined;\n    }\n\n    constructor(\n        /** Width of sliding delay window in milliseconds. */\n        public readonly delayWindowMs: number,\n        /** Maximum delay allowed in milliseconds. */\n        public readonly maxDelayMs: number,\n        /**\n         * Delay function used to calculate what the delay should be.\n         * The input is the number of attempts that occurred within the sliding window.\n         * The result is the calculated delay in milliseconds.\n         */\n        public readonly delayFn: (numAttempts: number) => number,\n    ) { }\n\n    public getDelay() {\n        const now = Date.now();\n\n        const latestAttemptTime = this.latestAttemptTime;\n        if (latestAttemptTime !== undefined) {\n            // If getDelay was called sooner than the most recent delay,\n            // subtract the remaining time, since we previously added it.\n            const earlyMs = latestAttemptTime - now;\n            if (earlyMs > 0) {\n                this.startTimes = this.startTimes.map((t) => t - earlyMs);\n            }\n        }\n\n        // Remove all attempts that have already fallen out of the window.\n        this.startTimes = this.startTimes.filter((t) => (now - t) < this.delayWindowMs);\n\n        // Compute delay, but do not exceed the specified max delay.\n        const delayMs = Math.min(this.delayFn(this.startTimes.length), this.maxDelayMs);\n\n        // Record this attempt start time.\n        this.startTimes.push(now);\n\n        // Account for the delay time, by effectively removing it from the delay window.\n        this.startTimes = this.startTimes.map((t) => t + delayMs);\n\n        if (delayMs === this.maxDelayMs) {\n            // We hit max delay, so adding more won't affect anything.\n            // Shift off oldest time to stop this array from growing forever.\n            this.startTimes.shift();\n        }\n\n        return delayMs;\n    }\n}\n\n/**\n * Helper function to generate simple exponential throttle functions.\n * f(n) = [coefficient] x ([multiplier]^n) + [flatOffset]\n * where n = number of attempts, and f(n) = delay time in milliseconds.\n * If not provided, coefficient will default to 1, multiplier to 2,\n * minimum delay to 0, and the offset to 0, yielding:\n * 0 ms, 2 ms, 4 ms, 8 ms, ..., 2^n ms\n * where M = multiplier; an exponential back-off.\n * Use initialDelay to decide what should happen when numAttempts is 0,\n * leave it undefined to not special case.\n */\n export const formExponentialFn = ({\n    multiplier = 2,\n    coefficient = 1,\n    offset = 0,\n    initialDelay = undefined as number | undefined,\n} = {}): IThrottler[\"delayFn\"] => (numAttempts) => Math.max(0,\n    numAttempts <= 0 && initialDelay !== undefined\n    ? initialDelay\n    : coefficient * (Math.pow(multiplier, numAttempts)) + offset);\n\n/** f(n) = C x (B^(n+A)) + F = (C x B^A) x B^n + F */\nexport const formExponentialFnWithAttemptOffset = (attemptOffset: number, {\n    multiplier = 2,\n    coefficient = 1,\n    offset = 0,\n    initialDelay = undefined as number | undefined,\n} = {}) => formExponentialFn({\n    multiplier,\n    coefficient: coefficient * Math.pow(multiplier, attemptOffset),\n    offset,\n    initialDelay,\n});\n\n/**\n * Helper function to generate simple linear throttle functions.\n * f(n) = [coefficient] x n + [flatOffset]\n * where n = number of attempts, and f(n) = delay time in milliseconds.\n * If not provided, coefficient will default to 1, and offset to 0, yielding:\n * 0 ms, 1 ms, 2 ms, 3 ms, ..., n ms delays; a linear back-off.\n */\nexport const formLinearFn = ({\n    coefficient = 1,\n    offset = 0,\n} = {}): IThrottler[\"delayFn\"] => (numAttempts) => Math.max(0,\n    coefficient * numAttempts + offset);\n\n/** f(n) = C x (n+A) + F = C x n + (C x A + F) */\nexport const formLinearFnWithAttemptOffset = (attemptOffset: number, {\n    coefficient = 1,\n    offset = 0,\n} = {}) => formLinearFn({\n    coefficient,\n    offset: coefficient * attemptOffset + offset,\n});\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { assert, Deferred } from \"@fluidframework/common-utils\";\nimport { SummarizerStopReason, IConnectableRuntime, ISummaryCancellationToken } from \"./summarizerTypes\";\n\n/* Similar to AbortController, but using promise instead of events */\nexport interface ICancellableSummarizerController extends ISummaryCancellationToken {\n    stop(reason: SummarizerStopReason): void;\n}\n\n/**\n * Can be useful in testing as well as in places where caller does not use cancellation.\n * This object implements ISummaryCancellationToken interface but cancellation is never leveraged.\n */\nexport const neverCancelledSummaryToken: ISummaryCancellationToken = {\n    cancelled: false,\n    waitCancelled: new Promise(() => {}),\n};\n\n/**\n * Helper class to coordinate something that needs to run only while connected.\n * This provides promises that resolve as it starts or stops.  Stopping happens\n * when disconnected or if stop() is called.\n */\nexport class RunWhileConnectedCoordinator implements ICancellableSummarizerController {\n    private _cancelled = false;\n    private readonly stopDeferred = new Deferred<SummarizerStopReason>();\n\n    public get cancelled() {\n        if (!this._cancelled) {\n            assert(this.runtime.deltaManager.active, 0x25d /* \"We should never connect as 'read'\" */);\n\n            // This check can't be enabled in current design due to lastSummary flow, where\n            // summarizer for closed container stays around and can produce one more summary.\n            // Currently we solve the problem of overlapping summarizer by doing wait in\n            // SummaryManager.createSummarizer()\n            // Better solution would involve these steps:\n            // 1. Summarizer selection logic should chose summarizing client (with clientType === \"summarizer\")\n            // if such client exists.\n            // 2. Summarizer should be updated about such changes (to update onBehalfOfClientId)\n            //\n            // assert(this.runtime.summarizerClientId === this.onBehalfOfClientId ||\n            //    this.runtime.summarizerClientId === this.runtime.clientId, \"onBehalfOfClientId\");\n        }\n\n        return this._cancelled;\n    }\n\n    /**\n     * Returns a promise that resolves once stopped either externally or by disconnect.\n     */\n     public get waitCancelled(): Promise<SummarizerStopReason> {\n        return this.stopDeferred.promise;\n    }\n\n    public static async create(runtime: IConnectableRuntime) {\n        const obj = new RunWhileConnectedCoordinator(runtime);\n        await obj.waitStart();\n        return obj;\n    }\n\n    protected constructor(private readonly runtime: IConnectableRuntime) {\n    }\n\n    /**\n     * Starts and waits for a promise which resolves when connected.\n     * The promise will also resolve if stopped either externally or by disconnect.\n     *\n     * We only listen on disconnected event for clientType === \"summarizer\" container!\n     * And only do it here - no other place should check it! That way we have only one place\n     * that controls policy and it's easy to change policy in the future if we want to!\n     * We do not listen for \"main\" (aka interactive) container disconnect here, as it's\n     * responsibility of SummaryManager to decide if that's material or not. There are cases\n     * like \"lastSummary\", or main client experiencing nacks / disconnects due to hitting limit\n     * of non-summarized ops, where can make determination to continue with summary even if main\n     * client is disconnected.\n     */\n    protected async waitStart() {\n        if (this.runtime.disposed) {\n            this.stop(\"summarizerClientDisconnected\");\n            return;\n        }\n\n        this.runtime.once(\"dispose\", () => this.stop(\"summarizerClientDisconnected\"));\n\n        if (!this.runtime.connected) {\n            const waitConnected = new Promise<void>((resolve) =>\n                this.runtime.once(\"connected\", resolve));\n            await Promise.race([waitConnected, this.waitCancelled]);\n        }\n        this.runtime.once(\"disconnected\", () => this.stop(\"summarizerClientDisconnected\"));\n    }\n\n    /**\n     * Stops running.\n     */\n    public stop(reason: SummarizerStopReason): void {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            this.stopDeferred.resolve(reason);\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport EventEmitter from \"events\";\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { assert, performance } from \"@fluidframework/common-utils\";\nimport { ISequencedDocumentMessage } from \"@fluidframework/protocol-definitions\";\nimport { ChildLogger } from \"@fluidframework/telemetry-utils\";\n\nexport class BatchTracker {\n    private readonly logger: ITelemetryLogger;\n    private startBatchSequenceNumber: number | undefined;\n    private trackedBatchCount: number = 0;\n    private batchProcessingStartTimeStamp: number | undefined;\n\n    constructor(\n        private readonly batchEventEmitter: EventEmitter,\n        logger: ITelemetryLogger,\n        batchLengthThreshold: number,\n        batchCountSamplingRate: number,\n        dateTimeProvider: () => number = () => performance.now(),\n    ) {\n        this.logger = ChildLogger.create(logger, \"Batching\");\n\n        this.batchEventEmitter.on(\"batchBegin\", (message: ISequencedDocumentMessage) => {\n            this.startBatchSequenceNumber = message.sequenceNumber;\n            this.batchProcessingStartTimeStamp = dateTimeProvider();\n            this.trackedBatchCount++;\n        });\n\n        this.batchEventEmitter.on(\"batchEnd\", (error: any | undefined, message: ISequencedDocumentMessage) => {\n            assert(\n                this.startBatchSequenceNumber !== undefined && this.batchProcessingStartTimeStamp !== undefined,\n                0x2ba /* \"batchBegin must fire before batchEnd\" */);\n\n            const length = message.sequenceNumber - this.startBatchSequenceNumber + 1;\n            if (length >= batchLengthThreshold) {\n                this.logger.sendErrorEvent({\n                    eventName: \"LengthTooBig\",\n                    length,\n                    threshold: batchLengthThreshold,\n                    batchEndSequenceNumber: message.sequenceNumber,\n                    duration: dateTimeProvider() - this.batchProcessingStartTimeStamp,\n                    batchError: error !== undefined,\n                });\n            }\n\n            if (this.trackedBatchCount % batchCountSamplingRate === 0) {\n                this.logger.sendPerformanceEvent({\n                    eventName: \"Length\",\n                    length,\n                    samplingRate: batchCountSamplingRate,\n                    batchEndSequenceNumber: message.sequenceNumber,\n                    duration: dateTimeProvider() - this.batchProcessingStartTimeStamp,\n                });\n            }\n\n            this.startBatchSequenceNumber = undefined;\n            this.batchProcessingStartTimeStamp = undefined;\n        });\n    }\n}\n\n/**\n * Track batch sizes in terms of op counts and processing times\n *\n * @param batchEventEmitter - event emitter which tracks the lifecycle of batch operations\n * @param logger - logger\n * @param batchLengthThreshold - threshold for the length of a batch when to send an error event\n * @param batchCountSamplingRate - rate for batches for which to send an event with its characteristics\n * @returns\n */\nexport const BindBatchTracker = (\n    batchEventEmitter: EventEmitter,\n    logger: ITelemetryLogger,\n    batchLengthThreshold: number = 1000,\n    batchCountSamplingRate: number = 1000,\n) => new BatchTracker(batchEventEmitter, logger, batchLengthThreshold, batchCountSamplingRate);\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { assert, bufferToString, stringToBuffer } from \"@fluidframework/common-utils\";\nimport { IDocumentStorageService, ISummaryContext } from \"@fluidframework/driver-definitions\";\nimport {\n    ICreateBlobResponse,\n    ISnapshotTree,\n    ISummaryHandle,\n    ISummaryTree,\n    IVersion,\n} from \"@fluidframework/protocol-definitions\";\nimport { ISnapshotTreeWithBlobContents } from \"@fluidframework/container-definitions\";\n\n/**\n * Serialized blobs from a snapshot. Used to load offline.\n */\nexport interface ISerializedBaseSnapshotBlobs {\n    [id: string]: string;\n}\n\n/**\n * A storage wrapper that can serialize blobs from a snapshot tree and then use them to rehydrate.\n * Used in offline load/attached dehydration to save snapshot blobs that are still needed but may have been deleted.\n */\nexport class SerializedSnapshotStorage implements IDocumentStorageService {\n    constructor(\n        private readonly storageGetter: () => IDocumentStorageService,\n        private readonly blobs: ISerializedBaseSnapshotBlobs,\n    ) { }\n\n    public static async serializeTree(\n        snapshot: ISnapshotTree,\n        storage: IDocumentStorageService,\n    ): Promise<ISerializedBaseSnapshotBlobs> {\n        const blobs = {};\n        await this.serializeTreeCore(snapshot, blobs, storage);\n        return blobs;\n    }\n\n    private static async serializeTreeCore(\n        tree: ISnapshotTree,\n        blobs: ISerializedBaseSnapshotBlobs,\n        storage: IDocumentStorageService,\n    ) {\n        const treePs: Promise<any>[] = [];\n        for (const subTree of Object.values(tree.trees)) {\n            treePs.push(this.serializeTreeCore(subTree, blobs, storage));\n        }\n        for (const id of Object.values(tree.blobs)) {\n            const blob = await storage.readBlob(id);\n            // ArrayBufferLike will not survive JSON.stringify()\n            blobs[id] = bufferToString(blob, \"utf8\");\n        }\n        return Promise.all(treePs);\n    }\n\n    public static serializeTreeWithBlobContents(\n        snapshot: ISnapshotTreeWithBlobContents,\n    ): ISerializedBaseSnapshotBlobs {\n        const blobs = {};\n        this.serializeTreeWithBlobContentsCore(snapshot, blobs);\n        return blobs;\n    }\n\n    private static serializeTreeWithBlobContentsCore(\n        tree: ISnapshotTreeWithBlobContents,\n        blobs: ISerializedBaseSnapshotBlobs,\n    ) {\n        for (const subTree of Object.values(tree.trees)) {\n            this.serializeTreeWithBlobContentsCore(subTree, blobs);\n        }\n        for (const id of Object.values(tree.blobs)) {\n            const blob = tree.blobsContents[id];\n            assert(!!blob, 0x2ec /* \"Blob must be present in blobsContents\" */);\n            // ArrayBufferLike will not survive JSON.stringify()\n            blobs[id] = bufferToString(blob, \"utf8\");\n        }\n    }\n\n    private _storage?: IDocumentStorageService;\n    private get storage(): IDocumentStorageService {\n        // avoid calling it until we need it since it will be undefined if we're not connected\n        // and we shouldn't need it in this case anyway\n        if (this._storage) {\n            return this._storage;\n        }\n        this._storage = this.storageGetter();\n        return this._storage;\n    }\n\n    public get repositoryUrl(): string { return this.storage.repositoryUrl; }\n\n    /**\n     * Reads the object with the given ID, returns content in arrayBufferLike\n     */\n    public async readBlob(id: string): Promise<ArrayBufferLike> {\n        if (this.blobs[id] !== undefined) {\n            return stringToBuffer(this.blobs[id], \"utf8\");\n        }\n        return this.storage.readBlob(id);\n    }\n\n    /**\n     * Returns the snapshot tree.\n     */\n    // eslint-disable-next-line @rushstack/no-new-null\n    public async getSnapshotTree(version?: IVersion): Promise<ISnapshotTree | null> {\n        return this.storage.getSnapshotTree(version);\n    }\n\n    /**\n     * Retrieves all versions of the document starting at the specified versionId - or null if from the head\n     */\n    // eslint-disable-next-line @rushstack/no-new-null\n    public async getVersions(versionId: string | null, count: number): Promise<IVersion[]> {\n        return this.storage.getVersions(versionId, count);\n    }\n\n    /**\n     * Creates a blob out of the given buffer\n     */\n    public async createBlob(file: ArrayBufferLike): Promise<ICreateBlobResponse> {\n        return this.storage.createBlob(file);\n    }\n\n    /**\n     * Uploads a summary tree to storage using the given context for reference of previous summary handle.\n     * The ISummaryHandles in the uploaded tree should have paths to indicate which summary object they are\n     * referencing from the previously acked summary.\n     * Returns the uploaded summary handle.\n     */\n    public async uploadSummaryWithContext(summary: ISummaryTree, context: ISummaryContext): Promise<string> {\n        return this.storage.uploadSummaryWithContext(summary, context);\n    }\n\n    /**\n     * Retrieves the commit that matches the packfile handle. If the packfile has already been committed and the\n     * server has deleted it this call may result in a broken promise.\n     */\n    public async downloadSummary(handle: ISummaryHandle): Promise<ISummaryTree> {\n        return this.storage.downloadSummary(handle);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IDeltaManager } from \"@fluidframework/container-definitions\";\nimport {\n    IDocumentMessage,\n    ISequencedDocumentMessage,\n    ISequencedDocumentSystemMessage,\n} from \"@fluidframework/protocol-definitions\";\nimport { isRuntimeMessage } from \"@fluidframework/driver-utils\";\n\nexport class OpTracker {\n    /**\n     * Used for storing the message content size when\n     * the message is pushed onto the inbound queue.\n     */\n    private readonly messageSize = new Map<number, number>();\n    private _nonSystemOpCount: number = 0;\n    public get nonSystemOpCount(): number {\n        return this._nonSystemOpCount;\n    }\n\n    private _opsSizeAccumulator: number = 0;\n    public get opsSizeAccumulator(): number {\n        return this._opsSizeAccumulator;\n    }\n\n    public constructor(\n        deltaManager: IDeltaManager<ISequencedDocumentMessage, IDocumentMessage>,\n        disabled: boolean,\n    ) {\n        if (disabled) {\n            return;\n        }\n\n        // Record the message content size when we receive it.\n        // We should not log this value, as summarization can happen between the time the message\n        // is received and until it is processed (the 'op' event).\n        deltaManager.inbound.on(\"push\", (message: ISequencedDocumentMessage) => {\n            // Some messages my already have string contents at this point,\n            // so stringifying them again will add inaccurate overhead.\n            const messageContent = typeof message.contents === \"string\" ?\n                message.contents :\n                JSON.stringify(message.contents);\n            const messageData = OpTracker.messageHasData(message) ? message.data : \"\";\n            this.messageSize[OpTracker.messageId(message)] = messageContent.length + messageData.length;\n        });\n\n        deltaManager.on(\"op\", (message: ISequencedDocumentMessage) => {\n            this._nonSystemOpCount += !isRuntimeMessage(message) ? 0 : 1;\n            const id = OpTracker.messageId(message);\n            this._opsSizeAccumulator += this.messageSize[id] ?? 0;\n            this.messageSize.delete(id);\n        });\n    }\n\n    private static messageId(message: ISequencedDocumentMessage): number {\n        return message.sequenceNumber;\n    }\n\n    private static messageHasData(message: ISequencedDocumentMessage): message is ISequencedDocumentSystemMessage {\n        return (message as ISequencedDocumentSystemMessage).data !== undefined;\n    }\n\n    public reset() {\n        this._nonSystemOpCount = 0;\n        this._opsSizeAccumulator = 0;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { assert } from \"@fluidframework/common-utils\";\nimport { RuntimeHeaders } from \"@fluidframework/container-runtime\";\nimport {\n    IFluidHandle,\n    IFluidHandleContext,\n    IRequest,\n    IResponse,\n    FluidObject,\n    IFluidRouter,\n} from \"@fluidframework/core-interfaces\";\nimport { create404Response, exceptionToResponse, responseToException } from \"@fluidframework/runtime-utils\";\n\n/**\n * This handle is used to dynamically load a Fluid object on a remote client and is created on parsing a serialized\n * FluidObjectHandle.\n * This class is used to generate an IFluidHandle when de-serializing any all handles (including handles to DDSes,\n * custom objects) that are stored in SharedObjects. The Data Store or SharedObject corresponding to the\n * IFluidHandle can be retrieved by calling `get` on it.\n */\nexport class RemoteFluidObjectHandle implements IFluidHandle {\n    public get IFluidRouter() { return this; }\n    public get IFluidHandleContext() { return this; }\n    public get IFluidHandle() { return this; }\n\n    public readonly isAttached = true;\n    private objectP: Promise<FluidObject> | undefined;\n\n    /**\n     * Creates a new RemoteFluidObjectHandle when parsing an IFluidHandle.\n     * @param absolutePath - The absolute path to the handle from the container runtime.\n     * @param routeContext - The root IFluidHandleContext that has a route to this handle.\n     */\n    constructor(\n        public readonly absolutePath: string,\n        public readonly routeContext: IFluidHandleContext,\n    ) {\n        assert(absolutePath.startsWith(\"/\"), 0x19d /* \"Handles should always have absolute paths\" */);\n    }\n\n    public async get(): Promise<any> {\n        if (this.objectP === undefined) {\n            // Add `viaHandle` header to distinguish from requests from non-handle paths.\n            const request: IRequest = { url: this.absolutePath, headers: { [RuntimeHeaders.viaHandle]: true } };\n            this.objectP = this.routeContext.resolveHandle(request)\n                .then<FluidObject>((response) => {\n                    if (response.mimeType === \"fluid/object\") {\n                        const fluidObject: FluidObject = response.value;\n                        return fluidObject;\n                    }\n                    throw responseToException(response, request);\n                });\n        }\n        return this.objectP;\n    }\n\n    public attachGraph(): void {\n        return;\n    }\n\n    public bind(handle: IFluidHandle): void {\n        handle.attachGraph();\n    }\n\n    public async request(request: IRequest): Promise<IResponse> {\n        try {\n            const object: FluidObject<IFluidRouter> = await this.get();\n            const router = object.IFluidRouter;\n\n            return router !== undefined\n                ? router.request(request)\n                : create404Response(request);\n        } catch (error) {\n            return exceptionToResponse(error);\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\n// RATIONALE: Many methods consume and return 'any' by necessity.\n/* eslint-disable @typescript-eslint/no-unsafe-return */\n\nimport { generateHandleContextPath } from \"@fluidframework/runtime-utils\";\nimport { IFluidHandle, IFluidHandleContext } from \"@fluidframework/core-interfaces\";\nimport { RemoteFluidObjectHandle } from \"./remoteObjectHandle\";\n\n/**\n * JSON serialized form of an IFluidHandle\n */\n export interface ISerializedHandle {\n    // Marker to indicate to JSON.parse that the object is a Fluid handle\n    type: \"__fluid_handle__\";\n\n    // URL to the object. Relative URLs are relative to the handle context passed to the stringify.\n    url: string;\n}\n\nexport const isSerializedHandle = (value: any): value is ISerializedHandle =>\n    value?.type === \"__fluid_handle__\";\n\nexport interface IFluidSerializer {\n    /**\n     * Given a mostly-plain object that may have handle objects embedded within, will return a fully-plain object\n     * where any embedded IFluidHandles have been replaced with a serializable form.\n     *\n     * The original `input` object is not mutated.  This method will shallowly clones all objects in the path from\n     * the root to any replaced handles.  (If no handles are found, returns the original object.)\n     */\n    encode(value: any, bind: IFluidHandle): any;\n\n    /**\n     * Given a fully-jsonable object tree that may have encoded handle objects embedded within, will return an\n     * equivalent object tree where any encoded IFluidHandles have been replaced with their decoded form.\n     *\n     * The original `input` object is not mutated.  This method will shallowly clone all objects in the path from\n     * the root to any replaced handles.  (If no handles are found, returns the original object.)\n     *\n     * The decoded handles are implicitly bound to the handle context of this serializer.\n     */\n    decode(input: any): any;\n\n    /**\n     * Stringifies a given value. Converts any IFluidHandle to its stringified equivalent.\n     */\n    stringify(value: any, bind: IFluidHandle): string;\n\n    /**\n     * Parses the given JSON input string and returns the JavaScript object defined by it. Any Fluid\n     * handles will be realized as part of the parse\n     */\n    parse(value: string): any;\n}\n\n/**\n * Data Store serializer implementation\n */\nexport class FluidSerializer implements IFluidSerializer {\n    private readonly root: IFluidHandleContext;\n\n    public constructor(\n        private readonly context: IFluidHandleContext,\n        // To be called whenever a handle is parsed by this serializer.\n        private readonly handleParsedCb: (handle: IFluidHandle) => void,\n    ) {\n        this.root = this.context;\n        while (this.root.routeContext !== undefined) {\n            this.root = this.root.routeContext;\n        }\n    }\n\n    public get IFluidSerializer() { return this; }\n\n    /**\n     * Given a mostly-jsonable object tree that may have handle objects embedded within, will return a\n     * fully-jsonable object tree where any embedded IFluidHandles have been replaced with a serializable form.\n     *\n     * The original `input` object is not mutated.  This method will shallowly clone all objects in the path from\n     * the root to any replaced handles.  (If no handles are found, returns the original object.)\n     *\n     * Any unbound handles encountered are bound to the provided IFluidHandle.\n     */\n     public encode(\n        input: any,\n        bind: IFluidHandle,\n    ) {\n        // If the given 'input' cannot contain handles, return it immediately.  Otherwise,\n        // return the result of 'recursivelyReplace()'.\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        return !!input && typeof input === \"object\"\n            ? this.recursivelyReplace(input, this.encodeValue, bind)\n            : input;\n    }\n\n    /**\n     * Given a fully-jsonable object tree that may have encoded handle objects embedded within, will return an\n     * equivalent object tree where any encoded IFluidHandles have been replaced with their decoded form.\n     *\n     * The original `input` object is not mutated.  This method will shallowly clone all objects in the path from\n     * the root to any replaced handles.  (If no handles are found, returns the original object.)\n     *\n     * The decoded handles are implicitly bound to the handle context of this serializer.\n     */\n     public decode(input: any) {\n        // If the given 'input' cannot contain handles, return it immediately.  Otherwise,\n        // return the result of 'recursivelyReplace()'.\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        return !!input && typeof input === \"object\"\n            ? this.recursivelyReplace(input, this.decodeValue)\n            : input;\n    }\n\n    public stringify(input: any, bind: IFluidHandle) {\n        return JSON.stringify(input, (key, value) => this.encodeValue(value, bind));\n    }\n\n    // Parses the serialized data - context must match the context with which the JSON was stringified\n    public parse(input: string) {\n        return JSON.parse(input, (key, value) => this.decodeValue(value));\n    }\n\n    // If the given 'value' is an IFluidHandle, returns the encoded IFluidHandle.\n    // Otherwise returns the original 'value'.  Used by 'encode()' and 'stringify()'.\n    private readonly encodeValue = (value: any, bind: IFluidHandle) => {\n        // Detect if 'value' is an IFluidHandle.\n        const handle = value?.IFluidHandle;\n\n        // If 'value' is an IFluidHandle return its encoded form.\n        return handle !== undefined\n            ? this.serializeHandle(handle, bind)\n            : value;\n    };\n\n    // If the given 'value' is an encoded IFluidHandle, returns the decoded IFluidHandle.\n    // Otherwise returns the original 'value'.  Used by 'decode()' and 'parse()'.\n    private readonly decodeValue = (value: any) => {\n        // If 'value' is a serialized IFluidHandle return the deserialized result.\n        if (isSerializedHandle(value)) {\n            // Old documents may have handles with relative path in their summaries. Convert these to absolute\n            // paths. This will ensure that future summaries will have absolute paths for these handles.\n            const absolutePath = value.url.startsWith(\"/\")\n                ? value.url\n                : generateHandleContextPath(value.url, this.context);\n\n            const parsedHandle = new RemoteFluidObjectHandle(absolutePath, this.root);\n            this.handleParsedCb(parsedHandle);\n            return parsedHandle;\n        } else {\n            return value;\n        }\n    };\n\n    // Invoked for non-null objects to recursively replace references to IFluidHandles.\n    // Clones as-needed to avoid mutating the `input` object.  If no IFluidHandes are present,\n    // returns the original `input`.\n    private recursivelyReplace(\n        input: any,\n        replacer: (input: any, context: any) => any,\n        context?: any,\n    ) {\n        // Note: Caller is responsible for ensuring that `input` is defined / non-null.\n        //       (Required for Object.keys() below.)\n\n        // Execute the `replace` on the current input.  Note that Caller is responsible for ensuring that `input`\n        // is a non-null object.\n        const maybeReplaced = replacer(input, context);\n\n        // If the replacer made a substitution there is no need to decscend further. IFluidHandles are always\n        // leaves in the object graph.\n        if (maybeReplaced !== input) {\n            return maybeReplaced;\n        }\n\n        // Otherwise descend into the object graph looking for IFluidHandle instances.\n        let clone: object | undefined;\n        for (const key of Object.keys(input)) {\n            const value = input[key];\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            if (!!value && typeof value === \"object\") {\n                // Note: Except for IFluidHandle, `input` must not contain circular references (as object must\n                //       be JSON serializable.)  Therefore, guarding against infinite recursion here would only\n                //       lead to a later error when attempting to stringify().\n                const replaced = this.recursivelyReplace(value, replacer, context);\n\n                // If the `replaced` object is different than the original `value` then the subgraph contained one\n                // or more handles.  If this happens, we need to return a clone of the `input` object where the\n                // current property is replaced by the `replaced` value.\n                if (replaced !== value) {\n                    // Lazily create a shallow clone of the `input` object if we haven't done so already.\n                    clone = clone ?? (Array.isArray(input)\n                        ? [...input]\n                        : { ...input });\n\n                    // Overwrite the current property `key` in the clone with the `replaced` value.\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    clone![key] = replaced;\n                }\n            }\n        }\n        return clone ?? input;\n    }\n\n    protected serializeHandle(handle: IFluidHandle, bind: IFluidHandle) {\n        bind.bind(handle);\n        return {\n            type: \"__fluid_handle__\",\n            url: handle.absolutePath,\n        };\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    IFluidHandleContext,\n} from \"@fluidframework/core-interfaces\";\nimport { FluidObjectHandle } from \"@fluidframework/datastore\";\nimport { ISharedObject } from \"./types\";\n\n/**\n * Handle for shared object\n * This object is used for already loaded (in-memory) shared object\n * and is used only for serialization purposes.\n * De-serialization process goes through FluidObjectHandle and request flow:\n * FluidDataStoreRuntime.request() recognizes requests in the form of '/\\<shared object id\\>'\n * and loads shared object.\n */\nexport class SharedObjectHandle extends FluidObjectHandle<ISharedObject> {\n    /**\n     * Whether services have been attached for the associated shared object.\n     */\n    public get isAttached(): boolean {\n        return this.value.isAttached();\n    }\n\n    /**\n     * Creates a new SharedObjectHandle.\n     * @param value - The shared object this handle is for.\n     * @param path - The id of the shared object. It is also the path to this object relative to the routeContext.\n     * @param routeContext - The parent IFluidHandleContext that has a route to this handle.\n     */\n    constructor(\n        value: ISharedObject,\n        path: string,\n        routeContext: IFluidHandleContext,\n    ) {\n        super(value, path, routeContext);\n    }\n\n    /**\n     * Attaches all bound handles first (which may in turn attach further handles), then attaches this handle.\n     * When attaching the handle, it registers the associated shared object.\n     */\n    public attachGraph(): void {\n        this.value.bindToContext();\n        super.attachGraph();\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IFluidHandle } from \"@fluidframework/core-interfaces\";\nimport { FluidSerializer } from \"./serializer\";\n\n/**\n * Serializer implementation for serializing handles during summary.\n */\nexport class SummarySerializer extends FluidSerializer {\n    private readonly serializedRoutes: Set<string> = new Set();\n    public getSerializedRoutes(): string[] {\n        return Array.from(this.serializedRoutes);\n    }\n\n    protected serializeHandle(handle: IFluidHandle, bind: IFluidHandle) {\n        this.serializedRoutes.add(handle.absolutePath);\n        return super.serializeHandle(handle, bind);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { v4 as uuid } from \"uuid\";\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { assert, EventEmitterEventType } from \"@fluidframework/common-utils\";\nimport { AttachState } from \"@fluidframework/container-definitions\";\nimport { IFluidHandle } from \"@fluidframework/core-interfaces\";\nimport {\n    IChannelAttributes,\n    IFluidDataStoreRuntime,\n    IChannelStorageService,\n    IChannelServices,\n} from \"@fluidframework/datastore-definitions\";\nimport { ISequencedDocumentMessage } from \"@fluidframework/protocol-definitions\";\nimport {\n    IGarbageCollectionData,\n    ISummaryTreeWithStats,\n    ITelemetryContext,\n    blobCountPropertyName,\n    totalBlobSizePropertyName,\n} from \"@fluidframework/runtime-definitions\";\nimport { ChildLogger, EventEmitterWithErrorHandling } from \"@fluidframework/telemetry-utils\";\nimport { DataProcessingError } from \"@fluidframework/container-utils\";\nimport { FluidSerializer, IFluidSerializer } from \"./serializer\";\nimport { SharedObjectHandle } from \"./handle\";\nimport { SummarySerializer } from \"./summarySerializer\";\nimport { ISharedObject, ISharedObjectEvents } from \"./types\";\n\n/**\n *  Base class from which all shared objects derive\n */\nexport abstract class SharedObjectCore<TEvent extends ISharedObjectEvents = ISharedObjectEvents>\n    extends EventEmitterWithErrorHandling<TEvent> implements ISharedObject<TEvent> {\n    public get IFluidLoadable() { return this; }\n\n    /**\n     * The handle referring to this SharedObject\n     */\n    public readonly handle: IFluidHandle;\n\n    /**\n     * Telemetry logger for the shared object\n     */\n    protected readonly logger: ITelemetryLogger;\n\n    /**\n     * Connection state\n     */\n    private _connected = false;\n\n    /**\n     * Services used by the shared object\n     */\n    private services: IChannelServices | undefined;\n\n    /**\n     * True if the dds is bound to its parent.\n     */\n    private _isBoundToContext: boolean = false;\n\n    /**\n     * Tracks error that closed this object.\n     */\n    private closeError?: ReturnType<typeof DataProcessingError.wrapIfUnrecognized>;\n\n    /**\n     * Gets the connection state\n     * @returns The state of the connection\n     */\n    public get connected(): boolean {\n        return this._connected;\n    }\n\n    /**\n     * @param id - The id of the shared object\n     * @param runtime - The IFluidDataStoreRuntime which contains the shared object\n     * @param attributes - Attributes of the shared object\n     */\n    constructor(\n        public id: string,\n        protected runtime: IFluidDataStoreRuntime,\n        public readonly attributes: IChannelAttributes) {\n        super((event: EventEmitterEventType, e: any) => this.eventListenerErrorHandler(event, e));\n\n        assert(!id.includes(\"/\"), 0x304 /* Id cannot contain slashes */);\n\n        this.handle = new SharedObjectHandle(\n            this,\n            id,\n            runtime.IFluidHandleContext);\n\n        this.logger = ChildLogger.create(\n            runtime.logger,\n            undefined,\n            { all: { sharedObjectId: uuid() } },\n        );\n\n        this.attachListeners();\n    }\n\n    /**\n     * Marks this objects as closed. Any attempt to change it (local changes or processing remote ops)\n     * would result in same error thrown. If called multiple times, only first error is remembered.\n     * @param error - error object that is thrown whenever an attempt is made to modify this object\n     */\n    private closeWithError(error: any) {\n        if (this.closeError === undefined) {\n            this.closeError = error;\n        }\n    }\n\n    /**\n     * Verifies that this object is not closed via closeWithError(). If it is, throws an error used to close it.\n     */\n    private verifyNotClosed() {\n        if (this.closeError !== undefined) {\n            throw this.closeError;\n        }\n    }\n\n    /**\n     * Event listener handler helper that can be used to react to exceptions thrown from event listeners\n     * It wraps error with DataProcessingError, closes this object and throws resulting error.\n     * See closeWithError() for more details\n     * Ideally such situation never happens, as consumers of DDS should never throw exceptions\n     * in event listeners (i.e. catch any of the issues and make determination on how to handle it).\n     * When such exceptions propagate through, most likely data model is no longer consistent, i.e.\n     * DDS state does not match what user sees. Because of it DDS moves to \"corrupted state\" and does not\n     * allow processing of ops or local changes, which very quickly results in container closure.\n     */\n    private eventListenerErrorHandler(event: EventEmitterEventType, e: any) {\n        const error = DataProcessingError.wrapIfUnrecognized(\n            e,\n            \"SharedObjectEventListenerException\");\n        error.addTelemetryProperties({ emittedEventName: String(event) });\n\n        this.closeWithError(error);\n        throw error;\n    }\n\n    private attachListeners() {\n        // Only listen to these events if not attached.\n        if (!this.isAttached()) {\n            this.runtime.once(\"attaching\", () => {\n                // Calling this will let the dds to do any custom processing based on attached\n                // like starting generating ops.\n                this.didAttach();\n            });\n        }\n    }\n\n    /**\n     * A shared object, after construction, can either be loaded in the case that it is already part of\n     * a shared document. Or later attached if it is being newly added.\n     * @param services - Services used by the shared object\n     */\n    public async load(services: IChannelServices): Promise<void> {\n        if (this.runtime.attachState !== AttachState.Detached) {\n            this.services = services;\n        }\n        await this.loadCore(services.objectStorage);\n        if (this.runtime.attachState !== AttachState.Detached) {\n            this.attachDeltaHandler();\n        }\n    }\n\n    /**\n     * Initializes the object as a local, non-shared object. This object can become shared after\n     * it is attached to the document.\n     */\n    public initializeLocal(): void {\n        this.initializeLocalCore();\n    }\n\n    /**\n     * {@inheritDoc (ISharedObject:interface).bindToContext}\n     */\n    public bindToContext(): void {\n        if (this._isBoundToContext) {\n            return;\n        }\n\n        this._isBoundToContext = true;\n\n        this.runtime.bindChannel(this);\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/datastore-definitions#(IChannel:interface).connect}\n     */\n    public connect(services: IChannelServices) {\n        this.services = services;\n        this.attachDeltaHandler();\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/datastore-definitions#(IChannel:interface).isAttached}\n     */\n    public isAttached(): boolean {\n        return this.services !== undefined && this.runtime.attachState !== AttachState.Detached;\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/datastore-definitions#(IChannel:interface).getAttachSummary}\n     */\n    public abstract getAttachSummary(\n        fullTree?: boolean,\n        trackState?: boolean,\n        telemetryContext?: ITelemetryContext,\n    ): ISummaryTreeWithStats;\n\n    /**\n     * {@inheritDoc @fluidframework/datastore-definitions#(IChannel:interface).summarize}\n     */\n    public abstract summarize(\n        fullTree?: boolean,\n        trackState?: boolean,\n        telemetryContext?: ITelemetryContext,\n    ): Promise<ISummaryTreeWithStats>;\n\n    /**\n     * {@inheritDoc (ISharedObject:interface).getGCData}\n     */\n    public abstract getGCData(fullGC?: boolean): IGarbageCollectionData;\n\n    /**\n     * Called when a handle is decoded by this object. A handle in the object's data represents an outbound reference\n     * to another object in the container.\n     * @param decodedHandle - The handle of the Fluid object that is decoded.\n     */\n    protected handleDecoded(decodedHandle: IFluidHandle) {\n        if (this.isAttached()) {\n            // This represents an outbound reference from this object to the node represented by decodedHandle.\n            this.services?.deltaConnection.addedGCOutboundReference?.(this.handle, decodedHandle);\n        }\n    }\n\n    /**\n     * Allows the distributed data type to perform custom loading\n     * @param services - Storage used by the shared object\n     */\n    protected abstract loadCore(services: IChannelStorageService): Promise<void>;\n\n    /**\n     * Allows the distributed data type to perform custom local loading.\n     */\n    protected initializeLocalCore() {\n        return;\n    }\n\n    /**\n     * Allows the distributive data type the ability to perform custom processing once an attach has happened.\n     * Also called after non-local data type get loaded.\n     */\n    protected didAttach() {\n        return;\n    }\n\n    /**\n     * Derived classes must override this to do custom processing on a remote message.\n     * @param message - The message to process\n     * @param local - True if the shared object is local\n     * @param localOpMetadata - For local client messages, this is the metadata that was submitted with the message.\n     * For messages from a remote client, this will be undefined.\n     */\n    protected abstract processCore(message: ISequencedDocumentMessage, local: boolean, localOpMetadata: unknown);\n\n    /**\n     * Called when the object has disconnected from the delta stream.\n     */\n    protected abstract onDisconnect();\n\n    /**\n     * Submits a message by the local client to the runtime.\n     * @param content - Content of the message\n     * @param localOpMetadata - The local metadata associated with the message. This is kept locally by the runtime\n     * and not sent to the server. This will be sent back when this message is received back from the server. This is\n     * also sent if we are asked to resubmit the message.\n     */\n    protected submitLocalMessage(content: any, localOpMetadata: unknown = undefined): void {\n        this.verifyNotClosed();\n        if (this.isAttached()) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.services!.deltaConnection.submit(content, localOpMetadata);\n        }\n    }\n\n    /**\n     * Marks this object as dirty so that it is part of the next summary. It is called by a SharedSummaryBlock\n     * that want to be part of summary but does not generate ops.\n     */\n    protected dirty(): void {\n        if (!this.isAttached()) {\n            return;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.services!.deltaConnection.dirty();\n    }\n\n    /**\n     * Called when the object has fully connected to the delta stream\n     * Default implementation for DDS, override if different behavior is required.\n     */\n    protected onConnect() { }\n\n    /**\n     * Called when a message has to be resubmitted. This typically happens after a reconnection for unacked messages.\n     * The default implementation here is to resubmit the same message. The client can override if different behavior\n     * is required. It can choose to resubmit the same message, submit different / multiple messages or not submit\n     * anything at all.\n     * @param content - The content of the original message.\n     * @param localOpMetadata - The local metadata associated with the original message.\n     */\n    protected reSubmitCore(content: any, localOpMetadata: unknown) {\n        this.submitLocalMessage(content, localOpMetadata);\n    }\n\n    /**\n     * Promises that are waiting for an ack from the server before resolving should use this instead of new Promise.\n     * It ensures that if something changes that will interrupt that ack (e.g. the FluidDataStoreRuntime disposes),\n     * the Promise will reject.\n     * If runtime is disposed when this call is made, executor is not run and promise is rejected right away.\n     */\n    protected async newAckBasedPromise<T>(\n        executor: (resolve: (value: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void,\n    ): Promise<T> {\n        let rejectBecauseDispose: () => void;\n        return new Promise<T>((resolve, reject) => {\n            rejectBecauseDispose =\n                () => reject(new Error(\"FluidDataStoreRuntime disposed while this ack-based Promise was pending\"));\n\n            if (this.runtime.disposed) {\n                rejectBecauseDispose();\n                return;\n            }\n\n            this.runtime.on(\"dispose\", rejectBecauseDispose);\n            executor(resolve, reject);\n        }).finally(() => {\n            // Note: rejectBecauseDispose will never be undefined here\n            this.runtime.off(\"dispose\", rejectBecauseDispose);\n        });\n    }\n\n    private attachDeltaHandler() {\n        // Services should already be there in case we are attaching delta handler.\n        assert(this.services !== undefined, 0x07a /* \"Services should be there to attach delta handler\" */);\n        this._isBoundToContext = true;\n        // Allows objects to do any custom processing if it is attached.\n        this.didAttach();\n\n        // attachDeltaHandler is only called after services is assigned\n        this.services.deltaConnection.attach({\n            process: (message: ISequencedDocumentMessage, local: boolean, localOpMetadata: unknown) => {\n                this.process(message, local, localOpMetadata);\n            },\n            setConnectionState: (connected: boolean) => {\n                this.setConnectionState(connected);\n            },\n            reSubmit: (content: any, localOpMetadata: unknown) => {\n                this.reSubmit(content, localOpMetadata);\n            },\n            applyStashedOp: (content: any): unknown => {\n                return this.applyStashedOp(content);\n            },\n            rollback: (content: any, localOpMetadata: unknown) => {\n                this.rollback(content, localOpMetadata);\n            },\n        });\n\n        // Trigger initial state\n        // attachDeltaHandler is only called after services is assigned\n        this.setConnectionState(this.services.deltaConnection.connected);\n    }\n\n    /**\n     * Set the state of connection to services.\n     * @param connected - true if connected, false otherwise.\n     */\n    private setConnectionState(connected: boolean) {\n        if (this._connected === connected) {\n            // Not changing state, nothing the same.\n            return;\n        }\n\n        // Should I change the state at the end? So that we *can't* send new stuff before we send old?\n        this._connected = connected;\n\n        if (!connected) {\n            // Things that are true now...\n            // - if we had a connection we can no longer send messages over it\n            // - if we had outbound messages some may or may not be ACK'd. Won't know until next message\n            //\n            // - nack could get a new msn - but might as well do it in the join?\n            this.onDisconnect();\n        } else {\n            // Call this for now so that DDSes like ConsensusOrderedCollection that maintain their own pending\n            // messages will work.\n            this.onConnect();\n        }\n    }\n\n    /**\n     * Handles a message being received from the remote delta server.\n     * @param message - The message to process\n     * @param local - Whether the message originated from the local client\n     * @param localOpMetadata - For local client messages, this is the metadata that was submitted with the message.\n     * For messages from a remote client, this will be undefined.\n     */\n    private process(message: ISequencedDocumentMessage, local: boolean, localOpMetadata: unknown) {\n        this.verifyNotClosed(); // This will result in container closure.\n        this.emit(\"pre-op\", message, local, this);\n        this.processCore(message, local, localOpMetadata);\n        this.emit(\"op\", message, local, this);\n    }\n\n    /**\n     * Called when a message has to be resubmitted. This typically happens for unacked messages after a\n     * reconnection.\n     * @param content - The content of the original message.\n     * @param localOpMetadata - The local metadata associated with the original message.\n     */\n    private reSubmit(content: any, localOpMetadata: unknown) {\n        this.reSubmitCore(content, localOpMetadata);\n    }\n\n    /**\n     * Revert an op\n     */\n    protected rollback(content: any, localOpMetadata: unknown) {\n        throw new Error(\"rollback not supported\");\n    }\n\n    /**\n     * Apply changes from an op. Used when rehydrating an attached container\n     * with pending changes. This prepares the SharedObject for seeing an ACK\n     * for the op or resubmitting the op upon reconnection.\n     * @param content - Contents of a stashed op.\n     * @returns localMetadata of the op, to be passed to process() or resubmit()\n     * when the op is ACKed or resubmitted, respectively\n     */\n    protected abstract applyStashedOp(content: any): unknown;\n}\n\n/**\n * SharedObject with simplified, synchronous summarization and GC.\n * DDS implementations with async and incremental summarization should extend SharedObjectCore directly instead.\n */\nexport abstract class SharedObject<TEvent extends ISharedObjectEvents = ISharedObjectEvents>\n    extends SharedObjectCore<TEvent> {\n    /**\n     * True while we are garbage collecting this object's data.\n     */\n    private _isGCing: boolean = false;\n\n    /**\n     * The serializer to use to serialize / parse handles, if any.\n     */\n    private readonly _serializer: IFluidSerializer;\n\n    protected get serializer(): IFluidSerializer {\n        /**\n         * During garbage collection, the SummarySerializer keeps track of IFluidHandles that are serialized. These\n         * handles represent references to other Fluid objects.\n         *\n         * This is fine for now. However, if we implement delay loading in DDss, they may load and de-serialize content\n         * in summarize. When that happens, they may incorrectly hit this assert and we will have to change this.\n         */\n        assert(!this._isGCing,\n            0x075 /* \"SummarySerializer should be used for serializing data during summary.\" */);\n        return this._serializer;\n    }\n\n    /**\n     * @param id - The id of the shared object\n     * @param runtime - The IFluidDataStoreRuntime which contains the shared object\n     * @param attributes - Attributes of the shared object\n     */\n    constructor(\n        id: string,\n        runtime: IFluidDataStoreRuntime,\n        attributes: IChannelAttributes,\n        private readonly telemetryContextPrefix: string,\n    ) {\n        super(id, runtime, attributes);\n\n        this._serializer = new FluidSerializer(\n            this.runtime.channelsRoutingContext,\n            (handle: IFluidHandle) => this.handleDecoded(handle),\n        );\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/datastore-definitions#(IChannel:interface).getAttachSummary}\n     */\n    public getAttachSummary(\n        fullTree: boolean = false,\n        trackState: boolean = false,\n        telemetryContext?: ITelemetryContext,\n    ): ISummaryTreeWithStats {\n        const result = this.summarizeCore(this.serializer, telemetryContext);\n        this.incrementTelemetryMetric(blobCountPropertyName, result.stats.blobNodeCount, telemetryContext);\n        this.incrementTelemetryMetric(totalBlobSizePropertyName, result.stats.totalBlobSize, telemetryContext);\n        return result;\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/datastore-definitions#(IChannel:interface).summarize}\n     */\n    public async summarize(\n        fullTree: boolean = false,\n        trackState: boolean = false,\n        telemetryContext?: ITelemetryContext,\n    ): Promise<ISummaryTreeWithStats> {\n        const result = this.summarizeCore(this.serializer, telemetryContext);\n        this.incrementTelemetryMetric(blobCountPropertyName, result.stats.blobNodeCount, telemetryContext);\n        this.incrementTelemetryMetric(totalBlobSizePropertyName, result.stats.totalBlobSize, telemetryContext);\n        return result;\n    }\n\n    /**\n     * {@inheritDoc (ISharedObject:interface).getGCData}\n     */\n    public getGCData(fullGC: boolean = false): IGarbageCollectionData {\n        // Set _isGCing to true. This flag is used to ensure that we only use SummarySerializer to serialize handles\n        // in this object's data.\n        assert(!this._isGCing, 0x078 /* \"Possible re-entrancy! Summary should not already be in progress.\" */);\n        this._isGCing = true;\n\n        let gcData: IGarbageCollectionData;\n        try {\n            const serializer = new SummarySerializer(\n                this.runtime.channelsRoutingContext,\n                (handle: IFluidHandle) => this.handleDecoded(handle),\n            );\n            this.processGCDataCore(serializer);\n            // The GC data for this shared object contains a single GC node. The outbound routes of this node are the\n            // routes of handles serialized during summarization.\n            gcData = { gcNodes: { \"/\": serializer.getSerializedRoutes() } };\n            assert(this._isGCing, 0x079 /* \"Possible re-entrancy! Summary should have been in progress.\" */);\n        } finally {\n            this._isGCing = false;\n        }\n\n        return gcData;\n    }\n\n    /**\n     * Calls the serializer over all data in this object that reference other GC nodes.\n     * Derived classes must override this to provide custom list of references to other GC nodes.\n     */\n    protected processGCDataCore(serializer: SummarySerializer) {\n        // We run the full summarize logic to get the list of outbound routes from this object. This is a little\n        // expensive but its okay for now. It will be updated to not use full summarize and make it more efficient.\n        // See: https://github.com/microsoft/FluidFramework/issues/4547\n        this.summarizeCore(serializer);\n    }\n\n    /**\n     * Gets a form of the object that can be serialized.\n     * @returns A tree representing the snapshot of the shared object.\n     */\n    protected abstract summarizeCore(\n        serializer: IFluidSerializer,\n        telemetryContext?: ITelemetryContext,\n    ): ISummaryTreeWithStats;\n\n    private incrementTelemetryMetric(propertyName: string, incrementBy: number, telemetryContext?: ITelemetryContext) {\n        const prevTotal = (telemetryContext?.get(this.telemetryContextPrefix, propertyName) ?? 0) as number;\n        telemetryContext?.set(this.telemetryContextPrefix, propertyName, prevTotal + incrementBy);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IFluidHandle } from \"@fluidframework/core-interfaces\";\nimport {\n    IFluidSerializer,\n    ISerializedHandle,\n    parseHandles,\n    serializeHandles,\n    ValueType,\n} from \"@fluidframework/shared-object-base\";\nimport {\n    ISerializableValue,\n    ISerializedValue,\n} from \"./interfaces\";\n\n/**\n * A local value to be stored in a container type DDS.\n */\nexport interface ILocalValue {\n    /**\n     * Type indicator of the value stored within.\n     */\n    readonly type: string;\n\n    /**\n     * The in-memory value stored within.\n     */\n    readonly value: any;\n\n    /**\n     * Retrieve the serialized form of the value stored within.\n     * @param serializer - Data store runtime's serializer\n     * @param bind - Container type's handle\n     * @returns The serialized form of the contained value\n     */\n    makeSerialized(\n        serializer: IFluidSerializer,\n        bind: IFluidHandle,\n    ): ISerializedValue;\n}\n\nexport function makeSerializable(\n    localValue: ILocalValue,\n    serializer: IFluidSerializer,\n    bind: IFluidHandle): ISerializableValue {\n    const value = localValue.makeSerialized(serializer, bind);\n    return {\n        type: value.type,\n        value: value.value && JSON.parse(value.value),\n    };\n}\n\n/**\n * Manages a contained plain value.  May also contain shared object handles.\n */\nexport class PlainLocalValue implements ILocalValue {\n    /**\n     * Create a new PlainLocalValue.\n     * @param value - The value to store, which may contain shared object handles\n     */\n    constructor(public readonly value: any) {\n    }\n\n    /**\n     * {@inheritDoc ILocalValue.\"type\"}\n     */\n    public get type(): string {\n        return ValueType[ValueType.Plain];\n    }\n\n    /**\n     * {@inheritDoc ILocalValue.makeSerialized}\n     */\n    public makeSerialized(\n        serializer: IFluidSerializer,\n        bind: IFluidHandle,\n    ): ISerializedValue {\n        // Stringify to convert to the serialized handle values - and then parse in order to create\n        // a POJO for the op\n        const value = serializeHandles(this.value, serializer, bind);\n\n        return {\n            type: this.type,\n            value,\n        };\n    }\n}\n\n/**\n * A LocalValueMaker enables a container type DDS to produce and store local values with minimal awareness of how\n * those objects are stored, serialized, and deserialized.\n */\nexport class LocalValueMaker {\n    /**\n     * Create a new LocalValueMaker.\n     * @param serializer - The serializer to serialize / parse handles.\n     */\n    constructor(private readonly serializer: IFluidSerializer) {\n    }\n\n    /**\n     * Create a new local value from an incoming serialized value.\n     * @param serializable - The serializable value to make local\n     */\n    public fromSerializable(serializable: ISerializableValue): ILocalValue {\n        // Migrate from old shared value to handles\n        if (serializable.type === ValueType[ValueType.Shared]) {\n            serializable.type = ValueType[ValueType.Plain];\n            const handle: ISerializedHandle = {\n                type: \"__fluid_handle__\",\n                url: serializable.value as string,\n            };\n            serializable.value = handle;\n        }\n\n        const translatedValue = parseHandles(serializable.value, this.serializer);\n\n        return new PlainLocalValue(translatedValue);\n    }\n\n    /**\n     * Create a new local value containing a given plain object.\n     * @param value - The value to store\n     * @returns An ILocalValue containing the value\n     */\n    public fromInMemory(value: any): ILocalValue {\n        return new PlainLocalValue(value);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IFluidHandle } from \"@fluidframework/core-interfaces\";\nimport { ISummaryTreeWithStats } from \"@fluidframework/runtime-definitions\";\nimport { SummaryTreeBuilder } from \"@fluidframework/runtime-utils\";\nimport { IFluidSerializer } from \"./serializer\";\n\n/**\n * Given a mostly-plain object that may have handle objects embedded within, return a string representation of an object\n * where the handle objects have been replaced with a serializable form.\n * @param value - The mostly-plain object\n * @param serializer - The serializer that knows how to convert handles into serializable format\n * @param context - The handle context for the container\n * @param bind - Bind any other handles we find in the object against this given handle.\n * @returns Result of strigifying an object\n */\nexport function serializeHandles(\n    value: any,\n    serializer: IFluidSerializer,\n    bind: IFluidHandle,\n): string | undefined {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return value !== undefined\n        ? serializer.stringify(\n            value,\n            bind)\n        : value;\n}\n\n/**\n * Given a mostly-plain object that may have handle objects embedded within, will return a fully-plain object\n * where any embedded IFluidHandles have been replaced with a serializable form.\n *\n * The original `input` object is not mutated.  This method will shallowly clones all objects in the path from\n * the root to any replaced handles.  (If no handles are found, returns the original object.)\n *\n * @param input - The mostly-plain object\n * @param context - The handle context for the container\n * @param bind - Bind any other handles we find in the object against this given handle.\n * @returns The fully-plain object\n */\nexport function makeHandlesSerializable(\n    value: any,\n    serializer: IFluidSerializer,\n    bind: IFluidHandle,\n) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return serializer.encode(\n        value,\n        bind);\n}\n\n/**\n * Given a fully-plain object that may have serializable-form handles within, will return the mostly-plain object\n * with handle objects created instead.\n * @param value - The fully-plain object\n * @param serializer - The serializer that knows how to convert serializable-form handles into handle objects\n * @param context - The handle context for the container\n * @returns The mostly-plain object with handle objects within\n */\nexport function parseHandles(\n    value: any,\n    serializer: IFluidSerializer,\n) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return value !== undefined ? serializer.parse(JSON.stringify(value)) : value;\n}\n\n/**\n * Create a new summary containing one blob\n * @param key - the key for the blob in the summary\n * @param content - blob content\n * @returns The summary containing the blob\n */\nexport function createSingleBlobSummary(key: string, content: string | Uint8Array): ISummaryTreeWithStats {\n    const builder = new SummaryTreeBuilder();\n    builder.addBlob(key, content);\n    return builder.getSummaryTree();\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n *\n * THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY\n */\n\nexport const pkgName = \"@fluidframework/map\";\nexport const pkgVersion = \"1.2.3\";\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { assert, TypedEventEmitter } from \"@fluidframework/common-utils\";\nimport { UsageError } from \"@fluidframework/container-utils\";\nimport { readAndParse } from \"@fluidframework/driver-utils\";\nimport {\n    ISequencedDocumentMessage,\n    MessageType,\n} from \"@fluidframework/protocol-definitions\";\nimport {\n    IChannelAttributes,\n    IFluidDataStoreRuntime,\n    IChannelStorageService,\n    IChannelServices,\n    IChannelFactory,\n} from \"@fluidframework/datastore-definitions\";\nimport { ISummaryTreeWithStats, ITelemetryContext } from \"@fluidframework/runtime-definitions\";\nimport { IFluidSerializer, SharedObject, ValueType } from \"@fluidframework/shared-object-base\";\nimport { SummaryTreeBuilder } from \"@fluidframework/runtime-utils\";\nimport * as path from \"path-browserify\";\nimport {\n    IDirectory,\n    IDirectoryEvents,\n    IDirectoryValueChanged,\n    ISerializableValue,\n    ISerializedValue,\n    ISharedDirectory,\n    ISharedDirectoryEvents,\n    IValueChanged,\n} from \"./interfaces\";\nimport {\n    ILocalValue,\n    LocalValueMaker,\n    makeSerializable,\n} from \"./localValues\";\nimport { pkgVersion } from \"./packageVersion\";\n\n// We use path-browserify since this code can run safely on the server or the browser.\n// We standardize on using posix slashes everywhere.\nconst posix: typeof import(\"path\").posix = path.posix;\n\nconst snapshotFileName = \"header\";\n\n/**\n * Defines the means to process and submit a given op on a directory.\n */\ninterface IDirectoryMessageHandler {\n    /**\n     * Apply the given operation.\n     * @param op - The directory operation to apply\n     * @param local - Whether the message originated from the local client\n     * @param localOpMetadata - For local client messages, this is the metadata that was submitted with the message.\n     * For messages from a remote client, this will be undefined.\n     */\n    process(\n        op: IDirectoryOperation,\n        local: boolean,\n        localOpMetadata: unknown,\n    ): void;\n\n    /**\n     * Communicate the operation to remote clients.\n     * @param op - The directory operation to submit\n     * @param localOpMetadata - The metadata to be submitted with the message.\n     */\n    submit(op: IDirectoryOperation, localOpMetadata: unknown): void;\n}\n\n/**\n * Operation indicating a value should be set for a key.\n */\nexport interface IDirectorySetOperation {\n    /**\n     * String identifier of the operation type.\n     */\n    type: \"set\";\n\n    /**\n     * Directory key being modified.\n     */\n    key: string;\n\n    /**\n     * Absolute path of the directory where the modified key is located.\n     */\n    path: string;\n\n    /**\n     * Value to be set on the key.\n     */\n    value: ISerializableValue;\n}\n\n/**\n * Operation indicating a key should be deleted from the directory.\n */\nexport interface IDirectoryDeleteOperation {\n    /**\n     * String identifier of the operation type.\n     */\n    type: \"delete\";\n\n    /**\n     * Directory key being modified.\n     */\n    key: string;\n\n    /**\n     * Absolute path of the directory where the modified key is located.\n     */\n    path: string;\n}\n\n/**\n * An operation on a specific key within a directory\n */\nexport type IDirectoryKeyOperation = IDirectorySetOperation | IDirectoryDeleteOperation;\n\n/**\n * Operation indicating the directory should be cleared.\n */\nexport interface IDirectoryClearOperation {\n    /**\n     * String identifier of the operation type.\n     */\n    type: \"clear\";\n\n    /**\n     * Absolute path of the directory being cleared.\n     */\n    path: string;\n}\n\n/**\n * An operation on one or more of the keys within a directory\n */\nexport type IDirectoryStorageOperation = IDirectoryKeyOperation | IDirectoryClearOperation;\n\n/**\n * Operation indicating a subdirectory should be created.\n */\nexport interface IDirectoryCreateSubDirectoryOperation {\n    /**\n     * String identifier of the operation type.\n     */\n    type: \"createSubDirectory\";\n\n    /**\n     * Absolute path of the directory that will contain the new subdirectory.\n     */\n    path: string;\n\n    /**\n     * Name of the new subdirectory.\n     */\n    subdirName: string;\n}\n\n/**\n * Operation indicating a subdirectory should be deleted.\n */\nexport interface IDirectoryDeleteSubDirectoryOperation {\n    /**\n     * String identifier of the operation type.\n     */\n    type: \"deleteSubDirectory\";\n\n    /**\n     * Absolute path of the directory that contains the directory to be deleted.\n     */\n    path: string;\n\n    /**\n     * Name of the subdirectory to be deleted.\n     */\n    subdirName: string;\n}\n\n/**\n * An operation on the subdirectories within a directory\n */\nexport type IDirectorySubDirectoryOperation = IDirectoryCreateSubDirectoryOperation\n    | IDirectoryDeleteSubDirectoryOperation;\n\n/**\n * Any operation on a directory\n */\nexport type IDirectoryOperation = IDirectoryStorageOperation | IDirectorySubDirectoryOperation;\n\n/**\n * Defines the in-memory object structure to be used for the conversion to/from serialized.\n * @privateRemarks\n * Directly used in JSON.stringify, direct result from JSON.parse.\n */\nexport interface IDirectoryDataObject {\n    storage?: { [key: string]: ISerializableValue; };\n    subdirectories?: { [subdirName: string]: IDirectoryDataObject; };\n}\n\nexport interface IDirectoryNewStorageFormat {\n    blobs: string[];\n    content: IDirectoryDataObject;\n}\n\n/**\n * The factory that defines the directory.\n * @sealed\n */\nexport class DirectoryFactory {\n    /**\n     * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.\"type\"}\n     */\n    public static readonly Type = \"https://graph.microsoft.com/types/directory\";\n\n    /**\n     * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.attributes}\n     */\n    public static readonly Attributes: IChannelAttributes = {\n        type: DirectoryFactory.Type,\n        snapshotFormatVersion: \"0.1\",\n        packageVersion: pkgVersion,\n    };\n\n    /**\n     * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.\"type\"}\n     */\n    public get type() {\n        return DirectoryFactory.Type;\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.attributes}\n     */\n    public get attributes() {\n        return DirectoryFactory.Attributes;\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.load}\n     */\n    public async load(\n        runtime: IFluidDataStoreRuntime,\n        id: string,\n        services: IChannelServices,\n        attributes: IChannelAttributes): Promise<ISharedDirectory> {\n        const directory = new SharedDirectory(id, runtime, attributes);\n        await directory.load(services);\n\n        return directory;\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.create}\n     */\n    public create(runtime: IFluidDataStoreRuntime, id: string): ISharedDirectory {\n        const directory = new SharedDirectory(id, runtime, DirectoryFactory.Attributes);\n        directory.initializeLocal();\n\n        return directory;\n    }\n}\n\n/**\n * SharedDirectory provides a hierarchical organization of map-like data structures as SubDirectories.\n * The values stored within can be accessed like a map, and the hierarchy can be navigated using path syntax.\n * SubDirectories can be retrieved for use as working directories.\n *\n * @example\n * ```typescript\n * mySharedDirectory.createSubDirectory(\"a\").createSubDirectory(\"b\").createSubDirectory(\"c\").set(\"foo\", val1);\n * const mySubDir = mySharedDirectory.getWorkingDirectory(\"/a/b/c\");\n * mySubDir.get(\"foo\"); // returns val1\n * ```\n *\n * @sealed\n */\nexport class SharedDirectory extends SharedObject<ISharedDirectoryEvents> implements ISharedDirectory {\n    /**\n     * Create a new shared directory\n     *\n     * @param runtime - Data store runtime the new shared directory belongs to\n     * @param id - Optional name of the shared directory\n     * @returns Newly create shared directory (but not attached yet)\n     */\n    public static create(runtime: IFluidDataStoreRuntime, id?: string): SharedDirectory {\n        return runtime.createChannel(id, DirectoryFactory.Type) as SharedDirectory;\n    }\n\n    /**\n     * Get a factory for SharedDirectory to register with the data store.\n     *\n     * @returns A factory that creates and load SharedDirectory\n     */\n    public static getFactory(): IChannelFactory {\n        return new DirectoryFactory();\n    }\n\n    /**\n     * String representation for the class.\n     */\n    public [Symbol.toStringTag]: string = \"SharedDirectory\";\n\n    /**\n     * {@inheritDoc IDirectory.absolutePath}\n     */\n    public get absolutePath(): string {\n        return this.root.absolutePath;\n    }\n\n    /**\n     * @internal\n     */\n    public readonly localValueMaker: LocalValueMaker;\n\n    /**\n     * Root of the SharedDirectory, most operations on the SharedDirectory itself act on the root.\n     */\n    private readonly root: SubDirectory = new SubDirectory(this, this.runtime, this.serializer, posix.sep);\n\n    /**\n     * Mapping of op types to message handlers.\n     */\n    private readonly messageHandlers: Map<string, IDirectoryMessageHandler> = new Map();\n\n    /**\n     * Constructs a new shared directory. If the object is non-local an id and service interfaces will\n     * be provided.\n     * @param id - String identifier for the SharedDirectory\n     * @param runtime - Data store runtime\n     * @param type - Type identifier\n     */\n    constructor(\n        id: string,\n        runtime: IFluidDataStoreRuntime,\n        attributes: IChannelAttributes,\n    ) {\n        super(id, runtime, attributes, \"fluid_directory_\");\n        this.localValueMaker = new LocalValueMaker(this.serializer);\n        this.setMessageHandlers();\n        // Mirror the containedValueChanged op on the SharedDirectory\n        this.root.on(\n            \"containedValueChanged\",\n            (changed: IValueChanged, local: boolean) => {\n                this.emit(\"containedValueChanged\", changed, local, this);\n            },\n        );\n        this.root.on(\n            \"subDirectoryCreated\",\n            (relativePath: string, local: boolean) => {\n                this.emit(\"subDirectoryCreated\", relativePath, local, this);\n            },\n        );\n        this.root.on(\n            \"subDirectoryDeleted\",\n            (relativePath: string, local: boolean) => {\n                this.emit(\"subDirectoryDeleted\", relativePath, local, this);\n            },\n        );\n    }\n\n    /**\n     * {@inheritDoc IDirectory.get}\n     */\n    public get<T = any>(key: string): T | undefined {\n        return this.root.get<T>(key);\n    }\n\n    /**\n     * {@inheritDoc IDirectory.set}\n     */\n    public set<T = any>(key: string, value: T): this {\n        this.root.set(key, value);\n        return this;\n    }\n\n    public dispose(error?: Error): void {\n        this.root.dispose(error);\n    }\n\n    public get disposed(): boolean {\n        return this.root.disposed;\n    }\n\n    /**\n     * Deletes the given key from within this IDirectory.\n     * @param key - The key to delete\n     * @returns True if the key existed and was deleted, false if it did not exist\n     */\n    public delete(key: string): boolean {\n        return this.root.delete(key);\n    }\n\n    /**\n     * Deletes all keys from within this IDirectory.\n     */\n    public clear(): void {\n        this.root.clear();\n    }\n\n    /**\n     * Checks whether the given key exists in this IDirectory.\n     * @param key - The key to check\n     * @returns True if the key exists, false otherwise\n     */\n    public has(key: string): boolean {\n        return this.root.has(key);\n    }\n\n    /**\n     * The number of entries under this IDirectory.\n     */\n    public get size(): number {\n        return this.root.size;\n    }\n\n    /**\n     * Issue a callback on each entry under this IDirectory.\n     * @param callback - Callback to issue\n     */\n    public forEach(callback: (value: any, key: string, map: Map<string, any>) => void): void {\n        this.root.forEach(callback);\n    }\n\n    /**\n     * Get an iterator over the entries under this IDirectory.\n     * @returns The iterator\n     */\n    public [Symbol.iterator](): IterableIterator<[string, any]> {\n        return this.root[Symbol.iterator]();\n    }\n\n    /**\n     * Get an iterator over the entries under this IDirectory.\n     * @returns The iterator\n     */\n    public entries(): IterableIterator<[string, any]> {\n        return this.root.entries();\n    }\n\n    /**\n     * {@inheritDoc IDirectory.countSubDirectory}\n     */\n    public countSubDirectory(): number {\n        return this.root.countSubDirectory();\n    }\n\n    /**\n     * Get an iterator over the keys under this IDirectory.\n     * @returns The iterator\n     */\n    public keys(): IterableIterator<string> {\n        return this.root.keys();\n    }\n\n    /**\n     * Get an iterator over the values under this IDirectory.\n     * @returns The iterator\n     */\n    public values(): IterableIterator<any> {\n        return this.root.values();\n    }\n\n    /**\n     * {@inheritDoc IDirectory.createSubDirectory}\n     */\n    public createSubDirectory(subdirName: string): IDirectory {\n        return this.root.createSubDirectory(subdirName);\n    }\n\n    /**\n     * {@inheritDoc IDirectory.getSubDirectory}\n     */\n    public getSubDirectory(subdirName: string): IDirectory | undefined {\n        return this.root.getSubDirectory(subdirName);\n    }\n\n    /**\n     * {@inheritDoc IDirectory.hasSubDirectory}\n     */\n    public hasSubDirectory(subdirName: string): boolean {\n        return this.root.hasSubDirectory(subdirName);\n    }\n\n    /**\n     * {@inheritDoc IDirectory.deleteSubDirectory}\n     */\n    public deleteSubDirectory(subdirName: string): boolean {\n        return this.root.deleteSubDirectory(subdirName);\n    }\n\n    /**\n     * {@inheritDoc IDirectory.subdirectories}\n     */\n    public subdirectories(): IterableIterator<[string, IDirectory]> {\n        return this.root.subdirectories();\n    }\n\n    /**\n     * {@inheritDoc IDirectory.getWorkingDirectory}\n     */\n    public getWorkingDirectory(relativePath: string): IDirectory | undefined {\n        const absolutePath = this.makeAbsolute(relativePath);\n        if (absolutePath === posix.sep) {\n            return this.root;\n        }\n\n        let currentSubDir = this.root;\n        const subdirs = absolutePath.substr(1).split(posix.sep);\n        for (const subdir of subdirs) {\n            currentSubDir = currentSubDir.getSubDirectory(subdir) as SubDirectory;\n            if (!currentSubDir) {\n                return undefined;\n            }\n        }\n        return currentSubDir;\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/shared-object-base#SharedObject.summarizeCore}\n     * @internal\n     */\n    protected summarizeCore(\n        serializer: IFluidSerializer,\n        telemetryContext?: ITelemetryContext,\n    ): ISummaryTreeWithStats {\n        return this.serializeDirectory(this.root, serializer);\n    }\n\n    /**\n     * Submits an operation\n     * @param op - Op to submit\n     * @param localOpMetadata - The local metadata associated with the op. We send a unique id that is used to track\n     * this op while it has not been ack'd. This will be sent when we receive this op back from the server.\n     * @internal\n     */\n    public submitDirectoryMessage(op: IDirectoryOperation, localOpMetadata: unknown) {\n        this.submitLocalMessage(op, localOpMetadata);\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/shared-object-base#SharedObject.onDisconnect}\n     * @internal\n     */\n    protected onDisconnect() {}\n\n    /**\n     * {@inheritDoc @fluidframework/shared-object-base#SharedObject.reSubmitCore}\n     * @internal\n     */\n    protected reSubmitCore(content: any, localOpMetadata: unknown) {\n        const message = content as IDirectoryOperation;\n        const handler = this.messageHandlers.get(message.type);\n        assert(handler !== undefined, 0x00d /* Missing message handler for message type */);\n        handler.submit(message, localOpMetadata);\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/shared-object-base#SharedObject.loadCore}\n     * @internal\n     */\n    protected async loadCore(storage: IChannelStorageService) {\n        const data = await readAndParse(storage, snapshotFileName);\n        const newFormat = data as IDirectoryNewStorageFormat;\n        if (Array.isArray(newFormat.blobs)) {\n            // New storage format\n            this.populate(newFormat.content);\n            await Promise.all(newFormat.blobs.map(async (value) => {\n                const dataExtra = await readAndParse(storage, value);\n                this.populate(dataExtra as IDirectoryDataObject);\n            }));\n        } else {\n            // Old storage format\n            this.populate(data as IDirectoryDataObject);\n        }\n    }\n\n    /**\n     * Populate the directory with the given directory data.\n     * @param data - A JSON string containing serialized directory data\n     * @internal\n     */\n    protected populate(data: IDirectoryDataObject) {\n        const stack: [SubDirectory, IDirectoryDataObject][] = [];\n        stack.push([this.root, data]);\n        while (stack.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const [currentSubDir, currentSubDirObject] = stack.pop()!;\n            if (currentSubDirObject.subdirectories) {\n                for (const [subdirName, subdirObject] of Object.entries(currentSubDirObject.subdirectories)) {\n                    let newSubDir = currentSubDir.getSubDirectory(subdirName) as SubDirectory;\n                    if (!newSubDir) {\n                        newSubDir = new SubDirectory(\n                            this,\n                            this.runtime,\n                            this.serializer,\n                            posix.join(currentSubDir.absolutePath, subdirName),\n                        );\n                        currentSubDir.populateSubDirectory(subdirName, newSubDir);\n                    }\n                    stack.push([newSubDir, subdirObject]);\n                }\n            }\n\n            if (currentSubDirObject.storage) {\n                for (const [key, serializable] of Object.entries(currentSubDirObject.storage)) {\n                    const localValue = this.makeLocal(\n                        key,\n                        currentSubDir.absolutePath,\n                        serializable,\n                    );\n                    currentSubDir.populateStorage(key, localValue);\n                }\n            }\n        }\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/shared-object-base#SharedObject.processCore}\n     * @internal\n     */\n    protected processCore(message: ISequencedDocumentMessage, local: boolean, localOpMetadata: unknown): void {\n        if (message.type === MessageType.Operation) {\n            const op: IDirectoryOperation = message.contents as IDirectoryOperation;\n            const handler = this.messageHandlers.get(op.type);\n            assert(handler !== undefined, 0x00e /* Missing message handler for message type */);\n            handler.process(op, local, localOpMetadata);\n        }\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/shared-object-base#SharedObject.rollback}\n     * @internal\n    */\n    protected rollback(content: any, localOpMetadata: unknown) {\n        const op: IDirectoryOperation = content as IDirectoryOperation;\n        const subdir = this.getWorkingDirectory(op.path) as SubDirectory | undefined;\n        if (subdir) {\n            subdir.rollback(op, localOpMetadata);\n        }\n    }\n\n    /**\n     * Converts the given relative path to absolute against the root.\n     * @param relativePath - The path to convert\n     */\n    private makeAbsolute(relativePath: string): string {\n        return posix.resolve(posix.sep, relativePath);\n    }\n\n    /**\n     * The remote ISerializableValue we're receiving (either as a result of a snapshot load or an incoming set op)\n     * will have the information we need to create a real object, but will not be the real object yet.  For example,\n     * we might know it's a map and the ID but not have the actual map or its data yet.  makeLocal's job\n     * is to convert that information into a real object for local usage.\n     * @param key - Key of element being converted\n     * @param absolutePath - Path of element being converted\n     * @param serializable - The remote information that we can convert into a real object\n     * @returns The local value that was produced\n     */\n    private makeLocal(\n        key: string,\n        absolutePath: string,\n        serializable: ISerializableValue,\n    ): ILocalValue {\n        assert(\n            serializable.type === ValueType[ValueType.Plain] || serializable.type === ValueType[ValueType.Shared],\n            0x1e4 /* \"Unexpected serializable type\" */,\n        );\n        return this.localValueMaker.fromSerializable(serializable);\n    }\n\n    /**\n     * Set the message handlers for the directory.\n     */\n    private setMessageHandlers(): void {\n        this.messageHandlers.set(\n            \"clear\",\n            {\n                process: (op: IDirectoryClearOperation, local, localOpMetadata) => {\n                    const subdir = this.getWorkingDirectory(op.path) as SubDirectory | undefined;\n                    if (subdir) {\n                        subdir.processClearMessage(op, local, localOpMetadata);\n                    }\n                },\n                submit: (op: IDirectoryClearOperation, localOpMetadata: unknown) => {\n                    const subdir = this.getWorkingDirectory(op.path) as SubDirectory | undefined;\n                    if (subdir) {\n                        subdir.resubmitClearMessage(op, localOpMetadata);\n                    }\n                },\n            },\n        );\n        this.messageHandlers.set(\n            \"delete\",\n            {\n                process: (op: IDirectoryDeleteOperation, local, localOpMetadata) => {\n                    const subdir = this.getWorkingDirectory(op.path) as SubDirectory | undefined;\n                    if (subdir) {\n                        subdir.processDeleteMessage(op, local, localOpMetadata);\n                    }\n                },\n                submit: (op: IDirectoryDeleteOperation, localOpMetadata: unknown) => {\n                    const subdir = this.getWorkingDirectory(op.path) as SubDirectory | undefined;\n                    if (subdir) {\n                        subdir.resubmitKeyMessage(op, localOpMetadata);\n                    }\n                },\n            },\n        );\n        this.messageHandlers.set(\n            \"set\",\n            {\n                process: (op: IDirectorySetOperation, local, localOpMetadata) => {\n                    const subdir = this.getWorkingDirectory(op.path) as SubDirectory | undefined;\n                    if (subdir) {\n                        const context = local ? undefined : this.makeLocal(op.key, op.path, op.value);\n                        subdir.processSetMessage(op, context, local, localOpMetadata);\n                    }\n                },\n                submit: (op: IDirectorySetOperation, localOpMetadata: unknown) => {\n                    const subdir = this.getWorkingDirectory(op.path) as SubDirectory | undefined;\n                    if (subdir) {\n                        subdir.resubmitKeyMessage(op, localOpMetadata);\n                    }\n                },\n            },\n        );\n\n        this.messageHandlers.set(\n            \"createSubDirectory\",\n            {\n                process: (op: IDirectoryCreateSubDirectoryOperation, local, localOpMetadata) => {\n                    const parentSubdir = this.getWorkingDirectory(op.path) as SubDirectory | undefined;\n                    if (parentSubdir) {\n                        parentSubdir.processCreateSubDirectoryMessage(op, local, localOpMetadata);\n                    }\n                },\n                submit: (op: IDirectoryCreateSubDirectoryOperation, localOpMetadata: unknown) => {\n                    const parentSubdir = this.getWorkingDirectory(op.path) as SubDirectory | undefined;\n                    if (parentSubdir) {\n                        // We don't reuse the metadata but send a new one on each submit.\n                        parentSubdir.resubmitSubDirectoryMessage(op, localOpMetadata);\n                    }\n                },\n            },\n        );\n\n        this.messageHandlers.set(\n            \"deleteSubDirectory\",\n            {\n                process: (op: IDirectoryDeleteSubDirectoryOperation, local, localOpMetadata) => {\n                    const parentSubdir = this.getWorkingDirectory(op.path) as SubDirectory | undefined;\n                    if (parentSubdir) {\n                        parentSubdir.processDeleteSubDirectoryMessage(op, local, localOpMetadata);\n                    }\n                },\n                submit: (op: IDirectoryDeleteSubDirectoryOperation, localOpMetadata: unknown) => {\n                    const parentSubdir = this.getWorkingDirectory(op.path) as SubDirectory | undefined;\n                    if (parentSubdir) {\n                        // We don't reuse the metadata but send a new one on each submit.\n                        parentSubdir.resubmitSubDirectoryMessage(op, localOpMetadata);\n                    }\n                },\n            },\n        );\n    }\n\n    /**\n     * @internal\n     */\n    protected applyStashedOp() {\n        throw new Error(\"not implemented\");\n    }\n\n    private serializeDirectory(\n        root: SubDirectory,\n        serializer: IFluidSerializer,\n        telemetryContext?: ITelemetryContext,\n    ): ISummaryTreeWithStats {\n        const MinValueSizeSeparateSnapshotBlob = 8 * 1024;\n\n        const builder = new SummaryTreeBuilder();\n        let counter = 0;\n        const blobs: string[] = [];\n\n        const stack: [SubDirectory, IDirectoryDataObject][] = [];\n        const content: IDirectoryDataObject = {};\n        stack.push([root, content]);\n\n        while (stack.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const [currentSubDir, currentSubDirObject] = stack.pop()!;\n            for (const [key, value] of currentSubDir.getSerializedStorage(serializer)) {\n                if (!currentSubDirObject.storage) {\n                    currentSubDirObject.storage = {};\n                }\n                const result: ISerializableValue = {\n                    type: value.type,\n                    // eslint-disable-next-line @typescript-eslint/ban-types\n                    value: value.value && JSON.parse(value.value) as object,\n                };\n                if (value.value && value.value.length >= MinValueSizeSeparateSnapshotBlob) {\n                    const extraContent: IDirectoryDataObject = {};\n                    let largeContent = extraContent;\n                    if (currentSubDir.absolutePath !== posix.sep) {\n                        for (const dir of currentSubDir.absolutePath.substr(1).split(posix.sep)) {\n                            const subDataObject: IDirectoryDataObject = {};\n                            largeContent.subdirectories = { [dir]: subDataObject };\n                            largeContent = subDataObject;\n                        }\n                    }\n                    largeContent.storage = { [key]: result };\n                    const blobName = `blob${counter}`;\n                    counter++;\n                    blobs.push(blobName);\n                    builder.addBlob(blobName, JSON.stringify(extraContent));\n                } else {\n                    currentSubDirObject.storage[key] = result;\n                }\n            }\n\n            for (const [subdirName, subdir] of currentSubDir.subdirectories()) {\n                if (!currentSubDirObject.subdirectories) {\n                    currentSubDirObject.subdirectories = {};\n                }\n                const subDataObject: IDirectoryDataObject = {};\n                currentSubDirObject.subdirectories[subdirName] = subDataObject;\n                stack.push([subdir as SubDirectory, subDataObject]);\n            }\n        }\n\n        const newFormat: IDirectoryNewStorageFormat = {\n            blobs,\n            content,\n        };\n        builder.addBlob(snapshotFileName, JSON.stringify(newFormat));\n\n        return builder.getSummaryTree();\n    }\n}\n\ninterface IKeyEditLocalOpMetadata {\n    type: \"edit\";\n    pendingMessageId: number;\n    previousValue: ILocalValue | undefined;\n}\n\ninterface IClearLocalOpMetadata {\n    type: \"clear\";\n    pendingMessageId: number;\n    previousStorage: Map<string, ILocalValue>;\n}\n\ninterface ICreateSubDirLocalOpMetadata {\n    type: \"createSubDir\";\n    pendingMessageId: number;\n    previouslyExisted: boolean;\n}\n\ninterface IDeleteSubDirLocalOpMetadata {\n    type: \"deleteSubDir\";\n    pendingMessageId: number;\n    subDirectory: SubDirectory | undefined;\n}\n\ntype SubDirLocalOpMetadata = ICreateSubDirLocalOpMetadata | IDeleteSubDirLocalOpMetadata;\ntype DirectoryLocalOpMetadata = IClearLocalOpMetadata | IKeyEditLocalOpMetadata | SubDirLocalOpMetadata;\n\nfunction isKeyEditLocalOpMetadata(metadata: any): metadata is IKeyEditLocalOpMetadata {\n    return metadata !== undefined && typeof metadata.pendingMessageId === \"number\" && metadata.type === \"edit\";\n}\n\nfunction isClearLocalOpMetadata(metadata: any): metadata is IClearLocalOpMetadata {\n    return metadata !== undefined && metadata.type === \"clear\" && typeof metadata.pendingMessageId === \"number\" &&\n        typeof metadata.previousStorage === \"object\";\n}\n\nfunction isSubDirLocalOpMetadata(metadata: any): metadata is SubDirLocalOpMetadata {\n    return metadata !== undefined && typeof metadata.pendingMessageId === \"number\" &&\n        ((metadata.type === \"createSubDir\" && typeof metadata.previouslyExisted === \"boolean\") ||\n         metadata.type === \"deleteSubDir\");\n}\n\nfunction isDirectoryLocalOpMetadata(metadata: any): metadata is DirectoryLocalOpMetadata {\n    return metadata !== undefined && typeof metadata.pendingMessageId === \"number\" &&\n        (metadata.type === \"edit\" || metadata.type === \"deleteSubDir\" ||\n         (metadata.type === \"clear\" && typeof metadata.previousStorage === \"object\") ||\n         (metadata.type === \"createSubDir\" && typeof metadata.previouslyExisted === \"boolean\"));\n}\n\n/**\n * Node of the directory tree.\n * @sealed\n */\nclass SubDirectory extends TypedEventEmitter<IDirectoryEvents> implements IDirectory {\n    /**\n     * Tells if the sub directory is deleted or not.\n     */\n    private _deleted = false;\n\n    /**\n     * String representation for the class.\n     */\n    public [Symbol.toStringTag]: string = \"SubDirectory\";\n\n    /**\n     * The in-memory data the directory is storing.\n     */\n    private readonly _storage: Map<string, ILocalValue> = new Map();\n\n    /**\n     * The subdirectories the directory is holding.\n     */\n    private readonly _subdirectories: Map<string, SubDirectory> = new Map();\n\n    /**\n     * Keys that have been modified locally but not yet ack'd from the server.\n     */\n    private readonly pendingKeys: Map<string, number[]> = new Map();\n\n    /**\n     * Subdirectories that have been modified locally but not yet ack'd from the server.\n     */\n    private readonly pendingSubDirectories: Map<string, number[]> = new Map();\n\n    /**\n     * This is used to assign a unique id to every outgoing operation and helps in tracking unack'd ops.\n     */\n    private pendingMessageId: number = -1;\n\n    /**\n     * The pending ids of any clears that have been performed locally but not yet ack'd from the server\n     */\n    private readonly pendingClearMessageIds: number[] = [];\n\n    /**\n     * Constructor.\n     * @param directory - Reference back to the SharedDirectory to perform operations\n     * @param runtime - The data store runtime this directory is associated with\n     * @param serializer - The serializer to serialize / parse handles\n     * @param absolutePath - The absolute path of this IDirectory\n     */\n    constructor(\n        private readonly directory: SharedDirectory,\n        private readonly runtime: IFluidDataStoreRuntime,\n        private readonly serializer: IFluidSerializer,\n        public readonly absolutePath: string,\n    ) {\n        super();\n    }\n\n    public dispose(error?: Error): void {\n        this._deleted = true;\n        this.emit(\"disposed\", this);\n    }\n\n    /**\n     * Unmark the deleted property when rolling back delete.\n     */\n    private undispose(): void {\n        this._deleted = false;\n    }\n\n    public get disposed(): boolean {\n        return this._deleted;\n    }\n\n    private throwIfDisposed() {\n        if (this._deleted) {\n            throw new UsageError(\"Cannot access Disposed subDirectory\");\n        }\n    }\n\n    /**\n     * Checks whether the given key exists in this IDirectory.\n     * @param key - The key to check\n     * @returns True if the key exists, false otherwise\n     */\n    public has(key: string): boolean {\n        this.throwIfDisposed();\n        return this._storage.has(key);\n    }\n\n    /**\n     * {@inheritDoc IDirectory.get}\n     */\n    public get<T = any>(key: string): T | undefined {\n        this.throwIfDisposed();\n        return this._storage.get(key)?.value as T | undefined;\n    }\n\n    /**\n     * {@inheritDoc IDirectory.set}\n     */\n    public set<T = any>(key: string, value: T): this {\n        this.throwIfDisposed();\n        // Undefined/null keys can't be serialized to JSON in the manner we currently snapshot.\n        if (key === undefined || key === null) {\n            throw new Error(\"Undefined and null keys are not supported\");\n        }\n\n        // Create a local value and serialize it.\n        const localValue = this.directory.localValueMaker.fromInMemory(value);\n        const serializableValue = makeSerializable(\n            localValue,\n            this.serializer,\n            this.directory.handle);\n\n        // Set the value locally.\n        const previousValue = this.setCore(\n            key,\n            localValue,\n            true,\n        );\n\n        // If we are not attached, don't submit the op.\n        if (!this.directory.isAttached()) {\n            return this;\n        }\n\n        const op: IDirectorySetOperation = {\n            key,\n            path: this.absolutePath,\n            type: \"set\",\n            value: serializableValue,\n        };\n        this.submitKeyMessage(op, previousValue);\n        return this;\n    }\n\n    /**\n     * {@inheritDoc IDirectory.countSubDirectory}\n     */\n    public countSubDirectory(): number {\n        return this._subdirectories.size;\n    }\n\n    /**\n     * {@inheritDoc IDirectory.createSubDirectory}\n     */\n    public createSubDirectory(subdirName: string): IDirectory {\n        this.throwIfDisposed();\n        // Undefined/null subdirectory names can't be serialized to JSON in the manner we currently snapshot.\n        if (subdirName === undefined || subdirName === null) {\n            throw new Error(\"SubDirectory name may not be undefined or null\");\n        }\n\n        if (subdirName.includes(posix.sep)) {\n            throw new Error(`SubDirectory name may not contain ${posix.sep}`);\n        }\n\n        // Create the sub directory locally first.\n        const isNew = this.createSubDirectoryCore(subdirName, true);\n\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const subDir: IDirectory = this._subdirectories.get(subdirName)!;\n\n        // If we are not attached, don't submit the op.\n        if (!this.directory.isAttached()) {\n            return subDir;\n        }\n\n        const op: IDirectoryCreateSubDirectoryOperation = {\n            path: this.absolutePath,\n            subdirName,\n            type: \"createSubDirectory\",\n        };\n        this.submitCreateSubDirectoryMessage(op, !isNew);\n\n        return subDir;\n    }\n\n    /**\n     * {@inheritDoc IDirectory.getSubDirectory}\n     */\n    public getSubDirectory(subdirName: string): IDirectory | undefined {\n        this.throwIfDisposed();\n        return this._subdirectories.get(subdirName);\n    }\n\n    /**\n     * {@inheritDoc IDirectory.hasSubDirectory}\n     */\n    public hasSubDirectory(subdirName: string): boolean {\n        this.throwIfDisposed();\n        return this._subdirectories.has(subdirName);\n    }\n\n    /**\n     * {@inheritDoc IDirectory.deleteSubDirectory}\n     */\n    public deleteSubDirectory(subdirName: string): boolean {\n        this.throwIfDisposed();\n        // Delete the sub directory locally first.\n        const subDir = this.deleteSubDirectoryCore(subdirName, true);\n\n        // If we are not attached, don't submit the op.\n        if (!this.directory.isAttached()) {\n            return subDir !== undefined;\n        }\n\n        const op: IDirectoryDeleteSubDirectoryOperation = {\n            path: this.absolutePath,\n            subdirName,\n            type: \"deleteSubDirectory\",\n        };\n\n        this.submitDeleteSubDirectoryMessage(op, subDir);\n        return subDir !== undefined;\n    }\n\n    /**\n     * {@inheritDoc IDirectory.subdirectories}\n     */\n    public subdirectories(): IterableIterator<[string, IDirectory]> {\n        this.throwIfDisposed();\n        return this._subdirectories.entries();\n    }\n\n    /**\n     * {@inheritDoc IDirectory.getWorkingDirectory}\n     */\n    public getWorkingDirectory(relativePath: string): IDirectory | undefined {\n        this.throwIfDisposed();\n        return this.directory.getWorkingDirectory(this.makeAbsolute(relativePath));\n    }\n\n    /**\n     * Deletes the given key from within this IDirectory.\n     * @param key - The key to delete\n     * @returns True if the key existed and was deleted, false if it did not exist\n     */\n    public delete(key: string): boolean {\n        this.throwIfDisposed();\n        // Delete the key locally first.\n        const previousValue = this.deleteCore(key, true);\n\n        // If we are not attached, don't submit the op.\n        if (!this.directory.isAttached()) {\n            return previousValue !== undefined;\n        }\n\n        const op: IDirectoryDeleteOperation = {\n            key,\n            path: this.absolutePath,\n            type: \"delete\",\n        };\n\n        this.submitKeyMessage(op, previousValue);\n        return previousValue !== undefined;\n    }\n\n    /**\n     * Deletes all keys from within this IDirectory.\n     */\n    public clear(): void {\n        this.throwIfDisposed();\n\n        // If we are not attached, don't submit the op.\n        if (!this.directory.isAttached()) {\n            this.clearCore(true);\n            return;\n        }\n\n        const copy = new Map<string, ILocalValue>(this._storage);\n        this.clearCore(true);\n        const op: IDirectoryClearOperation = {\n            path: this.absolutePath,\n            type: \"clear\",\n        };\n        this.submitClearMessage(op, copy);\n    }\n\n    /**\n     * Issue a callback on each entry under this IDirectory.\n     * @param callback - Callback to issue\n     */\n    public forEach(callback: (value: any, key: string, map: Map<string, any>) => void): void {\n        this.throwIfDisposed();\n        this._storage.forEach((localValue, key, map) => {\n            callback(localValue.value, key, map);\n        });\n    }\n\n    /**\n     * The number of entries under this IDirectory.\n     */\n    public get size(): number {\n        this.throwIfDisposed();\n        return this._storage.size;\n    }\n\n    /**\n     * Get an iterator over the entries under this IDirectory.\n     * @returns The iterator\n     */\n    public entries(): IterableIterator<[string, any]> {\n        this.throwIfDisposed();\n        const localEntriesIterator = this._storage.entries();\n        const iterator = {\n            next(): IteratorResult<[string, any]> {\n                const nextVal = localEntriesIterator.next();\n                if (nextVal.done) {\n                    return { value: undefined, done: true };\n                } else {\n                    // Unpack the stored value\n                    return { value: [nextVal.value[0], nextVal.value[1].value], done: false };\n                }\n            },\n            [Symbol.iterator]() {\n                return this;\n            },\n        };\n        return iterator;\n    }\n\n    /**\n     * Get an iterator over the keys under this IDirectory.\n     * @returns The iterator\n     */\n    public keys(): IterableIterator<string> {\n        this.throwIfDisposed();\n        return this._storage.keys();\n    }\n\n    /**\n     * Get an iterator over the values under this IDirectory.\n     * @returns The iterator\n     */\n    public values(): IterableIterator<any> {\n        this.throwIfDisposed();\n        const localValuesIterator = this._storage.values();\n        const iterator = {\n            next(): IteratorResult<any> {\n                const nextVal = localValuesIterator.next();\n                if (nextVal.done) {\n                    return { value: undefined, done: true };\n                } else {\n                    // Unpack the stored value\n                    return { value: nextVal.value.value, done: false };\n                }\n            },\n            [Symbol.iterator]() {\n                return this;\n            },\n        };\n        return iterator;\n    }\n\n    /**\n     * Get an iterator over the entries under this IDirectory.\n     * @returns The iterator\n     */\n    public [Symbol.iterator](): IterableIterator<[string, any]> {\n        this.throwIfDisposed();\n        return this.entries();\n    }\n\n    /**\n     * Process a clear operation.\n     * @param op - The op to process\n     * @param local - Whether the message originated from the local client\n     * @param message - The message\n     * @param localOpMetadata - For local client messages, this is the metadata that was submitted with the message.\n     * For messages from a remote client, this will be undefined.\n     * @internal\n     */\n    public processClearMessage(\n        op: IDirectoryClearOperation,\n        local: boolean,\n        localOpMetadata: unknown,\n    ): void {\n        this.throwIfDisposed();\n        if (local) {\n            assert(isClearLocalOpMetadata(localOpMetadata),\n                0x00f /* `pendingMessageId is missing from the local client's ${op.type} operation` */);\n            const pendingClearMessageId = this.pendingClearMessageIds.shift();\n            assert(pendingClearMessageId === localOpMetadata.pendingMessageId,\n                0x32a /* pendingMessageId does not match */);\n            return;\n        }\n        this.clearExceptPendingKeys();\n    }\n\n    /**\n     * Process a delete operation.\n     * @param op - The op to process\n     * @param local - Whether the message originated from the local client\n     * @param message - The message\n     * @param localOpMetadata - For local client messages, this is the metadata that was submitted with the message.\n     * For messages from a remote client, this will be undefined.\n     * @internal\n     */\n    public processDeleteMessage(\n        op: IDirectoryDeleteOperation,\n        local: boolean,\n        localOpMetadata: unknown,\n    ): void {\n        this.throwIfDisposed();\n        if (!this.needProcessStorageOperation(op, local, localOpMetadata)) {\n            return;\n        }\n        this.deleteCore(op.key, local);\n    }\n\n    /**\n     * Process a set operation.\n     * @param op - The op to process\n     * @param local - Whether the message originated from the local client\n     * @param message - The message\n     * @param localOpMetadata - For local client messages, this is the metadata that was submitted with the message.\n     * For messages from a remote client, this will be undefined.\n     * @internal\n     */\n    public processSetMessage(\n        op: IDirectorySetOperation,\n        context: ILocalValue | undefined,\n        local: boolean,\n        localOpMetadata: unknown,\n    ): void {\n        this.throwIfDisposed();\n        if (!this.needProcessStorageOperation(op, local, localOpMetadata)) {\n            return;\n        }\n\n        // needProcessStorageOperation should have returned false if local is true\n        // so we can assume context is not undefined\n\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.setCore(op.key, context!, local);\n    }\n\n    /**\n     * Process a create subdirectory operation.\n     * @param op - The op to process\n     * @param local - Whether the message originated from the local client\n     * @param message - The message\n     * @param localOpMetadata - For local client messages, this is the metadata that was submitted with the message.\n     * For messages from a remote client, this will be undefined.\n     * @internal\n     */\n    public processCreateSubDirectoryMessage(\n        op: IDirectoryCreateSubDirectoryOperation,\n        local: boolean,\n        localOpMetadata: unknown,\n    ): void {\n        this.throwIfDisposed();\n        if (!this.needProcessSubDirectoryOperation(op, local, localOpMetadata)) {\n            return;\n        }\n        this.createSubDirectoryCore(op.subdirName, local);\n    }\n\n    /**\n     * Process a delete subdirectory operation.\n     * @param op - The op to process\n     * @param local - Whether the message originated from the local client\n     * @param message - The message\n     * @param localOpMetadata - For local client messages, this is the metadata that was submitted with the message.\n     * For messages from a remote client, this will be undefined.\n     * @internal\n     */\n    public processDeleteSubDirectoryMessage(\n        op: IDirectoryDeleteSubDirectoryOperation,\n        local: boolean,\n        localOpMetadata: unknown,\n    ): void {\n        this.throwIfDisposed();\n        if (!this.needProcessSubDirectoryOperation(op, local, localOpMetadata)) {\n            return;\n        }\n        this.deleteSubDirectoryCore(op.subdirName, local);\n    }\n\n    /**\n     * Submit a clear operation.\n     * @param op - The operation\n     */\n    private submitClearMessage(op: IDirectoryClearOperation,\n        previousValue: Map<string, ILocalValue>): void {\n        this.throwIfDisposed();\n        const pendingMsgId = ++this.pendingMessageId;\n        this.pendingClearMessageIds.push(pendingMsgId);\n        const metadata: IClearLocalOpMetadata = {\n            type: \"clear\",\n            pendingMessageId: pendingMsgId,\n            previousStorage: previousValue,\n        };\n        this.directory.submitDirectoryMessage(op, metadata);\n    }\n\n    /**\n     * Resubmit a clear operation.\n     * @param op - The operation\n     * @internal\n     */\n    public resubmitClearMessage(op: IDirectoryClearOperation, localOpMetadata: unknown): void {\n        assert(isClearLocalOpMetadata(localOpMetadata), 0x32b /* Invalid localOpMetadata for clear */);\n        // We don't reuse the metadata pendingMessageId but send a new one on each submit.\n        const pendingClearMessageId = this.pendingClearMessageIds.shift();\n        assert(pendingClearMessageId === localOpMetadata.pendingMessageId,\n            0x32c /* pendingMessageId does not match */);\n        this.submitClearMessage(op, localOpMetadata.previousStorage);\n    }\n\n    /**\n     * Get a new pending message id for the op and cache it to track the pending op\n     */\n    private getKeyMessageId(op: IDirectoryKeyOperation): number {\n        // We don't reuse the metadata pendingMessageId but send a new one on each submit.\n        const pendingMessageId = ++this.pendingMessageId;\n        const pendingMessageIds = this.pendingKeys.get(op.key);\n        if (pendingMessageIds !== undefined) {\n            pendingMessageIds.push(pendingMessageId);\n        } else {\n            this.pendingKeys.set(op.key, [pendingMessageId]);\n        }\n        return pendingMessageId;\n    }\n\n    /**\n     * Submit a key operation.\n     * @param op - The operation\n     * @param previousValue - The value of the key before this op\n     */\n    private submitKeyMessage(op: IDirectoryKeyOperation, previousValue?: ILocalValue): void {\n        this.throwIfDisposed();\n        const pendingMessageId = this.getKeyMessageId(op);\n        const localMetadata = { type: \"edit\", pendingMessageId, previousValue };\n        this.directory.submitDirectoryMessage(op, localMetadata);\n    }\n\n    /**\n     * Submit a key message to remote clients based on a previous submit.\n     * @param op - The map key message\n     * @param localOpMetadata - Metadata from the previous submit\n     * @internal\n     */\n    public resubmitKeyMessage(op: IDirectoryKeyOperation, localOpMetadata: unknown): void {\n        assert(isKeyEditLocalOpMetadata(localOpMetadata), 0x32d /* Invalid localOpMetadata in submit */);\n\n        // clear the old pending message id\n        const pendingMessageIds = this.pendingKeys.get(op.key);\n        assert(pendingMessageIds !== undefined && pendingMessageIds[0] === localOpMetadata.pendingMessageId,\n            0x32e /* Unexpected pending message received */);\n        pendingMessageIds.shift();\n        if (pendingMessageIds.length === 0) {\n            this.pendingKeys.delete(op.key);\n        }\n\n        this.submitKeyMessage(op, localOpMetadata.previousValue);\n    }\n\n    /**\n     * Get a new pending message id for the op and cache it to track the pending op\n     */\n    private getSubDirMessageId(op: IDirectorySubDirectoryOperation): number {\n        // We don't reuse the metadata pendingMessageId but send a new one on each submit.\n        const newMessageId = ++this.pendingMessageId;\n        const pendingMessageIds = this.pendingSubDirectories.get(op.subdirName);\n        if (pendingMessageIds !== undefined) {\n            pendingMessageIds.push(newMessageId);\n        } else {\n            this.pendingSubDirectories.set(op.subdirName, [newMessageId]);\n        }\n        return newMessageId;\n    }\n\n    /**\n     * Submit a create subdirectory operation.\n     * @param op - The operation\n     * @param prevExisted - Whether the subdirectory existed before the op\n     */\n    private submitCreateSubDirectoryMessage(op: IDirectorySubDirectoryOperation,\n        prevExisted: boolean): void {\n        this.throwIfDisposed();\n        const newMessageId = this.getSubDirMessageId(op);\n\n        const localOpMetadata: ICreateSubDirLocalOpMetadata = {\n            type: \"createSubDir\",\n            pendingMessageId: newMessageId,\n            previouslyExisted: prevExisted,\n        };\n        this.directory.submitDirectoryMessage(op, localOpMetadata);\n    }\n\n    /**\n     * Submit a delete subdirectory operation.\n     * @param op - The operation\n     * @param subDir - Any subdirectory deleted by the op\n     */\n    private submitDeleteSubDirectoryMessage(op: IDirectorySubDirectoryOperation,\n        subDir: SubDirectory | undefined): void {\n        this.throwIfDisposed();\n        const newMessageId = this.getSubDirMessageId(op);\n\n        const localOpMetadata: IDeleteSubDirLocalOpMetadata = {\n            type: \"deleteSubDir\",\n            pendingMessageId: newMessageId,\n            subDirectory: subDir,\n        };\n        this.directory.submitDirectoryMessage(op, localOpMetadata);\n    }\n\n    /**\n     * Submit a subdirectory operation again\n     * @param op - The operation\n     * @param localOpMetadata - metadata submitted with the op originally\n     * @internal\n     */\n    public resubmitSubDirectoryMessage(op: IDirectorySubDirectoryOperation, localOpMetadata: unknown): void {\n        assert(isSubDirLocalOpMetadata(localOpMetadata), 0x32f /* Invalid localOpMetadata for sub directory op */);\n\n        // clear the old pending message id\n        const pendingMessageIds = this.pendingSubDirectories.get(op.subdirName);\n        assert(pendingMessageIds !== undefined && pendingMessageIds[0] === localOpMetadata.pendingMessageId,\n            0x330 /* Unexpected pending message received */);\n        pendingMessageIds.shift();\n        if (pendingMessageIds.length === 0) {\n            this.pendingSubDirectories.delete(op.subdirName);\n        }\n\n        if (localOpMetadata.type === \"createSubDir\") {\n            this.submitCreateSubDirectoryMessage(op, localOpMetadata.previouslyExisted);\n        } else {\n            this.submitDeleteSubDirectoryMessage(op, localOpMetadata.subDirectory);\n        }\n    }\n\n    /**\n     * Get the storage of this subdirectory in a serializable format, to be used in snapshotting.\n     * @param serializer - The serializer to use to serialize handles in its values.\n     * @returns The JSONable string representing the storage of this subdirectory\n     * @internal\n     */\n    public *getSerializedStorage(serializer: IFluidSerializer) {\n        this.throwIfDisposed();\n        for (const [key, localValue] of this._storage) {\n            const value = localValue.makeSerialized(serializer, this.directory.handle);\n            const res: [string, ISerializedValue] = [key, value];\n            yield res;\n        }\n    }\n\n    /**\n     * Populate a key value in this subdirectory's storage, to be used when loading from snapshot.\n     * @param key - The key to populate\n     * @param localValue - The local value to populate into it\n     * @internal\n     */\n    public populateStorage(key: string, localValue: ILocalValue): void {\n        this.throwIfDisposed();\n        this._storage.set(key, localValue);\n    }\n\n    /**\n     * Populate a subdirectory into this subdirectory, to be used when loading from snapshot.\n     * @param subdirName - The name of the subdirectory to add\n     * @param newSubDir - The new subdirectory to add\n     * @internal\n     */\n    public populateSubDirectory(subdirName: string, newSubDir: SubDirectory): void {\n        this.throwIfDisposed();\n        this._subdirectories.set(subdirName, newSubDir);\n    }\n\n    /**\n     * Retrieve the local value at the given key.  This is used to get value type information stashed on the local\n     * value so op handlers can be retrieved\n     * @param key - The key to retrieve from\n     * @returns The local value\n     * @internal\n     */\n    public getLocalValue<T extends ILocalValue = ILocalValue>(key: string): T {\n        this.throwIfDisposed();\n        return this._storage.get(key) as T;\n    }\n\n    /**\n     * Remove the pendingMessageId from the map tracking it on rollback\n     * @param map - map tracking the pending messages\n     * @param key - key of the edit in the op\n     */\n    private rollbackPendingMessageId(map: Map<string, number[]>, key: string, pendingMessageId) {\n        const pendingMessageIds = map.get(key);\n        const lastPendingMessageId = pendingMessageIds?.pop();\n        if (!pendingMessageIds || lastPendingMessageId !== pendingMessageId) {\n            throw new Error(\"Rollback op does not match last pending\");\n        }\n        if (pendingMessageIds.length === 0) {\n            map.delete(key);\n        }\n    }\n\n    /**\n     * Rollback a local op\n     * @param op - The operation to rollback\n     * @param localOpMetadata - The local metadata associated with the op.\n     */\n     public rollback(op: any, localOpMetadata: unknown) {\n        if (!isDirectoryLocalOpMetadata(localOpMetadata)) {\n            throw new Error(\"Invalid localOpMetadata\");\n        }\n\n        if (op.type === \"clear\" && localOpMetadata.type === \"clear\") {\n            localOpMetadata.previousStorage.forEach((localValue, key) => {\n                this.setCore(key, localValue, true);\n            });\n\n            const lastPendingClearId = this.pendingClearMessageIds.pop();\n            if (lastPendingClearId === undefined || lastPendingClearId !== localOpMetadata.pendingMessageId) {\n                throw new Error(\"Rollback op does match last clear\");\n            }\n        } else if ((op.type === \"delete\" || op.type === \"set\") && localOpMetadata.type === \"edit\") {\n            if (localOpMetadata.previousValue === undefined) {\n                this.deleteCore(op.key, true);\n            } else {\n                this.setCore(op.key, localOpMetadata.previousValue, true);\n            }\n\n            this.rollbackPendingMessageId(this.pendingKeys, op.key, localOpMetadata.pendingMessageId);\n        } else if (op.type === \"createSubDirectory\" && localOpMetadata.type === \"createSubDir\") {\n            if (!localOpMetadata.previouslyExisted) {\n                this.deleteSubDirectoryCore(op.subdirName, true);\n            }\n\n            this.rollbackPendingMessageId(this.pendingSubDirectories, op.subdirName, localOpMetadata.pendingMessageId);\n        } else if (op.type === \"deleteSubDirectory\" && localOpMetadata.type === \"deleteSubDir\") {\n            if (localOpMetadata.subDirectory !== undefined) {\n                this.undeleteSubDirectoryTree(localOpMetadata.subDirectory);\n                // don't need to register events because deleting never unregistered\n                this._subdirectories.set(op.subdirName, localOpMetadata.subDirectory);\n                this.emit(\"subDirectoryCreated\", op.subdirName, true, this);\n            }\n\n            this.rollbackPendingMessageId(this.pendingSubDirectories, op.subdirName, localOpMetadata.pendingMessageId);\n        } else {\n            throw new Error(\"Unsupported op for rollback\");\n        }\n    }\n\n    /**\n     * Converts the given relative path into an absolute path.\n     * @param path - Relative path to convert\n     * @returns The equivalent absolute path\n     */\n    private makeAbsolute(relativePath: string): string {\n        return posix.resolve(this.absolutePath, relativePath);\n    }\n\n    /**\n     * If our local operations that have not yet been ack'd will eventually overwrite an incoming operation, we should\n     * not process the incoming operation.\n     * @param op - Operation to check\n     * @param local - Whether the operation originated from the local client\n     * @param localOpMetadata - For local client ops, this is the metadata that was submitted with the op.\n     * For ops from a remote client, this will be undefined.\n     * @returns True if the operation should be processed, false otherwise\n     */\n    private needProcessStorageOperation(\n        op: IDirectoryKeyOperation,\n        local: boolean,\n        localOpMetadata: unknown,\n    ): boolean {\n        if (this.pendingClearMessageIds.length > 0) {\n            if (local) {\n                assert(localOpMetadata !== undefined && isKeyEditLocalOpMetadata(localOpMetadata) &&\n                localOpMetadata.pendingMessageId < this.pendingClearMessageIds[0],\n                    0x010 /* \"Received out of order storage op when there is an unackd clear message\" */);\n            }\n            // If I have a NACK clear, we can ignore all ops.\n            return false;\n        }\n\n        const pendingKeyMessageId = this.pendingKeys.get(op.key);\n        if (pendingKeyMessageId !== undefined) {\n            // Found an NACK op, clear it from the directory if the latest sequence number in the directory\n            // match the message's and don't process the op.\n            if (local) {\n                assert(localOpMetadata !== undefined && isKeyEditLocalOpMetadata(localOpMetadata),\n                    0x011 /* pendingMessageId is missing from the local client's operation */);\n                const pendingMessageIds = this.pendingKeys.get(op.key);\n                assert(pendingMessageIds !== undefined && pendingMessageIds[0] === localOpMetadata.pendingMessageId,\n                    0x331 /* Unexpected pending message received */);\n                pendingMessageIds.shift();\n                if (pendingMessageIds.length === 0) {\n                    this.pendingKeys.delete(op.key);\n                }\n            }\n            return false;\n        }\n\n        // If we don't have a NACK op on the key, we need to process the remote ops.\n        return !local;\n    }\n\n    /**\n     * If our local operations that have not yet been ack'd will eventually overwrite an incoming operation, we should\n     * not process the incoming operation.\n     * @param op - Operation to check\n     * @param local - Whether the message originated from the local client\n     * @param message - The message\n     * @param localOpMetadata - For local client messages, this is the metadata that was submitted with the message.\n     * For messages from a remote client, this will be undefined.\n     * @returns True if the operation should be processed, false otherwise\n     */\n    private needProcessSubDirectoryOperation(\n        op: IDirectorySubDirectoryOperation,\n        local: boolean,\n        localOpMetadata: unknown,\n    ): boolean {\n        const pendingSubDirectoryMessageId = this.pendingSubDirectories.get(op.subdirName);\n        if (pendingSubDirectoryMessageId !== undefined) {\n            if (local) {\n                assert(isSubDirLocalOpMetadata(localOpMetadata),\n                    0x012 /* pendingMessageId is missing from the local client's operation */);\n                const pendingMessageIds = this.pendingSubDirectories.get(op.subdirName);\n                assert(pendingMessageIds !== undefined && pendingMessageIds[0] === localOpMetadata.pendingMessageId,\n                    0x332 /* Unexpected pending message received */);\n                pendingMessageIds.shift();\n                if (pendingMessageIds.length === 0) {\n                    this.pendingSubDirectories.delete(op.subdirName);\n                }\n            }\n            return false;\n        }\n\n        return !local;\n    }\n\n    /**\n     * Clear all keys in memory in response to a remote clear, but retain keys we have modified but not yet been ack'd.\n     */\n    private clearExceptPendingKeys() {\n        // Assuming the pendingKeys is small and the map is large\n        // we will get the value for the pendingKeys and clear the map\n        const temp = new Map<string, ILocalValue>();\n        this.pendingKeys.forEach((value, key, map) => {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            temp.set(key, this._storage.get(key)!);\n        });\n        this.clearCore(false);\n        temp.forEach((value, key, map) => {\n            this.setCore(key, value, true);\n        });\n    }\n\n    /**\n     * Clear implementation used for both locally sourced clears as well as incoming remote clears.\n     * @param local - Whether the message originated from the local client\n     * @param op - The message if from a remote clear, or null if from a local clear\n     */\n    private clearCore(local: boolean) {\n        this._storage.clear();\n        this.directory.emit(\"clear\", local, this.directory);\n    }\n\n    /**\n     * Delete implementation used for both locally sourced deletes as well as incoming remote deletes.\n     * @param key - The key being deleted\n     * @param local - Whether the message originated from the local client\n     * @returns Previous local value of the key if it existed, undefined if it did not exist\n     */\n    private deleteCore(key: string, local: boolean): ILocalValue | undefined {\n        const previousLocalValue = this._storage.get(key);\n        const previousValue = previousLocalValue?.value;\n        const successfullyRemoved = this._storage.delete(key);\n        if (successfullyRemoved) {\n            const event: IDirectoryValueChanged = { key, path: this.absolutePath, previousValue };\n            this.directory.emit(\"valueChanged\", event, local, this.directory);\n            const containedEvent: IValueChanged = { key, previousValue };\n            this.emit(\"containedValueChanged\", containedEvent, local, this);\n        }\n        return previousLocalValue;\n    }\n\n    /**\n     * Set implementation used for both locally sourced sets as well as incoming remote sets.\n     * @param key - The key being set\n     * @param value - The value being set\n     * @param local - Whether the message originated from the local client\n     * @returns Previous local value of the key, if any\n     */\n    private setCore(key: string, value: ILocalValue, local: boolean): ILocalValue | undefined {\n        const previousLocalValue = this._storage.get(key);\n        const previousValue = previousLocalValue?.value;\n        this._storage.set(key, value);\n        const event: IDirectoryValueChanged = { key, path: this.absolutePath, previousValue };\n        this.directory.emit(\"valueChanged\", event, local, this.directory);\n        const containedEvent: IValueChanged = { key, previousValue };\n        this.emit(\"containedValueChanged\", containedEvent, local, this);\n        return previousLocalValue;\n    }\n\n    /**\n     * Create subdirectory implementation used for both locally sourced creation as well as incoming remote creation.\n     * @param subdirName - The name of the subdirectory being created\n     * @param local - Whether the message originated from the local client\n     * @returns - True if is newly created, false if it already existed.\n     */\n    private createSubDirectoryCore(subdirName: string, local: boolean): boolean {\n        if (!this._subdirectories.has(subdirName)) {\n            const absolutePath = posix.join(this.absolutePath, subdirName);\n            const subDir = new SubDirectory(this.directory, this.runtime, this.serializer, absolutePath);\n            this.registerEventsOnSubDirectory(subDir, subdirName);\n            this._subdirectories.set(subdirName, subDir);\n            this.emit(\"subDirectoryCreated\", subdirName, local, this);\n            return true;\n        }\n        return false;\n    }\n\n    private registerEventsOnSubDirectory(subDirectory: SubDirectory, subDirName: string) {\n        subDirectory.on(\"subDirectoryCreated\", (relativePath: string, local: boolean) => {\n            this.emit(\"subDirectoryCreated\", posix.join(subDirName, relativePath), local, this);\n        });\n        subDirectory.on(\"subDirectoryDeleted\", (relativePath: string, local: boolean) => {\n            this.emit(\"subDirectoryDeleted\", posix.join(subDirName, relativePath), local, this);\n        });\n    }\n\n    /**\n     * Delete subdirectory implementation used for both locally sourced creation as well as incoming remote creation.\n     * @param subdirName - The name of the subdirectory being deleted\n     * @param local - Whether the message originated from the local client\n     */\n    private deleteSubDirectoryCore(subdirName: string, local: boolean) {\n        const previousValue = this._subdirectories.get(subdirName);\n        // This should make the subdirectory structure unreachable so it can be GC'd and won't appear in snapshots\n        // Might want to consider cleaning out the structure more exhaustively though? But not when rollback.\n        if (previousValue !== undefined) {\n            this._subdirectories.delete(subdirName);\n            this.disposeSubDirectoryTree(previousValue);\n            this.emit(\"subDirectoryDeleted\", subdirName, local, this);\n        }\n        return previousValue;\n    }\n\n    private disposeSubDirectoryTree(directory: IDirectory | undefined) {\n        if (!directory) {\n            return;\n        }\n        // Dispose the subdirectory tree. This will dispose the subdirectories from bottom to top.\n        const subDirectories = directory.subdirectories();\n        for (const [_, subDirectory] of subDirectories) {\n            this.disposeSubDirectoryTree(subDirectory);\n        }\n        if (typeof directory.dispose === \"function\") {\n            directory.dispose();\n        }\n    }\n\n    private undeleteSubDirectoryTree(directory: SubDirectory) {\n        // Restore deleted subdirectory tree. This will unmark \"deleted\" from the subdirectories from bottom to top.\n        for (const [_, subDirectory] of this._subdirectories.entries()) {\n            this.undeleteSubDirectoryTree(subDirectory);\n        }\n        directory.undispose();\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IFluidHandle } from \"@fluidframework/core-interfaces\";\nimport { IFluidSerializer, ValueType } from \"@fluidframework/shared-object-base\";\nimport { assert, TypedEventEmitter } from \"@fluidframework/common-utils\";\nimport {\n    ISerializableValue,\n    ISerializedValue,\n    ISharedMapEvents,\n} from \"./interfaces\";\nimport {\n    ILocalValue,\n    LocalValueMaker,\n    makeSerializable,\n} from \"./localValues\";\n\n/**\n * Defines the means to process and submit a given op on a map.\n */\ninterface IMapMessageHandler {\n    /**\n     * Apply the given operation.\n     * @param op - The map operation to apply\n     * @param local - Whether the message originated from the local client\n     * @param localOpMetadata - For local client messages, this is the metadata that was submitted with the message.\n     * For messages from a remote client, this will be undefined.\n     */\n    process(\n        op: IMapOperation,\n        local: boolean,\n        localOpMetadata: unknown,\n    ): void;\n\n    /**\n     * Communicate the operation to remote clients.\n     * @param op - The map operation to submit\n     * @param localOpMetadata - The metadata to be submitted with the message.\n     */\n    submit(op: IMapOperation, localOpMetadata: unknown): void;\n\n    getStashedOpLocalMetadata(op: IMapOperation): unknown;\n}\n\n/**\n * Operation indicating a value should be set for a key.\n */\nexport interface IMapSetOperation {\n    /**\n     * String identifier of the operation type.\n     */\n    type: \"set\";\n\n    /**\n     * Map key being modified.\n     */\n    key: string;\n\n    /**\n     * Value to be set on the key.\n     */\n    value: ISerializableValue;\n}\n\n/**\n * Operation indicating a key should be deleted from the map.\n */\nexport interface IMapDeleteOperation {\n    /**\n     * String identifier of the operation type.\n     */\n    type: \"delete\";\n\n    /**\n     * Map key being modified.\n     */\n    key: string;\n}\n\n/**\n * Map key operations are one of several types.\n */\nexport type IMapKeyOperation = IMapSetOperation | IMapDeleteOperation;\n\n/**\n * Operation indicating the map should be cleared.\n */\nexport interface IMapClearOperation {\n    /**\n     * String identifier of the operation type.\n     */\n    type: \"clear\";\n}\n\n/**\n * Description of a map delta operation\n */\nexport type IMapOperation = IMapKeyOperation | IMapClearOperation;\n\n/**\n * Defines the in-memory object structure to be used for the conversion to/from serialized.\n * Directly used in JSON.stringify, direct result from JSON.parse\n */\nexport interface IMapDataObjectSerializable {\n    [key: string]: ISerializableValue;\n}\n\nexport interface IMapDataObjectSerialized {\n    [key: string]: ISerializedValue;\n}\n\ninterface IMapKeyEditLocalOpMetadata {\n    type: \"edit\";\n    pendingMessageId: number;\n    previousValue?: ILocalValue;\n}\n\ninterface IMapKeyAddLocalOpMetadata {\n    type: \"add\";\n    pendingMessageId: number;\n}\n\ninterface IMapClearLocalOpMetadata {\n    type: \"clear\";\n    pendingMessageId: number;\n    previousMap?: Map<string, ILocalValue>;\n}\n\ntype MapKeyLocalOpMetadata = IMapKeyEditLocalOpMetadata | IMapKeyAddLocalOpMetadata;\ntype MapLocalOpMetadata = IMapClearLocalOpMetadata | MapKeyLocalOpMetadata;\n\nfunction isMapKeyLocalOpMetadata(metadata: any): metadata is MapKeyLocalOpMetadata {\n    return metadata !== undefined && typeof metadata.pendingMessageId === \"number\" &&\n        (metadata.type === \"add\" || metadata.type === \"edit\");\n}\n\nfunction isClearLocalOpMetadata(metadata: any): metadata is IMapClearLocalOpMetadata {\n    return metadata !== undefined && metadata.type === \"clear\" && typeof metadata.pendingMessageId === \"number\";\n}\n\nfunction isMapLocalOpMetadata(metadata: any): metadata is MapLocalOpMetadata {\n    return metadata !== undefined && typeof metadata.pendingMessageId === \"number\" &&\n        (metadata.type === \"add\" || metadata.type === \"edit\" || metadata.type === \"clear\");\n}\n\n/**\n * A SharedMap is a map-like distributed data structure.\n */\nexport class MapKernel {\n    /**\n     * The number of key/value pairs stored in the map.\n     */\n    public get size(): number {\n        return this.data.size;\n    }\n\n    /**\n     * Mapping of op types to message handlers.\n     */\n    private readonly messageHandlers: ReadonlyMap<string, IMapMessageHandler> = new Map();\n\n    /**\n     * The in-memory data the map is storing.\n     */\n    private readonly data = new Map<string, ILocalValue>();\n\n    /**\n     * Keys that have been modified locally but not yet ack'd from the server.\n     */\n    private readonly pendingKeys: Map<string, number[]> = new Map();\n\n    /**\n     * This is used to assign a unique id to every outgoing operation and helps in tracking unack'd ops.\n     */\n    private pendingMessageId: number = -1;\n\n    /**\n     * The pending ids of any clears that have been performed locally but not yet ack'd from the server\n     */\n    private readonly pendingClearMessageIds: number[] = [];\n\n    /**\n     * Object to create encapsulations of the values stored in the map.\n     */\n    private readonly localValueMaker: LocalValueMaker;\n\n    /**\n     * Create a new shared map kernel.\n     * @param serializer - The serializer to serialize / parse handles\n     * @param handle - The handle of the shared object using the kernel\n     * @param submitMessage - A callback to submit a message through the shared object\n     * @param isAttached - To query whether the shared object should generate ops\n     * @param valueTypes - The value types to register\n     * @param eventEmitter - The object that will emit map events\n     */\n    constructor(\n        private readonly serializer: IFluidSerializer,\n        private readonly handle: IFluidHandle,\n        private readonly submitMessage: (op: any, localOpMetadata: unknown) => void,\n        private readonly isAttached: () => boolean,\n        private readonly eventEmitter: TypedEventEmitter<ISharedMapEvents>,\n    ) {\n        this.localValueMaker = new LocalValueMaker(serializer);\n        this.messageHandlers = this.getMessageHandlers();\n    }\n\n    /**\n     * Get an iterator over the keys in this map.\n     * @returns The iterator\n     */\n    public keys(): IterableIterator<string> {\n        return this.data.keys();\n    }\n\n    /**\n     * Get an iterator over the entries in this map.\n     * @returns The iterator\n     */\n    public entries(): IterableIterator<[string, any]> {\n        const localEntriesIterator = this.data.entries();\n        const iterator = {\n            next(): IteratorResult<[string, any]> {\n                const nextVal = localEntriesIterator.next();\n                if (nextVal.done) {\n                    return { value: undefined, done: true };\n                } else {\n                    // Unpack the stored value\n                    return { value: [nextVal.value[0], nextVal.value[1].value], done: false };\n                }\n            },\n            [Symbol.iterator]() {\n                return this;\n            },\n        };\n        return iterator;\n    }\n\n    /**\n     * Get an iterator over the values in this map.\n     * @returns The iterator\n     */\n    public values(): IterableIterator<any> {\n        const localValuesIterator = this.data.values();\n        const iterator = {\n            next(): IteratorResult<any> {\n                const nextVal = localValuesIterator.next();\n                if (nextVal.done) {\n                    return { value: undefined, done: true };\n                } else {\n                    // Unpack the stored value\n                    return { value: nextVal.value.value, done: false };\n                }\n            },\n            [Symbol.iterator]() {\n                return this;\n            },\n        };\n        return iterator;\n    }\n\n    /**\n     * Get an iterator over the entries in this map.\n     * @returns The iterator\n     */\n    public [Symbol.iterator](): IterableIterator<[string, any]> {\n        return this.entries();\n    }\n\n    /**\n     * Executes the given callback on each entry in the map.\n     * @param callbackFn - Callback function\n     */\n    public forEach(callbackFn: (value: any, key: string, map: Map<string, any>) => void): void {\n        this.data.forEach((localValue, key, m) => {\n            callbackFn(localValue.value, key, m);\n        });\n    }\n\n    /**\n     * {@inheritDoc ISharedMap.get}\n     */\n    public get<T = any>(key: string): T | undefined {\n        const localValue = this.data.get(key);\n        return localValue === undefined ? undefined : localValue.value as T;\n    }\n\n    /**\n     * Check if a key exists in the map.\n     * @param key - The key to check\n     * @returns True if the key exists, false otherwise\n     */\n    public has(key: string): boolean {\n        return this.data.has(key);\n    }\n\n    /**\n     * {@inheritDoc ISharedMap.set}\n     */\n    public set(key: string, value: any) {\n        // Undefined/null keys can't be serialized to JSON in the manner we currently snapshot.\n        if (key === undefined || key === null) {\n            throw new Error(\"Undefined and null keys are not supported\");\n        }\n\n        // Create a local value and serialize it.\n        const localValue = this.localValueMaker.fromInMemory(value);\n        const serializableValue = makeSerializable(\n            localValue,\n            this.serializer,\n            this.handle);\n\n        // Set the value locally.\n        const previousValue = this.setCore(\n            key,\n            localValue,\n            true,\n        );\n\n        // If we are not attached, don't submit the op.\n        if (!this.isAttached()) {\n            return;\n        }\n\n        const op: IMapSetOperation = {\n            key,\n            type: \"set\",\n            value: serializableValue,\n        };\n        this.submitMapKeyMessage(op, previousValue);\n    }\n\n    /**\n     * Delete a key from the map.\n     * @param key - Key to delete\n     * @returns True if the key existed and was deleted, false if it did not exist\n     */\n    public delete(key: string): boolean {\n        // Delete the key locally first.\n        const previousValue = this.deleteCore(key, true);\n\n        // If we are not attached, don't submit the op.\n        if (!this.isAttached()) {\n            return previousValue !== undefined;\n        }\n\n        const op: IMapDeleteOperation = {\n            key,\n            type: \"delete\",\n        };\n        this.submitMapKeyMessage(op, previousValue);\n\n        return previousValue !== undefined;\n    }\n\n    /**\n     * Clear all data from the map.\n     */\n    public clear(): void {\n        const copy = this.isAttached() ? new Map<string, ILocalValue>(this.data) : undefined;\n\n        // Clear the data locally first.\n        this.clearCore(true);\n\n        // If we are not attached, don't submit the op.\n        if (!this.isAttached()) {\n            return;\n        }\n\n        const op: IMapClearOperation = {\n            type: \"clear\",\n        };\n        this.submitMapClearMessage(op, copy);\n    }\n\n    /**\n     * Serializes the data stored in the shared map to a JSON string\n     * @param serializer - The serializer to use to serialize handles in its values.\n     * @returns A JSON string containing serialized map data\n     */\n    public getSerializedStorage(serializer: IFluidSerializer): IMapDataObjectSerialized {\n        const serializableMapData: IMapDataObjectSerialized = {};\n        this.data.forEach((localValue, key) => {\n            serializableMapData[key] = localValue.makeSerialized(serializer, this.handle);\n        });\n        return serializableMapData;\n    }\n\n    public getSerializableStorage(serializer: IFluidSerializer): IMapDataObjectSerializable {\n        const serializableMapData: IMapDataObjectSerializable = {};\n        this.data.forEach((localValue, key) => {\n            serializableMapData[key] = makeSerializable(localValue, serializer, this.handle);\n        });\n        return serializableMapData;\n    }\n\n    public serialize(serializer: IFluidSerializer): string {\n        return JSON.stringify(this.getSerializableStorage(serializer));\n    }\n\n    /**\n     * Populate the kernel with the given map data.\n     * @param data - A JSON string containing serialized map data\n     */\n    public populateFromSerializable(json: IMapDataObjectSerializable): void {\n        for (const [key, serializable] of Object.entries(json)) {\n            const localValue = {\n                key,\n                value: this.makeLocal(key, serializable),\n            };\n\n            this.data.set(localValue.key, localValue.value);\n        }\n    }\n\n    public populate(json: string): void {\n        this.populateFromSerializable(JSON.parse(json) as IMapDataObjectSerializable);\n    }\n\n    /**\n     * Submit the given op if a handler is registered.\n     * @param op - The operation to attempt to submit\n     * @param localOpMetadata - The local metadata associated with the op. This is kept locally by the runtime\n     * and not sent to the server. This will be sent back when this message is received back from the server. This is\n     * also sent if we are asked to resubmit the message.\n     * @returns True if the operation was submitted, false otherwise.\n     */\n    public trySubmitMessage(op: any, localOpMetadata: unknown): boolean {\n        const handler = this.messageHandlers.get(op.type);\n        if (handler === undefined) {\n            return false;\n        }\n        handler.submit(op as IMapOperation, localOpMetadata);\n        return true;\n    }\n\n    public tryGetStashedOpLocalMetadata(op: any): unknown {\n        const handler = this.messageHandlers.get(op.type);\n        if (handler === undefined) {\n            throw new Error(\"no apply stashed op handler\");\n        }\n        return handler.getStashedOpLocalMetadata(op as IMapOperation);\n    }\n\n    /**\n     * Process the given op if a handler is registered.\n     * @param op - The message to process\n     * @param local - Whether the message originated from the local client\n     * @param localOpMetadata - For local client messages, this is the metadata that was submitted with the message.\n     * For messages from a remote client, this will be undefined.\n     * @returns True if the operation was processed, false otherwise.\n     */\n    public tryProcessMessage(\n        op: IMapOperation,\n        local: boolean,\n        localOpMetadata: unknown,\n    ): boolean {\n        const handler = this.messageHandlers.get(op.type);\n        if (handler === undefined) {\n            return false;\n        }\n        handler.process(op, local, localOpMetadata);\n        return true;\n    }\n\n    /**\n     * Rollback a local op\n     * @param op - The operation to rollback\n     * @param localOpMetadata - The local metadata associated with the op.\n     */\n    public rollback(op: any, localOpMetadata: unknown) {\n        if (!isMapLocalOpMetadata(localOpMetadata)) {\n            throw new Error(\"Invalid localOpMetadata\");\n        }\n\n        if (op.type === \"clear\" && localOpMetadata.type === \"clear\") {\n            if (localOpMetadata.previousMap === undefined) {\n                throw new Error(\"Cannot rollback without previous map\");\n            }\n            localOpMetadata.previousMap.forEach((localValue, key) => {\n                this.setCore(key, localValue, true);\n            });\n\n            const lastPendingClearId = this.pendingClearMessageIds.pop();\n            if (lastPendingClearId === undefined || lastPendingClearId !== localOpMetadata.pendingMessageId) {\n                throw new Error(\"Rollback op does match last clear\");\n            }\n        } else if (op.type === \"delete\" || op.type === \"set\") {\n            if (localOpMetadata.type === \"add\") {\n                this.deleteCore(op.key, true);\n            } else if (localOpMetadata.type === \"edit\" && localOpMetadata.previousValue !== undefined) {\n                this.setCore(op.key, localOpMetadata.previousValue, true);\n            } else {\n                throw new Error(\"Cannot rollback without previous value\");\n            }\n\n            const pendingMessageIds = this.pendingKeys.get(op.key);\n            const lastPendingMessageId = pendingMessageIds?.pop();\n            if (!pendingMessageIds || lastPendingMessageId !== localOpMetadata.pendingMessageId) {\n                throw new Error(\"Rollback op does not match last pending\");\n            }\n            if (pendingMessageIds.length === 0) {\n                this.pendingKeys.delete(op.key);\n            }\n        } else {\n            throw new Error(\"Unsupported op for rollback\");\n        }\n    }\n\n    /**\n     * Set implementation used for both locally sourced sets as well as incoming remote sets.\n     * @param key - The key being set\n     * @param value - The value being set\n     * @param local - Whether the message originated from the local client\n     * @returns Previous local value of the key, if any\n     */\n    private setCore(key: string, value: ILocalValue, local: boolean): ILocalValue | undefined {\n        const previousLocalValue = this.data.get(key);\n        const previousValue = previousLocalValue?.value;\n        this.data.set(key, value);\n        this.eventEmitter.emit(\"valueChanged\", { key, previousValue }, local, this.eventEmitter);\n        return previousLocalValue;\n    }\n\n    /**\n     * Clear implementation used for both locally sourced clears as well as incoming remote clears.\n     * @param local - Whether the message originated from the local client\n     */\n    private clearCore(local: boolean): void {\n        this.data.clear();\n        this.eventEmitter.emit(\"clear\", local, this.eventEmitter);\n    }\n\n    /**\n     * Delete implementation used for both locally sourced deletes as well as incoming remote deletes.\n     * @param key - The key being deleted\n     * @param local - Whether the message originated from the local client\n     * @returns Previous local value of the key if it existed, undefined if it did not exist\n     */\n    private deleteCore(key: string, local: boolean): ILocalValue | undefined {\n        const previousLocalValue = this.data.get(key);\n        const previousValue = previousLocalValue?.value;\n        const successfullyRemoved = this.data.delete(key);\n        if (successfullyRemoved) {\n            this.eventEmitter.emit(\"valueChanged\", { key, previousValue }, local, this.eventEmitter);\n        }\n        return previousLocalValue;\n    }\n\n    /**\n     * Clear all keys in memory in response to a remote clear, but retain keys we have modified but not yet been ack'd.\n     */\n    private clearExceptPendingKeys(): void {\n        // Assuming the pendingKeys is small and the map is large\n        // we will get the value for the pendingKeys and clear the map\n        const temp = new Map<string, ILocalValue>();\n        this.pendingKeys.forEach((value, key) => {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            temp.set(key, this.data.get(key)!);\n        });\n        this.clearCore(false);\n        temp.forEach((value, key) => {\n            this.setCore(key, value, true);\n        });\n    }\n\n    /**\n     * The remote ISerializableValue we're receiving (either as a result of a load or an incoming set op) will\n     * have the information we need to create a real object, but will not be the real object yet.  For example,\n     * we might know it's a map and the map's ID but not have the actual map or its data yet.  makeLocal's\n     * job is to convert that information into a real object for local usage.\n     * @param key - The key that the caller intends to store the local value into (used for ops later).  But\n     * doesn't actually store the local value into that key.  So better not lie!\n     * @param serializable - The remote information that we can convert into a real object\n     * @returns The local value that was produced\n     */\n    private makeLocal(key: string, serializable: ISerializableValue): ILocalValue {\n        if (serializable.type === ValueType[ValueType.Plain] || serializable.type === ValueType[ValueType.Shared]) {\n            return this.localValueMaker.fromSerializable(serializable);\n        } else {\n            throw new Error(\"Unknown local value type\");\n        }\n    }\n\n    /**\n     * If our local operations that have not yet been ack'd will eventually overwrite an incoming operation, we should\n     * not process the incoming operation.\n     * @param op - Operation to check\n     * @param local - Whether the message originated from the local client\n     * @param localOpMetadata - For local client messages, this is the metadata that was submitted with the message.\n     * For messages from a remote client, this will be undefined.\n     * @returns True if the operation should be processed, false otherwise\n     */\n    private needProcessKeyOperation(\n        op: IMapKeyOperation,\n        local: boolean,\n        localOpMetadata: unknown,\n    ): boolean {\n        if (this.pendingClearMessageIds.length > 0) {\n            if (local) {\n                assert(localOpMetadata !== undefined && isMapKeyLocalOpMetadata(localOpMetadata) &&\n                    localOpMetadata.pendingMessageId < this.pendingClearMessageIds[0],\n                    0x013 /* \"Received out of order op when there is an unackd clear message\" */);\n            }\n            // If we have an unack'd clear, we can ignore all ops.\n            return false;\n        }\n\n        const pendingKeyMessageId = this.pendingKeys.get(op.key);\n        if (pendingKeyMessageId !== undefined) {\n            // Found an unack'd op. Clear it from the map if the pendingMessageId in the map matches this message's\n            // and don't process the op.\n            if (local) {\n                assert(localOpMetadata !== undefined && isMapKeyLocalOpMetadata(localOpMetadata),\n                    0x014 /* pendingMessageId is missing from the local client's operation */);\n                const pendingMessageIds = this.pendingKeys.get(op.key);\n                assert(pendingMessageIds !== undefined && pendingMessageIds[0] === localOpMetadata.pendingMessageId,\n                    0x2fa /* Unexpected pending message received */);\n                pendingMessageIds.shift();\n                if (pendingMessageIds.length === 0) {\n                    this.pendingKeys.delete(op.key);\n                }\n            }\n            return false;\n        }\n\n        // If we don't have a NACK op on the key, we need to process the remote ops.\n        return !local;\n    }\n\n    /**\n     * Get the message handlers for the map.\n     * @returns A map of string op names to IMapMessageHandlers for those ops\n     */\n    private getMessageHandlers() {\n        const messageHandlers = new Map<string, IMapMessageHandler>();\n        messageHandlers.set(\n            \"clear\",\n            {\n                process: (op: IMapClearOperation, local, localOpMetadata) => {\n                    if (local) {\n                        assert(isClearLocalOpMetadata(localOpMetadata),\n                            0x015 /* \"pendingMessageId is missing from the local client's clear operation\" */);\n                        const pendingClearMessageId = this.pendingClearMessageIds.shift();\n                        assert(pendingClearMessageId === localOpMetadata.pendingMessageId,\n                            0x2fb /* pendingMessageId does not match */);\n                        return;\n                    }\n                    if (this.pendingKeys.size !== 0) {\n                        this.clearExceptPendingKeys();\n                        return;\n                    }\n                    this.clearCore(local);\n                },\n                submit: (op: IMapClearOperation, localOpMetadata: unknown) => {\n                    assert(isClearLocalOpMetadata(localOpMetadata), 0x2fc /* Invalid localOpMetadata for clear */);\n                    // We don't reuse the metadata pendingMessageId but send a new one on each submit.\n                    const pendingClearMessageId = this.pendingClearMessageIds.shift();\n                    assert(pendingClearMessageId === localOpMetadata.pendingMessageId,\n                        0x2fd /* pendingMessageId does not match */);\n                    this.submitMapClearMessage(op, localOpMetadata.previousMap);\n                },\n                getStashedOpLocalMetadata: (op: IMapClearOperation) => {\n                    // We don't reuse the metadata pendingMessageId but send a new one on each submit.\n                    return { type: \"clear\", pendingMessageId: this.getMapClearMessageId() };\n                },\n            });\n        messageHandlers.set(\n            \"delete\",\n            {\n                process: (op: IMapDeleteOperation, local, localOpMetadata) => {\n                    if (!this.needProcessKeyOperation(op, local, localOpMetadata)) {\n                        return;\n                    }\n                    this.deleteCore(op.key, local);\n                },\n                submit: (op: IMapDeleteOperation, localOpMetadata: unknown) => {\n                    this.resubmitMapKeyMessage(op, localOpMetadata);\n                },\n                getStashedOpLocalMetadata: (op: IMapDeleteOperation) => {\n                    // We don't reuse the metadata pendingMessageId but send a new one on each submit.\n                    return { type: \"edit\", pendingMessageId: this.getMapKeyMessageId(op) };\n                },\n            });\n        messageHandlers.set(\n            \"set\",\n            {\n                process: (op: IMapSetOperation, local, localOpMetadata) => {\n                    if (!this.needProcessKeyOperation(op, local, localOpMetadata)) {\n                        return;\n                    }\n\n                    // needProcessKeyOperation should have returned false if local is true\n                    const context = this.makeLocal(op.key, op.value);\n                    this.setCore(op.key, context, local);\n                },\n                submit: (op: IMapSetOperation, localOpMetadata: unknown) => {\n                    this.resubmitMapKeyMessage(op, localOpMetadata);\n                },\n                getStashedOpLocalMetadata: (op: IMapSetOperation) => {\n                    // We don't reuse the metadata pendingMessageId but send a new one on each submit.\n                    return { type: \"edit\", pendingMessageId: this.getMapKeyMessageId(op) };\n                },\n            });\n\n        return messageHandlers;\n    }\n\n    private getMapClearMessageId(): number {\n        const pendingMessageId = ++this.pendingMessageId;\n        this.pendingClearMessageIds.push(pendingMessageId);\n        return pendingMessageId;\n    }\n\n    /**\n     * Submit a clear message to remote clients.\n     * @param op - The clear message\n     */\n    private submitMapClearMessage(op: IMapClearOperation, previousMap?: Map<string, ILocalValue>): void {\n        const metadata = { type: \"clear\", pendingMessageId: this.getMapClearMessageId(), previousMap };\n        this.submitMessage(op, metadata);\n    }\n\n    private getMapKeyMessageId(op: IMapKeyOperation): number {\n        const pendingMessageId = ++this.pendingMessageId;\n        const pendingMessageIds = this.pendingKeys.get(op.key);\n        if (pendingMessageIds !== undefined) {\n            pendingMessageIds.push(pendingMessageId);\n        } else {\n            this.pendingKeys.set(op.key, [pendingMessageId]);\n        }\n        return pendingMessageId;\n    }\n\n    /**\n     * Submit a map key message to remote clients.\n     * @param op - The map key message\n     * @param previousValue - The value of the key before this op\n     */\n    private submitMapKeyMessage(op: IMapKeyOperation, previousValue?: ILocalValue): void {\n        const pendingMessageId = this.getMapKeyMessageId(op);\n        const localMetadata = previousValue ?\n            { type: \"edit\", pendingMessageId, previousValue } :\n            { type: \"add\", pendingMessageId };\n        this.submitMessage(op, localMetadata);\n    }\n\n    /**\n     * Submit a map key message to remote clients based on a previous submit.\n     * @param op - The map key message\n     * @param localOpMetadata - Metadata from the previous submit\n     */\n    private resubmitMapKeyMessage(op: IMapKeyOperation, localOpMetadata: unknown): void {\n        assert(isMapKeyLocalOpMetadata(localOpMetadata), 0x2fe /* Invalid localOpMetadata in submit */);\n\n        // clear the old pending message id\n        const pendingMessageIds = this.pendingKeys.get(op.key);\n        assert(pendingMessageIds !== undefined && pendingMessageIds[0] === localOpMetadata.pendingMessageId,\n            0x2ff /* Unexpected pending message received */);\n        pendingMessageIds.shift();\n        if (pendingMessageIds.length === 0) {\n            this.pendingKeys.delete(op.key);\n        }\n\n        // We don't reuse the metadata pendingMessageId but send a new one on each submit.\n        const pendingMessageId = this.getMapKeyMessageId(op);\n        const localMetadata = localOpMetadata.type === \"edit\" ?\n            { type: \"edit\", pendingMessageId, previousValue: localOpMetadata.previousValue } :\n            { type: \"add\", pendingMessageId };\n        this.submitMessage(op, localMetadata);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ISequencedDocumentMessage, MessageType } from \"@fluidframework/protocol-definitions\";\nimport {\n    IChannelAttributes,\n    IFluidDataStoreRuntime,\n    IChannelStorageService,\n    IChannelServices,\n    IChannelFactory,\n} from \"@fluidframework/datastore-definitions\";\nimport { ISummaryTreeWithStats, ITelemetryContext } from \"@fluidframework/runtime-definitions\";\nimport { readAndParse } from \"@fluidframework/driver-utils\";\nimport {\n    IFluidSerializer,\n    SharedObject,\n} from \"@fluidframework/shared-object-base\";\nimport { SummaryTreeBuilder } from \"@fluidframework/runtime-utils\";\nimport {\n    ISharedMap,\n    ISharedMapEvents,\n} from \"./interfaces\";\nimport { IMapDataObjectSerializable, MapKernel } from \"./mapKernel\";\nimport { pkgVersion } from \"./packageVersion\";\n\ninterface IMapSerializationFormat {\n    blobs?: string[];\n    content: IMapDataObjectSerializable;\n}\n\nconst snapshotFileName = \"header\";\n\n/**\n * The factory that defines the map.\n * @sealed\n */\nexport class MapFactory implements IChannelFactory {\n    /**\n     * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.\"type\"}\n     */\n    public static readonly Type = \"https://graph.microsoft.com/types/map\";\n\n    /**\n     * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.attributes}\n     */\n    public static readonly Attributes: IChannelAttributes = {\n        type: MapFactory.Type,\n        snapshotFormatVersion: \"0.2\",\n        packageVersion: pkgVersion,\n    };\n\n    /**\n     * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.\"type\"}\n     */\n    public get type() {\n        return MapFactory.Type;\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.attributes}\n     */\n    public get attributes() {\n        return MapFactory.Attributes;\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.load}\n     */\n    public async load(\n        runtime: IFluidDataStoreRuntime,\n        id: string,\n        services: IChannelServices,\n        attributes: IChannelAttributes): Promise<ISharedMap> {\n        const map = new SharedMap(id, runtime, attributes);\n        await map.load(services);\n\n        return map;\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.create}\n     */\n    public create(runtime: IFluidDataStoreRuntime, id: string): ISharedMap {\n        const map = new SharedMap(id, runtime, MapFactory.Attributes);\n        map.initializeLocal();\n\n        return map;\n    }\n}\n\n/**\n * The SharedMap distributed data structure can be used to store key-value pairs. It provides the same API for setting\n * and retrieving values that JavaScript developers are accustomed to with the\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map | Map} built-in object.\n * However, the keys of a SharedMap must be strings.\n */\nexport class SharedMap extends SharedObject<ISharedMapEvents> implements ISharedMap {\n    /**\n     * Create a new shared map.\n     * @param runtime - The data store runtime that the new shared map belongs to.\n     * @param id - Optional name of the shared map.\n     * @returns Newly created shared map.\n     *\n     * @example\n     * To create a `SharedMap`, call the static create method:\n     *\n     * ```typescript\n     * const myMap = SharedMap.create(this.runtime, id);\n     * ```\n     */\n    public static create(runtime: IFluidDataStoreRuntime, id?: string): SharedMap {\n        return runtime.createChannel(id, MapFactory.Type) as SharedMap;\n    }\n\n    /**\n     * Get a factory for SharedMap to register with the data store.\n     * @returns A factory that creates SharedMaps and loads them from storage.\n     */\n    public static getFactory(): IChannelFactory {\n        return new MapFactory();\n    }\n\n    /**\n     * String representation for the class.\n     */\n    public readonly [Symbol.toStringTag]: string = \"SharedMap\";\n\n    /**\n     * MapKernel which manages actual map operations.\n     */\n    private readonly kernel: MapKernel;\n\n    /**\n     * Do not call the constructor. Instead, you should use the {@link SharedMap.create | create method}.\n     *\n     * @param id - String identifier.\n     * @param runtime - Data store runtime.\n     * @param attributes - The attributes for the map.\n     */\n    constructor(\n        id: string,\n        runtime: IFluidDataStoreRuntime,\n        attributes: IChannelAttributes,\n    ) {\n        super(id, runtime, attributes, \"fluid_map_\");\n        this.kernel = new MapKernel(\n            this.serializer,\n            this.handle,\n            (op, localOpMetadata) => this.submitLocalMessage(op, localOpMetadata),\n            () => this.isAttached(),\n            this,\n        );\n    }\n\n    /**\n     * Get an iterator over the keys in this map.\n     * @returns The iterator\n     */\n    public keys(): IterableIterator<string> {\n        return this.kernel.keys();\n    }\n\n    /**\n     * Get an iterator over the entries in this map.\n     * @returns The iterator\n     */\n    public entries(): IterableIterator<[string, any]> {\n        return this.kernel.entries();\n    }\n\n    /**\n     * Get an iterator over the values in this map.\n     * @returns The iterator\n     */\n    public values(): IterableIterator<any> {\n        return this.kernel.values();\n    }\n\n    /**\n     * Get an iterator over the entries in this map.\n     * @returns The iterator\n     */\n    public [Symbol.iterator](): IterableIterator<[string, any]> {\n        return this.kernel.entries();\n    }\n\n    /**\n     * The number of key/value pairs stored in the map.\n     */\n    public get size() {\n        return this.kernel.size;\n    }\n\n    /**\n     * Executes the given callback on each entry in the map.\n     * @param callbackFn - Callback function\n     */\n    public forEach(callbackFn: (value: any, key: string, map: Map<string, any>) => void): void {\n        this.kernel.forEach(callbackFn);\n    }\n\n    /**\n     * {@inheritDoc ISharedMap.get}\n     */\n    public get<T = any>(key: string): T | undefined {\n        return this.kernel.get<T>(key);\n    }\n\n    /**\n     * Check if a key exists in the map.\n     * @param key - The key to check\n     * @returns True if the key exists, false otherwise\n     */\n    public has(key: string): boolean {\n        return this.kernel.has(key);\n    }\n\n    /**\n     * {@inheritDoc ISharedMap.set}\n     */\n    public set(key: string, value: any): this {\n        this.kernel.set(key, value);\n        return this;\n    }\n\n    /**\n     * Delete a key from the map.\n     * @param key - Key to delete\n     * @returns True if the key existed and was deleted, false if it did not exist\n     */\n    public delete(key: string): boolean {\n        return this.kernel.delete(key);\n    }\n\n    /**\n     * Clear all data from the map.\n     */\n    public clear(): void {\n        this.kernel.clear();\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/shared-object-base#SharedObject.summarizeCore}\n     * @internal\n     */\n    protected summarizeCore(\n        serializer: IFluidSerializer,\n        telemetryContext?: ITelemetryContext,\n    ): ISummaryTreeWithStats {\n        let currentSize = 0;\n        let counter = 0;\n        let headerBlob: IMapDataObjectSerializable = {};\n        const blobs: string[] = [];\n\n        const builder = new SummaryTreeBuilder();\n\n        const data = this.kernel.getSerializedStorage(serializer);\n\n        // If single property exceeds this size, it goes into its own blob\n        const MinValueSizeSeparateSnapshotBlob = 8 * 1024;\n\n        // Maximum blob size for multiple map properties\n        // Should be bigger than MinValueSizeSeparateSnapshotBlob\n        const MaxSnapshotBlobSize = 16 * 1024;\n\n        // Partitioning algorithm:\n        // 1) Split large (over MinValueSizeSeparateSnapshotBlob = 8K) properties into their own blobs.\n        //    Naming (across snapshots) of such blob does not have to be stable across snapshots,\n        //    As de-duping process (in driver) should not care about paths, only content.\n        // 2) Split remaining properties into blobs of MaxSnapshotBlobSize (16K) size.\n        //    This process does not produce stable partitioning. This means\n        //    modification (including addition / deletion) of property can shift properties across blobs\n        //    and result in non-incremental snapshot.\n        //    This can be improved in the future, without being format breaking change, as loading sequence\n        //    loads all blobs at once and partitioning schema has no impact on that process.\n        for (const key of Object.keys(data)) {\n            const value = data[key];\n            if (value.value && value.value.length >= MinValueSizeSeparateSnapshotBlob) {\n                const blobName = `blob${counter}`;\n                counter++;\n                blobs.push(blobName);\n                const content: IMapDataObjectSerializable = {\n                    [key]: {\n                        type: value.type,\n                        value: JSON.parse(value.value),\n                    },\n                };\n                builder.addBlob(blobName, JSON.stringify(content));\n            } else {\n                currentSize += value.type.length + 21; // Approximation cost of property header\n                if (value.value) {\n                    currentSize += value.value.length;\n                }\n\n                if (currentSize > MaxSnapshotBlobSize) {\n                    const blobName = `blob${counter}`;\n                    counter++;\n                    blobs.push(blobName);\n                    builder.addBlob(blobName, JSON.stringify(headerBlob));\n                    headerBlob = {};\n                    currentSize = 0;\n                }\n                headerBlob[key] = {\n                    type: value.type,\n                    value: value.value === undefined ? undefined : JSON.parse(value.value),\n                };\n            }\n        }\n\n        const header: IMapSerializationFormat = {\n            blobs,\n            content: headerBlob,\n        };\n        builder.addBlob(snapshotFileName, JSON.stringify(header));\n\n        return builder.getSummaryTree();\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/shared-object-base#SharedObject.loadCore}\n     * @internal\n     */\n    protected async loadCore(storage: IChannelStorageService) {\n        const json = await readAndParse<object>(storage, snapshotFileName);\n        const newFormat = json as IMapSerializationFormat;\n        if (Array.isArray(newFormat.blobs)) {\n            this.kernel.populateFromSerializable(newFormat.content);\n            await Promise.all(newFormat.blobs.map(async (value) => {\n                const content = await readAndParse<IMapDataObjectSerializable>(storage, value);\n                this.kernel.populateFromSerializable(content);\n            }));\n        } else {\n            this.kernel.populateFromSerializable(json as IMapDataObjectSerializable);\n        }\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/shared-object-base#SharedObject.onDisconnect}\n     * @internal\n     */\n    protected onDisconnect() {}\n\n    /**\n     * {@inheritDoc @fluidframework/shared-object-base#SharedObject.reSubmitCore}\n     * @internal\n     */\n    protected reSubmitCore(content: any, localOpMetadata: unknown) {\n        this.kernel.trySubmitMessage(content, localOpMetadata);\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/shared-object-base#SharedObjectCore.applyStashedOp}\n     * @internal\n     */\n    protected applyStashedOp(content: any): unknown {\n        this.kernel.tryProcessMessage(content, false, undefined);\n        return this.kernel.tryGetStashedOpLocalMetadata(content);\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/shared-object-base#SharedObject.processCore}\n     * @internal\n     */\n    protected processCore(message: ISequencedDocumentMessage, local: boolean, localOpMetadata: unknown) {\n        if (message.type === MessageType.Operation) {\n            this.kernel.tryProcessMessage(message.contents, local, localOpMetadata);\n        }\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/shared-object-base#SharedObject.rollback}\n     * @internal\n    */\n   protected rollback(content: any, localOpMetadata: unknown) {\n       this.kernel.rollback(content, localOpMetadata);\n   }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { assert } from \"@fluidframework/common-utils\";\nimport {\n    IResponse,\n    IRequest,\n    IFluidHandle,\n    IFluidLoadable,\n    FluidObject,\n    IFluidRouter,\n} from \"@fluidframework/core-interfaces\";\nimport { IContainerRuntime } from \"@fluidframework/container-runtime-definitions\";\nimport { IContainerRuntimeBase } from \"@fluidframework/runtime-definitions\";\nimport { RequestParser } from \"@fluidframework/runtime-utils\";\n\n/**\n * A request handler for the container runtime. Each handler should handle a specific request, and return undefined\n * if it does not apply. These handlers are called in series, so there may be other handlers before or after.\n * A handler should only return error if the request is for a route the handler owns, and there is a problem with\n * the route, or fulling the specific request.\n */\nexport type RuntimeRequestHandler = (request: RequestParser, runtime: IContainerRuntime)\n    => Promise<IResponse | undefined>;\n\n/**\n * A request handler to expose access to all root data stores in the container by id.\n * @param request - the request for the root data store.  The first path part must be the data store's ID.\n * @param runtime - the container runtime\n * @returns the result of the request\n */\nexport const rootDataStoreRequestHandler = async (request: IRequest, runtime: IContainerRuntime) => {\n    const requestParser = RequestParser.create(request);\n    const id = requestParser.pathParts[0];\n    const wait = typeof request.headers?.wait === \"boolean\" ? request.headers.wait : undefined;\n    let rootDataStore: IFluidRouter;\n    try {\n        // getRootDataStore currently throws if the data store is not found\n        rootDataStore = await runtime.getRootDataStore(id, wait);\n    } catch (error) {\n        return undefined; // continue search\n    }\n    try {\n        return rootDataStore.IFluidRouter.request(requestParser.createSubRequest(1));\n    } catch (error) {\n        return { status: 500, mimeType: \"fluid/object\", value: error };\n    }\n};\n\nexport const createFluidObjectResponse = (fluidObject: FluidObject):\n    { status: 200; mimeType: \"fluid/object\"; value: FluidObject; } => {\n    return { status: 200, mimeType: \"fluid/object\", value: fluidObject };\n};\n\nclass LegacyUriHandle<T = FluidObject & IFluidLoadable> implements IFluidHandle<T> {\n    public readonly isAttached = true;\n\n    public get IFluidHandle(): IFluidHandle { return this; }\n\n    public constructor(public readonly absolutePath, public readonly runtime: IContainerRuntimeBase) {\n    }\n\n    public attachGraph() {\n        assert(false, 0x0ca /* \"Trying to use legacy graph attach!\" */);\n    }\n\n    public async get(): Promise<any> {\n        const response = await this.runtime.IFluidHandleContext.resolveHandle({ url: this.absolutePath });\n        if (response.status === 200 && response.mimeType === \"fluid/object\") {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return response.value;\n        }\n        throw new Error(`Failed to resolve container path ${this.absolutePath}`);\n    }\n\n    public bind(handle: IFluidHandle) {\n        throw new Error(\"Cannot bind to LegacyUriHandle\");\n    }\n}\n\nexport function handleFromLegacyUri<T = FluidObject & IFluidLoadable>(\n    uri: string,\n    runtime: IContainerRuntimeBase,\n): IFluidHandle<T> {\n    return new LegacyUriHandle<T>(uri, runtime);\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IResponse, IFluidRouter, IRequest, FluidObject } from \"@fluidframework/core-interfaces\";\nimport { IContainerRuntime } from \"@fluidframework/container-runtime-definitions\";\nimport { RuntimeRequestHandler } from \"@fluidframework/request-handler\";\nimport {\n    RequestParser,\n    create404Response,\n    createResponseError,\n} from \"@fluidframework/runtime-utils\";\n\n// TODO: should this just be \"s\"?\nexport const serviceRoutePathRoot = \"_services\";\n\nexport type ContainerServiceRegistryEntries = Iterable<[string, (runtime: IContainerRuntime) =>\n    Promise<FluidObject>]>;\n\n/**\n * This class is a simple starter class for building a Container Service. It simply provides routing\n */\nexport abstract class BaseContainerService implements IFluidRouter {\n    public get IFluidRouter() { return this; }\n\n    constructor(protected readonly runtime: IContainerRuntime) {\n    }\n\n    public async request(request: IRequest): Promise<IResponse> {\n        return {\n            status: 200,\n            mimeType: \"fluid/object\",\n            value: this,\n        };\n    }\n}\n\n/**\n * ContainerService Factory that will only create one instance of the service for the Container.\n */\nclass SingletonContainerServiceFactory {\n    private service: Promise<FluidObject> | undefined;\n\n    public constructor(\n        private readonly serviceFn: (runtime: IContainerRuntime) => Promise<FluidObject>,\n    ) { }\n\n    public async getService(runtime: IContainerRuntime): Promise<FluidObject<IFluidRouter>> {\n        if (!this.service) {\n            this.service = this.serviceFn(runtime);\n        }\n        return this.service;\n    }\n}\n\n/**\n * Given a collection of IContainerServices will produce a RequestHandler for them all\n * @param serviceRegistry - Collection of Container Services\n */\nexport const generateContainerServicesRequestHandler =\n    (serviceRegistry: ContainerServiceRegistryEntries): RuntimeRequestHandler => {\n        const factories: Map<string, SingletonContainerServiceFactory> = new Map();\n        new Map(serviceRegistry).forEach((fn, id) => {\n            factories.set(id, new SingletonContainerServiceFactory(fn));\n        });\n\n        return async (request: RequestParser, runtime: IContainerRuntime) => {\n            if (request.pathParts[0] !== serviceRoutePathRoot) {\n                // If the request is not for a service we return undefined so the next handler can use it\n                return undefined;\n            }\n\n            if (request.pathParts.length < 2) {\n                // If there is not service to route to then return a failure\n                return createResponseError(400, \"request did not specify a service to route to\", request);\n            }\n\n            const factory = factories.get(request.pathParts[1]);\n            if (!factory) {\n                // If we can't find a registry entry then return\n                return create404Response(request);\n            }\n\n            const service = await factory.getService(runtime);\n            const router = service.IFluidRouter;\n            const subRequest = request.createSubRequest(2);\n            if (router) {\n                return router.request(subRequest);\n            }\n\n            if (!request.isLeaf(2)) {\n                // If there is not terminating route but a sub-route was requested then we will fail.\n                return createResponseError(400, \"request sub-url for service that doesn't support routing\", request);\n            }\n\n            // Otherwise we will just return the service\n            return {\n                status: 200,\n                mimeType: \"fluid/object\",\n                value: service,\n            };\n        };\n    };\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { FluidObject, IRequest, IRequestHeader, IResponse } from \"@fluidframework/core-interfaces\";\nimport { IContainerRuntime } from \"@fluidframework/container-runtime-definitions\";\nimport { IFluidMountableViewClass } from \"@fluidframework/view-interfaces\";\nimport { RuntimeRequestHandler, buildRuntimeRequestHandler } from \"@fluidframework/request-handler\";\nimport { RequestParser, create404Response } from \"@fluidframework/runtime-utils\";\n\n/**\n * A mountable view is only required if the view needs to be mounted across a bundle boundary.  Mounting across\n * bundle boundaries breaks some frameworks, so the mountable view is used to ensure the mounting is done within\n * the same bundle as the view.  For example, React hooks don't work if mounted across bundles since there will\n * be two React instances, breaking the Rules of Hooks.  When cross-bundle mounting isn't required, the mountable\n * view isn't necessary.\n *\n * When a request is received with a mountableView: true header, this request handler will reissue the request\n * without the header, and respond with a mountable view of the given class using the response.\n * @param MountableViewClass - The type of mountable view to use when responding\n */\nexport const mountableViewRequestHandler =\n    (MountableViewClass: IFluidMountableViewClass, handlers: RuntimeRequestHandler[]) => {\n        const nestedHandler = buildRuntimeRequestHandler(...handlers);\n        return async (request: RequestParser, runtime: IContainerRuntime) => {\n            const mountableView = request.headers?.mountableView === true;\n            let newRequest: IRequest = request;\n            if (mountableView) {\n                // Reissue the request without the mountableView header.\n                // We'll repack whatever the response is if we can.\n                const headers: IRequestHeader = { ...request.headers };\n                delete (headers as any).mountableView;\n                newRequest = {\n                    url: request.url,\n                    headers,\n                };\n            }\n            const response = await nestedHandler(newRequest, runtime);\n\n            if (mountableView && response.status === 200 && MountableViewClass.canMount(response.value)) {\n                return {\n                    status: 200,\n                    mimeType: \"fluid/object\",\n                    value: new MountableViewClass(response.value),\n                };\n            }\n            return response;\n        };\n    };\n\n/**\n * Pipe through container request into internal request.\n * If request is empty and default url is provided, redirect request to such default url.\n * @param defaultRootId - optional default root data store ID to pass request in case request is empty.\n */\nexport const defaultRouteRequestHandler = (defaultRootId: string) => {\n    return async (request: IRequest, runtime: IContainerRuntime) => {\n        const parser = RequestParser.create(request);\n        if (parser.pathParts.length === 0) {\n            return runtime.IFluidHandleContext.resolveHandle({\n                url: `/${defaultRootId}${parser.query}`,\n                headers: request.headers });\n        }\n        return undefined; // continue search\n    };\n};\n\n/**\n * Default request handler for a Fluid object that returns the object itself if:\n *  1. the request url is empty\n *  2. the request url is \"/\"\n *  3. the request url starts with \"/\" and is followed by a query param, such as /?key=value\n * Returns a 404 error for any other url.\n */\nexport function defaultFluidObjectRequestHandler(fluidObject: FluidObject, request: IRequest): IResponse {\n    if (request.url === \"\" || request.url === \"/\" || request.url.startsWith(\"/?\")) {\n        return { mimeType: \"fluid/object\", status: 200, value: fluidObject };\n    } else {\n        return create404Response(request);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IEvent } from \"@fluidframework/common-definitions\";\nimport { assert, EventForwarder } from \"@fluidframework/common-utils\";\nimport {\n    IFluidHandle,\n    IFluidLoadable,\n    IFluidRouter,\n    IProvideFluidHandle,\n    IRequest,\n    IResponse,\n    FluidObject,\n} from \"@fluidframework/core-interfaces\";\nimport { FluidObjectHandle } from \"@fluidframework/datastore\";\nimport { IFluidDataStoreRuntime } from \"@fluidframework/datastore-definitions\";\nimport { IDirectory } from \"@fluidframework/map\";\nimport { handleFromLegacyUri } from \"@fluidframework/request-handler\";\nimport { IFluidDataStoreContext } from \"@fluidframework/runtime-definitions\";\nimport { AsyncFluidObjectProvider } from \"@fluidframework/synthesize\";\nimport { serviceRoutePathRoot } from \"../container-services\";\nimport { defaultFluidObjectRequestHandler } from \"../request-handlers\";\nimport { DataObjectTypes, IDataObjectProps } from \"./types\";\n\n/**\n * This is a bare-bones base class that does basic setup and enables for factory on an initialize call.\n * You probably don't want to inherit from this data store directly unless\n * you are creating another base data store class\n *\n * @typeParam I - The optional input types used to strongly type the data object\n */\nexport abstract class PureDataObject<I extends DataObjectTypes = DataObjectTypes>\n    extends EventForwarder<I[\"Events\"] & IEvent>\n    implements IFluidLoadable, IFluidRouter, IProvideFluidHandle {\n    private readonly innerHandle: IFluidHandle<this>;\n    private _disposed = false;\n\n    /**\n     * This is your FluidDataStoreRuntime object\n     */\n    protected readonly runtime: IFluidDataStoreRuntime;\n\n    /**\n     * This context is used to talk up to the ContainerRuntime\n     */\n    protected readonly context: IFluidDataStoreContext;\n\n    /**\n     * Providers are FluidObject keyed objects that provide back\n     * a promise to the corresponding FluidObject or undefined.\n     * Providers injected/provided by the Container and/or HostingApplication\n     *\n     * To define providers set FluidObject interfaces in the OptionalProviders generic type for your data store\n     */\n    protected readonly providers: AsyncFluidObjectProvider<I[\"OptionalProviders\"]>;\n\n    protected initProps?: I[\"InitialState\"];\n\n    protected initializeP: Promise<void> | undefined;\n\n    public get disposed() { return this._disposed; }\n\n    public get id() { return this.runtime.id; }\n    public get IFluidRouter() { return this; }\n    public get IFluidLoadable() { return this; }\n    public get IFluidHandle() { return this.innerHandle; }\n\n    /**\n     * Handle to a data store\n     */\n    public get handle(): IFluidHandle<this> { return this.innerHandle; }\n\n    public static async getDataObject(runtime: IFluidDataStoreRuntime) {\n        const obj = (runtime as any)._dataObject as PureDataObject;\n        assert(obj !== undefined, 0x0bc /* \"Runtime has no DataObject!\" */);\n        await obj.finishInitialization(true);\n        return obj;\n    }\n\n    public constructor(props: IDataObjectProps<I>) {\n        super();\n        this.runtime = props.runtime;\n        this.context = props.context;\n        this.providers = props.providers;\n        this.initProps = props.initProps;\n\n        assert((this.runtime as any)._dataObject === undefined, 0x0bd /* \"Object runtime already has DataObject!\" */);\n        (this.runtime as any)._dataObject = this;\n\n        // Create a FluidObjectHandle with empty string as `path`. This is because reaching this PureDataObject is the\n        // same as reaching its routeContext (FluidDataStoreRuntime) so there is so the relative path to it from the\n        // routeContext is empty.\n        this.innerHandle = new FluidObjectHandle(this, \"\", this.runtime.objectsRoutingContext);\n\n        // Container event handlers\n        this.runtime.once(\"dispose\", () => {\n            this._disposed = true;\n            this.dispose();\n        });\n    }\n\n    // #region IFluidRouter\n\n    /**\n     * Return this object if someone requests it directly\n     * We will return this object in two scenarios:\n     *  1. the request url is a \"/\"\n     *  2. the request url is empty\n     */\n    public async request(req: IRequest): Promise<IResponse> {\n        return defaultFluidObjectRequestHandler(this, req);\n    }\n\n    // #endregion IFluidRouter\n\n    // #region IFluidLoadable\n\n    // #endregion IFluidLoadable\n\n    /**\n     * Call this API to ensure PureDataObject is fully initialized\n     * initialization happens on demand, only on as-needed bases.\n     * In most cases you should allow factory/object to decide when to finish initialization.\n     * But if you are supplying your own implementation of DataStoreRuntime factory and overriding some methods\n     * and need fully initialized object, then you can call this API to ensure object is fully initialized.\n     */\n    public async finishInitialization(existing: boolean): Promise<void> {\n        if (this.initializeP !== undefined) {\n            return this.initializeP;\n        }\n        this.initializeP = this.initializeInternal(existing);\n        return this.initializeP;\n    }\n\n    /**\n     * Internal initialize implementation. Overwriting this will change the flow of the PureDataObject and should\n     * generally not be done.\n     *\n     * Calls initializingFirstTime, initializingFromExisting, and hasInitialized. Caller is\n     * responsible for ensuring this is only invoked once.\n     */\n    public async initializeInternal(existing: boolean): Promise<void> {\n        await this.preInitialize();\n        if (existing) {\n            assert(this.initProps === undefined,\n                0x0be /* \"Trying to initialize from existing while initProps is set!\" */);\n            await this.initializingFromExisting();\n        } else {\n            await this.initializingFirstTime(\n                this.context.createProps as I[\"InitialState\"] ?? this.initProps);\n        }\n        await this.hasInitialized();\n    }\n\n    /**\n     * Retrieve Fluid object using the handle get\n     *\n     * @param key - key that object (handle/id) is stored with in the directory\n     * @param directory - directory containing the object\n     * @param getObjectFromDirectory - optional callback for fetching object from the directory, allows users to\n     * define custom types/getters for object retrieval\n     */\n    public async getFluidObjectFromDirectory<T extends IFluidLoadable>(\n        key: string,\n        directory: IDirectory,\n        getObjectFromDirectory?: (id: string, directory: IDirectory) => IFluidHandle | undefined):\n        Promise<T | undefined> {\n        const handleMaybe = getObjectFromDirectory ? getObjectFromDirectory(key, directory) : directory.get(key);\n        const handle = handleMaybe?.IFluidHandle;\n        if (handle) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return handle.get();\n        }\n    }\n\n    /**\n     * Gets the service at a given id.\n     * @param id - service id\n     */\n    protected async getService<T extends FluidObject>(id: string): Promise<T> {\n        return handleFromLegacyUri<T>(`/${serviceRoutePathRoot}/${id}`, this.context.containerRuntime).get();\n    }\n\n    /**\n     * Called every time the data store is initialized, before initializingFirstTime or\n     * initializingFromExisting is called.\n     */\n    protected async preInitialize(): Promise<void> { }\n\n    /**\n     * Called the first time the data store is initialized (new creations with a new\n     * data store runtime)\n     *\n     * @param props - Optional props to be passed in on create\n     */\n    protected async initializingFirstTime(props?: I[\"InitialState\"]): Promise<void> { }\n\n    /**\n     * Called every time but the first time the data store is initialized (creations\n     * with an existing data store runtime)\n     */\n    protected async initializingFromExisting(): Promise<void> { }\n\n    /**\n     * Called every time the data store is initialized after create or existing.\n     */\n    protected async hasInitialized(): Promise<void> { }\n\n    /**\n     * Called when the host container closes and disposes itself\n     */\n    public dispose(): void {\n        super.dispose();\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    IRequest,\n    IResponse,\n} from \"@fluidframework/core-interfaces\";\nimport { ISharedDirectory, MapFactory, SharedDirectory } from \"@fluidframework/map\";\nimport { RequestParser, create404Response } from \"@fluidframework/runtime-utils\";\nimport { PureDataObject } from \"./pureDataObject\";\nimport { DataObjectTypes } from \"./types\";\n\n/**\n * DataObject is a base data store that is primed with a root directory. It\n * ensures that it is created and ready before you can access it.\n *\n * Having a single root directory allows for easier development. Instead of creating\n * and registering channels with the runtime any new DDS that is set on the root\n * will automatically be registered.\n *\n * @typeParam I - The optional input types used to strongly type the data object\n */\nexport abstract class DataObject<I extends DataObjectTypes = DataObjectTypes> extends PureDataObject<I> {\n    private internalRoot: ISharedDirectory | undefined;\n    private readonly rootDirectoryId = \"root\";\n\n    /**\n     * {@inheritDoc PureDataObject.request}\n     */\n    public async request(request: IRequest): Promise<IResponse> {\n        const requestParser = RequestParser.create(request);\n        const itemId = requestParser.pathParts[0];\n        if (itemId === \"bigBlobs\") {\n            const value = this.root.get<string>(requestParser.pathParts.join(\"/\"));\n            if (value === undefined) {\n                return create404Response(requestParser);\n            }\n            return { mimeType: \"fluid/object\", status: 200, value };\n        } else {\n            return super.request(requestParser);\n        }\n    }\n\n    /**\n     * The root directory will either be ready or will return an error. If an error is thrown\n     * the root has not been correctly created/set.\n     */\n    protected get root(): ISharedDirectory {\n        if (!this.internalRoot) {\n            throw new Error(this.getUninitializedErrorString(`root`));\n        }\n\n        return this.internalRoot;\n    }\n\n    /**\n     * Initializes internal objects and calls initialization overrides.\n     * Caller is responsible for ensuring this is only invoked once.\n     */\n    public async initializeInternal(existing: boolean): Promise<void> {\n        if (!existing) {\n            // Create a root directory and register it before calling initializingFirstTime\n            this.internalRoot = SharedDirectory.create(this.runtime, this.rootDirectoryId);\n            this.internalRoot.bindToContext();\n        } else {\n            // data store has a root directory so we just need to set it before calling initializingFromExisting\n            this.internalRoot = await this.runtime.getChannel(this.rootDirectoryId) as ISharedDirectory;\n\n            // This will actually be an ISharedMap if the channel was previously created by the older version of\n            // DataObject which used a SharedMap.  Since SharedMap and SharedDirectory are compatible unless\n            // SharedDirectory-only commands are used on SharedMap, this will mostly just work for compatibility.\n            if (this.internalRoot.attributes.type === MapFactory.Type) {\n                this.runtime.logger.send({\n                    category: \"generic\",\n                    eventName: \"MapDataObject\",\n                    message: \"Legacy document, SharedMap is masquerading as SharedDirectory in DataObject\",\n                });\n            }\n        }\n\n        await super.initializeInternal(existing);\n    }\n\n    /**\n     * Generates an error string indicating an item is uninitialized.\n     * @param item - The name of the item that was uninitialized.\n     */\n    protected getUninitializedErrorString(item: string): string {\n        return `${item} must be initialized before being accessed.`;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { assert } from \"@fluidframework/common-utils\";\nimport { IDocumentMessage, ISequencedDocumentMessage } from \"@fluidframework/protocol-definitions\";\nimport { IDeltaConnection, IDeltaHandler } from \"@fluidframework/datastore-definitions\";\nimport { DataProcessingError } from \"@fluidframework/container-utils\";\nimport { IFluidHandle } from \"@fluidframework/core-interfaces\";\n\nexport class ChannelDeltaConnection implements IDeltaConnection {\n    private _handler: IDeltaHandler | undefined;\n\n    private get handler(): IDeltaHandler {\n        assert(!!this._handler, 0x177 /* \"Missing delta handler\" */);\n        return this._handler;\n    }\n    public get connected(): boolean {\n        return this._connected;\n    }\n\n    constructor(\n        public objectId: string,\n        private _connected: boolean,\n        public readonly submit: (message: IDocumentMessage, localOpMetadata: unknown) => void,\n        public readonly dirty: () => void,\n        public readonly addedGCOutboundReference: (srcHandle: IFluidHandle, outboundHandle: IFluidHandle) => void) {\n    }\n\n    public attach(handler: IDeltaHandler) {\n        assert(this._handler === undefined, 0x178 /* \"Missing delta handler on attach\" */);\n        this._handler = handler;\n    }\n\n    public setConnectionState(connected: boolean) {\n        this._connected = connected;\n        this.handler.setConnectionState(connected);\n    }\n\n    public process(message: ISequencedDocumentMessage, local: boolean, localOpMetadata: unknown) {\n        try {\n            // catches as data processing error whether or not they come from async pending queues\n            this.handler.process(message, local, localOpMetadata);\n        } catch (error) {\n            throw DataProcessingError.wrapIfUnrecognized(\n                error, \"channelDeltaConnectionFailedToProcessMessage\", message);\n        }\n    }\n\n    public reSubmit(content: any, localOpMetadata: unknown) {\n        this.handler.reSubmit(content, localOpMetadata);\n    }\n\n    public rollback(content: any, localOpMetadata: unknown) {\n        if (this.handler.rollback === undefined) {\n            throw new Error(\"Handler doesn't support rollback\");\n        }\n        this.handler.rollback(content, localOpMetadata);\n    }\n\n    public applyStashedOp(message: ISequencedDocumentMessage): unknown {\n        return this.handler.applyStashedOp(message);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITree } from \"@fluidframework/protocol-definitions\";\n\nexport function getNormalizedObjectStoragePathParts(path: string) {\n    let normalizePath = path;\n    if (normalizePath.startsWith(\"/\")) {\n        normalizePath = normalizePath.substr(1);\n    }\n    if (normalizePath.endsWith(\"/\")) {\n        normalizePath = normalizePath.substr(0, normalizePath.length - 1);\n    }\n    if (normalizePath.length > 0) {\n        return normalizePath.split(\"/\");\n    }\n    return [];\n}\n\nexport async function listBlobsAtTreePath(inputTree: ITree | undefined, path: string): Promise<string[]> {\n    const pathParts = getNormalizedObjectStoragePathParts(path);\n    let tree: ITree | undefined = inputTree;\n    while (tree?.entries !== undefined && pathParts.length > 0) {\n        const part = pathParts.shift();\n        const treeEntry = tree.entries.find((value) => {\n            if (value.type === \"Tree\" && value.path === part) {\n                return true;\n            } else {\n                return false;\n            }\n        });\n\n        // this check is largely superfluous due to the same check being done\n        // immediately above. the type system, however, is not aware of this.\n        // so we must redundantly determine that the entry's type is \"Tree\"\n        if (treeEntry?.type === \"Tree\") {\n            tree = treeEntry.value;\n        } else {\n            tree = undefined;\n        }\n    }\n    if (tree?.entries === undefined || pathParts.length !== 0) {\n        throw new Error(\"path does not exist\");\n    }\n    return tree.entries.filter((e) => e.type === \"Blob\").map((e) => e.path);\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IDocumentStorageService } from \"@fluidframework/driver-definitions\";\nimport { ISnapshotTree } from \"@fluidframework/protocol-definitions\";\nimport { IChannelStorageService } from \"@fluidframework/datastore-definitions\";\nimport { getNormalizedObjectStoragePathParts } from \"@fluidframework/runtime-utils\";\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\n\nexport class ChannelStorageService implements IChannelStorageService {\n    private static flattenTree(base: string, tree: ISnapshotTree, results: { [path: string]: string; }) {\n        // eslint-disable-next-line guard-for-in, no-restricted-syntax\n        for (const path in tree.trees) {\n            ChannelStorageService.flattenTree(`${base}${path}/`, tree.trees[path], results);\n        }\n\n        // eslint-disable-next-line guard-for-in, no-restricted-syntax\n        for (const blob in tree.blobs) {\n            results[`${base}${blob}`] = tree.blobs[blob];\n        }\n    }\n\n    private readonly flattenedTree: { [path: string]: string; };\n\n    constructor(\n        private readonly tree: ISnapshotTree | undefined,\n        private readonly storage: Pick<IDocumentStorageService, \"readBlob\">,\n        private readonly logger: ITelemetryLogger,\n        private readonly extraBlobs?: Map<string, ArrayBufferLike>,\n    ) {\n        this.flattenedTree = {};\n        // Create a map from paths to blobs\n        if (tree !== undefined) {\n             ChannelStorageService.flattenTree(\"\", tree, this.flattenedTree);\n        }\n    }\n\n    public async contains(path: string): Promise<boolean> {\n        return this.flattenedTree[path] !== undefined;\n    }\n\n    public async readBlob(path: string): Promise<ArrayBufferLike> {\n        const id = await this.getIdForPath(path);\n        const blob = this.extraBlobs !== undefined\n            ? this.extraBlobs.get(id)\n            : undefined;\n\n        if (blob !== undefined) {\n            return blob;\n        }\n        const blobP = this.storage.readBlob(id);\n        blobP.catch((error) => this.logger.sendErrorEvent({ eventName: \"ChannelStorageBlobError\" }, error));\n\n        return blobP;\n    }\n\n    public async list(path: string): Promise<string[]> {\n        let tree = this.tree;\n        const pathParts = getNormalizedObjectStoragePathParts(path);\n        while (tree !== undefined && pathParts.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const part = pathParts.shift()!;\n            tree = tree.trees[part];\n        }\n        if (tree === undefined || pathParts.length !== 0) {\n            throw new Error(\"path does not exist\");\n        }\n\n        return Object.keys(tree?.blobs ?? {});\n    }\n\n    private async getIdForPath(path: string): Promise<string> {\n        return this.flattenedTree[path];\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { IFluidHandle } from \"@fluidframework/core-interfaces\";\nimport { IChannel } from \"@fluidframework/datastore-definitions\";\nimport { IDocumentStorageService } from \"@fluidframework/driver-definitions\";\nimport { ISequencedDocumentMessage, ISnapshotTree } from \"@fluidframework/protocol-definitions\";\nimport {\n    IGarbageCollectionData,\n    ISummarizeResult,\n    ISummaryTreeWithStats,\n    ITelemetryContext,\n} from \"@fluidframework/runtime-definitions\";\nimport { addBlobToSummary } from \"@fluidframework/runtime-utils\";\nimport { ChannelDeltaConnection } from \"./channelDeltaConnection\";\nimport { ChannelStorageService } from \"./channelStorageService\";\n\nexport const attributesBlobKey = \".attributes\";\n\nexport interface IChannelContext {\n    getChannel(): Promise<IChannel>;\n\n    setConnectionState(connected: boolean, clientId?: string);\n\n    processOp(message: ISequencedDocumentMessage, local: boolean, localOpMetadata?: unknown): void;\n\n    summarize(\n        fullTree?: boolean,\n        trackState?: boolean,\n        telemetryContext?: ITelemetryContext,\n    ): Promise<ISummarizeResult>;\n\n    reSubmit(content: any, localOpMetadata: unknown): void;\n\n    applyStashedOp(content: any): unknown;\n\n    rollback(message: any, localOpMetadata: unknown): void;\n\n    /**\n     * Returns the data used for garbage collection. This includes a list of GC nodes that represent this context\n     * including any of its children. Each node has a set of outbound routes to other GC nodes in the document.\n     * @param fullGC - true to bypass optimizations and force full generation of GC data.\n     */\n    getGCData(fullGC?: boolean): Promise<IGarbageCollectionData>;\n\n    /**\n     * After GC has run, called to notify this context of routes that are used in it. These are used for the following:\n     * 1. To identify if this context is being referenced in the document or not.\n     * 2. To identify if this context or any of its children's used routes changed since last summary.\n     * 3. They are added to the summary generated by this context.\n     * 4. To update the timestamp when this context is marked as unreferenced.\n     */\n    updateUsedRoutes(usedRoutes: string[], gcTimestamp?: number): void;\n}\n\nexport function createServiceEndpoints(\n    id: string,\n    connected: boolean,\n    submitFn: (content: any, localOpMetadata: unknown) => void,\n    dirtyFn: () => void,\n    addedGCOutboundReferenceFn: (srcHandle: IFluidHandle, outboundHandle: IFluidHandle) => void,\n    storageService: IDocumentStorageService,\n    logger: ITelemetryLogger,\n    tree?: ISnapshotTree,\n    extraBlobs?: Map<string, ArrayBufferLike>,\n) {\n    const deltaConnection = new ChannelDeltaConnection(\n        id,\n        connected,\n        (message, localOpMetadata) => submitFn(message, localOpMetadata),\n        dirtyFn,\n        addedGCOutboundReferenceFn);\n    const objectStorage = new ChannelStorageService(tree, storageService, logger, extraBlobs);\n\n    return {\n        deltaConnection,\n        objectStorage,\n    };\n}\n\nexport function summarizeChannel(\n    channel: IChannel,\n    fullTree: boolean = false,\n    trackState: boolean = false,\n    telemetryContext?: ITelemetryContext,\n): ISummaryTreeWithStats {\n    const summarizeResult = channel.getAttachSummary(fullTree, trackState, telemetryContext);\n\n    // Add the channel attributes to the returned result.\n    addBlobToSummary(summarizeResult, attributesBlobKey, JSON.stringify(channel.attributes));\n    return summarizeResult;\n}\n\nexport async function summarizeChannelAsync(\n    channel: IChannel,\n    fullTree: boolean = false,\n    trackState: boolean = false,\n    telemetryContext?: ITelemetryContext,\n): Promise<ISummaryTreeWithStats> {\n    const summarizeResult = await channel.summarize(fullTree, trackState, telemetryContext);\n\n    // Add the channel attributes to the returned result.\n    addBlobToSummary(summarizeResult, attributesBlobKey, JSON.stringify(channel.attributes));\n    return summarizeResult;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\n// eslint-disable-next-line import/no-internal-modules\nimport cloneDeep from \"lodash/cloneDeep\";\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { IDocumentStorageService } from \"@fluidframework/driver-definitions\";\nimport { ISequencedDocumentMessage, ISnapshotTree } from \"@fluidframework/protocol-definitions\";\nimport {\n    IChannel,\n    IFluidDataStoreRuntime,\n    IChannelFactory,\n    IChannelAttributes,\n} from \"@fluidframework/datastore-definitions\";\nimport {\n    IFluidDataStoreContext,\n    IGarbageCollectionData,\n    ISummarizeResult,\n    ITelemetryContext,\n} from \"@fluidframework/runtime-definitions\";\nimport { readAndParse } from \"@fluidframework/driver-utils\";\nimport { DataProcessingError } from \"@fluidframework/container-utils\";\nimport { assert, Lazy } from \"@fluidframework/common-utils\";\nimport { IFluidHandle } from \"@fluidframework/core-interfaces\";\nimport {\n    createServiceEndpoints,\n    IChannelContext,\n    summarizeChannel,\n    summarizeChannelAsync,\n} from \"./channelContext\";\nimport { ChannelDeltaConnection } from \"./channelDeltaConnection\";\nimport { ISharedObjectRegistry } from \"./dataStoreRuntime\";\nimport { ChannelStorageService } from \"./channelStorageService\";\n\n/**\n * Channel context for a locally created channel\n */\nexport abstract class LocalChannelContextBase implements IChannelContext {\n    public channel: IChannel | undefined;\n    private globallyVisible = false;\n    protected readonly pending: ISequencedDocumentMessage[] = [];\n    protected factory: IChannelFactory | undefined;\n    constructor(\n        protected readonly id: string,\n        protected readonly registry: ISharedObjectRegistry,\n        protected readonly runtime: IFluidDataStoreRuntime,\n        private readonly servicesGetter: () => Lazy<{\n                readonly deltaConnection: ChannelDeltaConnection;\n                readonly objectStorage: ChannelStorageService;\n            }>,\n    ) {\n        assert(!this.id.includes(\"/\"), 0x30f /* Channel context ID cannot contain slashes */);\n    }\n\n    public async getChannel(): Promise<IChannel> {\n        assert(this.channel !== undefined, 0x207 /* \"Channel should be defined\" */);\n        return this.channel;\n    }\n\n    public get isLoaded(): boolean {\n        return this.channel !== undefined;\n    }\n\n    public setConnectionState(connected: boolean, clientId?: string) {\n        // Connection events are ignored if the data store is not yet globallyVisible or loaded\n        if (this.globallyVisible && this.isLoaded) {\n            this.servicesGetter().value.deltaConnection.setConnectionState(connected);\n        }\n    }\n\n    public processOp(message: ISequencedDocumentMessage, local: boolean, localOpMetadata: unknown): void {\n        assert(this.globallyVisible, 0x2d3 /* \"Local channel must be globally visible when processing op\" */);\n\n        // A local channel may not be loaded in case where we rehydrate the container from a snapshot because of\n        // delay loading. So after the container is attached and some other client joins which start generating\n        // ops for this channel. So not loaded local channel can still receive ops and we store them to process later.\n        if (this.isLoaded) {\n            this.servicesGetter().value.deltaConnection.process(message, local, localOpMetadata);\n        } else {\n            assert(local === false,\n                0x189 /* \"Should always be remote because a local dds shouldn't generate ops before loading\" */);\n            this.pending.push(message);\n        }\n    }\n\n    public reSubmit(content: any, localOpMetadata: unknown) {\n        assert(this.isLoaded, 0x18a /* \"Channel should be loaded to resubmit ops\" */);\n        assert(this.globallyVisible, 0x2d4 /* \"Local channel must be globally visible when resubmitting op\" */);\n        this.servicesGetter().value.deltaConnection.reSubmit(content, localOpMetadata);\n    }\n    public rollback(content: any, localOpMetadata: unknown) {\n        assert(this.isLoaded, 0x2ee /* \"Channel should be loaded to rollback ops\" */);\n        assert(this.globallyVisible, 0x2ef /* \"Local channel must be globally visible when rolling back op\" */);\n        this.servicesGetter().value.deltaConnection.rollback(content, localOpMetadata);\n    }\n\n    public applyStashedOp() {\n        throw new Error(\"no stashed ops on local channel\");\n    }\n\n    /**\n     * Returns a summary at the current sequence number.\n     * @param fullTree - true to bypass optimizations and force a full summary tree\n     * @param trackState - This tells whether we should track state from this summary.\n     * @param telemetryContext - summary data passed through the layers for telemetry purposes\n     */\n    public async summarize(\n        fullTree: boolean = false,\n        trackState: boolean = false,\n        telemetryContext?: ITelemetryContext,\n    ): Promise<ISummarizeResult> {\n        assert(this.isLoaded && this.channel !== undefined, 0x18c /* \"Channel should be loaded to summarize\" */);\n        return summarizeChannelAsync(this.channel, fullTree, trackState, telemetryContext);\n    }\n\n    public getAttachSummary(telemetryContext?: ITelemetryContext): ISummarizeResult {\n        assert(this.isLoaded && this.channel !== undefined, 0x18d /* \"Channel should be loaded to take snapshot\" */);\n        return summarizeChannel(this.channel, true /* fullTree */, false /* trackState */, telemetryContext);\n    }\n\n    public makeVisible(): void {\n        if (this.globallyVisible) {\n            throw new Error(\"Channel is already globally visible\");\n        }\n\n        if (this.isLoaded) {\n            assert(!!this.channel, 0x192 /* \"Channel should be there if loaded!!\" */);\n            this.channel.connect(this.servicesGetter().value);\n        }\n        this.globallyVisible = true;\n    }\n\n    /**\n     * Returns the data used for garbage collection. This includes a list of GC nodes that represent this context.\n     * Each node has a set of outbound routes to other GC nodes in the document. This should be called only after\n     * the context has loaded.\n     * @param fullGC - true to bypass optimizations and force full generation of GC data.\n     */\n    public async getGCData(fullGC: boolean = false): Promise<IGarbageCollectionData> {\n        assert(this.isLoaded && this.channel !== undefined, 0x193 /* \"Channel should be loaded to run GC\" */);\n        return this.channel.getGCData(fullGC);\n    }\n\n    public updateUsedRoutes(usedRoutes: string[], gcTimestamp?: number) {\n        /**\n         * Currently, DDSes are always considered referenced and are not garbage collected.\n         * Once we have GC at DDS level, this channel context's used routes will be updated as per the passed\n         * value. See - https://github.com/microsoft/FluidFramework/issues/4611\n         */\n    }\n}\n\nexport class RehydratedLocalChannelContext extends LocalChannelContextBase {\n    private readonly services: Lazy<{\n        readonly deltaConnection: ChannelDeltaConnection;\n        readonly objectStorage: ChannelStorageService;\n    }>;\n\n    private readonly dirtyFn: () => void;\n\n    constructor(\n        id: string,\n        registry: ISharedObjectRegistry,\n        runtime: IFluidDataStoreRuntime,\n        dataStoreContext: IFluidDataStoreContext,\n        storageService: IDocumentStorageService,\n        logger: ITelemetryLogger,\n        submitFn: (content: any, localOpMetadata: unknown) => void,\n        dirtyFn: (address: string) => void,\n        addedGCOutboundReferenceFn: (srcHandle: IFluidHandle, outboundHandle: IFluidHandle) => void,\n        private readonly snapshotTree: ISnapshotTree,\n    ) {\n        super(id, registry, runtime, () => this.services);\n        const blobMap: Map<string, ArrayBufferLike> = new Map<string, ArrayBufferLike>();\n        const clonedSnapshotTree = cloneDeep(this.snapshotTree);\n        // 0.47 back-compat Need to sanitize if snapshotTree.blobs still contains blob contents too.\n        // This is for older snapshot which is generated by loader <=0.47 version which still contains\n        // the contents within blobs. After a couple of revisions we can remove it.\n        if (this.isSnapshotInOldFormatAndCollectBlobs(clonedSnapshotTree, blobMap)) {\n            this.sanitizeSnapshot(clonedSnapshotTree);\n        }\n\n        this.services = new Lazy(() => {\n            return createServiceEndpoints(\n                this.id,\n                dataStoreContext.connected,\n                submitFn,\n                this.dirtyFn,\n                addedGCOutboundReferenceFn,\n                storageService,\n                logger,\n                clonedSnapshotTree,\n                blobMap,\n            );\n        });\n        this.dirtyFn = () => { dirtyFn(id); };\n    }\n\n    public async getChannel(): Promise<IChannel> {\n        if (this.channel === undefined) {\n            this.channel = await this.loadChannel()\n                .catch((err) => {\n                    throw DataProcessingError.wrapIfUnrecognized(\n                        err, \"rehydratedLocalChannelContextFailedToLoadChannel\", undefined);\n                });\n        }\n        return this.channel;\n    }\n\n    private async loadChannel(): Promise<IChannel> {\n        assert(!this.isLoaded, 0x18e /* \"Channel must not already be loaded when loading\" */);\n        assert(await this.services.value.objectStorage.contains(\".attributes\"),\n            0x190 /* \".attributes blob should be present\" */);\n        const attributes = await readAndParse<IChannelAttributes>(\n            this.services.value.objectStorage,\n            \".attributes\");\n\n        assert(this.factory === undefined, 0x208 /* \"Factory should be undefined before loading\" */);\n        this.factory = this.registry.get(attributes.type);\n        if (this.factory === undefined) {\n            throw new Error(`Channel Factory ${attributes.type} not registered`);\n        }\n        // Services will be assigned during this load.\n        const channel = await this.factory.load(\n            this.runtime,\n            this.id,\n            this.services.value,\n            attributes);\n\n        // Commit changes.\n        this.channel = channel;\n\n        // Send all pending messages to the channel\n        for (const message of this.pending) {\n            this.services.value.deltaConnection.process(message, false, undefined /* localOpMetadata */);\n        }\n        return this.channel;\n    }\n\n    private isSnapshotInOldFormatAndCollectBlobs(\n        snapshotTree: ISnapshotTree,\n        blobMap: Map<string, ArrayBufferLike>,\n    ): boolean {\n        let sanitize = false;\n        const blobsContents: { [path: string]: ArrayBufferLike; } = (snapshotTree as any).blobsContents;\n        Object.entries(blobsContents).forEach(([key, value]) => {\n            blobMap.set(key, value);\n            if (snapshotTree.blobs[key] !== undefined) {\n                sanitize = true;\n            }\n        });\n        for (const value of Object.values(snapshotTree.trees)) {\n            sanitize = sanitize || this.isSnapshotInOldFormatAndCollectBlobs(value, blobMap);\n        }\n        return sanitize;\n    }\n\n    private sanitizeSnapshot(snapshotTree: ISnapshotTree) {\n        const blobMapInitial = new Map(Object.entries(snapshotTree.blobs));\n        for (const [blobName, blobId] of blobMapInitial.entries()) {\n            const blobValue = blobMapInitial.get(blobId);\n            if (blobValue === undefined) {\n                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                delete snapshotTree.blobs[blobName];\n            }\n        }\n        for (const value of Object.values(snapshotTree.trees)) {\n            this.sanitizeSnapshot(value);\n        }\n    }\n}\n\nexport class LocalChannelContext extends LocalChannelContextBase {\n    private readonly services: Lazy<{\n        readonly deltaConnection: ChannelDeltaConnection;\n        readonly objectStorage: ChannelStorageService;\n    }>;\n    private readonly dirtyFn: () => void;\n    constructor(\n        id: string,\n        registry: ISharedObjectRegistry,\n        type: string,\n        runtime: IFluidDataStoreRuntime,\n        dataStoreContext: IFluidDataStoreContext,\n        storageService: IDocumentStorageService,\n        logger: ITelemetryLogger,\n        submitFn: (content: any, localOpMetadata: unknown) => void,\n        dirtyFn: (address: string) => void,\n        addedGCOutboundReferenceFn: (srcHandle: IFluidHandle, outboundHandle: IFluidHandle) => void,\n    ) {\n        super(id, registry, runtime, () => this.services);\n        assert(type !== undefined, 0x209 /* \"Factory Type should be defined\" */);\n        this.factory = registry.get(type);\n        if (this.factory === undefined) {\n            throw new Error(`Channel Factory ${type} not registered`);\n        }\n        this.channel = this.factory.create(runtime, id);\n        this.services = new Lazy(() => {\n            return createServiceEndpoints(\n                this.id,\n                dataStoreContext.connected,\n                submitFn,\n                this.dirtyFn,\n                addedGCOutboundReferenceFn,\n                storageService,\n                logger,\n            );\n        });\n        this.dirtyFn = () => { dirtyFn(id); };\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport {\n    IFluidHandle,\n    IFluidHandleContext,\n    IRequest,\n    IResponse,\n} from \"@fluidframework/core-interfaces\";\nimport {\n    IAudience,\n    IDeltaManager,\n    BindState,\n    AttachState,\n    ILoaderOptions,\n} from \"@fluidframework/container-definitions\";\nimport { DataProcessingError, UsageError } from \"@fluidframework/container-utils\";\nimport {\n    assert,\n    Deferred,\n    LazyPromise,\n    TypedEventEmitter,\n    unreachableCase,\n} from \"@fluidframework/common-utils\";\nimport {\n    ChildLogger,\n    LoggingError,\n    raiseConnectedEvent,\n} from \"@fluidframework/telemetry-utils\";\nimport { buildSnapshotTree } from \"@fluidframework/driver-utils\";\nimport {\n    IClientDetails,\n    IDocumentMessage,\n    ISequencedDocumentMessage,\n    SummaryType,\n    ISummaryBlob,\n    ISummaryTree,\n    IQuorumClients,\n} from \"@fluidframework/protocol-definitions\";\nimport {\n    CreateSummarizerNodeSource,\n    IAttachMessage,\n    IEnvelope,\n    IFluidDataStoreContext,\n    IFluidDataStoreChannel,\n    IGarbageCollectionData,\n    IGarbageCollectionDetailsBase,\n    IInboundSignalMessage,\n    ISummaryTreeWithStats,\n    VisibilityState,\n    ITelemetryContext,\n} from \"@fluidframework/runtime-definitions\";\nimport {\n    convertSnapshotTreeToSummaryTree,\n    convertSummaryTreeToITree,\n    generateHandleContextPath,\n    RequestParser,\n    SummaryTreeBuilder,\n    create404Response,\n    createResponseError,\n    exceptionToResponse,\n} from \"@fluidframework/runtime-utils\";\nimport {\n    IChannel,\n    IFluidDataStoreRuntime,\n    IFluidDataStoreRuntimeEvents,\n    IChannelFactory,\n} from \"@fluidframework/datastore-definitions\";\nimport {\n    GCDataBuilder,\n    removeRouteFromAllNodes,\n    unpackChildNodesGCDetails,\n    unpackChildNodesUsedRoutes,\n} from \"@fluidframework/garbage-collector\";\nimport { v4 as uuid } from \"uuid\";\nimport { IChannelContext, summarizeChannel } from \"./channelContext\";\nimport { LocalChannelContext, LocalChannelContextBase, RehydratedLocalChannelContext } from \"./localChannelContext\";\nimport { RemoteChannelContext } from \"./remoteChannelContext\";\n\nexport enum DataStoreMessageType {\n    // Creates a new channel\n    Attach = \"attach\",\n    ChannelOp = \"op\",\n}\n\nexport interface ISharedObjectRegistry {\n    // TODO consider making this async. A consequence is that either the creation of a distributed data type\n    // is async or we need a new API to split the synchronous vs. asynchronous creation.\n    get(name: string): IChannelFactory | undefined;\n}\n\n/**\n * Base data store class\n */\nexport class FluidDataStoreRuntime extends\nTypedEventEmitter<IFluidDataStoreRuntimeEvents> implements\nIFluidDataStoreChannel, IFluidDataStoreRuntime, IFluidHandleContext {\n    /**\n     * Loads the data store runtime\n     * @param context - The data store context\n     * @param sharedObjectRegistry - The registry of shared objects used by this data store\n     * @param existing - If loading from an existing file.\n     */\n    public static load(\n        context: IFluidDataStoreContext,\n        sharedObjectRegistry: ISharedObjectRegistry,\n        existing: boolean,\n    ): FluidDataStoreRuntime {\n        return new FluidDataStoreRuntime(context, sharedObjectRegistry, existing);\n    }\n\n    public get IFluidRouter() { return this; }\n\n    public get connected(): boolean {\n        return this.dataStoreContext.connected;\n    }\n\n    public get clientId(): string | undefined {\n        return this.dataStoreContext.clientId;\n    }\n\n    public get clientDetails(): IClientDetails {\n        return this.dataStoreContext.clientDetails;\n    }\n\n    public get isAttached(): boolean {\n        return this.attachState !== AttachState.Detached;\n    }\n\n    public get attachState(): AttachState {\n        return this._attachState;\n    }\n\n    public get absolutePath(): string {\n        return generateHandleContextPath(this.id, this.routeContext);\n    }\n\n    public get routeContext(): IFluidHandleContext {\n        return this.dataStoreContext.IFluidHandleContext;\n    }\n\n    public get IFluidHandleContext() { return this; }\n\n    public get rootRoutingContext() { return this; }\n    public get channelsRoutingContext() { return this; }\n    public get objectsRoutingContext() { return this; }\n\n    private _disposed = false;\n    public get disposed() { return this._disposed; }\n\n    private readonly contexts = new Map<string, IChannelContext>();\n    private readonly contextsDeferred = new Map<string, Deferred<IChannelContext>>();\n    private readonly pendingAttach = new Map<string, IAttachMessage>();\n\n    private bindState: BindState;\n    private readonly deferredAttached = new Deferred<void>();\n    private readonly localChannelContextQueue = new Map<string, LocalChannelContextBase>();\n    private readonly notBoundedChannelContextSet = new Set<string>();\n    private _attachState: AttachState;\n    public visibilityState: VisibilityState;\n    // A list of handles that are bound when the data store is not visible. We have to make them visible when the data\n    // store becomes visible.\n    private readonly pendingHandlesToMakeVisible: Set<IFluidHandle> = new Set();\n\n    public readonly id: string;\n    public readonly options: ILoaderOptions;\n    public readonly deltaManager: IDeltaManager<ISequencedDocumentMessage, IDocumentMessage>;\n    private readonly quorum: IQuorumClients;\n    private readonly audience: IAudience;\n    public readonly logger: ITelemetryLogger;\n\n    // A map of child channel context ids to the their base GC details. This is used to initialize the GC state of the\n    // channel contexts.\n    private readonly channelsBaseGCDetails: LazyPromise<Map<string, IGarbageCollectionDetailsBase>>;\n\n    public constructor(\n        private readonly dataStoreContext: IFluidDataStoreContext,\n        private readonly sharedObjectRegistry: ISharedObjectRegistry,\n        existing: boolean,\n    ) {\n        super();\n\n        assert(!dataStoreContext.id.includes(\"/\"),\n            0x30e /* Id cannot contain slashes. DataStoreContext should have validated this. */);\n\n        this.logger = ChildLogger.create(\n            dataStoreContext.logger,\n            \"FluidDataStoreRuntime\",\n            { all: { dataStoreId: uuid() } },\n        );\n\n        this.id = dataStoreContext.id;\n        this.options = dataStoreContext.options;\n        this.deltaManager = dataStoreContext.deltaManager;\n        this.quorum = dataStoreContext.getQuorum();\n        this.audience = dataStoreContext.getAudience();\n\n        const tree = dataStoreContext.baseSnapshot;\n\n        this.channelsBaseGCDetails = new LazyPromise(async () => {\n            const baseGCDetails = await\n                (this.dataStoreContext.getBaseGCDetails?.() ?? this.dataStoreContext.getInitialGCSummaryDetails());\n            return unpackChildNodesGCDetails(baseGCDetails);\n        });\n\n        // Must always receive the data store type inside of the attributes\n        if (tree?.trees !== undefined) {\n            Object.keys(tree.trees).forEach((path) => {\n                // Issue #4414\n                if (path === \"_search\") { return; }\n\n                let channelContext: IChannelContext;\n                // If already exists on storage, then create a remote channel. However, if it is case of rehydrating a\n                // container from snapshot where we load detached container from a snapshot, isLocalDataStore would be\n                // true. In this case create a RehydratedLocalChannelContext.\n                if (dataStoreContext.isLocalDataStore) {\n                    channelContext = new RehydratedLocalChannelContext(\n                        path,\n                        this.sharedObjectRegistry,\n                        this,\n                        this.dataStoreContext,\n                        this.dataStoreContext.storage,\n                        this.logger,\n                        (content, localOpMetadata) => this.submitChannelOp(path, content, localOpMetadata),\n                        (address: string) => this.setChannelDirty(address),\n                        (srcHandle: IFluidHandle, outboundHandle: IFluidHandle) =>\n                            this.addedGCOutboundReference(srcHandle, outboundHandle),\n                        tree.trees[path]);\n                    // This is the case of rehydrating a detached container from snapshot. Now due to delay loading of\n                    // data store, if the data store is loaded after the container is attached, then we missed making\n                    // the channel visible. So do it now. Otherwise, add it to local channel context queue, so\n                    // that it can be make it visible later with the data store.\n                    if (dataStoreContext.attachState !== AttachState.Detached) {\n                        (channelContext as LocalChannelContextBase).makeVisible();\n                    } else {\n                        this.localChannelContextQueue.set(path, channelContext as LocalChannelContextBase);\n                    }\n                } else {\n                    channelContext = new RemoteChannelContext(\n                        this,\n                        dataStoreContext,\n                        dataStoreContext.storage,\n                        (content, localOpMetadata) => this.submitChannelOp(path, content, localOpMetadata),\n                        (address: string) => this.setChannelDirty(address),\n                        (srcHandle: IFluidHandle, outboundHandle: IFluidHandle) =>\n                            this.addedGCOutboundReference(srcHandle, outboundHandle),\n                        path,\n                        tree.trees[path],\n                        this.sharedObjectRegistry,\n                        undefined /* extraBlobs */,\n                        this.dataStoreContext.getCreateChildSummarizerNodeFn(\n                            path,\n                            { type: CreateSummarizerNodeSource.FromSummary },\n                        ),\n                        async () => this.getChannelBaseGCDetails(path));\n                }\n                const deferred = new Deferred<IChannelContext>();\n                deferred.resolve(channelContext);\n\n                this.contexts.set(path, channelContext);\n                this.contextsDeferred.set(path, deferred);\n            });\n        }\n\n        this.attachListener();\n        // If exists on storage or loaded from a snapshot, it should already be bound.\n        this.bindState = existing ? BindState.Bound : BindState.NotBound;\n        this._attachState = dataStoreContext.attachState;\n\n        /**\n         * If existing flag is false, this is a new data store and is not visible. The existing flag can be true in two\n         * conditions:\n         * 1. It's a local data store that is created when a detached container is rehydrated. In this case, the data\n         *    store is locally visible because the snapshot it is loaded from contains locally visible data stores only.\n         * 2. It's a remote data store that is created when an attached container is loaded is loaded from snapshot or\n         *    when an attach op comes in. In both these cases, the data store is already globally visible.\n         */\n        if (existing) {\n            this.visibilityState = dataStoreContext.attachState === AttachState.Detached\n                ? VisibilityState.LocallyVisible : VisibilityState.GloballyVisible;\n        } else {\n            this.visibilityState = VisibilityState.NotVisible;\n        }\n\n        // If it's existing we know it has been attached.\n        if (existing) {\n            this.deferredAttached.resolve();\n        }\n    }\n\n    public dispose(): void {\n        if (this._disposed) {\n            return;\n        }\n        this._disposed = true;\n\n        this.emit(\"dispose\");\n        this.removeAllListeners();\n    }\n\n    public async resolveHandle(request: IRequest): Promise<IResponse> {\n        return this.request(request);\n    }\n\n    public async request(request: IRequest): Promise<IResponse> {\n        try {\n            const parser = RequestParser.create(request);\n            const id = parser.pathParts[0];\n\n            if (id === \"_channels\" || id === \"_custom\") {\n                return this.request(parser.createSubRequest(1));\n            }\n\n            // Check for a data type reference first\n            if (this.contextsDeferred.has(id) && parser.isLeaf(1)) {\n                try {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    const value = await this.contextsDeferred.get(id)!.promise;\n                    const channel = await value.getChannel();\n\n                    return { mimeType: \"fluid/object\", status: 200, value: channel };\n                } catch (error) {\n                    this.logger.sendErrorEvent({ eventName: \"GetChannelFailedInRequest\" }, error);\n\n                    return createResponseError(500, `Failed to get Channel: ${error}`, request);\n                }\n            }\n\n            // Otherwise defer to an attached request handler\n            return create404Response(request);\n        } catch (error) {\n            return exceptionToResponse(error);\n        }\n    }\n\n    public async getChannel(id: string): Promise<IChannel> {\n        this.verifyNotClosed();\n\n        // TODO we don't assume any channels (even root) in the runtime. If you request a channel that doesn't exist\n        // we will never resolve the promise. May want a flag to getChannel that doesn't wait for the promise if\n        // it doesn't exist\n        if (!this.contextsDeferred.has(id)) {\n            this.contextsDeferred.set(id, new Deferred<IChannelContext>());\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const context = await this.contextsDeferred.get(id)!.promise;\n        const channel = await context.getChannel();\n\n        return channel;\n    }\n\n    public createChannel(id: string = uuid(), type: string): IChannel {\n        if (id.includes(\"/\")) {\n            throw new UsageError(`Id cannot contain slashes: ${id}`);\n        }\n\n        this.verifyNotClosed();\n\n        assert(!this.contexts.has(id), 0x179 /* \"createChannel() with existing ID\" */);\n        this.notBoundedChannelContextSet.add(id);\n        const context = new LocalChannelContext(\n            id,\n            this.sharedObjectRegistry,\n            type,\n            this,\n            this.dataStoreContext,\n            this.dataStoreContext.storage,\n            this.logger,\n            (content, localOpMetadata) => this.submitChannelOp(id, content, localOpMetadata),\n            (address: string) => this.setChannelDirty(address),\n            (srcHandle: IFluidHandle, outboundHandle: IFluidHandle) =>\n                this.addedGCOutboundReference(srcHandle, outboundHandle));\n        this.contexts.set(id, context);\n\n        if (this.contextsDeferred.has(id)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.contextsDeferred.get(id)!.resolve(context);\n        } else {\n            const deferred = new Deferred<IChannelContext>();\n            deferred.resolve(context);\n            this.contextsDeferred.set(id, deferred);\n        }\n\n        assert(!!context.channel, 0x17a /* \"Channel should be loaded when created!!\" */);\n        return context.channel;\n    }\n\n    /**\n     * Binds a channel with the runtime. If the runtime is attached we will attach the channel right away.\n     * If the runtime is not attached we will defer the attach until the runtime attaches.\n     * @param channel - channel to be registered.\n     */\n    public bindChannel(channel: IChannel): void {\n        assert(this.notBoundedChannelContextSet.has(channel.id),\n        0x17b /* \"Channel to be binded should be in not bounded set\" */);\n        this.notBoundedChannelContextSet.delete(channel.id);\n        // If our data store is attached, then attach the channel.\n        if (this.isAttached) {\n            this.attachChannel(channel);\n            return;\n        }\n\n        /**\n         * If this channel is already waiting to be made visible, do nothing. This can happen during attachGraph() when\n         * a channel's graph is attached. It calls bindToContext on the shared object which will end up back here.\n         */\n        if (this.pendingHandlesToMakeVisible.has(channel.handle)) {\n            return;\n        }\n\n        this.bind(channel.handle);\n\n        // If our data store is local then add the channel to the queue\n        if (!this.localChannelContextQueue.has(channel.id)) {\n            this.localChannelContextQueue.set(channel.id, this.contexts.get(channel.id) as LocalChannelContextBase);\n        }\n    }\n\n    /**\n     * This function is called when a data store becomes root. It does the following:\n     * 1. Marks the data store locally visible in the container.\n     * 2. Attaches the graph of all the handles bound to it.\n     * 3. Calls into the data store context to mark it visible in the container too. If the container is globally\n     *    visible, it will mark us globally visible. Otherwise, it will mark us globally visible when it becomes\n     *    globally visible.\n     */\n    public makeVisibleAndAttachGraph() {\n        if (this.visibilityState !== VisibilityState.NotVisible) {\n            return;\n        }\n        this.visibilityState = VisibilityState.LocallyVisible;\n\n        this.pendingHandlesToMakeVisible.forEach((handle) => {\n            handle.attachGraph();\n        });\n        this.pendingHandlesToMakeVisible.clear();\n        this.bindToContext();\n    }\n\n    /**\n     * This function is called when a handle to this data store is added to a visible DDS.\n     */\n    public attachGraph() {\n        this.makeVisibleAndAttachGraph();\n    }\n\n    /**\n     * Binds this runtime to the container\n     * This includes the following:\n     * 1. Sending an Attach op that includes all existing state\n     * 2. Attaching the graph if the data store becomes attached.\n     */\n    public bindToContext() {\n        if (this.bindState !== BindState.NotBound) {\n            return;\n        }\n        this.bindState = BindState.Binding;\n        this.dataStoreContext.bindToContext();\n        this.bindState = BindState.Bound;\n    }\n\n    public bind(handle: IFluidHandle): void {\n        // If visible, attach the incoming handle's graph. Else, this will be done when we become visible.\n        if (this.visibilityState !== VisibilityState.NotVisible) {\n            handle.attachGraph();\n            return;\n        }\n        this.pendingHandlesToMakeVisible.add(handle);\n    }\n\n    public setConnectionState(connected: boolean, clientId?: string) {\n        this.verifyNotClosed();\n\n        for (const [, object] of this.contexts) {\n            object.setConnectionState(connected, clientId);\n        }\n\n        raiseConnectedEvent(this.logger, this, connected, clientId);\n    }\n\n    public getQuorum(): IQuorumClients {\n        return this.quorum;\n    }\n\n    public getAudience(): IAudience {\n        return this.audience;\n    }\n\n    public async uploadBlob(blob: ArrayBufferLike): Promise<IFluidHandle<ArrayBufferLike>> {\n        this.verifyNotClosed();\n\n        return this.dataStoreContext.uploadBlob(blob);\n    }\n\n    public process(message: ISequencedDocumentMessage, local: boolean, localOpMetadata: unknown) {\n        this.verifyNotClosed();\n\n        try {\n            // catches as data processing error whether or not they come from async pending queues\n            switch (message.type) {\n                case DataStoreMessageType.Attach: {\n                    const attachMessage = message.contents as IAttachMessage;\n                    const id = attachMessage.id;\n\n                    // If a non-local operation then go and create the object\n                    // Otherwise mark it as officially attached.\n                    if (local) {\n                        assert(this.pendingAttach.has(id), 0x17c /* \"Unexpected attach (local) channel OP\" */);\n                        this.pendingAttach.delete(id);\n                    } else {\n                        assert(!this.contexts.has(id),\n                        0x17d, /* `Unexpected attach channel OP,\n                            is in pendingAttach set: ${this.pendingAttach.has(id)},\n                            is local channel contexts: ${this.contexts.get(id) instanceof LocalChannelContextBase}` */);\n\n                        const flatBlobs = new Map<string, ArrayBufferLike>();\n                        const snapshotTree = buildSnapshotTree(attachMessage.snapshot.entries, flatBlobs);\n\n                        const remoteChannelContext = new RemoteChannelContext(\n                            this,\n                            this.dataStoreContext,\n                            this.dataStoreContext.storage,\n                            (content, localContentMetadata) => this.submitChannelOp(id, content, localContentMetadata),\n                            (address: string) => this.setChannelDirty(address),\n                            (srcHandle: IFluidHandle, outboundHandle: IFluidHandle) =>\n                                this.addedGCOutboundReference(srcHandle, outboundHandle),\n                            id,\n                            snapshotTree,\n                            this.sharedObjectRegistry,\n                            flatBlobs,\n                            this.dataStoreContext.getCreateChildSummarizerNodeFn(\n                                id,\n                                {\n                                    type: CreateSummarizerNodeSource.FromAttach,\n                                    sequenceNumber: message.sequenceNumber,\n                                    snapshot: attachMessage.snapshot,\n                                },\n                            ),\n                            async () => this.getChannelBaseGCDetails(id),\n                            attachMessage.type);\n\n                        this.contexts.set(id, remoteChannelContext);\n                        if (this.contextsDeferred.has(id)) {\n                            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                            this.contextsDeferred.get(id)!.resolve(remoteChannelContext);\n                        } else {\n                            const deferred = new Deferred<IChannelContext>();\n                            deferred.resolve(remoteChannelContext);\n                            this.contextsDeferred.set(id, deferred);\n                        }\n                    }\n                    break;\n                }\n\n                case DataStoreMessageType.ChannelOp:\n                    this.processChannelOp(message, local, localOpMetadata);\n                    break;\n                default:\n            }\n\n            this.emit(\"op\", message);\n        } catch (error) {\n            throw DataProcessingError.wrapIfUnrecognized(error, \"fluidDataStoreRuntimeFailedToProcessMessage\", message);\n        }\n    }\n\n    public processSignal(message: IInboundSignalMessage, local: boolean) {\n        this.emit(\"signal\", message, local);\n    }\n\n    private isChannelAttached(id: string): boolean {\n        return (\n            // Added in createChannel\n            // Removed when bindChannel is called\n            !this.notBoundedChannelContextSet.has(id)\n            // Added in bindChannel only if this is not attached yet\n            // Removed when this is attached by calling attachGraph\n            && !this.localChannelContextQueue.has(id)\n            // Added in attachChannel called by bindChannel\n            // Removed when attach op is broadcast\n            && !this.pendingAttach.has(id)\n        );\n    }\n\n    /**\n     * Returns the outbound routes of this channel. Currently, all contexts in this channel are considered\n     * referenced and are hence outbound. This will change when we have root and non-root channel contexts.\n     * The only root contexts will be considered as referenced.\n     */\n    private getOutboundRoutes(): string[] {\n        const outboundRoutes: string[] = [];\n        for (const [contextId] of this.contexts) {\n            outboundRoutes.push(`${this.absolutePath}/${contextId}`);\n        }\n        return outboundRoutes;\n    }\n\n    /**\n     * Updates the GC nodes of this channel. It does the following:\n     * - Adds a back route to self to all its child GC nodes.\n     * - Adds a node for this channel.\n     * @param builder - The builder that contains the GC nodes for this channel's children.\n     */\n    private updateGCNodes(builder: GCDataBuilder) {\n        // Add a back route to self in each child's GC nodes. If any child is referenced, then its parent should\n        // be considered referenced as well.\n        builder.addRouteToAllNodes(this.absolutePath);\n\n        // Get the outbound routes and add a GC node for this channel.\n        builder.addNode(\"/\", this.getOutboundRoutes());\n    }\n\n    /**\n     * Generates data used for garbage collection. This includes a list of GC nodes that represent this channel\n     * including any of its child channel contexts. Each node has a set of outbound routes to other GC nodes in the\n     * document. It does the following:\n     * 1. Calls into each child context to get its GC data.\n     * 2. Prefixes the child context's id to the GC nodes in the child's GC data. This makes sure that the node can be\n     *    identified as belonging to the child.\n     * 3. Adds a GC node for this channel to the nodes received from the children. All these nodes together represent\n     *    the GC data of this channel.\n     * @param fullGC - true to bypass optimizations and force full generation of GC data.\n     */\n    public async getGCData(fullGC: boolean = false): Promise<IGarbageCollectionData> {\n        const builder = new GCDataBuilder();\n        // Iterate over each channel context and get their GC data.\n        await Promise.all(Array.from(this.contexts)\n            .filter(([contextId, _]) => {\n                // Get GC data only for attached contexts. Detached contexts are not connected in the GC reference\n                // graph so any references they might have won't be connected as well.\n                return this.isChannelAttached(contextId);\n            }).map(async ([contextId, context]) => {\n                const contextGCData = await context.getGCData(fullGC);\n                // Prefix the child's id to the ids of its GC nodes so they can be identified as belonging to the child.\n                // This also gradually builds the id of each node to be a path from the root.\n                builder.prefixAndAddNodes(contextId, contextGCData.gcNodes);\n            }));\n\n        this.updateGCNodes(builder);\n        return builder.getGCData();\n    }\n\n    /**\n     * After GC has run, called to notify this channel of routes that are used in it. It calls the child contexts to\n     * update their used routes.\n     * @param usedRoutes - The routes that are used in all contexts in this channel.\n     * @param gcTimestamp - The time when GC was run that generated these used routes. If any node becomes unreferenced\n     * as part of this GC run, this should be used to update the time when it happens.\n     */\n    public updateUsedRoutes(usedRoutes: string[], gcTimestamp?: number) {\n        // Get a map of channel ids to routes used in it.\n        const usedContextRoutes = unpackChildNodesUsedRoutes(usedRoutes);\n\n        // Verify that the used routes are correct.\n        for (const [id] of usedContextRoutes) {\n            assert(this.contexts.has(id), 0x17e /* \"Used route does not belong to any known context\" */);\n        }\n\n        // Update the used routes in each context. Used routes is empty for unused context.\n        for (const [contextId, context] of this.contexts) {\n            context.updateUsedRoutes(usedContextRoutes.get(contextId) ?? [], gcTimestamp);\n        }\n    }\n\n    /**\n     * Called when a new outbound reference is added to another node. This is used by garbage collection to identify\n     * all references added in the system.\n     * @param srcHandle - The handle of the node that added the reference.\n     * @param outboundHandle - The handle of the outbound node that is referenced.\n     */\n    private addedGCOutboundReference(srcHandle: IFluidHandle, outboundHandle: IFluidHandle) {\n        this.dataStoreContext.addedGCOutboundReference?.(srcHandle, outboundHandle);\n    }\n\n    /**\n     * Returns the base GC details for the channel with the given id. This is used to initialize its GC state.\n     * @param channelId - The id of the channel context that is asked for the initial GC details.\n     * @returns the requested channel's base GC details.\n     */\n    private async getChannelBaseGCDetails(channelId: string): Promise<IGarbageCollectionDetailsBase> {\n        let channelBaseGCDetails = (await this.channelsBaseGCDetails).get(channelId);\n        if (channelBaseGCDetails === undefined) {\n            channelBaseGCDetails = {};\n        } else if (channelBaseGCDetails.gcData?.gcNodes !== undefined) {\n            // Note: if the child channel has an explicit handle route to its parent, it will be removed here and\n            // expected to be added back by the parent when getGCData is called.\n            removeRouteFromAllNodes(channelBaseGCDetails.gcData.gcNodes, this.absolutePath);\n        }\n\n        // Currently, channel context's are always considered used. So, it there are no used routes for it, we still\n        // need to mark it as used. Add self-route (empty string) to the channel context's used routes.\n        if (channelBaseGCDetails.usedRoutes === undefined || channelBaseGCDetails.usedRoutes.length === 0) {\n            channelBaseGCDetails.usedRoutes = [\"\"];\n        }\n        return channelBaseGCDetails;\n    }\n\n    /**\n     * Returns a summary at the current sequence number.\n     * @param fullTree - true to bypass optimizations and force a full summary tree\n     * @param trackState - This tells whether we should track state from this summary.\n     * @param telemetryContext - summary data passed through the layers for telemetry purposes\n     */\n    public async summarize(\n        fullTree: boolean = false,\n        trackState: boolean = true,\n        telemetryContext?: ITelemetryContext,\n    ): Promise<ISummaryTreeWithStats> {\n        const summaryBuilder = new SummaryTreeBuilder();\n\n        // Iterate over each data store and ask it to summarize\n        await Promise.all(Array.from(this.contexts)\n            .filter(([contextId, _]) => {\n                const isAttached = this.isChannelAttached(contextId);\n                // We are not expecting local dds! Summary may not capture local state.\n                assert(isAttached, 0x17f /* \"Not expecting detached channels during summarize\" */);\n                // If the object is registered - and we have received the sequenced op creating the object\n                // (i.e. it has a base mapping) - then we go ahead and summarize\n                return isAttached;\n            }).map(async ([contextId, context]) => {\n                const contextSummary = await context.summarize(fullTree, trackState, telemetryContext);\n                summaryBuilder.addWithStats(contextId, contextSummary);\n            }));\n\n        return summaryBuilder.getSummaryTree();\n    }\n\n    public getAttachSummary(telemetryContext?: ITelemetryContext): ISummaryTreeWithStats {\n        /**\n         * back-compat 0.59.1000 - getAttachSummary() is called when making a data store globally visible (previously\n         * attaching state). Ideally, attachGraph() should have already be called making it locally visible. However,\n         * before visibility state was added, this may not have been the case and getAttachSummary() could be called:\n         * 1) Before attaching the data store - When a detached container is attached.\n         * 2) After attaching the data store - When a data store is created and bound in an attached container.\n         *\n         * The basic idea is that all local object should become locally visible before they are globally visible.\n         */\n        this.attachGraph();\n\n        /**\n         * This assert cannot be added now due to back-compat. To be uncommented when the following issue is fixed -\n         * https://github.com/microsoft/FluidFramework/issues/9688.\n         *\n         * assert(this.visibilityState === VisibilityState.LocallyVisible,\n         *   \"The data store should be locally visible when generating attach summary\",\n         * );\n         */\n\n        const summaryBuilder = new SummaryTreeBuilder();\n\n        // Craft the .attributes file for each shared object\n        for (const [contextId, context] of this.contexts) {\n            if (!(context instanceof LocalChannelContextBase)) {\n                throw new LoggingError(\"Should only be called with local channel handles\");\n            }\n\n            if (!this.notBoundedChannelContextSet.has(contextId)) {\n                let summaryTree: ISummaryTreeWithStats;\n                if (context.isLoaded) {\n                    const contextSummary = context.getAttachSummary(telemetryContext);\n                    assert(\n                        contextSummary.summary.type === SummaryType.Tree,\n                        0x180 /* \"getAttachSummary should always return a tree\" */);\n                    summaryTree = { stats: contextSummary.stats, summary: contextSummary.summary };\n                } else {\n                    // If this channel is not yet loaded, then there should be no changes in the snapshot from which\n                    // it was created as it is detached container. So just use the previous snapshot.\n                    assert(!!this.dataStoreContext.baseSnapshot,\n                        0x181 /* \"BaseSnapshot should be there as detached container loaded from snapshot\" */);\n                    summaryTree = convertSnapshotTreeToSummaryTree(this.dataStoreContext.baseSnapshot.trees[contextId]);\n                }\n                summaryBuilder.addWithStats(contextId, summaryTree);\n            }\n        }\n\n        return summaryBuilder.getSummaryTree();\n    }\n\n    public submitMessage(type: DataStoreMessageType, content: any, localOpMetadata: unknown) {\n        this.submit(type, content, localOpMetadata);\n    }\n\n    public submitSignal(type: string, content: any) {\n        this.verifyNotClosed();\n        return this.dataStoreContext.submitSignal(type, content);\n    }\n\n    /**\n     * Will return when the data store is attached.\n     */\n    public async waitAttached(): Promise<void> {\n        return this.deferredAttached.promise;\n    }\n\n    /**\n     * Attach channel should only be called after the data store has been attached\n     */\n    private attachChannel(channel: IChannel): void {\n        this.verifyNotClosed();\n        // If this handle is already attached no need to attach again.\n        if (channel.handle.isAttached) {\n            return;\n        }\n\n        channel.handle.attachGraph();\n\n        assert(this.isAttached, 0x182 /* \"Data store should be attached to attach the channel.\" */);\n        assert(this.visibilityState === VisibilityState.GloballyVisible,\n            0x2d0 /* \"Data store should be globally visible to attach channels.\" */);\n\n        const summarizeResult = summarizeChannel(channel, true /* fullTree */, false /* trackState */);\n        // Attach message needs the summary in ITree format. Convert the ISummaryTree into an ITree.\n        const snapshot = convertSummaryTreeToITree(summarizeResult.summary);\n\n        const message: IAttachMessage = {\n            id: channel.id,\n            snapshot,\n            type: channel.attributes.type,\n        };\n        this.pendingAttach.set(channel.id, message);\n        this.submit(DataStoreMessageType.Attach, message);\n\n        const context = this.contexts.get(channel.id) as LocalChannelContextBase;\n        context.makeVisible();\n    }\n\n    private submitChannelOp(address: string, contents: any, localOpMetadata: unknown) {\n        const envelope: IEnvelope = { address, contents };\n        this.submit(DataStoreMessageType.ChannelOp, envelope, localOpMetadata);\n    }\n\n    private submit(\n        type: DataStoreMessageType,\n        content: any,\n        localOpMetadata: unknown = undefined): void {\n        this.verifyNotClosed();\n        this.dataStoreContext.submitMessage(type, content, localOpMetadata);\n    }\n\n    /**\n     * For messages of type MessageType.Operation, finds the right channel and asks it to resubmit the message.\n     * For all other messages, just submit it again.\n     * This typically happens when we reconnect and there are unacked messages.\n     * @param content - The content of the original message.\n     * @param localOpMetadata - The local metadata associated with the original message.\n     */\n    public reSubmit(type: DataStoreMessageType, content: any, localOpMetadata: unknown) {\n        this.verifyNotClosed();\n\n        switch (type) {\n            case DataStoreMessageType.ChannelOp:\n                {\n                    // For Operations, find the right channel and trigger resubmission on it.\n                    const envelope = content as IEnvelope;\n                    const channelContext = this.contexts.get(envelope.address);\n                    assert(!!channelContext, 0x183 /* \"There should be a channel context for the op\" */);\n                    channelContext.reSubmit(envelope.contents, localOpMetadata);\n                    break;\n                }\n            case DataStoreMessageType.Attach:\n                // For Attach messages, just submit them again.\n                this.submit(type, content, localOpMetadata);\n                break;\n            default:\n                unreachableCase(type);\n        }\n    }\n\n    /**\n     * Revert a local op.\n     * @param content - The content of the original message.\n     * @param localOpMetadata - The local metadata associated with the original message.\n     */\n    public rollback?(type: DataStoreMessageType, content: any, localOpMetadata: unknown) {\n        this.verifyNotClosed();\n\n        switch (type) {\n            case DataStoreMessageType.ChannelOp:\n                {\n                    // For Operations, find the right channel and trigger resubmission on it.\n                    const envelope = content as IEnvelope;\n                    const channelContext = this.contexts.get(envelope.address);\n                    assert(!!channelContext, 0x2ed /* \"There should be a channel context for the op\" */);\n                    channelContext.rollback(envelope.contents, localOpMetadata);\n                    break;\n                }\n            default:\n                throw new LoggingError(`Can't rollback ${type} message`);\n        }\n    }\n\n    public async applyStashedOp(content: any): Promise<unknown> {\n        const envelope = content as IEnvelope;\n        const channelContext = this.contexts.get(envelope.address);\n        assert(!!channelContext, 0x184 /* \"There should be a channel context for the op\" */);\n        await channelContext.getChannel();\n        return channelContext.applyStashedOp(envelope.contents);\n    }\n\n    private setChannelDirty(address: string): void {\n        this.verifyNotClosed();\n        this.dataStoreContext.setChannelDirty(address);\n    }\n\n    private processChannelOp(message: ISequencedDocumentMessage, local: boolean, localOpMetadata: unknown) {\n        this.verifyNotClosed();\n\n        const envelope = message.contents as IEnvelope;\n\n        const transformed: ISequencedDocumentMessage = {\n            ...message,\n            contents: envelope.contents,\n        };\n\n        const channelContext = this.contexts.get(envelope.address);\n        assert(!!channelContext, 0x185 /* \"Channel not found\" */);\n        channelContext.processOp(transformed, local, localOpMetadata);\n\n        return channelContext;\n    }\n\n    private attachListener() {\n        this.setMaxListeners(Number.MAX_SAFE_INTEGER);\n        this.dataStoreContext.once(\"attaching\", () => {\n            /**\n             * back-compat 0.59.1000 - Ideally, attachGraph() should have already been called making the data store\n             * locally visible. However, before visibility state was added, this may not have been the case and data\n             * store can move to \"attaching\" state in 2 scenarios:\n             * 1) Before attachGraph() is called - When a data store is created and bound in an attached container.\n             * 2) After attachGraph() is called - When a detached container is attached.\n             *\n             * The basic idea is that all local object should become locally visible before they are globally visible.\n             */\n            this.attachGraph();\n\n            this._attachState = AttachState.Attaching;\n\n            assert(this.visibilityState === VisibilityState.LocallyVisible,\n                0x2d1 /* \"Data store should be locally visible before it can become globally visible.\" */);\n\n            // Mark the data store globally visible and make its child channels visible as well.\n            this.visibilityState = VisibilityState.GloballyVisible;\n            this.localChannelContextQueue.forEach((channel) => {\n                channel.makeVisible();\n            });\n            this.localChannelContextQueue.clear();\n\n            // This promise resolution will be moved to attached event once we fix the scheduler.\n            this.deferredAttached.resolve();\n            this.emit(\"attaching\");\n        });\n        this.dataStoreContext.once(\"attached\", () => {\n            assert(this.visibilityState === VisibilityState.GloballyVisible,\n                0x2d2 /* \"Data store should be globally visible when its attached.\" */);\n            this._attachState = AttachState.Attached;\n            this.emit(\"attached\");\n        });\n    }\n\n    private verifyNotClosed() {\n        if (this._disposed) {\n            throw new LoggingError(\"Runtime is closed\");\n        }\n    }\n}\n\n/**\n * Mixin class that adds request handler to FluidDataStoreRuntime\n * Request handler is only called when data store can't resolve request, i.e. for custom requests.\n * @param Base - base class, inherits from FluidDataStoreRuntime\n * @param requestHandler - request handler to mix in\n */\nexport const mixinRequestHandler = (\n    requestHandler: (request: IRequest, runtime: FluidDataStoreRuntime) => Promise<IResponse>,\n    Base: typeof FluidDataStoreRuntime = FluidDataStoreRuntime,\n) => class RuntimeWithRequestHandler extends Base {\n        public async request(request: IRequest) {\n            const response = await super.request(request);\n            if (response.status === 404) {\n                return requestHandler(request, this);\n            }\n            return response;\n        }\n    } as typeof FluidDataStoreRuntime;\n\n/**\n * Mixin class that adds await for DataObject to finish initialization before we proceed to summary.\n * @param handler - handler that returns info about blob to be added to summary.\n * Or undefined not to add anything to summary.\n * @param Base - base class, inherits from FluidDataStoreRuntime\n */\nexport const mixinSummaryHandler = (\n    handler: (runtime: FluidDataStoreRuntime) => Promise<{ path: string[]; content: string; } | undefined >,\n    Base: typeof FluidDataStoreRuntime = FluidDataStoreRuntime,\n) => class RuntimeWithSummarizerHandler extends Base {\n        private addBlob(summary: ISummaryTreeWithStats, path: string[], content: string) {\n            const firstName = path.shift();\n            if (firstName === undefined) {\n                throw new LoggingError(\"Path can't be empty\");\n            }\n\n            let blob: ISummaryTree | ISummaryBlob = {\n                type: SummaryType.Blob,\n                content,\n            };\n            summary.stats.blobNodeCount++;\n            summary.stats.totalBlobSize += content.length;\n\n            for (const name of path.reverse()) {\n                blob = {\n                    type: SummaryType.Tree,\n                    tree: { [name]: blob },\n                };\n                summary.stats.treeNodeCount++;\n            }\n            summary.summary.tree[firstName] = blob;\n        }\n\n        async summarize(...args: any[]) {\n            const summary = await super.summarize(...args);\n            const content = await handler(this);\n            if (content !== undefined) {\n                this.addBlob(summary, content.path, content.content);\n            }\n            return summary;\n        }\n    } as typeof FluidDataStoreRuntime;\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITelemetryLogger } from \"@fluidframework/common-definitions\";\nimport { assert } from \"@fluidframework/common-utils\";\nimport { DataCorruptionError } from \"@fluidframework/container-utils\";\nimport { IFluidHandle } from \"@fluidframework/core-interfaces\";\nimport {\n    IChannel,\n    IChannelAttributes,\n    IFluidDataStoreRuntime,\n    IChannelFactory,\n} from \"@fluidframework/datastore-definitions\";\nimport { IDocumentStorageService } from \"@fluidframework/driver-definitions\";\nimport { readAndParse } from \"@fluidframework/driver-utils\";\nimport {\n    ISequencedDocumentMessage,\n    ISnapshotTree,\n} from \"@fluidframework/protocol-definitions\";\nimport {\n    CreateChildSummarizerNodeFn,\n    IFluidDataStoreContext,\n    IGarbageCollectionData,\n    IGarbageCollectionDetailsBase,\n    ISummarizeInternalResult,\n    ISummarizeResult,\n    ISummarizerNodeWithGC,\n    ITelemetryContext,\n} from \"@fluidframework/runtime-definitions\";\nimport { ChildLogger, TelemetryDataTag, ThresholdCounter } from \"@fluidframework/telemetry-utils\";\nimport {\n    attributesBlobKey,\n    createServiceEndpoints,\n    IChannelContext,\n    summarizeChannelAsync,\n} from \"./channelContext\";\nimport { ChannelDeltaConnection } from \"./channelDeltaConnection\";\nimport { ChannelStorageService } from \"./channelStorageService\";\nimport { ISharedObjectRegistry } from \"./dataStoreRuntime\";\n\nexport class RemoteChannelContext implements IChannelContext {\n    private isLoaded = false;\n    private pending: ISequencedDocumentMessage[] | undefined = [];\n    private channelP: Promise<IChannel> | undefined;\n    private channel: IChannel | undefined;\n    private readonly services: {\n        readonly deltaConnection: ChannelDeltaConnection;\n        readonly objectStorage: ChannelStorageService;\n    };\n    private readonly summarizerNode: ISummarizerNodeWithGC;\n    private readonly subLogger: ITelemetryLogger;\n    private readonly thresholdOpsCounter: ThresholdCounter;\n    private static readonly pendingOpsCountThreshold = 1000;\n\n    constructor(\n        private readonly runtime: IFluidDataStoreRuntime,\n        private readonly dataStoreContext: IFluidDataStoreContext,\n        storageService: IDocumentStorageService,\n        submitFn: (content: any, localOpMetadata: unknown) => void,\n        dirtyFn: (address: string) => void,\n        addedGCOutboundReferenceFn: (srcHandle: IFluidHandle, outboundHandle: IFluidHandle) => void,\n        private readonly id: string,\n        baseSnapshot: ISnapshotTree,\n        private readonly registry: ISharedObjectRegistry,\n        extraBlobs: Map<string, ArrayBufferLike> | undefined,\n        createSummarizerNode: CreateChildSummarizerNodeFn,\n        getBaseGCDetails: () => Promise<IGarbageCollectionDetailsBase>,\n        private readonly attachMessageType?: string,\n    ) {\n        assert(!this.id.includes(\"/\"), 0x310 /* Channel context ID cannot contain slashes */);\n\n        this.subLogger = ChildLogger.create(this.runtime.logger, \"RemoteChannelContext\");\n\n        this.services = createServiceEndpoints(\n            this.id,\n            this.dataStoreContext.connected,\n            submitFn,\n            () => dirtyFn(this.id),\n            addedGCOutboundReferenceFn,\n            storageService,\n            this.subLogger,\n            baseSnapshot,\n            extraBlobs);\n\n        const thisSummarizeInternal =\n            async (fullTree: boolean, trackState: boolean, telemetryContext?: ITelemetryContext) =>\n            this.summarizeInternal(fullTree, trackState, telemetryContext);\n\n        this.summarizerNode = createSummarizerNode(\n            thisSummarizeInternal,\n            async (fullGC?: boolean) => this.getGCDataInternal(fullGC),\n            async () => getBaseGCDetails(),\n        );\n\n        this.thresholdOpsCounter = new ThresholdCounter(\n            RemoteChannelContext.pendingOpsCountThreshold,\n            this.subLogger,\n        );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/promise-function-async\n    public getChannel(): Promise<IChannel> {\n        if (this.channelP === undefined) {\n            this.channelP = this.loadChannel();\n        }\n\n        return this.channelP;\n    }\n\n    public setConnectionState(connected: boolean, clientId?: string) {\n        // Connection events are ignored if the data store is not yet loaded\n        if (!this.isLoaded) {\n            return;\n        }\n\n        this.services.deltaConnection.setConnectionState(connected);\n    }\n\n    public applyStashedOp(message: ISequencedDocumentMessage): unknown {\n        assert(this.isLoaded, 0x194 /* \"Remote channel must be loaded when rebasing op\" */);\n        return this.services.deltaConnection.applyStashedOp(message);\n    }\n\n    public processOp(message: ISequencedDocumentMessage, local: boolean, localOpMetadata: unknown): void {\n        this.summarizerNode.invalidate(message.sequenceNumber);\n\n        if (this.isLoaded) {\n            this.services.deltaConnection.process(message, local, localOpMetadata);\n        } else {\n            assert(!local, 0x195 /* \"Remote channel must not be local when processing op\" */);\n            assert(this.pending !== undefined, 0x23e /* \"pending is undefined\" */);\n            this.pending.push(message);\n            this.thresholdOpsCounter.sendIfMultiple(\"StorePendingOps\", this.pending.length);\n        }\n    }\n\n    public reSubmit(content: any, localOpMetadata: unknown) {\n        assert(this.isLoaded, 0x196 /* \"Remote channel must be loaded when resubmitting op\" */);\n\n        this.services.deltaConnection.reSubmit(content, localOpMetadata);\n    }\n\n    public rollback(content: any, localOpMetadata: unknown) {\n        assert(this.isLoaded, 0x2f0 /* \"Remote channel must be loaded when rolling back op\" */);\n\n        this.services.deltaConnection.rollback(content, localOpMetadata);\n    }\n\n    /**\n     * Returns a summary at the current sequence number.\n     * @param fullTree - true to bypass optimizations and force a full summary tree\n     * @param trackState - This tells whether we should track state from this summary.\n     * @param telemetryContext - summary data passed through the layers for telemetry purposes\n     */\n    public async summarize(\n        fullTree: boolean = false,\n        trackState: boolean = true,\n        telemetryContext?: ITelemetryContext,\n    ): Promise<ISummarizeResult> {\n        return this.summarizerNode.summarize(fullTree, trackState, telemetryContext);\n    }\n\n    private async summarizeInternal(\n        fullTree: boolean,\n        trackState: boolean,\n        telemetryContext?: ITelemetryContext,\n    ): Promise<ISummarizeInternalResult> {\n        const channel = await this.getChannel();\n        const summarizeResult = await summarizeChannelAsync(channel, fullTree, trackState, telemetryContext);\n        return { ...summarizeResult, id: this.id };\n    }\n\n    private async loadChannel(): Promise<IChannel> {\n        assert(!this.isLoaded, 0x197 /* \"Remote channel must not already be loaded when loading\" */);\n\n        let attributes: IChannelAttributes | undefined;\n        if (await this.services.objectStorage.contains(attributesBlobKey)) {\n            attributes = await readAndParse<IChannelAttributes | undefined>(\n                this.services.objectStorage,\n                attributesBlobKey);\n        }\n\n        let factory: IChannelFactory | undefined;\n        // this is a backward compatibility case where\n        // the attach message doesn't include\n        // the attributes. Since old attach messages\n        // will not have attributes we need to keep\n        // this as long as we support old attach messages\n        if (attributes === undefined) {\n            if (this.attachMessageType === undefined) {\n                // TODO: dataStoreId may require a different tag from PackageData #7488\n                throw new DataCorruptionError(\"channelTypeNotAvailable\", {\n                    channelId: {\n                        value: this.id,\n                        tag: TelemetryDataTag.PackageData,\n                    },\n                    dataStoreId: {\n                        value: this.dataStoreContext.id,\n                        tag: TelemetryDataTag.PackageData,\n                    },\n                    dataStorePackagePath: this.dataStoreContext.packagePath.join(\"/\"),\n                });\n            }\n            factory = this.registry.get(this.attachMessageType);\n            if (factory === undefined) {\n                // TODO: dataStoreId may require a different tag from PackageData #7488\n                throw new DataCorruptionError(\"channelFactoryNotRegisteredForAttachMessageType\", {\n                    channelId: {\n                        value: this.id,\n                        tag: TelemetryDataTag.PackageData,\n                    },\n                    dataStoreId: {\n                        value: this.dataStoreContext.id,\n                        tag: TelemetryDataTag.PackageData,\n                    },\n                    dataStorePackagePath: this.dataStoreContext.packagePath.join(\"/\"),\n                    channelFactoryType: this.attachMessageType,\n                });\n            }\n            attributes = factory.attributes;\n        } else {\n            factory = this.registry.get(attributes.type);\n            if (factory === undefined) {\n                // TODO: dataStoreId may require a different tag from PackageData #7488\n                throw new DataCorruptionError(\"channelFactoryNotRegisteredForGivenType\", {\n                    channelId: {\n                        value: this.id,\n                        tag: TelemetryDataTag.PackageData,\n                    },\n                    dataStoreId: {\n                        value: this.dataStoreContext.id,\n                        tag: TelemetryDataTag.PackageData,\n                    },\n                    dataStorePackagePath: this.dataStoreContext.packagePath.join(\"/\"),\n                    channelFactoryType: attributes.type,\n                });\n            }\n        }\n\n        // Compare snapshot version to collaborative object version\n        if (attributes.snapshotFormatVersion !== undefined\n            && attributes.snapshotFormatVersion !== factory.attributes.snapshotFormatVersion) {\n                this.subLogger.sendTelemetryEvent(\n                    {\n                        eventName: \"ChannelAttributesVersionMismatch\",\n                        channelType: { value: attributes.type, tag: TelemetryDataTag.PackageData },\n                        channelSnapshotVersion: {\n                            value: `${attributes.snapshotFormatVersion}@${attributes.packageVersion}`,\n                            tag: TelemetryDataTag.PackageData,\n                        },\n                        channelCodeVersion: {\n                            value: `${factory.attributes.snapshotFormatVersion}@${factory.attributes.packageVersion}`,\n                            tag: TelemetryDataTag.PackageData,\n                        },\n                    },\n                );\n        }\n\n        const channel = await factory.load(\n            this.runtime,\n            this.id,\n            this.services,\n            attributes);\n\n        // Send all pending messages to the channel\n        assert(this.pending !== undefined, 0x23f /* \"pending undefined\" */);\n        for (const message of this.pending) {\n            this.services.deltaConnection.process(message, false, undefined /* localOpMetadata */);\n        }\n        this.thresholdOpsCounter.send(\"ProcessPendingOps\", this.pending.length);\n\n        // Commit changes.\n        this.channel = channel;\n        this.pending = undefined;\n        this.isLoaded = true;\n\n        // Because have some await between we created the service and here, the connection state might have changed\n        // and we don't propagate the connection state when we are not loaded.  So we have to set it again here.\n        this.services.deltaConnection.setConnectionState(this.dataStoreContext.connected);\n        return this.channel;\n    }\n\n    /**\n     * Returns the data used for garbage collection. This includes a list of GC nodes that represent this context.\n     * Each node has a set of outbound routes to other GC nodes in the document.\n     * If there is no new data in this context since the last summary, previous GC data is used.\n     * If there is new data, the GC data is generated again (by calling getGCDataInternal).\n     * @param fullGC - true to bypass optimizations and force full generation of GC data.\n     */\n    public async getGCData(fullGC: boolean = false): Promise<IGarbageCollectionData> {\n        return this.summarizerNode.getGCData(fullGC);\n    }\n\n    /**\n     * Generates the data used for garbage collection. This is called when there is new data since last summary. It\n     * loads the context and calls into the channel to get its GC data.\n     * @param fullGC - true to bypass optimizations and force full generation of GC data.\n     */\n    private async getGCDataInternal(fullGC: boolean = false): Promise<IGarbageCollectionData> {\n        const channel = await this.getChannel();\n        return channel.getGCData(fullGC);\n    }\n\n    public updateUsedRoutes(usedRoutes: string[], gcTimestamp?: number) {\n        /**\n         * Currently, DDSes are always considered referenced and are not garbage collected. Update the summarizer node's\n         * used routes to contain a route to this channel context.\n         * Once we have GC at DDS level, this will be updated to use the passed usedRoutes. See -\n         * https://github.com/microsoft/FluidFramework/issues/4611\n         */\n        this.summarizerNode.updateUsedRoutes([\"\"]);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AsyncFluidObjectProvider,\n    FluidObjectSymbolProvider,\n} from \"./types\";\n\nexport const IFluidDependencySynthesizer: keyof IProvideFluidDependencySynthesizer\n    = \"IFluidDependencySynthesizer\";\n\nexport interface IProvideFluidDependencySynthesizer {\n    IFluidDependencySynthesizer: IFluidDependencySynthesizer;\n}\n\n/**\n * IFluidDependencySynthesizer can generate IFluidObjects based on the IProvideFluidObject pattern.\n * It allow for registering providers and uses synthesize to generate a new object with the optional\n * and required types.\n */\nexport interface IFluidDependencySynthesizer extends IProvideFluidDependencySynthesizer {\n    /**\n     * synthesize takes optional and required types and returns an object that will fulfill the\n     * defined types based off objects that has been previously registered.\n     *\n     * @param optionalTypes - optional types to be in the Scope object\n     * @param requiredTypes - required types that need to be in the Scope object\n     */\n    synthesize<O, R = undefined | Record<string, never>>(\n            optionalTypes: FluidObjectSymbolProvider<O>,\n            requiredTypes: Required<FluidObjectSymbolProvider<R>>,\n    ): AsyncFluidObjectProvider<O, R>;\n\n    /**\n     * Check if a given type is registered\n     * @param type - Type to check\n     */\n    has(type: string): boolean;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AsyncFluidObjectProvider,\n    FluidObjectSymbolProvider,\n    FluidObjectProvider,\n    AsyncOptionalFluidObjectProvider,\n    AsyncRequiredFluidObjectProvider,\n} from \"./types\";\nimport {\n    IFluidDependencySynthesizer,\n} from \"./IFluidDependencySynthesizer\";\n\n/**\n * DependencyContainer is similar to a IoC Container. It takes providers and will\n * synthesize an object based on them when requested.\n */\nexport class DependencyContainer<TMap> implements IFluidDependencySynthesizer {\n    private readonly providers = new Map<keyof TMap, FluidObjectProvider<any>>();\n    private readonly parents: IFluidDependencySynthesizer[];\n    public get IFluidDependencySynthesizer() { return this; }\n\n    public constructor(... parents: (IFluidDependencySynthesizer | undefined)[]) {\n        this.parents = parents.filter((v): v is IFluidDependencySynthesizer => v !== undefined);\n    }\n\n    /**\n     * Add a new provider\n     * @param type - Name of the Type T being provided\n     * @param provider - A provider that will resolve the T correctly when asked\n     * @throws - If passing a type that's already registered\n     */\n    public register<T extends keyof TMap = keyof TMap>(type: T, provider: FluidObjectProvider<Pick<TMap, T>>): void {\n        if (this.providers.has(type)) {\n            throw new Error(`Attempting to register a provider of type ${type} that already exists`);\n        }\n\n        this.providers.set(type, provider);\n    }\n\n    /**\n     * Remove a provider\n     * @param type - Name of the provider to remove\n     */\n    public unregister(type: keyof TMap): void {\n        if (this.providers.has(type)) {\n            this.providers.delete(type);\n        }\n    }\n\n    /**\n     * {@inheritDoc (IFluidDependencySynthesizer:interface).synthesize}\n     */\n    public synthesize<O, R = undefined | Record<string, never>>(\n        optionalTypes: FluidObjectSymbolProvider<O>,\n        requiredTypes: Required<FluidObjectSymbolProvider<R>>,\n    ): AsyncFluidObjectProvider<O, R> {\n        const base: AsyncFluidObjectProvider<O, R> = {} as any;\n        this.generateRequired<R>(base, requiredTypes);\n        this.generateOptional<O>(base, optionalTypes);\n        Object.defineProperty(base, IFluidDependencySynthesizer, { get: () => this });\n        return base;\n    }\n\n    /**\n     * {@inheritDoc (IFluidDependencySynthesizer:interface).has}\n     * @param excludeParents - If true, exclude checking parent registries\n     */\n    public has(type: string, excludeParents?: boolean): boolean {\n        if (this.providers.has(type as keyof TMap)) {\n            return true;\n        }\n        if (excludeParents !== true) {\n            return this.parents.some((p: IFluidDependencySynthesizer) => p.has(type));\n        }\n        return false;\n    }\n    /**\n     * @deprecated - Needed for back compat\n     */\n    private getProvider(provider: string & keyof TMap) {\n        // this was removed, but some partners have trouble with back compat where they\n        // use invalid patterns with FluidObject and IFluidDependencySynthesizer\n        // this is just for back compat until those are removed\n        if (this.has(provider)) {\n            if (this.providers.has(provider)) {\n                return this.providers.get(provider);\n            }\n            for (const parent of this.parents) {\n                if (parent instanceof DependencyContainer) {\n                    return parent.getProvider(provider);\n                } else {\n                    // older implementations of the IFluidDependencySynthesizer exposed getProvider\n                    const maybeGetProvider: { getProvider?(provider: string & keyof TMap); } = parent as any;\n                    if (maybeGetProvider?.getProvider !== undefined) {\n                        return maybeGetProvider.getProvider(provider);\n                    }\n                }\n            }\n        }\n    }\n\n    private generateRequired<T>(\n        base: AsyncRequiredFluidObjectProvider<T>,\n        types: Required<FluidObjectSymbolProvider<T>>,\n    ) {\n        if (types === undefined) { return; }\n        for (const key of Object.keys(types) as unknown as (keyof TMap)[]) {\n            const provider = this.resolveProvider(key);\n            if (provider === undefined) {\n                throw new Error(`Object attempted to be created without registered required provider ${key}`);\n            }\n            Object.defineProperty(\n                base,\n                key,\n                provider,\n            );\n        }\n    }\n\n    private generateOptional<T>(\n        base: AsyncOptionalFluidObjectProvider<T>,\n        types: FluidObjectSymbolProvider<T>,\n    ) {\n        if (types === undefined) { return; }\n        for (const key of Object.keys(types) as unknown as (keyof TMap)[]) {\n            // back-compat: in 0.56 we allow undefined in the types, but we didn't before\n            // this will keep runtime back compat, eventually we should support undefined properties\n            // rather than properties that return promises that resolve to undefined\n            const provider = this.resolveProvider(key) ?? { get: async () => undefined };\n            Object.defineProperty(\n                base,\n                key,\n                provider,\n            );\n        }\n    }\n\n    private resolveProvider<T extends keyof TMap>(t: T): PropertyDescriptor | undefined {\n        // If we have the provider return it\n        const provider = this.providers.get(t);\n        if (provider === undefined) {\n            for (const parent of this.parents) {\n                // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n                const sp = { [t]: t } as FluidObjectSymbolProvider<Pick<TMap, T>>;\n                const syn = parent.synthesize<Pick<TMap, T>, Record<string, unknown>>(\n                    sp,\n                    {});\n                const descriptor = Object.getOwnPropertyDescriptor(syn, t);\n                if (descriptor !== undefined) {\n                    return descriptor;\n                }\n            }\n            return undefined;\n        }\n\n        // The double nested gets are required for lazy loading the provider resolution\n        if (typeof provider === \"function\") {\n            return {\n                get() {\n                    if (provider && typeof provider === \"function\") {\n                        return Promise.resolve(this[IFluidDependencySynthesizer])\n                            .then(async (fds): Promise<any> => provider(fds))\n                            .then((p) => p?.[t]);\n                    }\n                },\n            };\n        }\n        return {\n                get() {\n                    if (provider) {\n                        return Promise.resolve(provider).then((p) => {\n                            if (p) {\n                                return p[t];\n                            }\n                        });\n                    }\n                },\n            };\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IRequest, IFluidRouter, FluidObject } from \"@fluidframework/core-interfaces\";\nimport {\n    FluidDataStoreRuntime,\n    ISharedObjectRegistry,\n    mixinRequestHandler,\n } from \"@fluidframework/datastore\";\nimport { FluidDataStoreRegistry } from \"@fluidframework/container-runtime\";\nimport {\n    IFluidDataStoreContext,\n    IContainerRuntimeBase,\n    IFluidDataStoreFactory,\n    IFluidDataStoreRegistry,\n    IProvideFluidDataStoreRegistry,\n    NamedFluidDataStoreRegistryEntries,\n    NamedFluidDataStoreRegistryEntry,\n    IFluidDataStoreContextDetached,\n} from \"@fluidframework/runtime-definitions\";\nimport { IContainerRuntime } from \"@fluidframework/container-runtime-definitions\";\nimport { IChannelFactory } from \"@fluidframework/datastore-definitions\";\nimport {\n    FluidObjectSymbolProvider,\n    DependencyContainer,\n    IFluidDependencySynthesizer,\n} from \"@fluidframework/synthesize\";\n\nimport {\n    IDataObjectProps,\n    PureDataObject,\n    DataObjectTypes,\n} from \"../data-objects\";\n/*\n * Useful interface in places where it's useful to do type erasure for PureDataObject generic\n */\nexport interface IRootDataObjectFactory extends IFluidDataStoreFactory {\n    createRootInstance(\n        rootDataStoreId: string,\n        runtime: IContainerRuntime): Promise<IFluidRouter>;\n}\n\n/**\n * Proxy over PureDataObject\n * Does delayed creation & initialization of PureDataObject\n*/\nasync function createDataObject<TObj extends PureDataObject, I extends DataObjectTypes = DataObjectTypes>(\n    ctor: new (props: IDataObjectProps<I>) => TObj,\n    context: IFluidDataStoreContext,\n    sharedObjectRegistry: ISharedObjectRegistry,\n    optionalProviders: FluidObjectSymbolProvider<I[\"OptionalProviders\"]>,\n    runtimeClassArg: typeof FluidDataStoreRuntime,\n    existing: boolean,\n    initProps?: I[\"InitialState\"]) {\n    // base\n    let runtimeClass = runtimeClassArg;\n\n    // request mixin in\n    runtimeClass = mixinRequestHandler(\n        async (request: IRequest, runtimeArg: FluidDataStoreRuntime) =>\n            (await PureDataObject.getDataObject(runtimeArg)).request(request),\n            runtimeClass);\n\n    // Create a new runtime for our data store\n    // The runtime is what Fluid uses to create DDS' and route to your data store\n    const runtime = new runtimeClass(\n        context,\n        sharedObjectRegistry,\n        existing,\n    );\n\n    // Create object right away.\n    // This allows object to register various callbacks with runtime before runtime\n    // becomes globally available. But it's not full initialization - constructor can't\n    // access DDSes or other services of runtime as objects are not fully initialized.\n    // In order to use object, we need to go through full initialization by calling finishInitialization().\n    const scope: FluidObject<IFluidDependencySynthesizer> = context.scope;\n    const dependencyContainer = new DependencyContainer(scope.IFluidDependencySynthesizer);\n    const providers = dependencyContainer.synthesize<I[\"OptionalProviders\"]>(optionalProviders, {});\n    const instance = new ctor({ runtime, context, providers, initProps });\n\n    // if it's a newly created object, we need to wait for it to finish initialization\n    // as that results in creation of DDSes, before it gets attached, providing atomic\n    // guarantee of creation.\n    // WARNING: we can't do the same (yet) for already existing PureDataObject!\n    // This will result in deadlock, as it tries to resolve internal handles, but any\n    // handle resolution goes through root (container runtime), which can't route it back\n    // to this data store, as it's still not initialized and not known to container runtime yet.\n    // In the future, we should address it by using relative paths for handles and be able to resolve\n    // local DDSes while data store is not fully initialized.\n    if (!existing) {\n        await instance.finishInitialization(existing);\n    }\n\n    return { instance, runtime };\n}\n\n/**\n * PureDataObjectFactory is a barebones IFluidDataStoreFactory for use with PureDataObject.\n * Consumers should typically use DataObjectFactory instead unless creating\n * another base data store factory.\n *\n * @typeParam TObj - DataObject (concrete type)\n * @typeParam I - The input types for the DataObject\n */\nexport class PureDataObjectFactory<TObj extends PureDataObject<I>, I extends DataObjectTypes = DataObjectTypes>\n    implements IFluidDataStoreFactory, Partial<IProvideFluidDataStoreRegistry>, IRootDataObjectFactory {\n    private readonly sharedObjectRegistry: ISharedObjectRegistry;\n    private readonly registry: IFluidDataStoreRegistry | undefined;\n\n    constructor(\n        public readonly type: string,\n        private readonly ctor: new (props: IDataObjectProps<I>) => TObj,\n        sharedObjects: readonly IChannelFactory[],\n        private readonly optionalProviders: FluidObjectSymbolProvider<I[\"OptionalProviders\"]>,\n        registryEntries?: NamedFluidDataStoreRegistryEntries,\n        private readonly runtimeClass: typeof FluidDataStoreRuntime = FluidDataStoreRuntime,\n    ) {\n        if (this.type === \"\") {\n            throw new Error(\"undefined type member\");\n        }\n        if (registryEntries !== undefined) {\n            this.registry = new FluidDataStoreRegistry(registryEntries);\n        }\n        this.sharedObjectRegistry = new Map(sharedObjects.map((ext) => [ext.type, ext]));\n    }\n\n    public get IFluidDataStoreFactory() { return this; }\n\n    public get IFluidDataStoreRegistry() {\n        return this.registry;\n    }\n\n    /**\n     * Convenience helper to get the data store's/factory's data store registry entry.\n     * The return type hides the factory's generics, easing grouping of registry\n     * entries that differ only in this way into the same array.\n     * @returns The NamedFluidDataStoreRegistryEntry\n     */\n    public get registryEntry(): NamedFluidDataStoreRegistryEntry {\n        return [this.type, Promise.resolve(this)];\n    }\n\n    /**\n     * This is where we do data store setup.\n     *\n     * @param context - data store context used to load a data store runtime\n     */\n    public async instantiateDataStore(context: IFluidDataStoreContext, existing: boolean) {\n        const { runtime } = await createDataObject(\n            this.ctor,\n            context,\n            this.sharedObjectRegistry,\n            this.optionalProviders,\n            this.runtimeClass,\n            existing);\n\n        return runtime;\n    }\n\n    /**\n     * Creates a new instance of the object. Uses parent context's registry to build package path to this factory.\n     * In other words, registry of context passed in has to contain this factory, with the name that matches\n     * this factory's type.\n     * It is intended to be used by data store objects that create sub-objects.\n     * @param context - The context being used to create the runtime\n     * (the created object will have its own new context created as well)\n     * @param initialState - The initial state to provide to the created data store.\n     * @returns an object created by this factory. Data store and objects created are not attached to container.\n     * They get attached only when a handle to one of them is attached to already attached objects.\n     */\n    public async createChildInstance(\n        parentContext: IFluidDataStoreContext,\n        initialState?: I[\"InitialState\"],\n    ): Promise<TObj> {\n        return this.createNonRootInstanceCore(\n            parentContext.containerRuntime,\n            [...parentContext.packagePath, this.type],\n            initialState);\n    }\n\n    /**\n     * Creates a new instance of the object. Uses peer context's registry and its package path to identify this factory.\n     * In other words, registry of context passed in has to have this factory.\n     * Intended to be used by data store objects that need to create peers (similar) instances of existing objects.\n     * @param context - The component context being used to create the object\n     * (the created object will have its own new context created as well)\n     * @param initialState - The initial state to provide to the created component.\n     * @returns an object created by this factory. Data store and objects created are not attached to container.\n     * They get attached only when a handle to one of them is attached to already attached objects.\n     */\n    public async createPeerInstance(\n        peerContext: IFluidDataStoreContext,\n        initialState?: I[\"InitialState\"],\n    ): Promise<TObj> {\n        return this.createNonRootInstanceCore(\n            peerContext.containerRuntime,\n            peerContext.packagePath,\n            initialState);\n    }\n\n    /**\n     * Creates a new instance of the object. Uses container's registry to find this factory.\n     * It's expected that only container owners would use this functionality, as only such developers\n     * have knowledge of entries in container registry.\n     * The name in this registry for such record should match type of this factory.\n     * @param runtime - container runtime. It's registry is used to create an object.\n     * @param initialState - The initial state to provide to the created component.\n     * @returns an object created by this factory. Data store and objects created are not attached to container.\n     * They get attached only when a handle to one of them is attached to already attached objects.\n     */\n    public async createInstance(\n        runtime: IContainerRuntimeBase,\n        initialState?: I[\"InitialState\"],\n    ): Promise<TObj> {\n        return this.createNonRootInstanceCore(\n            runtime,\n            [this.type],\n            initialState);\n    }\n\n    /**\n     * Creates a new root instance of the object. Uses container's registry to find this factory.\n     * It's expected that only container owners would use this functionality, as only such developers\n     * have knowledge of entries in container registry.\n     * The name in this registry for such record should match type of this factory.\n     * @param runtime - container runtime. It's registry is used to create an object.\n     * @param initialState - The initial state to provide to the created component.\n     * @returns an object created by this factory. Data store and objects created are not attached to container.\n     * They get attached only when a handle to one of them is attached to already attached objects.\n     */\n    public async createRootInstance(\n        rootDataStoreId: string,\n        runtime: IContainerRuntime,\n        initialState?: I[\"InitialState\"],\n    ): Promise<TObj> {\n        const context = runtime.createDetachedRootDataStore([this.type], rootDataStoreId);\n        return this.createInstanceCore(context, initialState);\n    }\n\n    protected async createNonRootInstanceCore(\n        containerRuntime: IContainerRuntimeBase,\n        packagePath: Readonly<string[]>,\n        initialState?: I[\"InitialState\"],\n    ): Promise<TObj> {\n        const context = containerRuntime.createDetachedDataStore(packagePath);\n        return this.createInstanceCore(context, initialState);\n    }\n\n    protected async createInstanceCore(\n        context: IFluidDataStoreContextDetached,\n        initialState?: I[\"InitialState\"],\n    ): Promise<TObj> {\n        const { instance, runtime } = await createDataObject(\n            this.ctor,\n            context,\n            this.sharedObjectRegistry,\n            this.optionalProviders,\n            this.runtimeClass,\n            false, // existing\n            initialState);\n\n        await context.attachRuntime(this, runtime);\n\n        return instance;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    DirectoryFactory,\n    MapFactory,\n    SharedDirectory,\n    SharedMap,\n} from \"@fluidframework/map\";\nimport {\n    NamedFluidDataStoreRegistryEntries,\n} from \"@fluidframework/runtime-definitions\";\nimport { IChannelFactory } from \"@fluidframework/datastore-definitions\";\nimport { FluidObjectSymbolProvider } from \"@fluidframework/synthesize\";\nimport { FluidDataStoreRuntime } from \"@fluidframework/datastore\";\n\nimport { DataObject, DataObjectTypes, IDataObjectProps } from \"../data-objects\";\nimport { PureDataObjectFactory } from \"./pureDataObjectFactory\";\n\n/**\n * DataObjectFactory is the IFluidDataStoreFactory for use with DataObjects.\n * It facilitates DataObject's features (such as its shared directory) by\n * ensuring relevant shared objects etc are available to the factory.\n *\n * @typeParam TObj - DataObject (concrete type)\n * @typeParam I - The input types for the DataObject\n */\nexport class DataObjectFactory<TObj extends DataObject<I>, I extends DataObjectTypes = DataObjectTypes>\n    extends PureDataObjectFactory<TObj, I> {\n    constructor(\n        type: string,\n        ctor: new (props: IDataObjectProps<I>) => TObj,\n        sharedObjects: readonly IChannelFactory[] = [],\n        optionalProviders: FluidObjectSymbolProvider<I[\"OptionalProviders\"]>,\n        registryEntries?: NamedFluidDataStoreRegistryEntries,\n        runtimeFactory: typeof FluidDataStoreRuntime = FluidDataStoreRuntime,\n    ) {\n        const mergedObjects = [...sharedObjects];\n\n        if (!sharedObjects.find((factory) => factory.type === DirectoryFactory.Type)) {\n            // User did not register for directory\n            mergedObjects.push(SharedDirectory.getFactory());\n        }\n\n        // TODO: Remove SharedMap factory when compatibility with SharedMap DataObject is no longer needed in 0.10\n        if (!sharedObjects.find((factory) => factory.type === MapFactory.Type)) {\n            // User did not register for map\n            mergedObjects.push(SharedMap.getFactory());\n        }\n\n        super(\n            type,\n            ctor,\n            mergedObjects,\n            optionalProviders,\n            registryEntries,\n            runtimeFactory,\n        );\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IRequest, IResponse } from \"@fluidframework/core-interfaces\";\nimport { IContainerRuntime } from \"@fluidframework/container-runtime-definitions\";\nimport { RequestParser, create404Response } from \"@fluidframework/runtime-utils\";\nimport { RuntimeRequestHandler } from \"./requestHandlers\";\n\n/**\n  * The RuntimeRequestHandlerBuilder creates a runtime request handler based on request handlers.\n  * The provided handlers sequentially applied until one is able to satisfy the request.\n  */\nexport class RuntimeRequestHandlerBuilder {\n    private readonly handlers: RuntimeRequestHandler[] = [];\n\n    public pushHandler(...handlers: RuntimeRequestHandler[]) {\n        if (handlers !== undefined) {\n            this.handlers.push(...handlers);\n        }\n    }\n\n    public async handleRequest(request: IRequest, runtime: IContainerRuntime): Promise<IResponse> {\n        const parser = RequestParser.create(request);\n        for (const handler of this.handlers) {\n            const response = await handler(parser, runtime);\n            if (response !== undefined) {\n                return response;\n            }\n        }\n        return create404Response(request);\n    }\n}\n\nexport function buildRuntimeRequestHandler(...handlers: RuntimeRequestHandler[]) {\n    const builder = new RuntimeRequestHandlerBuilder();\n    builder.pushHandler(...handlers);\n    return async (request: IRequest, runtime: IContainerRuntime) => builder.handleRequest(request, runtime);\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    IContainerContext,\n    IRuntime,\n    IRuntimeFactory,\n} from \"@fluidframework/container-definitions\";\nimport { IContainerRuntime } from \"@fluidframework/container-runtime-definitions\";\n\nexport abstract class RuntimeFactoryHelper<T = IContainerRuntime> implements IRuntimeFactory {\n    public get IRuntimeFactory() { return this; }\n\n    public async instantiateRuntime(\n        context: IContainerContext,\n        existing?: boolean,\n    ): Promise<IRuntime> {\n        const fromExisting = existing === undefined\n            ? context.existing === true\n            : existing;\n        const runtime = await this.preInitialize(context, fromExisting);\n\n        if (fromExisting) {\n            await this.instantiateFromExisting(runtime);\n        } else {\n            await this.instantiateFirstTime(runtime);\n        }\n\n        await this.hasInitialized(runtime);\n        return runtime;\n    }\n\n    public abstract preInitialize(context: IContainerContext, existing: boolean): Promise<IRuntime & T>;\n    public async instantiateFirstTime(_runtime: T): Promise<void> {}\n    public async instantiateFromExisting(_runtime: T): Promise<void> {}\n    public async hasInitialized(_runtime: T): Promise<void> {}\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IContainerContext } from \"@fluidframework/container-definitions\";\nimport {\n    IContainerRuntimeOptions,\n    FluidDataStoreRegistry,\n    ContainerRuntime,\n} from \"@fluidframework/container-runtime\";\nimport {\n    IContainerRuntime,\n} from \"@fluidframework/container-runtime-definitions\";\nimport {\n    RuntimeRequestHandler,\n    buildRuntimeRequestHandler,\n} from \"@fluidframework/request-handler\";\nimport {\n    IFluidDataStoreRegistry,\n    IProvideFluidDataStoreRegistry,\n    NamedFluidDataStoreRegistryEntries,\n} from \"@fluidframework/runtime-definitions\";\nimport {\n    DependencyContainer,\n    IFluidDependencySynthesizer,\n    IProvideFluidDependencySynthesizer,\n} from \"@fluidframework/synthesize\";\nimport { RuntimeFactoryHelper } from \"@fluidframework/runtime-utils\";\nimport { FluidObject } from \"@fluidframework/core-interfaces\";\n\n/**\n * BaseContainerRuntimeFactory produces container runtimes with a given data store and service registry, as well as\n * given request handlers.  It can be subclassed to implement a first-time initialization procedure for the containers\n * it creates.\n */\nexport class BaseContainerRuntimeFactory\n    extends RuntimeFactoryHelper\n    implements IProvideFluidDataStoreRegistry {\n    public get IFluidDataStoreRegistry() { return this.registry; }\n    private readonly registry: IFluidDataStoreRegistry;\n\n    /**\n     * @param registryEntries - The data store registry for containers produced\n     * @param serviceRegistry - The service registry for containers produced\n     * @param requestHandlers - Request handlers for containers produced\n     * @param runtimeOptions - The runtime options passed to the ContainerRuntime when instantiating it\n     */\n    constructor(\n        private readonly registryEntries: NamedFluidDataStoreRegistryEntries,\n        private readonly dependencyContainer?: IFluidDependencySynthesizer,\n        private readonly requestHandlers: RuntimeRequestHandler[] = [],\n        private readonly runtimeOptions?: IContainerRuntimeOptions,\n    ) {\n        super();\n        this.registry = new FluidDataStoreRegistry(registryEntries);\n    }\n\n    public async instantiateFirstTime(runtime: ContainerRuntime): Promise<void> {\n        await this.containerInitializingFirstTime(runtime);\n        await this.containerHasInitialized(runtime);\n    }\n\n    public async instantiateFromExisting(runtime: ContainerRuntime): Promise<void> {\n        await this.containerHasInitialized(runtime);\n    }\n\n    public async preInitialize(\n        context: IContainerContext,\n        existing: boolean,\n    ): Promise<ContainerRuntime> {\n        const scope: Partial<IProvideFluidDependencySynthesizer> = context.scope;\n        const dc = new DependencyContainer<FluidObject<IContainerRuntime>>(\n            this.dependencyContainer, scope.IFluidDependencySynthesizer);\n        scope.IFluidDependencySynthesizer = dc;\n\n        const runtime: ContainerRuntime = await ContainerRuntime.load(\n            context,\n            this.registryEntries,\n            buildRuntimeRequestHandler(\n                ...this.requestHandlers),\n            this.runtimeOptions,\n            scope,\n            existing,\n        );\n\n        // we register the runtime so developers of providers can use it in the factory pattern.\n        dc.register(IContainerRuntime, runtime);\n\n        return runtime;\n    }\n\n    /**\n     * Subclasses may override containerInitializingFirstTime to perform any setup steps at the time the container\n     * is created. This likely includes creating any initial data stores that are expected to be there at the outset.\n     * @param runtime - The container runtime for the container being initialized\n     */\n    protected async containerInitializingFirstTime(runtime: IContainerRuntime) { }\n\n    /**\n     * Subclasses may override containerHasInitialized to perform any steps after the container has initialized.\n     * This likely includes loading any data stores that are expected to be there at the outset.\n     * @param runtime - The container runtime for the container being initialized\n     */\n    protected async containerHasInitialized(runtime: IContainerRuntime) { }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IChannelFactory } from \"@fluidframework/datastore-definitions\";\nimport { NamedFluidDataStoreRegistryEntry } from \"@fluidframework/runtime-definitions\";\nimport {\n    ContainerSchema,\n    DataObjectClass,\n    LoadableObjectClass,\n    SharedObjectClass,\n} from \"./types\";\n\n/**\n * Runtime check to determine if a class is a DataObject type\n */\nexport const isDataObjectClass = (obj: any): obj is DataObjectClass<any> => {\n    return obj?.factory !== undefined;\n};\n\n/**\n * Runtime check to determine if a class is a SharedObject type\n */\nexport const isSharedObjectClass = (\n    obj: any,\n): obj is SharedObjectClass<any> => {\n    return obj?.getFactory !== undefined;\n};\n\n/**\n * The ContainerSchema consists of initialObjects and dynamicObjectTypes. These types can be\n * of both SharedObject or DataObject. This function seperates the two and returns a registery\n * of DataObject types and an array of SharedObjects.\n */\nexport const parseDataObjectsFromSharedObjects = (\n    schema: ContainerSchema,\n): [NamedFluidDataStoreRegistryEntry[], IChannelFactory[]] => {\n    const registryEntries: Set<NamedFluidDataStoreRegistryEntry> = new Set();\n    const sharedObjects: Set<IChannelFactory> = new Set();\n\n    const tryAddObject = (obj: LoadableObjectClass<any>) => {\n        if (isSharedObjectClass(obj)) {\n            sharedObjects.add(obj.getFactory());\n        } else if (isDataObjectClass(obj)) {\n            registryEntries.add([\n                obj.factory.type,\n                Promise.resolve(obj.factory),\n            ]);\n        } else {\n            throw new Error(`Entry is neither a DataObject or a SharedObject`);\n        }\n    };\n\n    // Add the object types that will be initialized\n    const dedupedObjects = new Set([\n        ...Object.values(schema.initialObjects),\n        ...(schema.dynamicObjectTypes ?? []),\n    ]);\n    dedupedObjects.forEach(tryAddObject);\n\n    if (registryEntries.size === 0 && sharedObjects.size === 0) {\n        throw new Error(\n            \"Container cannot be initialized without any DataTypes\",\n        );\n    }\n\n    return [Array.from(registryEntries), Array.from(sharedObjects)];\n};\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport {\n    BaseContainerRuntimeFactory,\n    DataObject,\n    DataObjectFactory,\n    defaultRouteRequestHandler,\n} from \"@fluidframework/aqueduct\";\nimport { IContainerRuntime } from \"@fluidframework/container-runtime-definitions\";\nimport { IFluidLoadable } from \"@fluidframework/core-interfaces\";\nimport { requestFluidObject } from \"@fluidframework/runtime-utils\";\nimport {\n    ContainerSchema,\n    DataObjectClass,\n    LoadableObjectClass,\n    LoadableObjectClassRecord,\n    LoadableObjectRecord,\n    SharedObjectClass,\n} from \"./types\";\nimport { isDataObjectClass, isSharedObjectClass, parseDataObjectsFromSharedObjects } from \"./utils\";\n\n/**\n * Input props for {@link RootDataObject.initializingFirstTime}\n */\nexport interface RootDataObjectProps {\n    /**\n     * Initial object structure with which the {@link RootDataObject} will be first-time initialized.\n     * See {@link RootDataObject.initializingFirstTime}\n     */\n    initialObjects: LoadableObjectClassRecord;\n}\n\n/**\n * The entry-point/root collaborative object of the Fluid Container.\n * This class abstracts the dynamic code required to build a Fluid Container into a static representation\n * for end customers.\n */\nexport class RootDataObject extends DataObject<{ InitialState: RootDataObjectProps; }> {\n    private readonly initialObjectsDirKey = \"initial-objects-key\";\n    private readonly _initialObjects: LoadableObjectRecord = {};\n\n    private get initialObjectsDir() {\n        const dir = this.root.getSubDirectory(this.initialObjectsDirKey);\n        if (dir === undefined) {\n            throw new Error(\"InitialObjects sub-directory was not initialized\");\n        }\n        return dir;\n    }\n\n    /**\n     * The first time this object is initialized, creates each object identified in\n     * {@link RootDataObjectProps.initialObjects} and stores them as unique values in the root directory.\n     *\n     * See {@link @fluidframework/aqueduct#PureDataObject.initializingFirstTime}\n     */\n    protected async initializingFirstTime(props: RootDataObjectProps) {\n        this.root.createSubDirectory(this.initialObjectsDirKey);\n\n        // Create initial objects provided by the developer\n        const initialObjectsP: Promise<void>[] = [];\n        Object.entries(props.initialObjects).forEach(([id, objectClass]) => {\n            const createObject = async () => {\n                const obj = await this.create(objectClass);\n                this.initialObjectsDir.set(id, obj.handle);\n            };\n            initialObjectsP.push(createObject());\n        });\n\n        await Promise.all(initialObjectsP);\n    }\n\n    /**\n     * Every time an instance is initialized, loads all of the initial objects in the root directory so they can be\n     * accessed immediately.\n     *\n     * See {@link @fluidframework/aqueduct#PureDataObject.hasInitialized}\n     */\n    protected async hasInitialized() {\n        // We will always load the initial objects so they are available to the developer\n        const loadInitialObjectsP: Promise<void>[] = [];\n        for (const [key, value] of Array.from(this.initialObjectsDir.entries())) {\n            const loadDir = async () => {\n                const obj = await value.get();\n                Object.assign(this._initialObjects, { [key]: obj });\n            };\n            loadInitialObjectsP.push(loadDir());\n        }\n\n        await Promise.all(loadInitialObjectsP);\n    }\n\n    /**\n     * Provides a record of the initial objects defined on creation.\n     * See {@link RootDataObject.initializingFirstTime}\n     */\n    public get initialObjects(): LoadableObjectRecord {\n        if (Object.keys(this._initialObjects).length === 0) {\n            throw new Error(\"Initial Objects were not correctly initialized\");\n        }\n        return this._initialObjects;\n    }\n\n    /**\n     * Dynamically creates a new detached collaborative object (DDS/DataObject).\n     * @param objectClass - Type of the collaborative object to be created.\n     */\n    public async create<T extends IFluidLoadable>(\n        objectClass: LoadableObjectClass<T>,\n    ): Promise<T> {\n        if (isDataObjectClass(objectClass)) {\n            return this.createDataObject<T>(objectClass);\n        } else if (isSharedObjectClass(objectClass)) {\n            return this.createSharedObject<T>(objectClass);\n        }\n        throw new Error(\"Could not create new Fluid object because an unknown object was passed\");\n    }\n\n    private async createDataObject<T extends IFluidLoadable>(dataObjectClass: DataObjectClass<T>): Promise<T> {\n        const factory = dataObjectClass.factory;\n        const packagePath = [...this.context.packagePath, factory.type];\n        const router = await this.context.containerRuntime.createDataStore(packagePath);\n        return requestFluidObject<T>(router, \"/\");\n    }\n\n    private createSharedObject<T extends IFluidLoadable>(\n        sharedObjectClass: SharedObjectClass<T>,\n    ): T {\n        const factory = sharedObjectClass.getFactory();\n        const obj = this.runtime.createChannel(undefined, factory.type);\n        return obj as unknown as T;\n    }\n}\n\nconst rootDataStoreId = \"rootDOId\";\n\n/**\n * Container code that provides a single {@link RootDataObject}.  This data object is\n * dynamically customized (registry and initial objects) based on the schema provided to the container runtime factory.\n */\nexport class DOProviderContainerRuntimeFactory extends BaseContainerRuntimeFactory {\n    private readonly rootDataObjectFactory: DataObjectFactory<RootDataObject, {\n        InitialState: RootDataObjectProps;\n    }>;\n\n    private readonly initialObjects: LoadableObjectClassRecord;\n\n    constructor(schema: ContainerSchema) {\n        const [registryEntries, sharedObjects] = parseDataObjectsFromSharedObjects(schema);\n        const rootDataObjectFactory =\n            new DataObjectFactory(\n                \"rootDO\",\n                RootDataObject,\n                sharedObjects,\n                {},\n                registryEntries,\n            );\n        super([rootDataObjectFactory.registryEntry], undefined, [defaultRouteRequestHandler(rootDataStoreId)]);\n        this.rootDataObjectFactory = rootDataObjectFactory;\n        this.initialObjects = schema.initialObjects;\n    }\n\n    /**\n     * {@inheritDoc @fluidframework/aqueduct#BaseContainerRuntimeFactory.containerInitializingFirstTime}\n     */\n    protected async containerInitializingFirstTime(runtime: IContainerRuntime) {\n        // The first time we create the container we create the RootDataObject\n        await this.rootDataObjectFactory.createRootInstance(\n            rootDataStoreId,\n            runtime,\n            { initialObjects: this.initialObjects });\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { assert } from \"@fluidframework/common-utils\";\nimport { ServiceAudience } from \"@fluidframework/fluid-static\";\nimport { IClient } from \"@fluidframework/protocol-definitions\";\nimport { ITinyliciousAudience, TinyliciousMember, TinyliciousUser } from \"./interfaces\";\n\n/**\n * {@inheritDoc ITinyliciousAudience}\n */\nexport class TinyliciousAudience extends ServiceAudience<TinyliciousMember> implements ITinyliciousAudience {\n  /**\n   * @internal\n   */\n  protected createServiceMember(audienceMember: IClient): TinyliciousMember {\n    const tinyliciousUser = audienceMember.user as TinyliciousUser;\n    assert(\n        tinyliciousUser !== undefined && typeof tinyliciousUser.name === \"string\",\n        0x313 /* Specified user was not of type \"TinyliciousUser\". */);\n\n    return {\n      userId: tinyliciousUser.id,\n      userName: tinyliciousUser.name,\n      connections: [],\n    };\n  }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { TypedEventEmitter } from \"@fluidframework/common-utils\";\nimport { IAudience, IContainer } from \"@fluidframework/container-definitions\";\nimport { IClient } from \"@fluidframework/protocol-definitions\";\nimport { IServiceAudience, IServiceAudienceEvents, IMember } from \"./types\";\n\n/**\n * Base class for providing audience information for sessions interacting with FluidContainer\n * This can be extended by different service-specific client packages to additional parameters to\n * the user and client details returned in IMember\n * @typeParam M - A service-specific member type.\n */\nexport abstract class ServiceAudience<M extends IMember = IMember>\n  extends TypedEventEmitter<IServiceAudienceEvents<M>>\n  implements IServiceAudience<M> {\n  /**\n   * Audience object which includes all the existing members of the container.\n   */\n  protected readonly audience: IAudience;\n\n  /**\n   * Retain the most recent member list.  This is so we have more information about a member\n   * leaving the audience in the removeMember event.  It allows us to match the behavior of the\n   * addMember event where it only fires on a change to the members this class exposes (and would\n   * actually produce a change in what getMembers returns).  It also allows us to provide the\n   * client details in the event which makes it easier to find that client connection in a map\n   * keyed on the userId and not clientId.\n   * This map will always be up-to-date in a removeMember event because it is set once at\n   * construction and in every addMember event.\n   * It is mapped clientId to M to be better work with what the IAudience event provides\n   */\n  protected lastMembers: Map<string, M> = new Map();\n\n  constructor(\n    /**\n     * Fluid Container to read the audience from.\n     */\n    protected readonly container: IContainer,\n  ) {\n    super();\n    this.audience = container.audience;\n\n    // getMembers will assign lastMembers so the removeMember event has what it needs\n    // in case it would fire before getMembers otherwise gets called the first time\n    this.getMembers();\n\n    this.audience.on(\"addMember\", (clientId: string, details: IClient) => {\n      if (this.shouldIncludeAsMember(details)) {\n        const member = this.getMember(clientId);\n        this.emit(\"memberAdded\", clientId, member);\n        this.emit(\"membersChanged\");\n      }\n    });\n\n    this.audience.on(\"removeMember\", (clientId: string) => {\n      if (this.lastMembers.has(clientId)) {\n        this.emit(\"memberRemoved\", clientId, this.lastMembers.get(clientId));\n        this.emit(\"membersChanged\");\n      }\n    });\n\n    this.container.on(\"connected\", () => this.emit(\"membersChanged\"));\n  }\n\n  /**\n   * Provides ability for inheriting class to modify/extend the audience object.\n   * @param audienceMember - Record of a specific audience member.\n   */\n  protected abstract createServiceMember(audienceMember: IClient): M;\n\n  /**\n   * {@inheritDoc IServiceAudience.getMembers}\n   */\n  public getMembers(): Map<string, M> {\n    const users = new Map<string, M>();\n    const clientMemberMap = new Map<string, M>();\n    // Iterate through the members and get the user specifics.\n    this.audience.getMembers().forEach((member: IClient, clientId: string) => {\n      if (this.shouldIncludeAsMember(member)) {\n        const userId = member.user.id;\n        // Ensure we're tracking the user\n        let user = users.get(userId);\n        if (user === undefined) {\n          user = this.createServiceMember(member);\n          users.set(userId, user);\n        }\n\n        // Add this connection to their collection\n        user.connections.push({ id: clientId, mode: member.mode });\n        clientMemberMap.set(clientId, user);\n      }\n    });\n    this.lastMembers = clientMemberMap;\n    return users;\n  }\n\n  /**\n   * {@inheritDoc IServiceAudience.getMyself}\n   */\n  public getMyself(): M | undefined {\n    const clientId = this.container.clientId;\n    if (clientId === undefined) {\n      return undefined;\n    }\n    return this.getMember(clientId);\n  }\n\n  private getMember(clientId: string): M | undefined {\n    // Fetch the user ID assoicated with this client ID from the runtime\n    const internalAudienceMember = this.audience.getMember(clientId);\n    if (internalAudienceMember === undefined) {\n      return undefined;\n    }\n    // Return the member object with any other clients associated for this user\n    const allMembers = this.getMembers();\n    const member = allMembers.get(internalAudienceMember?.user.id);\n    if (member === undefined) {\n      throw Error(`Attempted to fetch client ${clientId} that is not part of the current member list`);\n    }\n    return member;\n  }\n\n  /**\n   * Provides ability for the inheriting class to include/omit specific members.\n   * An example use case is omitting the summarizer client.\n   * @param member - Member to be included/omitted.\n   */\n  protected shouldIncludeAsMember(member: IClient): boolean {\n    // Include only human members\n    return member.details.capabilities.interactive;\n  }\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { Loader } from \"@fluidframework/container-loader\";\nimport {\n    IDocumentServiceFactory,\n    IUrlResolver,\n} from \"@fluidframework/driver-definitions\";\nimport {\n    AttachState,\n    IContainer,\n    IFluidModuleWithDetails,\n} from \"@fluidframework/container-definitions\";\nimport { RouterliciousDocumentServiceFactory } from \"@fluidframework/routerlicious-driver\";\nimport {\n    createTinyliciousCreateNewRequest,\n    InsecureTinyliciousTokenProvider,\n    InsecureTinyliciousUrlResolver,\n} from \"@fluidframework/tinylicious-driver\";\nimport { requestFluidObject } from \"@fluidframework/runtime-utils\";\nimport { ensureFluidResolvedUrl } from \"@fluidframework/driver-utils\";\nimport {\n    ContainerSchema,\n    DOProviderContainerRuntimeFactory,\n    FluidContainer,\n    IFluidContainer,\n    RootDataObject,\n} from \"@fluidframework/fluid-static\";\nimport {\n    TinyliciousClientProps,\n    TinyliciousContainerServices,\n} from \"./interfaces\";\nimport { TinyliciousAudience } from \"./TinyliciousAudience\";\n\n/**\n * Provides the ability to have a Fluid object backed by a Tinylicious service.\n *\n * See {@link https://fluidframework.com/docs/testing/tinylicious/}\n */\nexport class TinyliciousClient {\n    private readonly documentServiceFactory: IDocumentServiceFactory;\n    private readonly urlResolver: IUrlResolver;\n\n    /**\n     * Creates a new client instance using configuration parameters.\n     * @param props - Optional. Properties for initializing a new TinyliciousClient instance\n     */\n    constructor(private readonly props?: TinyliciousClientProps) {\n        const tokenProvider = new InsecureTinyliciousTokenProvider();\n        this.urlResolver = new InsecureTinyliciousUrlResolver(\n            this.props?.connection?.port,\n            this.props?.connection?.domain,\n        );\n        this.documentServiceFactory = new RouterliciousDocumentServiceFactory(\n            tokenProvider,\n        );\n    }\n\n    /**\n     * Creates a new detached container instance in Tinylicious server.\n     * @param containerSchema - Container schema for the new container.\n     * @returns New detached container instance along with associated services.\n     */\n    public async createContainer(\n        containerSchema: ContainerSchema,\n    ): Promise<{ container: IFluidContainer; services: TinyliciousContainerServices; }> {\n        const loader = this.createLoader(containerSchema);\n\n        // We're not actually using the code proposal (our code loader always loads the same module\n        // regardless of the proposal), but the Container will only give us a NullRuntime if there's\n        // no proposal.  So we'll use a fake proposal.\n        const container = await loader.createDetachedContainer({\n            package: \"no-dynamic-package\",\n            config: {},\n        });\n\n        const rootDataObject = await requestFluidObject<RootDataObject>(container, \"/\");\n\n        const fluidContainer = new (class extends FluidContainer {\n            async attach() {\n                if (this.attachState !== AttachState.Detached) {\n                    throw new Error(\"Cannot attach container. Container is not in detached state\");\n                }\n                const request = createTinyliciousCreateNewRequest();\n                await container.attach(request);\n                const resolved = container.resolvedUrl;\n                ensureFluidResolvedUrl(resolved);\n                return resolved.id;\n            }\n        })(container, rootDataObject);\n\n        const services = this.getContainerServices(container);\n        return { container: fluidContainer, services };\n    }\n\n    /**\n     * Accesses the existing container given its unique ID in the tinylicious server.\n     * @param id - Unique ID of the container.\n     * @param containerSchema - Container schema used to access data objects in the container.\n     * @returns Existing container instance along with associated services.\n     */\n    public async getContainer(\n        id: string,\n        containerSchema: ContainerSchema,\n    ): Promise<{ container: IFluidContainer; services: TinyliciousContainerServices; }> {\n        const loader = this.createLoader(containerSchema);\n        const container = await loader.resolve({ url: id });\n        const rootDataObject = await requestFluidObject<RootDataObject>(container, \"/\");\n        const fluidContainer = new FluidContainer(container, rootDataObject);\n        const services = this.getContainerServices(container);\n        return { container: fluidContainer, services };\n    }\n\n    // #region private\n    private getContainerServices(\n        container: IContainer,\n    ): TinyliciousContainerServices {\n        return {\n            audience: new TinyliciousAudience(container),\n        };\n    }\n\n    private createLoader(containerSchema: ContainerSchema) {\n        const containerRuntimeFactory = new DOProviderContainerRuntimeFactory(\n            containerSchema,\n        );\n        const load = async (): Promise<IFluidModuleWithDetails> => {\n            return {\n                module: { fluidExport: containerRuntimeFactory },\n                details: { package: \"no-dynamic-package\", config: {} },\n            };\n        };\n\n        const codeLoader = { load };\n        const loader = new Loader({\n            urlResolver: this.urlResolver,\n            documentServiceFactory: this.documentServiceFactory,\n            codeLoader,\n            logger: this.props?.logger,\n        });\n        return loader;\n    }\n    // #endregion\n}\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 841.9 595.3\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#61DAFB\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 420.9,\n    cy: 296.5,\n    r: 45.7\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M520.5 78.1z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.6ce24c58023cc2f8fd88fe9d219db6c6.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport { TinyliciousClient } from \"@fluidframework/tinylicious-client\";\nimport { SharedMap } from \"fluid-framework\";\nimport logo from './logo.svg';\nimport './App.css';\n\nconst clientProps = { connection: { port: 7070 } };\nconst client = new TinyliciousClient(clientProps);\n\nconst containerSchema = {\n  initialObjects: { myMap: SharedMap }  \n}; \n\nconst timeKey = \"time-key\";\nconst nameKey = \"name-key\";\n\n\nfunction App() {\n\n  const getMyMap = async () => {\n    let container;\n    if (window.location.hash <= 1) {\n        ({ container } = await client.createContainer(containerSchema));\n        container.initialObjects.myMap.set(timeKey, Date.now().toString());\n        const id = await container.attach();\n        window.location.hash = id;\n    } else {\n        const id = window.location.hash.substring(1);\n        ({ container } = await client.getContainer(id, containerSchema));\n    }\n    return container.initialObjects.myMap;\n  }\n  \n  // Add to the top of our App\n  const [fluidMap, setFluidMap] = React.useState(undefined);\n  \n  React.useEffect(() => {\n      getMyMap().then(myMap => setFluidMap(myMap));\n  }, []);\n  \n  // Add below the previous useEffect\n  const [viewData, setViewData] = React.useState(undefined);\n  const [name, setName] = React.useState(undefined);\n  \n\n  React.useEffect(() => {\n    if (fluidMap !== undefined) {\n        // sync Fluid data into view state\n        const syncView = () => setViewData({ time: fluidMap.get(timeKey) });\n        // ensure sync runs at least once\n        syncView();\n        // update state each time our map changes\n        fluidMap.on(\"valueChanged\", syncView);\n        // turn off listener when component is unmounted\n        return () => { fluidMap.off(\"valueChanged\", syncView) }\n    }\n}, [fluidMap])  \n\nReact.useEffect(() => {\n  if (fluidMap !== undefined) {\n      // sync Fluid data into view state\n      const syncName = () => setName({ text: fluidMap.get(nameKey) });\n      // ensure sync runs at least once\n      syncName();\n      // update state each time our map changes\n      fluidMap.on(\"valueChanged\", syncName);\n      // turn off listener when component is unmounted\n      return () => { fluidMap.off(\"valueChanged\", syncName) }\n  }\n}, [fluidMap])\n\n  \n\n    // update the App return\n    if (!viewData) return <div />;\n\n    // business logic could be passed into the view via context\n    const setTime = () => fluidMap.set(timeKey, Date.now().toString());\n    \n    const setAName = () => fluidMap.set(nameKey, Date.now().toString());\n\n    return (\n        <div>\n            Updated HERE\n            <button onClick={setTime}> click </button>\n            <span>{viewData.time}</span>\n            <button onClick={setAName}> click Name</button>\n            <span>NAME:{name.text}</span>\n        </div>\n    ) \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["exports","__exportStar","FlushMode","NotVisible","LocallyVisible","GloballyVisible","CreateSummarizerNodeSource","self","window","undefined","AbortController","AbortSignal","module","utils","require","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","transitionalDefaults","Cancel","config","Promise","resolve","reject","onCanceled","requestData","data","requestHeaders","headers","responseType","done","cancelToken","unsubscribe","signal","removeEventListener","isFormData","request","XMLHttpRequest","auth","username","password","unescape","encodeURIComponent","Authorization","btoa","fullPath","baseURL","url","onloadend","responseHeaders","getAllResponseHeaders","response","responseText","status","statusText","value","err","open","method","toUpperCase","params","paramsSerializer","timeout","onreadystatechange","readyState","responseURL","indexOf","setTimeout","onabort","onerror","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","forEach","val","key","toLowerCase","setRequestHeader","isUndefined","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","type","abort","subscribe","aborted","send","bind","Axios","mergeConfig","axios","createInstance","defaultConfig","context","instance","prototype","extend","create","instanceConfig","CancelToken","isCancel","VERSION","all","promises","spread","isAxiosError","message","this","toString","__CANCEL__","executor","TypeError","resolvePromise","promise","token","then","_listeners","i","l","length","onfulfilled","_resolve","reason","throwIfRequested","listener","push","index","splice","source","c","InterceptorManager","dispatchRequest","validator","validators","defaults","interceptors","configOrUrl","assertOptions","silentJSONParsing","boolean","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","chain","Array","apply","concat","shift","newConfig","onFulfilled","onRejected","error","getUri","replace","handlers","use","options","eject","id","fn","h","isAbsoluteURL","combineURLs","requestedURL","enhanceError","code","Error","transformData","throwIfCancellationRequested","call","transformRequest","merge","common","adapter","transformResponse","toJSON","name","description","number","fileName","lineNumber","columnNumber","stack","config1","config2","getMergedValue","target","isPlainObject","isArray","slice","mergeDeepProperties","prop","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","Object","keys","configValue","validateStatus","fns","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","getDefaultAdapter","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","rawValue","parser","encoder","isString","JSON","parse","trim","e","stringify","stringifySafely","strictJSONParsing","maxContentLength","maxBodyLength","thisArg","args","arguments","encode","serializedParams","parts","v","isDate","toISOString","join","hashmarkIndex","relativeURL","write","expires","path","domain","secure","cookie","isNumber","Date","toGMTString","document","match","RegExp","decodeURIComponent","remove","now","test","payload","originURL","msie","navigator","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","location","requestURL","parsed","normalizedName","ignoreDuplicateOf","split","line","substr","callback","arr","thing","deprecatedWarnings","version","formatMessage","opt","desc","opts","console","warn","schema","allowUnknown","result","getPrototypeOf","isFunction","obj","hasOwnProperty","constructor","ArrayBuffer","isView","pipe","product","assignValue","a","b","str","stripBOM","content","charCodeAt","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","Arr","_byteLength","curByte","len","revLookup","fromByteArray","uint8","extraBytes","maxChunkLength","len2","encodeChunk","lookup","Uint8Array","start","end","num","output","global","__self__","F","fetch","DOMException","support","Symbol","Blob","viewClasses","normalizeName","String","normalizeValue","iteratorFor","items","iterator","next","Headers","map","append","header","getOwnPropertyNames","consumed","body","bodyUsed","fileReaderReady","reader","onload","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","bufferClone","buf","view","set","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","arrayBuffer","text","readAsText","readBlobAsText","chars","fromCharCode","readArrayBufferAsText","formData","decode","json","oldValue","has","values","entries","methods","Request","input","credentials","mode","upcased","normalizeMethod","referrer","form","bytes","rawHeaders","Response","bodyInit","ok","clone","redirectStatuses","redirect","RangeError","init","xhr","abortXhr","polyfill","defineProperty","ponyfill","ctx","formatArgs","useColors","namespace","humanize","diff","color","lastC","save","namespaces","storage","setItem","removeItem","load","r","getItem","DEBUG","__nwjs","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","$1","localStorage","localstorage","destroy","warned","colors","log","debug","formatters","j","env","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","enabled","curr","Number","ms","prev","coerce","format","formatter","logFn","selectColor","enumerable","configurable","delimiter","newDebug","toNamespace","regexp","substring","default","disable","names","skips","enable","Math","abs","Deque","capacity","_capacity","getCapacity","_length","_front","toArray","ret","front","item","argsLength","_checkCapacity","pop","peekBack","peekFront","isEmpty","clear","valueOf","removeFront","removeBack","insertFront","insertBack","enqueue","dequeue","size","_resizeTo","oldCapacity","src","srcIndex","dst","dstIndex","arrayMove","n","min","max","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","Function","ownKeys","getOwnPropertySymbols","NumberIsNaN","isNaN","EventEmitter","once","emitter","errorListener","removeListener","resolver","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","_getMaxListeners","that","_addListener","prepend","m","events","existing","warning","newListener","emit","w","count","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","copy","wrapListener","arg","setMaxListeners","getMaxListeners","doError","er","listeners","addListener","prependListener","prependOnceListener","list","position","originalListener","spliceOne","off","removeAllListeners","rawListeners","eventNames","serializer","replacer","cycleReplacer","thisPos","Infinity","spaces","getSerialize","CryptoJS","g","lib","Base","p","o","mixIn","$super","WordArray","words","sigBytes","t","q","s","clamp","ceil","random","enc","Hex","d","Latin1","Utf8","escape","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","_process","x","blockSize","u","_minBufferSize","_doProcessBlock","k","Hasher","cfg","_doReset","update","finalize","_doFinalize","_createHelper","_createHmacHelper","HMAC","algo","f","x64","Word","high","low","toX32","Cipher","Base64","EvpKDF","createEncryptor","_ENC_XFORM_MODE","createDecryptor","_DEC_XFORM_MODE","_xformMode","_key","keySize","ivSize","encrypt","decrypt","StreamCipher","_iv","_prevBlock","BlockCipherMode","Encryptor","Decryptor","_cipher","processBlock","encryptBlock","decryptBlock","CBC","pad","Pkcs7","unpad","BlockCipher","padding","iv","_mode","CipherParams","OpenSSL","ciphertext","salt","SerializableCipher","algorithm","_parse","kdf","execute","compute","PasswordBasedCipher","y","z","A","B","C","D","E","AES","_nRounds","_keySchedule","_invKeySchedule","_doCryptBlock","_lBlock","_rBlock","DES","_subKeys","_invSubKeys","TripleDES","_des1","_des2","_des3","_map","sin","MD5","_hash","floor","HmacMD5","SHA1","HmacSHA1","sqrt","pow","SHA256","HmacSHA256","SHA224","HmacSHA224","T","ea","SHA512","G","H","I","J","X","K","Y","L","Z","M","$","N","aa","O","ba","P","ca","Q","U","S","V","W","fa","da","HmacSHA512","SHA384","HmacSHA384","RIPEMD160","HmacRIPEMD160","_hasher","_oKey","_iKey","PBKDF2","hasher","iterations","dbits","b64map","hex2b64","b64tohex","int2char","b64toBA","BigInteger","fromNumber","fromString","nbi","appName","am","DB","DM","DV","FV","F1","F2","rr","vv","BI_RC","intAt","nbv","fromInt","nbits","Classic","Montgomery","mp","invDigit","mpl","mph","um","mt2","op_and","op_or","op_xor","op_andnot","lbit","cbit","NullExp","nNop","Barrett","r2","q3","ONE","dlShiftTo","mu","divide","convert","compareTo","mod","revert","reduce","divRemTo","mulTo","multiplyTo","sqrTo","squareTo","ZERO","subTo","copyTo","drShiftTo","fromRadix","lShiftTo","rShiftTo","isEven","exp","negate","toRadix","bitLength","modPowInt","multiplyUpperTo","multiplyLowerTo","dAddOffset","lowprimes","lplim","Arcfour","chunkSize","LN2","signum","intValue","dMultiply","testBit","bitwiseTo","shiftLeft","isProbablePrime","nextBytes","changeBit","addTo","modInt","millerRabin","subtract","getLowestSetBit","shiftRight","modPow","byteValue","shortValue","equals","and","or","xor","andNot","not","bitCount","setBit","clearBit","flipBit","add","multiply","remainder","divideAndRemainder","modInverse","gcd","square","rng_state","rng_pool","rng_pptr","rng_seed_time","getTime","crypto","msCrypto","getRandomValues","ua","appVersion","rng_get_byte","SecureRandom","parseBigInt","oaep_mgf1_arr","RSAKey","dmp1","dmq1","coeff","oaep_mgf1_str","ECFieldElementFp","ECPointFp","curve","zinv","ECCurveFp","fromBigInteger","infinity","doPublic","setPublic","isPublic","isPrivate","pkcs1pad2","encryptOAEP","KJUR","MessageDigest","Util","getCanonicalAlgName","getHashLength","hextorstr","hashHex","rstrtohex","oaep_pad","doPrivate","setPrivate","setPrivateEx","generate","pkcs1unpad2","decryptOAEP","lastIndexOf","oaep_unpad","toBigInteger","getX","getY","isInfinity","twice","getInfinity","multiplyTwo","getQ","getA","getB","decodePointHex","getByteLength","getEncoded","toByteArrayUnsigned","decodeFrom","decodeFromHex","add2D","twice2D","multiply2D","isOnCurve","validate","jsonParse","asn1","ASN1Util","integerToByteHex","bigIntToMinTwosComplementsHex","getPEMStringFromHex","hextopem","newObject","ASN1Object","DERBoolean","DERInteger","DERBitString","DEROctetString","DERNull","DERObjectIdentifier","DEREnumerated","DERUTF8String","DERNumericString","DERPrintableString","DERTeletexString","DERIA5String","DERUTCTime","DERGeneralizedTime","DERVisibleString","DERBMPString","DERSequence","DERSet","DERTaggedObject","array","tag","explicit","jsonToASN1HEX","tohex","oidHexToInt","oidIntToHex","getLengthHexFromValue","hV","hTLV","isModified","getFreshValueHex","hL","hT","getEncodedHex","getValueHex","setByParam","tlv","DERAbstractString","superclass","getString","setString","utf8tohex","setStringHex","hex","extendClass","DERAbstractTime","localDateToUTC","getTimezoneOffset","formatDate","zeroPadding","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setByDate","date","setByDateValue","UTC","DERAbstractStructured","setByASN1ObjectArray","asn1Array","appendASN1Object","setByBigInteger","setByInteger","setValueHex","bigint","setHexValueIncludingUnusedBits","setUnusedBitsAndHexValue","setByBinaryString","setByBooleanArray","newFalseArray","bin","setValueOidString","oidtohex","setValueName","x509","OID","name2oid","setValueNameOrOid","oid","stohex","millis","sortFlag","sort","sortflag","ASN1HEX","getV","isASN1HEX","isExplicit","asn1Object","setASN1Object","tage","tagi","utf8tob64u","b64utoutf8","stoBA","BAtos","BAtohex","b64tob64u","b64utob64","hextob64u","b64utohex","uricmptohex","encodeURIComponentAll","hextoutf8","hextouricmp","iso88591hextoutf8","iso88591hextoutf8hex","hextob64","hextob64nl","b64nltohex","pemtohex","zulutomsec","zulutosec","round","ipv6tohex","repeat","hextoipv6","hextoip","ipprefixlen","iptohex","ipnetmask","ucs2hextoutf8","ishex","isBase64URLDot","hextoposhex","getLblen","getL","getVblen","getVidx","getTLV","getTLVblen","getNextSiblingIdx","getChildIdx","getNthChildIdx","getIdxbyList","getIdxbyListEx","isContextTag","getTLVbyList","getTLVbyListEx","getVbyList","getVbyListEx","getInt","bitstrtoint","getOID","hextooid","getOIDName","oid2name","hextooidstr","dump","ommit_long_octet","oidname","x509ExtName","bool","bitstr","bitstrtobinstr","octstr","checkStrictDER","lang","isHex","Certificate","TBSCertificate","AlgorithmIdentifier","sign","sigalg","tbsobj","Signature","alg","cakey","updateHex","sighex","getPEM","Time","X500Name","Extensions","SubjectPublicKeyInfo","serial","issuer","notbefore","notafter","subject","KEYUTIL","getKey","sbjpubkey","ext","aParam","extname","extn","PrivateExtension","SubjectKeyIdentifier","KeyUsage","SubjectAltName","IssuerAltName","BasicConstraints","NameConstraints","CRLDistributionPoints","CertificatePolicies","AuthorityKeyIdentifier","ExtKeyUsage","AuthorityInfoAccess","CRLNumber","CRLReason","OCSPNonce","OCSPNoCheck","AdobeTimeStamp","SubjectDirectoryAttributes","Extension","getExtnValueHex","critical","digitalSignature","nonRepudiation","keyEncipherment","dataEncipherment","keyAgreement","keyCertSign","cRLSign","encipherOnly","decipherOnly","getBinValue","asn1ExtnValue","namearraytobinstr","cA","pathLen","setByDPArray","DistributionPoint","setByOneURI","fulluri","uri","DistributionPointName","asn1DP","dpobj","dpname","full","asn1Obj","asn1V","GeneralNames","PolicyInformation","PolicyQualifierInfo","policyoid","UserNotice","cps","unotice","DisplayText","NoticeReference","noticeref","exptext","org","noticenum","GeneralSubtree","permit","seq","exclude","GeneralName","setPurposeArray","isKey","asn1KID","asn1CertIssuer","asn1CertSN","dn","setKIDByParam","getKeyID","setCertIssuerByParam","ldapstr","certsubject","certissuer","setCertSNByParam","X509","readCertPEM","getSerialNumberHex","kid","sn","issuersn","setAccessDescriptionArray","ocsp","caissuer","setNameArray","utf8str","attr","gentime","prnstr","CRL","TBSCertList","getRevCertSequence","revcert","thisupdate","nextupdate","CRLEntry","setCertSerial","setRevocationDate","time","TLV","reqauth","paramArray","sRule","RDN","setByString","rule","setByLdapString","ldapToCompat","setByObject","getIssuerHex","getSubjectHex","compatToLDAP","reverse","onelineToLDAP","ldapToOneline","AttributeTypeAndValue","addByMultiValuedString","addByString","parseString","sType","sValue","dsType","isMail","isPrintable","ds","attrTypeAndValueStr","setByAttrTypeAndValueStr","_getDsType","getValueObj","atype2obj","ECDSA","DSA","getASN1Object","asn1AlgId","asn1SubjPKey","setPubKey","curveName","asn1params","pubKeyHex","setTimeParams","timeParams","getType","Time_bak","nameAlg","asn1Alg","asn1Params","paramEmpty","PSSNAME2ASN1TLV","name2obj","paramempty","SHAwithRSAandMGF1","SHA256withRSAandMGF1","SHA384withRSAandMGF1","SHA512withRSAandMGF1","OtherName","other","rfc822","dns","ldapdn","certsubj","ip","setByParamArray","name2oidList","sha1","sha256","sha384","sha512","sha224","md5","md2","ripemd160","MD2withRSA","MD4withRSA","MD5withRSA","SHA1withRSA","rsaPSS","SHA224withRSA","SHA256withRSA","SHA384withRSA","SHA512withRSA","SHA1withECDSA","SHA224withECDSA","SHA256withECDSA","SHA384withECDSA","SHA512withECDSA","dsa","SHA1withDSA","SHA224withDSA","SHA256withDSA","rsaEncryption","commonName","countryName","localityName","stateOrProvinceName","streetAddress","organizationName","organizationalUnitName","domainComponent","userId","surname","givenName","title","distinguishedName","emailAddress","businessCategory","postalCode","uniqueIdentifier","organizationIdentifier","jurisdictionOfIncorporationL","jurisdictionOfIncorporationSP","jurisdictionOfIncorporationC","subjectDirectoryAttributes","subjectKeyIdentifier","keyUsage","subjectAltName","issuerAltName","basicConstraints","cRLNumber","cRLReason","nameConstraints","cRLDistributionPoints","certificatePolicies","anyPolicy","authorityKeyIdentifier","policyConstraints","extKeyUsage","authorityInfoAccess","ocspBasic","ocspNonce","ocspNoCheck","caIssuers","anyExtendedKeyUsage","serverAuth","clientAuth","codeSigning","emailProtection","timeStamping","ocspSigning","dateOfBirth","placeOfBirth","gender","countryOfCitizenship","countryOfResidence","ecPublicKey","secp256r1","secp256k1","secp384r1","secp521r1","pkcs5PBES2","pkcs5PBKDF2","tstinfo","signingCertificate","timeStampToken","signaturePolicyIdentifier","etsArchiveTimeStamp","signingCertificateV2","etsArchiveTimeStampV2","extensionRequest","contentType","messageDigest","signingTime","counterSignature","archiveTimeStampV3","pdfRevocationInfoArchival","adobeTimeStamp","atype2oidList","CN","ST","OU","STREET","DC","UID","SN","DN","serialNumber","objCache","registerOIDs","checkOIDs","oid2atype","X509Util","newCertPEM","cms","Attribute","typeOid","getValueArray","ContentType","SigningTime","SigningCertificate","ESSCertID","hasis","cert","IssuerSerial","getCertHash","SigningCertificateV2","ESSCertIDv2","getIssuer","SignerIdentifier","IssuerAndSerialNumber","IssuerAndSerialName","skid","getExtSubjectKeyIdentifier","AttributeList","cades","SignaturePolicyIdentifier","SignatureTimeStamp","SignerInfo","EncapsulatedContentInfo","SignedData","sattrs","signkey","hashalg","sigalgfield","uattrs","isDetached","ContentInfo","CertificateSet","RevocationInfoChoices","checkAndFixParam","_setDigestAlgs","_setContentTypeByEContent","_setMessageDigestByEContent","_setSignerInfoVersion","_setSignedDataVersion","sinfos","hashalgs","econtent","_getAttrParamByName","_getSignedDataVersion","revinfos","getEncodedHexPrepare","fixed","certs","getContentInfo","getContentInfoEncodedHex","RevocationInfoChoice","crl","OtherRevocationFormat","CMSUtil","newSignedData","verifySignedData","idx","signerid_issuer1","signerid_serial1","idxSignedAttrs","sigval","signedAttrIdxList","saSigningTime","saMessageDigest","verifyDetail","validMessageDigest","certsIdx","certkeys","readCertHex","getPublicKey","cccc","cccci","certkey_idx","validSignatureValue","signedattrshex","verify","validSignatureValue_isValid","isValid","cmsType","revinfosIdx","signerinfosIdx","signerInfos","signerInfoIdxList","CMSParser","getCMSSignedData","getSignedData","getHashAlgArray","getEContent","getCertificateSet","getSignerInfos","getAlgorithmIdentifierName","getSignerInfo","getIssuerAndSerialNumber","getAttributeList","getSignerIdentifier","getX500Name","getAttribute","valhex","setContentType","setMessageDigest","setSigningTime","setSigningCertificate","setSigningCertificateV2","setSignaturePolicyIdentifier","getESSCertID","polhex","getESSCertIDv2","getIssuerSerial","getGeneralNames","tsp","TimeStampToken","TSTInfo","MessageImprint","Accuracy","dVersion","dPolicy","dMessageImprint","dSerial","dGenTime","dAccuracy","dOrdering","dNonce","dTsa","policy","messageImprint","genTime","accuracy","ordering","nonce","tsa","seconds","micros","TimeStampReq","certreq","TimeStampResp","PKIStatusInfo","tst","statusinfo","PKIStatus","PKIFreeText","PKIFailureInfo","statusstr","failinfo","granted","grantedWithMods","rejection","waiting","revocationWarning","revocationNotification","badAlg","badRequest","badDataFormat","timeNotAvailable","unacceptedPolicy","unacceptedExtension","addInfoNotAvailable","systemFailure","AbstractTSAAdapter","getTSTHex","SimpleTSAAdapter","FixedTSAAdapter","TSPUtil","newTimeStampToken","parseTimeStampReq","TSPParser","getTimeStampReq","parseMessageImprint","getMessageImprint","getResponse","getPKIStatusInfo","getToken","setTSTInfo","getTSTInfo","getAccuracy","pGeneralNames","getExtParamArray","getPKIFreeText","getPKIFailureInfo","SignaturePolicyId","OtherHashAlgAndValue","OtherHashValue","res","CompleteCertificateRefs","OtherCertID","_isHex","OtherHash","CAdESUtil","parseSignedDataForAddingUnsigned","parseSignerInfoForAddingUnsigned","si","digalg","sig","dCMSVersion","dSignerIdentifier","dDigestAlgorithm","dSignedAttrs","dSigAlg","dSig","dUnsignedAttrs","csr","CertificationRequest","CertificationRequestInfo","sbjprvkey","extreq","explict","CSRUtil","newCSRPEM","getParam","tbs","verifySignature","alert","DEFAULT_HASH","OCSPResponse","ResponseBytes","_getStatusCode","resstatus","BasicOCSPResponse","restype","ResponderID","_SingleResponseList","SingleResponseList","_ResponseData","ResponseData","tbsresp","reskey","respid","prodat","getSubject","SingleResponse","CertID","CertStatus","certid","setByValue","issname","isskey","sbjsn","setByCert","issuerCert","subjectCert","getParamByCerts","getPublicKeyHex","dReqCert","dExt","TBSRequest","dRequestorName","dRequestList","dRequestExt","setRequestListByParam","reqList","OCSPRequest","dTbsRequest","dOptionalSignature","OCSPUtil","getRequestHex","getOCSPResponseInfo","responseStatus","certStatus","revocationTime","thisUpdate","nextUpdate","OCSPParser","getOCSPRequest","getTBSRequest","getRequestList","getRequest","getCertID","getOCSPResponse","getResponseBytes","getBasicOCSPResponse","getResponseData","getResponderID","getSingleResponseList","getSingleResponse","getCertStatus","Buffer","from","isInteger","isBase64","isBase64URL","isIntegerArray","isIA5","strpad","NaN","inttobitstr","DIGESTINFOHEAD","DEFAULTPROVIDER","hmacmd5","hmacsha1","hmacsha224","hmacsha256","hmacsha384","hmacsha512","hmacripemd160","RIPEMD160withRSA","MD5withECDSA","RIPEMD160withECDSA","MD5withRSAandMGF1","SHA1withRSAandMGF1","SHA224withRSAandMGF1","RIPEMD160withRSAandMGF1","CRYPTOJSMESSAGEDIGESTNAME","getDigestInfoHex","getPaddedDigestInfoHex","hashString","digestString","digestHex","sha256Hex","sha512Hex","prov","SECURERANDOMGEN","getRandomHexOfNbytes","getRandomBigIntegerOfNbytes","getRandomHexOfNbits","getRandomBigIntegerOfNbits","getRandomBigIntegerZeroToMax","getRandomBigIntegerMinToMax","setAlgAndProvider","md","updateString","digest","sjcl","codec","toBits","fromBits","algName","provName","HASHLENGTH","Mac","algProv","mac","pass","doFinal","doFinalString","doFinalHex","setPassword","utf8","rstr","b64u","_setAlgNames","mdAlgName","pubkeyAlgName","_zeroPaddingOfSignature","prvKey","pubKey","sHashHex","ecprvhex","eccurvename","prv","hSign","signWithMessageHashPSS","pssSaltLen","signWithMessageHash","signString","signHex","ecpubhex","pub","verifyWithMessageHashPSS","verifyWithMessageHash","algProvName","initParams","psssaltlen","prvkeypem","prvkeypas","getAlgByKeyAndName","oidhex2name","ECParameterDB","getName","getBigRandom","setNamedCurve","ecparams","getByName","prvKeyHex","setPrivateKeyHex","setPublicKeyHex","getPublicKeyXYHex","keycharlen","getShortNISTPCurveName","generateKeyPairHex","generatePublicKeyHex","biRSSigToASN1Sig","fromByteArrayUnsigned","serializeSig","verifyHex","parseSigHex","verifyRaw","Bitcoin","parseSig","toByteArraySigned","parseSigCompact","readPKCS5PrvKeyHex","readPKCS8PrvKeyHex","readPKCS8PubKeyHex","readCertPubKeyHex","parseSigHexInHexRS","asn1SigToConcatSig","concatSigToASN1Sig","hexRSSigToASN1Sig","regist","setPrivateHex","setPublicHex","parseASN1Signature","proc","eproc","keylen","ivlen","cipher","ivsalt","keyhex","ivhex","parsePKCS5PEM","getKeyAndUnusedIvByPasscodeAndIvsalt","decryptKeyB64","getDecryptedKeyHex","getEncryptedPKCS5PEMFromPrvKeyHex","parseHexOfEncryptedPKCS8","encryptionSchemeAlg","encryptionSchemeIV","pbkdf2Salt","pbkdf2Iter","getPBKDF2KeyHexFromParam","_getPlainPKCS8HexFromEncryptedPKCS8PEM","getKeyFromEncryptedPKCS8PEM","getKeyFromPlainPrivatePKCS8Hex","parsePlainPrivatePKCS8Hex","algoid","algparam","keyidx","getKeyFromPlainPrivatePKCS8PEM","_getKeyFromPublicPKCS8Hex","parsePublicRawRSAKeyHex","parsePublicPKCS8Hex","xy","kty","dp","dq","co","qi","crv","getPublicKeyFromCertHex","getPublicKeyFromCertPEM","generateKeypair","prvKeyObj","pubKeyObj","getKeyFromCSRPEM","getKeyFromCSRHex","parseCSRHex","p8pubkeyhex","getJWK","jws","JWS","getJWKthumbprint","x5c","x5t","getJWKFromKey","getPosArrayOfChildrenFromHex","getHexValueArrayOfChildrenFromHex","readPrivateKeyFromPEMString","readPKCS5PubKeyHex","pss_mgf1_str","_rsasign_getAlgNameAndHashFromHexDisgestInfo","HEX2STAG","foffset","aExtInfo","getVersion","getSignatureAlgorithmField","getIssuerString","getSubjectString","getNotBefore","getNotAfter","getSPKI","getSPKIValue","getPublicKeyIdx","getPublicKeyContentIdx","getSignatureAlgorithmName","getSignatureValueHex","parseExt","vidx","getExtInfo","getExtBasicConstraints","getExtNameConstraints","getGeneralSubtree","getGeneralName","getExtKeyUsage","getExtKeyUsageString","getExtKeyUsageBin","KEYUSAGE_NAME","getExtAuthorityKeyIdentifier","getExtExtKeyUsage","getExtExtKeyUsageName","getExtSubjectAltName","getExtIssuerAltName","getOtherName","getExtSubjectAltName2","hex2dn","getExtCRLDistributionPoints","getDistributionPoint","getDistributionPointName","getExtCRLDistributionPointsURI","getExtAIAInfo","getExtAuthorityInfoAccess","getExtCertificatePolicies","getPolicyInformation","getPolicyQualifierInfo","getUserNotice","getDisplayText","getExtCRLNumber","getExtCRLReason","getExtOcspNonce","getExtOcspNoCheck","getExtAdobeTimeStamp","numstr","telstr","ia5str","visstr","bmpstr","Erorr","getX500NameRule","getAttrTypeAndValue","getRDN","getX500NameArray","dnarraytostr","tbshex","nodnarray","getExtParam","findExt","updateExtCDPFullURI","updateExtAIAOCSP","updateExtAIACAIssuer","getInfo","dname","signPSS","verifyPSS","SALT_LEN_HLEN","SALT_LEN_MAX","SALT_LEN_RECOVER","hex2rdn","hex2attrTypeValue","getPublicKeyInfoPropOfCertPEM","isSafeJSONString","parseJWS","parsedJWS","sigvalH","headB64U","payloadB64U","sigvalB64U","sigvalBI","headS","payloadS","readSafeJSONString","jwsalg2sigalg","headerObj","payloadObj","headerPP","payloadPP","sigHex","verifyJWT","inArray","includedArray","iss","sub","aud","IntDate","getNow","verifyAt","gracePeriod","nbf","iat","jti","HS256","HS384","HS512","RS256","RS384","RS512","ES256","ES384","ES512","PS256","PS384","PS512","none","getEncodedSignatureValueFromJWS","getZulu","intDate2UTCString","toUTCString","intDate2Zulu","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","JWSJS","aHeader","sPayload","aSignature","initWithJWS","addSignature","verifyAll","verifyNth","readJWSJS","signatures","getJSON","getNative","hashClear","hashDelete","hashGet","hashHas","hashSet","Hash","entry","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","Map","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","Set","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","__data__","WeakMap","func","iteratee","predicate","resIndex","baseTimes","isArguments","isIndex","isTypedArray","inherited","isArr","isArg","isBuff","isType","skipIndexes","offset","baseAssignValue","eq","object","objValue","copyObject","keysIn","arrayEach","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isMap","isSet","argsTag","funcTag","objectTag","cloneableTags","baseClone","bitmask","customizer","isDeep","isFlat","isFull","isFunc","stacked","subValue","props","objectCreate","baseCreate","proto","baseFor","createBaseFor","arrayPush","keysFunc","symbolsFunc","getRawTag","objectToString","symToStringTag","toStringTag","baseGetTag","isObjectLike","isMasked","toSource","reIsHostCtor","funcProto","objectProto","funcToString","reIsNative","isLength","typedArrayTags","isPrototype","nativeKeys","nativeKeysIn","isProto","assignMergeValue","baseMergeDeep","safeGet","baseMerge","srcValue","newValue","cloneTypedArray","isArrayLikeObject","toPlainObject","mergeFunc","isCommon","isTyped","identity","overRest","setToString","constant","baseSetToString","string","root","freeExports","nodeType","freeModule","allocUnsafe","cloneArrayBuffer","dataView","byteOffset","reFlags","exec","lastIndex","symbolProto","symbolValueOf","symbol","typedArray","isNew","getSymbols","getSymbolsIn","coreJsData","baseRest","isIterateeCall","assigner","sources","guard","fromRight","iterable","freeGlobal","baseGetAllKeys","isKeyable","baseIsNative","getValue","getPrototype","overArg","nativeObjectToString","isOwn","unmasked","arrayFilter","stubArray","propertyIsEnumerable","nativeGetSymbols","mapTag","promiseTag","setTag","weakMapTag","dataViewTag","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","Ctor","ctorString","nativeCreate","cloneDataView","cloneRegExp","cloneSymbol","reIsUint","isArrayLike","maskSrcKey","uid","IE_PROTO","assocIndexOf","getMapData","freeProcess","nodeUtil","types","binding","transform","nativeMax","otherArgs","freeSelf","shortOut","nativeNow","lastCalled","stamp","remaining","pairs","LARGE_ARRAY_SIZE","CLONE_DEEP_FLAG","baseIsArguments","stubFalse","baseIsMap","baseUnary","nodeIsMap","objectCtorString","baseIsSet","nodeIsSet","baseIsTypedArray","nodeIsTypedArray","arrayLikeKeys","baseKeys","baseKeysIn","createAssigner","plural","msAbs","isPlural","parseFloat","isFinite","long","fmtLong","fmtShort","assertPath","normalizeStringPosix","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","posix","cwd","resolvedPath","resolvedAbsolute","normalize","isAbsolute","trailingSeparator","joined","relative","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","matchedSlash","basename","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","pathObject","sep","dir","base","_format","win32","qs","maxKeys","kstr","vstr","stringifyPrimitive","ks","filter","Boolean","prefix","undef","query","part","ha","ia","ja","ka","la","ma","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","ra","sa","ta","pa","qa","oa","removeAttribute","setAttributeNS","xlinkHref","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","assign","Ma","Na","Oa","prepareStackTrace","construct","displayName","includes","Pa","render","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","fb","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","setProperty","tb","menuitem","area","br","col","embed","hr","img","keygen","link","meta","param","track","wbr","ub","vb","is","wb","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","clz32","pc","qc","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","Uc","stopPropagation","jd","kd","ld","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","isTrusted","td","ud","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","datetime","email","month","range","tel","week","me","ne","oe","event","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","Ne","contentEditable","Oe","focusedElem","selectionRange","selectionStart","selectionEnd","defaultView","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","of","pf","qf","rf","sf","capture","passive","tf","uf","parentWindow","vf","wf","na","xa","$a","je","char","ke","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","Gf","clearTimeout","Hf","Jf","queueMicrotask","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","defaultProps","Mg","Ng","Og","Pg","Qg","Rg","_currentValue","Sg","childLanes","Tg","dependencies","firstContext","lanes","Ug","Vg","memoizedValue","Wg","Xg","Yg","interleaved","Zg","$g","ah","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","bh","ch","eventTime","lane","dh","eh","fh","gh","hh","ih","jh","Component","refs","kh","nh","isMounted","_reactInternals","enqueueSetState","lh","mh","enqueueReplaceState","enqueueForceUpdate","oh","shouldComponentUpdate","isPureReactComponent","ph","contextType","updater","qh","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","rh","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","sh","ref","_owner","_stringRef","th","uh","vh","wh","xh","yh","implementation","zh","Ah","Bh","Ch","Dh","Eh","Fh","Gh","Hh","Ih","tagName","Jh","Kh","Lh","Mh","revealOrder","Nh","Oh","_workInProgressVersionPrimary","Ph","ReactCurrentDispatcher","Qh","Rh","Sh","Th","Uh","Vh","Wh","Xh","Yh","Zh","$h","ai","bi","ci","baseQueue","queue","di","ei","fi","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","gi","hi","ii","ji","ki","getSnapshot","li","mi","ni","lastEffect","stores","oi","pi","ri","deps","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","Ci","Di","Ei","Fi","Gi","Hi","Ii","Ji","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ki","Li","Mi","Ni","Oi","Pi","Qi","Ri","getDerivedStateFromError","componentDidCatch","Si","componentStack","Ti","pingCache","Ui","Vi","Wi","Xi","ReactCurrentOwner","Yi","Zi","$i","aj","bj","compare","cj","dj","ej","baseLanes","cachePool","transitions","fj","gj","hj","ij","jj","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","kj","lj","pendingContext","mj","Aj","Cj","Dj","nj","oj","pj","fallback","qj","rj","tj","dataset","dgst","uj","vj","_reactRetry","sj","subtreeFlags","wj","xj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","yj","Ej","Fj","Gj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","createElementNS","autoFocus","createTextNode","Hj","Ij","Jj","Kj","Lj","WeakSet","Mj","Nj","Oj","Qj","Rj","Sj","Tj","Uj","Vj","Wj","insertBefore","_reactRootContainer","Xj","Yj","Zj","ak","onCommitFiberUnmount","componentWillUnmount","bk","ck","dk","ek","fk","isHidden","gk","hk","display","ik","jk","kk","lk","__reactInternalSnapshotBeforeUpdate","Wk","mk","nk","pk","qk","rk","sk","tk","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","Ek","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","Pk","finishedWork","finishedLanes","Qk","timeoutHandle","Rk","Sk","Tk","Uk","Vk","mutableReadLanes","Bc","Pj","onCommitFiberRoot","mc","onRecoverableError","Xk","onPostCommitFiberRoot","Yk","Zk","al","isReactComponent","pendingChildren","bl","mutableSourceEagerHydrationData","cl","cache","pendingSuspenseBoundaries","dl","el","fl","gl","hl","il","jl","zj","$k","ll","reportError","ml","_internalRoot","nl","ol","pl","ql","sl","rl","unmount","unstable_scheduleHydration","querySelectorAll","tl","usingClientEntryPoint","Events","ul","findFiberByHostInstance","bundleType","rendererPackageName","vl","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","wl","isDisabled","supportsFiber","inject","createPortal","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","__self","__source","jsx","jsxs","setState","forceUpdate","_status","_result","Children","only","Fragment","Profiler","PureComponent","StrictMode","Suspense","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","adjectives","nouns","randomNoun","generator","randomAdjective","noun1","noun2","required","controlOrWhitespace","CRHTLF","slashes","protocolre","windowsDriveLetter","trimLeft","rules","address","isSpecial","ignore","lolcation","loc","finaldestination","Url","scheme","extractProtocol","rest","forwardSlashes","otherSlashes","slashesCount","extracted","instruction","instructions","up","origin","ins","punycode","maxInt","regexPunycode","regexNonASCII","regexSeparators","errors","stringFromCharCode","mapDomain","ucs2decode","extra","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","basic","oldi","baseMinusT","codePoint","inputLength","bias","handledCPCount","basicLength","currentValue","handledCPCountPlusOne","qMinusT","define","util","urlParse","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","hostlessProtocol","slashedProtocol","querystring","parseQueryString","slashesDenoteHost","queryIndex","splitter","uSplit","simplePath","lowerProto","atSign","hostEnd","hec","parseHost","ipv6Hostname","hostparts","newpart","validParts","notHost","bit","toASCII","esc","qm","resolveObject","rel","tkeys","tkey","rkeys","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","isNullOrUndefined","authInHost","isNull","hasTrailingSlash","arr2","__esModule","arrayLikeToArray","iter","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","minLen","asyncGeneratorStep","gen","_next","_throw","info","_asyncToGenerator","_regeneratorRuntime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","Context","_invoke","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iteratorMethod","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","skipTempReset","stop","rootRecord","rval","handle","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_typeof","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","getter","definition","chunkId","miniCssF","globalThis","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","charset","nc","onScriptComplete","doneFns","head","nmd","paths","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","_arrayLikeToArray","_unsupportedIterableToArray","_slicedToArray","_i","_s","_e","_arr","_n","_d","_setPrototypeOf","subClass","superClass","_isNativeReflectConstruct","sham","Proxy","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","Derived","hasNativeReflectConstruct","Super","NewTarget","Constructor","_defineProperties","descriptor","protoProps","staticProps","rnds8","rng","uuid","REGEX","byteToHex","LoaderHeader","rnds","_construct","Parent","Class","allowArrayLike","it","normalCompletion","didErr","step","_e2","Lazy","valueGenerator","_evaluated","_value","sessionStorageConfigProvider","inMemoryConfigProvider","safeSessionStorage","NullConfigProvider","getRawConfig","CachedConfigProvider","stronglyTypedParse","_a","_b","raw","isPrimitiveType","defaultReturn","outputType","firstType","sessionStorage","configCache","orderedBaseProviders","knownProviders","candidateProviders","baseProvider","isConfigProviderBase","getCacheEntry","provider","loggerIsMonitoringContext","maybeConfig","logger","loggerToMonitoringContext","mixinMonitoringContext","configs","BaseTelemetryNullLogger","TelemetryNullLogger","extractLogSafeErrorProperties","safeProps","isRegularObject","errorName","stackFrames","removeMessageFromStack","_wrapNativeSuper","_cache","Wrapper","hasTelemetryPropFunctions","getTelemetryProperties","addTelemetryProperties","hasErrorInstanceId","errorInstanceId","isFluidError","isValidLegacyError","sanitizeStack","stackPopulatedOnCreation","isILoggingError","patchLegacyError","legacyError","patchMe","normalizeError","annotations","fluidError","NormalizedExternalError","canRetry","retryAfterSeconds","typeofError","originalErrorTelemetryProps","untrustedOrigin","generateErrorWithStack","wrapError","innerError","newErrorFn","newError","overwriteStack","isExternalError","overwriteErrorInstanceId","innerErrorInstanceId","wrapErrorAndLog","wrappedByErrorInstanceId","sendTelemetryEvent","eventName","errorSettingStack","stack2","normalizedErrorType","TelemetryDataTag","getCircularReplacer","seen","LoggingError","omitPropsFromLogging","_errorInstanceId","fluidErrorCode","copyProps","taggableProps","keysToOmit","getValidTelemetryProps","errorProps","TelemetryLogger","properties","sendTelemetryEventCore","category","newEvent","prepareErrorObject","duration","formatTick","perfEvent","includeErrorProps","eventNamespaceSeparator","getterOrValue","tick","fetchStack","telemetryProp","TaggedLoggerAdapter","eventWithTagsMaybe","taggableProp","PackageData","UserData","ChildLogger","baseLogger","prepareEvent","combinedProperties","extendedProps","combinedNamespace","MultiSinkLogger","loggers","PerformanceEvent","markers","reportEvent","startMark","eventNameSuffix","performanceEndMark","endMark","measure","sendPerformanceEvent","autoEnd","DebugLogger","debugErr","isError","registerDebug","multiSinkLogger","addLogger","tryGetBaseLoggerProps","isFluidResolvedUrl","resolved","ensureFluidResolvedUrl","configurableUrlResolver","resolversList","AttachState","BindState","MultiUrlResolver","urlResolvers","resolvedUrl","relativeUrl","urlResolver","MultiDocumentServiceFactory","documentServiceFactories","protocolName","protocolToDocumentFactoryMap","factory","clientIsSummarizer","urlObj","createDocumentService","createNewSummary","createNewResolvedUrl","createContainer","documentServiceFactory","factories","maybeMulti","assert","condition","padStart","unreachableCase","_","ContainerErrorType","isFluidPackage","pkg","fluid","isFluidCodeDetails","details","maybeCodeDetails","package","SummaryType","GenericError","genericError","ThrottlingWarning","throttlingError","errMsg","UsageError","usageError","ClientSessionExpiredError","expiryMs","timeoutMs","clientSessionExpiredError","DataCorruptionError","dataProcessingError","dataCorruptionError","DataProcessingError","errorMessage","dataProcessingCodepath","sequencedMessage","wrapIfUnrecognized","originalError","normalizedError","extractSafePropertiesFromMessage","messageClientId","clientId","messageSequenceNumber","sequenceNumber","messageClientSequenceNumber","clientSequenceNumber","messageReferenceSequenceNumber","referenceSequenceNumber","messageMinimumSequenceNumber","minimumSequenceNumber","messageTimestamp","timestamp","combineAppAndProtocolSummary","appSummary","protocolSummary","tree","getDocAttributesFromProtocolSummary","attributesBlob","attributes","documentAttributes","term","getQuorumValuesFromProtocolSummary","quorumValuesBlob","quorumValues","DriverErrorType","OnlineStatus","timeMs","isOnline","onLine","Online","Offline","Unknown","GenericNetworkError","genericNetworkError","deltaStreamConnectionForbiddenStr","DeltaStreamConnectionForbiddenError","statusCode","AuthorizationError","claims","tenantId","authorizationError","NetworkErrorBasic","NonRetryableError","ThrottlingError","createGenericNetworkError","retryInfo","retryAfterMs","canRetryOnError","getRetryDelaySecondsFromError","getRetryDelayFromError","pkgVersion","runWithRetry","api","fetchCallName","progress","success","numRetries","retry","driverVersion","lastError","onRetry","Uint8ArrayToString","encoding","base64js","TextDecoder","stringToBuffer","IsoBuffer","bufferToString","maybe","MessageType","NackErrorType","RuntimeMessage","encodingOrOffset","fromArrayBuffer","validLength","sanitizedString","sanitizeBase64","TextEncoder","sanitizedStr","readAndParse","readBlob","decoded","isRuntimeMessage","isUnpackedRuntimeMessage","_superPropBase","property","TypedEventEmitter","PendingProposal","local","QuorumClients","snapshot","isDisposed","members","snapshotCache","cloneDeep","QuorumProposals","sendProposal","stateEvents","proposals","proposal","proposalsSnapshotCache","valuesSnapshotCache","thisProposalSequenceNumber","localProposalSequencedHandler","sequencedCSN","disconnectedHandler","localProposalApprovedHandler","removeListeners","disposedHandler","msn","completed","committedProposal","approvalSequenceNumber","commitSequenceNumber","connected","Quorum","quorumClients","quorumProposals","getApprovalData","addMember","removeMember","getMembers","getMember","propose","addProposal","updateMinimumSequenceNumber","setConnectionState","ProtocolOpHandlerWithClientValidation","client","_quorum","shouldHaveLeft","close","immediateNoOp","systemJoinMessage","member","systemLeaveMessage","contents","connectedEventName","disconnectedEventName","raiseConnectedEvent","sendErrorEvent","ReconnectMode","EventEmitterWithErrorHandling","errorHandler","Audience","removedClient","Deferred","rej","LazyPromise","getPromise","onrejected","onfinally","finally","ContainerContext","container","scope","codeLoader","_codeDetails","_baseSnapshot","deltaManager","quorum","loader","submitFn","submitSignalFn","closeFn","updateDirtyContainerState","pendingLocalState","_disposed","taggedLogger","subLogger","_fluidModuleP","loadCodeModule","attachListener","clientDetails","serviceConfiguration","audience","_runtime","dispose","loadedFromVersion","attachState","blobRedirectTable","createSummary","processSignal","getAbsoluteUrl","getPendingLocalState","constraintCodeDetails","comparers","maybeCompareCodeLoader","IFluidCodeDetailsComparer","moduleWithDetails","maybeCompareExport","fluidExport","comparer","satisfies","notifyAttaching","setAttachState","Attaching","runtimeFactory","IRuntimeFactory","getRuntimeFactory","instantiateRuntime","Attached","codeDetails","timedExecAsync","loadCodeResult","baseSnapshot","DeltaQueue","worker","pauseCount","processingDeferred","task","ensureProcessing","waitTillProcessingDone","paused","processDeltas","DeltaManager","serviceProvider","_active","createConnectionManager","minSequenceNumber","lastQueuedSequenceNumber","lastObservedSeqNumber","lastProcessedSequenceNumber","baseTerm","opsSize","initSequenceNumber","closed","throttlingIdSet","timeTillThrottling","closeAbortController","deltaStorageDelayId","deltaStreamDelayId","messageBuffer","incomingOpHandler","messages","enqueueMessages","signalHandler","_inboundSignal","reconnectionDelayHandler","delayMs","emitDelayInfo","closeHandler","disconnectHandler","connectHandler","connection","pongHandler","latency","readonlyChangeHandler","readonly","safeRaiseEvent","connectionManager","_inbound","op","processInboundMessage","lastMessage","lastProcessedMessage","_checkpointSequenceNumber","maxMessageSize","outbound","readOnlyInfo","batch","metadata","messagePartial","flush","prepareMessageToSend","submitSignal","sendMessages","lastSequenceNumber","connectionProps","pendingSorted","fetchReason","lastObserved","connectionVerboseProps","pendingOps","pendingFirst","haveHandler","inboundLength","inbound","inboundPaused","refreshDelayInfo","connectionLastQueuedSequenceNumber","connectionLastObservedSeqNumber","checkpointSequenceNumber","updateLatestKnownOpSeqNumber","fetchMissingDeltas","prefetchType","resume","cacheOnly","fetchMissingDeltasCore","fetchOpsFromStorage","logIfFalse","connect","docService","deltaStorage","connectToDeltaStorage","lastExpectedOp","early","cancelFetch","controller","opsFromFetch","opListener","stream","fetchMessages","pause","timeNow","throttlingWarning","allowGaps","firstMissing","initialGap","duplicate","gap","previousReason","prevEnqueueMessagesReason","dmInitialSeqNumber","initialSequenceNumber","previouslyProcessedMessage","message1","comparableMessagePayload","message2","fileOverwrittenInStorage","isClientMessage","beforeProcessingIncomingOp","endTime","reasonArg","getDeltas","processPendingOps","EventForwarder","forwardingEvents","removeListenerEvent","unforwardEvent","newListenerEvent","forwardEvent","listenerRemover","isEmitterEvent","ConnectionState","DeltaQueueProxy","idle","peek","DeltaManagerProxy","inboundSignal","lastKnownSeqNumber","hasCheckpointSequenceNumber","active","Timer","defaultTimeout","defaultHandler","getCurrentTick","runningState","startCore","intendedDuration","handlerToUse","restart","remainingTime","calculateRemainingTime","startTick","runningTimeout","PromiseTimer","timer","wrapHandler","hasTimer","deferred","timerResult","ConnectionStateHandler","_clientId","_connectionState","prevClientLeftTimer","maxClientLeaveWaitTime","applyForConnectedState","joinOpTimer","connectionState","quorumInitialized","hasPendingClientId","pendingClientId","inQuorum","waitingForLeaveOp","logConnectionIssue","_pendingClientId","stopJoinOpTimer","waitEvent","waitOnClientId","hadOutstandingOps","shouldClientJoinWrite","connectionMode","oldState","writeConnection","logConnectionStateChangeTelemetry","startJoinOpTimer","connectionStateChanged","_details","receivedAddMemberEvent","receivedRemoveMemberEvent","RetriableDocumentStorageService","internalStorageService","policies","repositoryUrl","scenarioName","getSnapshotTree","versionId","getVersions","summary","ackHandle","uploadSummaryWithContext","downloadSummary","file","createBlob","callName","checkStorageDisposed","ProtocolTreeStorageService","generateProtocolTree","disposed","ContainerStorageAdapter","storageGetter","blobContents","snapshotTree","getBlobContents","blobsContents","trees","BlobOnlyStorage","blobStorage","notCalled","blobId","parseUrl","convertSummaryToSnapshotWithEmbeddedBlobContents","treeNode","blobs","unreferenced","summaryObject","contentBuffer","convertProtocolAndAppSummaryToSnapshotTree","protocolSummaryTree","appSummaryTree","combinedSummary","getSnapshotTreeFromSerializedContainer","detachedContainerSnapshot","getProtocolSnapshotTree","doIfNotDisposed","disposable","QuorumProxy","getCodeDetailsFromQuorumValues","initQuorumValuesFromCodeDetails","ScopeType","CollabWindowTracker","submit","NoopTimeFrequency","NoopCountFrequency","opsCountSinceNoop","submitNoop","immediate","logNetworkFailure","errorOnlineProp","online","nav","mozConnection","webkitConnection","connectionType","waitForConnectedState","minDelay","fatalConnectErrorProp","fatalConnectError","NoDeltaStream","scopes","DocRead","initialMessages","initialSignals","initialClients","operation","ConnectionManager","reconnectAllowed","_forceReadonly","pendingReconnect","clientSequenceNumberObserved","trailingNoopCount","connectFirstConnection","_connectionVerboseProps","_connectionProps","opHandler","documentId","messagesArg","nackHandler","_readonlyPermissions","nackContent","reconnectInfo","retryAfter","reconnectOnError","writeError","createWriteError","disconnectHandlerInternal","disconnectReason","defaultReconnectionMode","_reconnectMode","Enabled","Never","_outbound","_c","sentOps","storageOnly","forced","permissions","pendingConnection","disconnectFromDeltaStream","set_readonlyPermissions","reconnect","shouldJoinWrite","triggerConnect","connectCore","pendingConnectionMode","cancelConnection","requestedMode","setupNewSuccessfulConnection","connectRepeatCount","connectStartTime","abortController","abortSignal","attempts","connectionEstablished","connectToDeltaStream","retryDelayFromError","reconnectMode","DocWrite","relayServiceAgent","socketDocumentId","connectionInitialOpsFrom","connectionInitialOpsTo","detailsFromConnection","disconnectMessage","lastSubmittedClientId","forcedReadonly","readonlyPermissions","dirtyContainerEvent","savedContainerEvent","summarizerClientType","Container","_canReconnect","_lifecycleState","_attachState","Detached","inboundQueuePausedFromInit","firstConnection","connectionTransitionTimes","messageCountAfterDisconnection","attachStarted","_dirtyContainer","setAutoReconnectTime","_audience","clientDetailsOverride","_resolvedUrl","canReconnect","interactive","capabilities","clientType","services","containerId","docId","containerAttachState","containerLifecycleState","containerConnectionState","_deltaManager","dmLastProcessedSeqNumber","dmLastKnownSeqNumber","containerLoadedFromVersionId","containerLoadedFromVersionDate","dmLastMsqSeqNumber","dmLastMsqSeqTimestamp","dmLastMsqSeqClientId","connectionStateDuration","summarizeProtocolTree","getBoolean","connectionStateHandler","_protocolHandler","propagateConnectionState","serializedContainerState","containerSaved","createDeltaManager","_storage","detachedBlobStorage","storageService","lastVisible","hidden","visibilityEventHandler","_storageService","_loadedFromVersion","forceReadonly","getCodeDetailsFromQuorum","protocolHandler","service","pendingState","pendingRuntimeState","getProtocolState","captureProtocolSummary","hasAttachmentBlobs","serviceFactory","closeSignal","connectStorageService","redirectTable","newIds","getBlobIds","proposalHandle","resumeInternal","setAutoReconnect","connectInternal","setAutoReconnectInternal","disconnectInternal","Disabled","comparison","versions","recordConnectStartTime","specifiedVersion","loadMode","connectionArgs","deltaConnection","fetchSnapshotTree","getDocumentAttributes","opsBeforeReturn","attachDeltaManagerOpHandler","opsBeforeReturnP","initializeProtocolStateFromSnapshot","initializeProtocolState","instantiateContext","setLoaded","qValues","instantiateContextDetached","loadSnapshotForRehydratingContainer","baseTree","connectToStorage","minBlobSize","attributesHash","quorumMembers","submitMessage","protocolLogger","initProtocol","processCodeProposal","quorumSnapshot","getCodeProposal","permission","user","environment","activeConnection","opsBehind","priorClient","receivedConnectEvent","collabWindowTracker","stopSequenceNumberUpdate","receivedDisconnectEvent","logged","logContainerError","closeCore","attachOpHandler","processRemoteMessage","durationFromDisconnected","connectionInitiationReason","autoReconnect","quorumSize","logOpsOnReconnect","includesProtocolTree","messageType","processMessage","noopTimeFrequency","noopCountFrequency","scheduleSequenceNumberUpdate","innerContent","newClient","leftClientId","RelativeLoader","createOrLoad","submitContainerMessage","dirty","loadOptions","defaultMode","onClosed","_event","createDetached","deserializedSummary","rehydrateDetachedFromSnapshot","canUseCache","startsWith","mimeType","createCachedResolver","cacheResolver","resolveCache","LoaderCachingPolicy","Loader","loaderProps","containers","provideScopeLoader","ILoader","telemetryProps","loaderId","loaderVersion","subMc","mixinDebugLogger","configProvider","cachingEnabled","parsedUrl","addToContainerCache","resolveCore","containerP","resolvedAsFluid","parsedPendingUrl","parseHeader","canCache","fromSequenceNumber","getKeyForContainerCache","maybeContainer","loadContainer","headerSeqNum","canCacheForRequest","RateLimiter","maxRequests","tasks","release","work","acquire","fromUtf8ToBase64","NetworkError","isFatal","createFluidServiceNetworkError","errorData","CorrelationIdHeaderName","RestWrapper","baseurl","defaultQueryString","queryString","generateQueryString","requestBody","queryStringValues","queryStringMap","BasicRestWrapper","defaultHeaders","refreshDefaultQueryString","refreshDefaultHeaders","getCorrelationId","requestConfig","generateHeaders","safeStringify","_f","_g","_h","_j","_k","refreshOnAuthError","retryConfig","_l","_m","_o","_p","fallbackCorrelationId","endsWith","endings","ending","FileMode","TreeEntry","getAuthorizationTokenFromCredentials","Historian","endpoint","historianApi","disableCache","restWrapper","cacheBust","sha","getQueryString","getHeaderDirect","post","commit","patch","recursive","softDelete","getTree","includeBlobs","blobsP","blobP","getBlob","getGitMode","handleType","getGitType","buildHierarchy","flatTree","blobsShaToPathCache","removeAppTreePrefix","entryPath","entryPathDir","entryPathBase","newTree","commits","BlobTreeEntry","TreeTreeEntry","AttachmentTreeEntry","GitManager","historian","blobCache","commitCache","treeCache","refCache","getHeader","getFullTree","getCommit","shaOrRef","author","committer","parents","getCommits","getContent","treeP","createTree","files","createTreeCore","createCommit","deleteSummary","getSummary","getRef","branch","createRefParams","commitSha","force","updateRef","inputTree","commitParams","upsertRef","depth","entriesP","entryAsBlob","translateSymlink","entryAsTree","treeBlobP","PACKET_TYPES","PACKET_TYPES_REVERSE","ERROR_PACKET","withNativeBlob","withNativeArrayBuffer","encodeBlobAsBase64","fileReader","readAsDataURL","supportsBinary","decodeBase64Packet","binaryType","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","arraybuffer","mapBinary","encodedPacket","SEPARATOR","Emitter","mixin","_callbacks","callbacks","emitReserved","hasListeners","globalThisShim","pick","acc","NATIVE_SET_TIMEOUT","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","useNativeTimers","setTimeoutFn","clearTimeoutFn","TransportError","Transport","socket","doOpen","doClose","onClose","packets","packet","decodePacket","onPacket","alphabet","seed","encoded","yeast","qry","pair","hasCORS","XHR","xdomain","empty","hasXHR2","Polling","polling","isSSL","xs","forceBase64","poll","onPause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","encodePacket","encodePayload","doWrite","timestampRequests","timestampParam","sid","encodedQuery","req","xhrStatus","onData","pollXhr","xscheme","extraHeaders","setDisableHeaderCheck","requestTimeout","onLoad","requestsCount","requests","cleanup","fromError","unloadHandler","nextTick","WebSocket","isReactNative","WS","check","protocols","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","ev","lastPacket","transports","websocket","authority","ipv6uri","pathNames","regx","queryKey","$0","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","EIO","priorWebsocketSuccess","createTransport","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","freezeTransport","onTransportClose","onupgrade","probe","onHandshake","resetPingTimeout","sendPacket","filterUpgrades","maxPayload","getWritablePackets","payloadSize","utf8Length","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","withNativeFile","File","isBinary","hasBinary","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","deconstruction","Decoder","reviver","reconstructor","decodeString","BinaryReconstructor","takeBinaryData","tryParse","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","RESERVED_EVENTS","freeze","connect_error","disconnect","disconnecting","io","receiveBuffer","sendBuffer","ids","acks","_autoConnect","subs","onpacket","subEvents","_readyState","ack","_registerAckCallback","isTransportWritable","engine","discardPacket","volatile","notifyOutgoingListeners","_packet","onconnect","onevent","onack","ondisconnect","emitEvent","_anyListeners","emitBuffered","subDestroy","_anyOutgoingListeners","Backoff","factor","jitter","rand","deviation","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","decoder","autoConnect","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","_close","onreconnect","attempt","sameNamespace","forceNew","multiplex","ParallelRequests","requestCallback","responseCallback","results","workingState","requestsInFlight","endEvent","latestRequested","nextToDeliver","knewTo","working","concurrency","addRequest","chunk","getNextChunk","addRequestCore","fail","fromArg","toArg","requestedLength","partial","fromOrig","fullChunk","Queue","pushCore","getSingleOpBatch","strongTo","deltas","nothing","deltasP","partialResult","lastSuccessTime","emptyMessageStream","DocumentDeltaStorageService","deltaStorageService","documentStorageService","logtailSha","logTailSha","cachedOnly","fromTotal","toTotal","lastFetch","propsTotal","telemetryEvent","manager","propsPerRequest","propsAll","pushValue","run","canceled","pushDone","pushError","requestOps","getCore","opsFromLogTail","DeltaStorageService","getRestWrapper","getDeltaStorageUrl","ops","DocumentStorageServiceProxy","_policies","PrefetchDocumentStorageService","prefetchCache","prefetchEnabled","caching","NoCaching","prefetchTree","cachedRead","prefetchedBlobP","prefetchedBlobPFromStorage","secondary","prefetchTreeCore","blobKey","subTree","SummaryTreeAssembler","attachmentCounter","summaryTree","convertSnapshotAndBlobsToSummaryTree","assembler","addBlob","subtree","addTree","buildTreePath","nodeNames","convertSummaryTreeToWholeSummaryTree","parentHandle","rootNodeName","wholeSummaryTree","currentPath","handleValue","embedded","baseEntry","treePrefixToRemove","convertWholeFlatSummaryToSnapshotTreeAndBlobs","flatSummary","flatSummaryTree","WholeSummaryUploadManager","summaryType","writeSummaryTreeCore","snapshotPayload","InMemoryCache","latestSnapshotId","WholeSummaryDocumentStorageService","driverPolicies","snapshotTreeCache","noCacheGitManager","getStorageManager","firstVersionsCall","treeId","enableDiscovery","fetchAndCacheSnapshotTree","_id","requestVersion","cachedBlob","bufferValue","put","getSummaryUploadManager","summaryUploadManager","writeSummaryTree","summaryHandle","wholeFlatSummary","uint8ArrayFile","cachedSnapshotTreeVersion","normalizedWholeSummary","wholeFlatSummaryId","snapshotTreeId","snapshotTreeVersion","cachePs","initBlobCache","blobCachePutPs","digestBuffer","subtle","encodeDigest","hashArray","byte","hashFile","hashEncoding","gitHashFile","filePrefix","hashBuffer","SummaryTreeUploadManager","blobsShaCache","getPreviousFullSnapshot","previousFullSnapshot","writeSummaryTreeObject","pathHandle","treeEntry","createGitTree","treeHandle","writeSummaryBlob","getIdFromPath","parsedContent","handlePath","getIdFromPathCore","previousSnapshot","tryId","RetriableGitManager","internalGitManager","getRawUrl","isNode","ShreddedSummaryDocumentStorageService","enableRestLess","cachedSnapshotTree","rawTree","bufferContent","DocumentStorageService","loadInternalDocumentStorageService","_logTailSha","logTail","enableWholeSummaryUpload","Prefetch","DocumentDeltaConnection","enableLongPollingDowngrades","queuedMessages","queuedSignals","earlyOpHandlerAttached","connectionListeners","trackedListeners","earlyOpHandler","msgs","earlySignalHandler","eventsAlwaysForwarded","eventsToForward","addTrackedListener","checkNotClosed","removeEarlyOpHandler","removeEarlySignalHandler","emitMessages","submitCore","disposeCore","socketProtocolError","removeTrackedListeners","connectMessage","internalSocketConnectionFailureCount","isInternalSocketReconnectionEnabled","getMaxInternalSocketReconnectionAttempts","getMaxAllowedInternalSocketConnectionFailures","addConnectionListener","isWebSocketTransportError","createErrorObject","actualMode","removeConnectionListeners","socketConnectionTimeout","messagePrefix","errorObj","R11sErrorType","createR11sNetworkError","fileNotFoundOrAccessDeniedError","throwR11sNetworkError","errorObjectFromSocketError","socketError","RestLessFieldNames","protocolVersions","R11sDocumentDeltaConnection","relayUserAgent","initialize","NullBlobStorageService","encodeHeader","headerKey","headerValue","RestLessClient","newRequest","Method","encodedHeader","Header","stringifiedBody","axiosRequestConfigToFetchRequestConfig","RouterliciousRestWrapper","rateLimiter","getAuthorizationHeader","useRestLess","restLess","authorizationHeader","translatedConfig","translate","fetchRequestConfig","schedule","responseBody","responseSummary","correlationId","RouterliciousStorageRestWrapper","tokenProvider","refreshToken","fetchStorageToken","storageToken","jwt","RouterliciousOrdererRestWrapper","fetchOrdererToken","ordererToken","DocumentService","ordererUrl","deltaStorageUrl","storageUrl","discoverFluidResolvedUrl","lastDiscoveredAt","shouldUpdateDiscoveredSessionInfo","refreshDiscovery","storageManager","noCacheStorageManager","maxConcurrentStorageRequests","storageRestWrapper","noCacheHistorian","documentStorageServicePolicies","enablePrefetch","aggregateBlobsSmallerThanBytes","ordererRestWrapper","maxConcurrentOrdererRequests","discoverP","refreshDiscoveryCore","fluidResolvedUrl","endpoints","convertSummaryToCreateNewSummary","DriverHeader","parseFluidUrl","fluidUrl","URLParse","replaceDocumentIdInPath","urlPath","getDiscoveredFluidResolvedUrl","session","discoveredOrdererUrl","discoveredStorageUrl","historianUrl","tokens","defaultRouterliciousDriverPolicies","RouterliciousDocumentServiceFactory","logger2","generateToken","documentPostCreateCallback","DocumentPostCreateError","parsedDeltaStorageUrl","URL","discoveredSession","defaultTinyliciousEndpoint","InsecureTinyliciousUrlResolver","tinyliciousEndpoint","fluidProtocolEndpoint","createNew","newDocumentId","encodedDocId","documentRelativePath","documentUrl","getRandomName","connector","capitalize","generateStupidName","first","InsecureTinyliciousTokenProvider","fromCache","getSignedToken","lifetime","ver","SummaryWrite","utf8Key","jsrsasign","typ","exceptionToResponse","errorFromRequestFluidObject","responseErr","errWithStack","responseToException","requestFluidObject","router","create404Response","createResponseError","urlNoQuery","ValueType","FluidContainer","rootDataObject","connectedHandler","savedHandler","dirtyHandler","isDirty","initialObjects","objectClass","generateHandleContextPath","routeContext","absolutePath","normalizedPath","Trace","lastTick","totalTimeElapsed","trimTrailingSlashes","cloneGCData","gcData","clonedGCNodes","gcNodes","outboundRoutes","unpackChildNodesGCDetails","gcDetails","childGCDetailsMap","childId","childGCNodeId","childGCDetails","usedRoutes","route","childUsedRoute","unpackChildNodesUsedRoutes","filteredUsedRoutes","childUsedRoutesMap","childUsedRoutes","removeRouteFromAllNodes","outboundRoute","nodeId","outboundRoutesSet","concatGarbageCollectionStates","gcState1","gcState2","combinedGCNodes","nodeData","unreferencedTimestampMs","combinedNodedata","GCDataBuilder","gcNodesSet","prefixId","normalizedId","mergeStats","treeNodeCount","blobNodeCount","handleNodeCount","totalBlobSize","unreferencedBlobSize","stats","stat","getBlobSize","utf8ByteLength","calculateStatsCore","calculateStats","addBlobToSummary","SummaryTreeBuilder","summaryStats","summarizeResult","convertToSummaryTreeWithStats","fullTree","builder","convertToSummaryTree","addWithStats","addAttachment","getSummaryTree","convertSnapshotTreeToSummaryTree","convertSummaryTreeToITree","TelemetryContext","telemetry","jsonObject","baseSummaryTreeKey","outstandingOpsBlobKey","EscapedPath","pathParts","SummaryNode","basePath","localPath","additionalPath","fullPathForChildren","decodeSummary","baseSummary","opsBlobs","maxDecodeDepth","outstandingOpsBlob","newBaseSummary","getOutstandingOps","readAndParseBlob","outstandingOps","opsBlob","newOutstandingOps","latestSeq","newEarliestSeq","encodeSummary","summaryParam","fromSummary","summaryNode","addHandle","initialSummary","parseSummaryForSubtrees","channelsSubtree","channelsTreeName","childrenTree","childrenPathPart","SummarizerNode","defaultLogger","summarizeInternalFn","_changeSequenceNumber","_latestSummary","wipSummaryLogger","pendingSummaries","wipSkipRecursion","canReuseHandle","throwOnError","trackingSequenceNumber","summaryLogger","wipReferenceSequenceNumber","startSummary","telemetryContext","isTrackingInProgress","hasChanged","latestSummary","wipLocalPaths","pathPartsForChildren","createAndConcat","encodeParam","completeSummaryCore","parentPath","parentSkipRecursion","localPathsToUse","clearSummary","summaryRefSeq","correlatedSummaryLogger","maybeSummaryNode","refreshLatestSummaryFromPending","latestSummaryUpdated","wasSummaryTracked","refreshLatestSummaryFromSnapshot","refreshLatestSummaryCore","pathForChildren","decodedSummary","lastOp","invalidate","createParam","createDetails","getCreateDetailsForChild","changeSequenceNumber","maybeUpdateChildState","parentLatestSummary","createForChild","parentInitialSummary","childSummary","childSummaryWithStats","parseSummaryTreeForSubtrees","SummaryNodeWithGC","serializedUsedRoutes","SummarizerNodeWithGC","summarizeFn","getGCDataFn","getBaseGCDetailsFn","_trackState","baseGCDetailsLoaded","gcDisabled","baseGCDetailsP","getBaseGCDetails","unrefTimestamp","baseGCDetails","referenceUsedRoutes","trackState","wipSerializedUsedRoutes","fullGC","loadBaseGCDetails","hasDataChanged","summaryNodeWithGC","gcDetailsBlob","gcBlobKey","gcTimestamp","isReferenced","hasUsedStateChanged","RequestParser","queryStartIndex","requestPathParts","getPathParts","elements","startingPathIndex","pv","cv","seqFromTree","attrib","ContainerFluidHandleContext","resolveHandle","FluidDataStoreRegistry","namedEntries","SummarizerClientElection","summaryCollection","clientElection","maxOpsSinceLastSummary","electionEnabled","lastReportedSeq","electedClientId","electionSequenceNumber","lastSummaryAckSeqForClient","opsSinceLastReport","nextElectedClientId","peekNextElectedClient","previousParentId","electedParentId","incrementElectedClient","previousClientId","eligibleCount","resetElectedClient","electedClient","electedParent","serialize","clientDetailsPermitElection","FluidObjectHandle","pendingHandlesToMakeVisible","locallyVisible","isAttached","visible","attachGraph","SummarizerHandle","SummarizeHeuristicData","lastOpSequenceNumber","attemptBaseline","_lastAttempt","_lastSuccessfulSummary","lastSummary","refSequenceNumber","summaryTime","lastAttempt","SummarizeHeuristicRunner","heuristicData","configuration","trySummarize","idleTimer","idleTime","minOpsForLastSummaryAttempt","lastSuccessfulSummary","timeSinceLastSummary","opsSinceLastAck","maxTime","maxOps","raceTimer","cancellationToken","waitCancelled","race","SummaryManagerState","summarizeErrors","submitSummaryFailure","summaryOpWaitTimeout","summaryAckWaitTimeout","summaryNack","SummarizeResultBuilder","summarySubmitted","summaryOpBroadcasted","receivedSummaryAckOrNack","nackSummaryResult","isCompleted","SummaryGenerator","pendingAckTimer","submitSummaryCallback","raiseSummarizingError","successfulSummaryCallback","summaryWatcher","summarizeTimer","summarizeTimerHandler","summarizeProps","resultsBuilder","summarizeCore","build","refreshLatestAck","timeSinceLastAttempt","summarizeTelemetryProps","summarizeEvent","getFailMessage","errorCode","cancelled","offlineError","summaryData","opsSinceLastSummary","opsSinceLastAttempt","stage","generateDuration","uploadDuration","forcedFullTree","summarizedDataStoreCount","gcStateUpdatedDataStoreCount","recordAttempt","pendingTimeoutP","watchSummary","waitBroadcast","waitBroadcastResult","summarizeOp","broadcastDuration","summarySequenceNumber","waitAckNack","waitAckNackResult","ackNackOp","ackNackDuration","ackWaitDuration","ackNackSequenceNumber","summaryProposal","markLastAttemptAsSuccessful","summaryAckOp","nackRetryAfter","summaryNackOp","timeoutTime","timeoutCount","nextTime","RunningSummarizer","stopSummarizerCallback","stopping","tryWhileSummarizing","summarizeCount","totalSuccessfulAttempts","tryGetCorrelatedLogger","summaryOpRefSeq","summarizerSuccessfulAttempts","heuristicRunner","maxAckWaitTime","timePending","setPendingAckTimerTimeoutCallback","disposeEnqueuedSummary","handleOp","tryRunEnqueuedSummary","allowLastSummary","shouldRunLastSummary","summarizingLock","trySummarizeOnce","waitFlushed","waitStartResult","unsetPendingAckTimerTimeoutCallback","updateWithLastSummaryAckInfo","summaryOp","lockedSummaryAction","summarize","delaySeconds","summaryAttempts","summaryAttemptsPerPhase","summaryAttemptPhase","regularDelaySeconds","__rest","overrideDelaySeconds","summaryNackDelay","resultSummarize","lastResult","afterSequenceNumber","override","onDemandReason","overridden","enqueuedSummary","alreadyEnqueued","summarizer","waitStart","summarizingError","SummarizingWarning","createSummarizingWarning","Summarizer","configurationGetter","internalsProvider","handleContext","runCoordinatorCreateFn","starting","stopDeferred","summarizeOnDemand","runningSummarizer","summarizerClientId","coordinatorCreateP","runCoordinator","stopReason","waitStop","enqueueSummarize","innerHandle","onBehalfOf","runCore","stopP","stopReasonCanRunLastSummary","initSummarySeqNumber","createWatcher","submitSummary","handleSummaryAcks","systemOpListener","handleSystemOp","waitSummaryAck","refreshLatestSummaryAck","summaryAck","summarizingClient","resolvedContainer","fluidObject","ISummarizer","SummaryManager","connectedState","parentLogger","requestSummarizerFn","startThrottler","initialDelayMs","opsToBypassInitialDelay","disableHeuristics","Off","handleConnected","latestClientId","refreshSummarizer","handleDisconnected","shouldSummarizeState","getShouldSummarizeState","shouldSummarize","startSummarization","Starting","Running","Stopping","delayBeforeCreatingSummarizer","startWithInitialDelay","numAttempts","isStartingOrRunning","getDelay","throttlerDelay","initialDelay","startThrottlerMaxDelayMs","maxDelayMs","opsListenerFn","resolveOpPromiseFn","delayPromise","opPromise","addOpListener","removeOpListener","DeltaScheduler","processingTimeIncrement","currentAllowedProcessingTimeForTurn","processingTime","schedulingCount","inboundQueueIdle","processingStartTime","schedulingLog","opsRemainingToProcess","numberOfTurns","totalProcessingTime","numberOfBatchesProcessed","firstSequenceNumber","shouldRunScheduler","currentTime","opsProcessed","batchesProcessed","timeToResume","OpPerfTelemetry","pongCount","msnTrackingTimestamp","opProcessingTimes","opPerfData","bootTime","connectionStartTime","recordPingTime","beforeOpSubmit","afterProcessingOp","connectionOpSeqNumber","reportGettingUpToDate","sequenceNumberForMsnTracking","clientSequenceNumberForLatencyStatistics","outboundPushEventTime","durationNetwork","durationOutboundBatching","submitOpEventTime","inboundPushEventTime","lengthInboundQueue","timeToConnect","pingLatency","msnDistance","durationInboundToProcessing","PendingStateManager","stateHandler","initialFlushMode","initialLocalState","pendingStates","disposeOnce","initialStates","_pendingMessagesCount","isProcessingBatch","flushModeForNextMessage","onFlushModeUpdated","hasPendingMessages","localOpMetadata","evaluated","opMetadata","pendingMessage","flushMode","previousState","seqNum","nextState","applyStashedOp","maybeProcessBatchBegin","peekNextPendingState","maybeProcessBatchEnd","expectedClientSequenceNumber","pendingFlushMode","pendingFlush","nextPendingState","pendingBatchBeginMessage","batchBeginMetadata","batchEndMetadata","checkpointHead","rollback","rollbackNextPendingState","pendingStatesCount","savedFlushMode","setFlushMode","reSubmit","BlobHandle","attached","BlobManager","getStorage","attachBlobCallback","gcNodeUpdated","blobIds","pendingBlobIds","detachedBlobIds","storageId","hasBlob","getBlobGCNodePath","pendingBlobP","detached","localId","unusedRoutes","redirectTableBlobName","blobsTree","tryFetchBlob","tableId","flattenCore","treeEntries","blobMap","subPath","subTreeEntries","flatten","buildSnapshotTree","BlobCacheStorageService","DataStoreContexts","notBoundContexts","_contexts","deferredContexts","fluidDataStoreId","contextError","_logger","ensureDeferred","wait","deferredContext","newDeferred","resolveDeferred","ThresholdCounter","thresholdMultiple","runGarbageCollection","referenceGraph","rootIds","visited","referencedIds","routes","referencedNodeIds","deletedNodeIds","gcTreeKey","gcBlobPrefix","oneDayMs","GCNodeType","UnreferencedState","UnreferencedStateTracker","inactiveTimeoutMs","sweepTimeoutMs","currentReferenceTimestampMs","_state","updateTracking","unreferencedDurationMs","clearTimers","setLongTimeout","sweepTimer","remainingDurationMs","inactiveTimer","GarbageCollector","createParams","_writeDataAtRoot","initialStateNeedsReset","currentGCVersion","newReferencesSinceLastRun","unreferencedNodesState","loggedUnreferencedEvents","pendingEventsQueue","completedRuns","isSummarizerClient","gcOptions","getNodePackagePath","getLastSummaryTimestampMs","prevSummaryGCVersion","completedGCRuns","getGCVersion","gcEnabled","sweepEnabled","sessionExpiryTimeoutMs","sweepAllowed","gcAllowed","overrideSessionExpiryTimeoutMs","getNumber","sessionExpiryTimer","snapshotCacheExpiryMs","latestSummaryGCVersion","shouldRunGC","disableGC","shouldRunSweep","trackGCState","testMode","runGCInTestMode","gcTreePresent","baseSummaryStateP","gcSnapshotTree","getGCStateFromSnapshot","baseGCState","latestSerializedSummaryState","generateSortedGCState","gcState","dataStoreSnapshotTree","getSummaryForDatastores","dsId","dsSnapshotTree","gcSummaryDetails","dsRootId","dataStoreAttributesBlobName","isRootDataStore","rootId","initializeBaseStateP","getCurrentReferenceTimestampMs","previousGCDataFromLastRun","baseGCDetailsMap","dataStoreGCDetails","gcConfigProps","runGC","runSweep","writeAtRoot","sessionExpiry","inactiveTimeout","gcConfigs","dpe","runFullGC","summaryStateNeedsReset","runPreGCSteps","getGCData","gcResult","runPostGCSteps","gcStats","updateStateBeforeGC","generateStats","updateStateSinceLastRun","updateCurrentState","updateUsedRoutes","logSweepEvents","deleteUnusedRoutes","logUnreferencedEvents","newSerializedSummaryState","pendingSerializedSummaryState","gcFeature","metadataBlobId","metadataBlobName","latestGCState","nodePath","timestampMs","packagePath","nodeStateTracker","inactiveNodeUsed","fromNodePath","toNodePath","currentGCData","missingExplicitReferences","findMissingExplicitReferences","writeDataAtRoot","missingExplicitReference","gcNodeId","gcRoutes","gcDataSuperSet","gcData1","gcData2","combinedGCData","combinedRoutes","concatGarbageCollectionData","sourceNodeId","previousGCData","explicitReferences","currentGraph","currentOutboundRoutes","previousRoutes","explicitRoutes","missingExplicitRoutes","isBlobOrDataStoreRoute","getNodeType","notRouteFromDDSToParentDataStore","nodeCount","dataStoreCount","attachmentBlobCount","unrefNodeCount","unrefDataStoreCount","unrefAttachmentBlobCount","updatedNodeCount","updatedDataStoreCount","updatedAttachmentBlobCount","updateNodeStats","referenced","stateUpdated","uniqueEventId","age","lastSummaryTime","usageType","fromNodeId","propsToLog","unrefTime","externalRequest","RuntimeHeaders","viaHandle","fromId","CodeArtifact","eventProps","fromPkg","rootGCState","sortableArray","localeCompare","sortedGCState","timeoutFn","setTimerFn","maxTimeout","newTimeoutMs","getAttributesFormatVersion","summaryFormatVersion","snapshotFormatVersion","hasIsolatedChannels","disableIsolatedChannels","aliasBlobName","chunksBlobName","electedSummarizerBlobName","blobsTreeName","nonDataStorePaths","wrapSummaryInChannelsTree","getFluidDataStoreAttributes","createAttributes","stringifiedPkg","createAttributesBlob","FluidDataStoreContext","bindState","isLocalDataStore","makeLocallyVisibleFn","detachedRuntimeCreation","_isInMemoryRoot","_containerRuntime","writeGCDataAtRoot","containerRuntime","bindToContext","NotBound","Binding","channel","makeLocallyVisible","Bound","thisSummarizeInternal","summarizeInternal","summarizerNode","createSummarizerNodeFn","getGCDataInternal","thresholdOpsCounter","pendingOpsCountThreshold","IFluidHandleContext","registry","isInMemoryRoot","getInitialSnapshotDetails","channelDeferred","packageName","realizeCore","errorWrapped","packages","rejectDeferredRealize","IFluidDataStoreRegistry","lastPkg","IFluidDataStoreFactory","factoryFromPackagePath","instantiateDataStore","bindRuntime","verifyNotClosed","messageArg","innerContents","recordChange","sendIfMultiple","getQuorum","getAudience","realize","isRoot","getGCSummaryDetails","lastUsedState","updateChannelUsedRoutes","srcHandle","outboundHandle","addedGCOutboundReference","usedChannelRoutes","fluidDataStoreContent","submitDataStoreOp","latestSequenceNumber","channelSummarizerNode","getChild","submitDataStoreSignal","createChild","throwOnFailure","uploadBlob","AliasState","RemoteFluidDataStoreContext","initialSnapshotDetailsP","initSnapshotValue","localReadAndParse","loadBaseSummary","loadedSummary","formatVersion","pkgFromSnapshot","LocalFluidDataStoreContextBase","setInMemoryRoot","createProps","attachListeners","getAttachSummary","LocalFluidDataStoreContext","LocalDetachedFluidDataStoreContext","dataStoreChannel","makeVisibleAndAttachGraph","isDataStoreAliasMessage","maybeDataStoreAliasMessage","internalId","alias","channelToDataStore","fluidDataStoreChannel","datastores","DataStore","SummaryState","aliasState","None","Aliasing","Aliased","aliasResult","trySetAliasInternal","localResult","processAliasMessageCore","ackBasedPromise","submitDataStoreAliasOp","succeeded","aliased","rejectBecauseDispose","DataStores","submitAttachFn","getCreateChildSummarizerNodeFn","deleteChildSummarizerNodeFn","aliasMap","contexts","pendingAttach","attachOpFiredForDataStore","dataStoresSinceLastGC","containerRuntimeHandle","dataStoreBaseGCDetails","dataStoreId","fluidDataStores","unreferencedDataStoreCount","dataStoreContext","makeDataStoreLocallyVisible","addBoundOrRemoted","containerLoadStats","containerLoadDataStoreCount","referencedDataStoreCount","attachMessage","alreadyProcessed","flatBlobs","remoteFluidDataStoreContext","aliasMessage","localContext","getUnbound","generateAttachMessage","addUnbound","envelope","processAttachMessage","localMessageMetadata","transformed","isLoaded","getBoundOrRemoted","fluidDataStore","isNotBound","summaryBuilder","contextId","contextSummary","notBoundContextsLength","builderTree","notBoundLength","dataStoreSummary","contextGCData","prefixAndAddNodes","getOutboundRoutes","addNode","usedDataStoreRoutes","rootHasIsolatedChannels","datastoresSnapshot","datastoresTrees","ContainerMessageType","Summary","Local","defSummaryOp","defSummaryAck","_summaryOp","_summaryAckNack","Acked","Broadcast","Nacked","broadcast","ClientSummaryWatcher","localSummaries","createLocal","removeWatcher","SummaryCollection","summaryWatchers","refreshWaitNextAck","lastAck","watcher","timeoutCallback","pendingAckTimerTimeoutCallback","handleSummaryOp","handleSummaryAck","handleSummaryNack","lastOpTimestamp","lastSummaryTimestamp","tryGetSummary","createFromOp","setSummary","ackNack","OrderedClientCollection","clientMap","rootNode","olderClient","youngerClient","_youngestClient","addClient","removeClient","currClient","OrderedClientElection","orderedClientCollection","initialState","isEligibleFn","initialClient","initialParent","_eligibleCount","getAllClients","_electionSequenceNumber","expectedClientId","clientCount","findFirstEligibleParent","_electedParent","_electedClient","change","prevClient","candidateClient","newClientIsSummarizer","electedClientIsSummarizer","tryElectingClient","tryElectingParent","nextClient","oldestClient","nextParent","firstClient","Throttler","delayWindowMs","delayFn","startTimes","latestAttemptTime","earlyMs","formExponentialFn","multiplier","coefficient","RunWhileConnectedCoordinator","_cancelled","waitConnected","BatchTracker","batchEventEmitter","batchLengthThreshold","batchCountSamplingRate","dateTimeProvider","trackedBatchCount","startBatchSequenceNumber","batchProcessingStartTimeStamp","batchEndSequenceNumber","batchError","samplingRate","SerializedSnapshotStorage","serializeTreeCore","treePs","serializeTreeWithBlobContentsCore","OpTracker","messageSize","_nonSystemOpCount","_opsSizeAccumulator","messageContent","messageData","messageHasData","messageId","DefaultSummaryConfiguration","initialSummarizerDelayMs","summarizerClientElection","defaultFlushMode","ScheduleManagerCore","localPaused","timePaused","batchCount","firstMessageMetadata","trackPending","afterOpProcessing","pauseSequenceNumber","pauseQueue","startBatch","messageEndBatch","endBatch","interrupted","currentBatchClientId","batchMetadata","runtimeVersion","batchClientId","resumeQueue","ScheduleManager","hitError","deltaScheduler","batchBegin","batchEnd","agentSchedulerId","ContainerRuntime","electedSummarizerData","chunks","dataStoreAliasMap","runtimeOptions","containerScope","blobManagerSnapshot","requestHandler","summaryConfiguration","summaryOptions","summaryConfigOverrides","defaultMaxConsecutiveReconnects","_orderSequentiallyCalls","needsFlush","flushTrigger","savedOps","consecutiveReconnects","emitDirtyDocumentEvent","defaultTelemetrySignalSampleCount","_perfSignalData","signalsLost","signalSequenceNumber","signalTimestamp","trackingSignalSequenceNumber","summaryManager","summariesDisabled","messageAtLastSummary","_connected","chunkMap","isSummariesDisabled","heuristicsDisabled","isHeuristicsDisabled","summarizerClientElectionEnabled","isSummarizerClientElectionEnabled","getMaxOpsSinceLastSummary","getInitialSummarizerDelayMs","_aliasingEnabled","useDataStoreAliasing","_maxOpSizeInBytes","maxConsecutiveReconnects","_flushMode","garbageCollector","getGCNodePackagePath","loadSummaryNumber","loadedFromSequenceNumber","createRootSummarizerNodeWithGC","loadBaseSummaryWithoutDifferential","dataStores","attachMsg","Attach","deleteChild","nodeUpdated","blobManager","BlobAttach","blobPath","scheduleManager","deltaSender","pendingStateManager","clearPartialChunks","dirtyContainer","orderedClientLogger","orderedClientElectionForSummarizer","isClientEligible","_summarizer","defaultAction","formRequestSummarizerFn","replayPendingStates","deviceMemory","hardwareConcurrency","getDeviceSpec","createContainerMetadata","createContainerRuntimeVersion","createContainerTimestamp","summaryNumber","summaryCount","nextSummaryNumber","gcVersion","ReportOpPerfTelemetry","BindBatchTracker","opTracker","disableSummaries","summarizerOptions","intelligence","requestParser","createSubRequest","isLeaf","getDataStoreFromRequest","dataStore","subRequest","IFluidRouter","maybeAlias","aliases","getDataStore","urlWithoutQuery","getMetadata","addMetadataToSummary","dataStoreAliases","electedSummarizerContent","blobManagerSummary","gcSummary","addSummarizeResultToSummary","pendingMessages","pendingMessagesCount","resetReconnectCount","canSendOps","newState","updateDocumentDirtyState","FluidDataStoreOp","Alias","ChunkedOp","Rejoin","applyStashedAttachOp","changeOfState","shouldContinueReconnecting","dataLoss","enableOfflineLoad","beforeOpProcessing","unpackRuntimeMessage","processRemoteChunkedMessage","processPendingLocalMessage","processAliasMessage","processFluidDataStoreOp","processBlobAttachOp","clientSignalSequenceNumber","sendSignalTelemetryEvent","old","new","onFlush","trackOrderSequentiallyCalls","checkpoint","_createDataStore","rootDataStoreId","createAndAliasDataStore","createRootDataStoreLegacy","aliasedDataStore","trySetAlias","createDetachedDataStoreCore","_createFluidDataStoreContext","hasProps","_createDataStoreWithPropsLegacy","newSequenceNumber","newEnvelope","createNewSignalEnvelope","setRedirectTable","addContainerStateToSummary","collectGarbage","dsGCData","addNodes","blobsGCData","dataStoreUsedRoutes","blobManagerUnusedRoutes","dataStoreUnusedRoutes","isBlobPath","getGCNodeType","getDataStorePackagePath","addedOutboundReference","summaryNumberLogger","refreshLatestSummaryAckFromServer","safeSummary","latestSummaryRefSeq","targetSequenceNumber","waitForSeq","summaryRefSeqNum","continueResult","checkContinue","continue","trace","partialStats","dataStoreTree","handleCount","gcSummaryTreeStats","gcBlobNodeCount","gcTotalBlobsSize","opsSizesSinceLastSummary","opsSizeAccumulator","nonSystemOpsSinceLastSummary","nonSystemOpCount","generateSummaryData","latestAck","summaryContext","getLoadedFromVersion","parent","summaryMessage","uploadData","submitSystemMessage","submitData","submitOpDuration","completeSummary","chunkedContent","addChunk","totalChunks","newMessage","serializedContent","originalType","opMetadataInternal","maxOpSize","submitMaybeChunkedMessages","onSubmitMessage","isContainerMessageDirtyable","serverMaxOpSize","submitRuntimeMessage","limit","submitChunkedMessage","contentLength","chunkN","chunkedOp","middleOfBatch","appData","resubmitDataStoreOp","rollbackDataStoreOp","refreshLatestSummary","fetchSnapshotFromStorage","fetchLatest","latestSummaryStateRefreshed","snapshotRefSeq","getVersionDuration","maybeSnapshot","getSnapshotDuration","baseSnapshotBlobs","serializeTreeWithBlobContents","serializeTree","previousPendingState","getLocalState","snapshotBlobs","loaderRouter","applyStashedOpsAt","registryEntries","passLogger","backCompatContext","loadSequenceNumberVerification","blobName","loadExisting","runtimeSequenceNumber","protocolSequenceNumber","processSavedOps","getSnapshotBlobs","targetSeq","RemoteFluidObjectHandle","objectP","FluidSerializer","handleParsedCb","encodeValue","IFluidHandle","serializeHandle","decodeValue","isSerializedHandle","parsedHandle","recursivelyReplace","maybeReplaced","replaced","SharedObjectHandle","SummarySerializer","serializedRoutes","SharedObjectCore","eventListenerErrorHandler","_isBoundToContext","sharedObjectId","closeError","emittedEventName","closeWithError","didAttach","loadCore","objectStorage","attachDeltaHandler","initializeLocalCore","bindChannel","decodedHandle","submitLocalMessage","attach","onConnect","onDisconnect","processCore","reSubmitCore","SharedObject","telemetryContextPrefix","_isGCing","_serializer","channelsRoutingContext","handleDecoded","incrementTelemetryMetric","blobCountPropertyName","totalBlobSizePropertyName","processGCDataCore","getSerializedRoutes","incrementBy","prevTotal","makeSerializable","localValue","makeSerialized","PlainLocalValue","Plain","serializeHandles","LocalValueMaker","serializable","Shared","translatedValue","parseHandles","snapshotFileName","DirectoryFactory","Type","Attributes","directory","SharedDirectory","initializeLocal","packageVersion","SubDirectory","messageHandlers","localValueMaker","setMessageHandlers","changed","relativePath","countSubDirectory","subdirName","createSubDirectory","getSubDirectory","hasSubDirectory","deleteSubDirectory","subdirectories","makeAbsolute","currentSubDir","subdir","serializeDirectory","newFormat","populate","dataExtra","currentSubDirObject","subdirObject","newSubDir","populateSubDirectory","makeLocal","populateStorage","getWorkingDirectory","fromSerializable","processClearMessage","resubmitClearMessage","processDeleteMessage","resubmitKeyMessage","processSetMessage","parentSubdir","processCreateSubDirectoryMessage","resubmitSubDirectoryMessage","processDeleteSubDirectoryMessage","getSerializedStorage","extraContent","largeContent","subDataObject","createChannel","isKeyEditLocalOpMetadata","pendingMessageId","isClearLocalOpMetadata","previousStorage","isSubDirLocalOpMetadata","previouslyExisted","_deleted","_subdirectories","pendingKeys","pendingSubDirectories","pendingClearMessageIds","throwIfDisposed","fromInMemory","serializableValue","previousValue","setCore","submitKeyMessage","createSubDirectoryCore","subDir","submitCreateSubDirectoryMessage","deleteSubDirectoryCore","submitDeleteSubDirectoryMessage","deleteCore","clearCore","submitClearMessage","localEntriesIterator","nextVal","localValuesIterator","clearExceptPendingKeys","needProcessStorageOperation","needProcessSubDirectoryOperation","pendingMsgId","submitDirectoryMessage","pendingMessageIds","localMetadata","getKeyMessageId","newMessageId","prevExisted","getSubDirMessageId","subDirectory","lastPendingMessageId","lastPendingClearId","rollbackPendingMessageId","undeleteSubDirectoryTree","temp","previousLocalValue","containedEvent","registerEventsOnSubDirectory","subDirName","disposeSubDirectoryTree","undispose","isMapKeyLocalOpMetadata","MapKernel","eventEmitter","getMessageHandlers","callbackFn","submitMapKeyMessage","submitMapClearMessage","serializableMapData","getSerializableStorage","populateFromSerializable","getStashedOpLocalMetadata","previousMap","getMapClearMessageId","needProcessKeyOperation","resubmitMapKeyMessage","getMapKeyMessageId","MapFactory","SharedMap","kernel","currentSize","headerBlob","trySubmitMessage","tryProcessMessage","tryGetStashedOpLocalMetadata","LegacyUriHandle","serviceRoutePathRoot","defaultFluidObjectRequestHandler","PureDataObject","providers","initProps","_dataObject","objectsRoutingContext","initializeP","initializeInternal","preInitialize","initializingFromExisting","initializingFirstTime","hasInitialized","getObjectFromDirectory","handleMaybe","finishInitialization","DataObject","rootDirectoryId","internalRoot","getUninitializedErrorString","getChannel","ChannelDeltaConnection","objectId","_handler","getNormalizedObjectStoragePathParts","normalizePath","ChannelStorageService","extraBlobs","flattenedTree","flattenTree","getIdForPath","attributesBlobKey","createServiceEndpoints","dirtyFn","addedGCOutboundReferenceFn","summarizeChannel","summarizeChannelAsync","DataStoreMessageType","LocalChannelContextBase","servicesGetter","globallyVisible","RehydratedLocalChannelContext","clonedSnapshotTree","isSnapshotInOldFormatAndCollectBlobs","sanitizeSnapshot","loadChannel","sanitize","blobMapInitial","LocalChannelContext","RemoteChannelContext","createSummarizerNode","attachMessageType","channelP","channelId","dataStorePackagePath","channelFactoryType","channelType","channelSnapshotVersion","channelCodeVersion","FluidDataStoreRuntime","sharedObjectRegistry","contextsDeferred","deferredAttached","localChannelContextQueue","notBoundedChannelContextSet","channelsBaseGCDetails","getInitialGCSummaryDetails","channelContext","submitChannelOp","setChannelDirty","makeVisible","getChannelBaseGCDetails","visibilityState","VisibilityState","attachChannel","remoteChannelContext","localContentMetadata","ChannelOp","processChannelOp","addRouteToAllNodes","isChannelAttached","updateGCNodes","usedContextRoutes","channelBaseGCDetails","processOp","MAX_SAFE_INTEGER","mixinRequestHandler","IFluidDependencySynthesizer","DependencyContainer","optionalTypes","requiredTypes","generateRequired","generateOptional","excludeParents","getProvider","maybeGetProvider","resolveProvider","fds","sp","syn","synthesize","createDataObject","optionalProviders","runtimeClassArg","runtimeClass","runtimeArg","getDataObject","dependencyContainer","PureDataObjectFactory","sharedObjects","parentContext","createNonRootInstanceCore","peerContext","createDetachedRootDataStore","createInstanceCore","createDetachedDataStore","attachRuntime","DataObjectFactory","mergedObjects","find","getFactory","RuntimeRequestHandlerBuilder","buildRuntimeRequestHandler","pushHandler","handleRequest","RuntimeFactoryHelper","fromExisting","instantiateFromExisting","instantiateFirstTime","BaseContainerRuntimeFactory","requestHandlers","containerInitializingFirstTime","containerHasInitialized","register","IContainerRuntime","isDataObjectClass","isSharedObjectClass","RootDataObject","initialObjectsDirKey","_initialObjects","initialObjectsP","createObject","initialObjectsDir","loadInitialObjectsP","loadDir","createSharedObject","dataObjectClass","createDataStore","sharedObjectClass","DOProviderContainerRuntimeFactory","defaultRootId","dynamicObjectTypes","parseDataObjectsFromSharedObjects","rootDataObjectFactory","registryEntry","createRootInstance","TinyliciousAudience","audienceMember","tinyliciousUser","userName","connections","lastMembers","shouldIncludeAsMember","users","clientMemberMap","createServiceMember","internalAudienceMember","TinyliciousClient","containerSchema","createLoader","createDetachedContainer","fluidContainer","createTinyliciousCreateNewRequest","getContainerServices","containerRuntimeFactory","myMap","timeKey","nameKey","getMyMap","getContainer","React","fluidMap","setFluidMap","viewData","setViewData","setName","syncView","syncName","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById","reportWebVitals"],"sourceRoot":""}